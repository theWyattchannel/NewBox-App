{"version":3,"file":"beepbox_editor.js","sources":["../synth/SynthConfig.ts","../editor/EditorConfig.ts","../node_modules/imperative-html/src/elements-base.ts","../node_modules/imperative-html/src/elements-strict.ts","../editor/ColorConfig.ts","../editor/style.ts","../editor/BarScrollBar.ts","../synth/FFT.ts","../synth/Deque.ts","../synth/filtering.ts","../synth/synth.ts","../editor/Change.ts","../editor/changes.ts","../editor/BeatsPerBarPrompt.ts","../editor/ChannelSettingsPrompt.ts","../editor/CustomChipPrompt.ts","../editor/FilterEditor.ts","../editor/CustomFilterPrompt.ts","../editor/ArrayBufferWriter.ts","../editor/Midi.ts","../editor/ExportPrompt.ts","../editor/Layout.ts","../editor/HarmonicsEditor.ts","../editor/HTMLWrapper.ts","../editor/ArrayBufferReader.ts","../editor/ImportPrompt.ts","../editor/ChannelRow.ts","../editor/LayoutPrompt.ts","../editor/EnvelopeEditor.ts","../editor/FadeInOutEditor.ts","../editor/LimiterPrompt.ts","../editor/LoopEditor.ts","../editor/MoveNotesSidewaysPrompt.ts","../editor/MuteEditor.ts","../editor/OctaveScrollBar.ts","../editor/MidiInput.ts","../editor/KeyboardLayout.ts","../editor/PatternEditor.ts","../editor/Piano.ts","../editor/SongDurationPrompt.ts","../editor/SustainPrompt.ts","../editor/SongRecovery.ts","../editor/SongRecoveryPrompt.ts","../editor/RecordingSetupPrompt.ts","../editor/SpectrumEditor.ts","../editor/ThemePrompt.ts","../editor/TipPrompt.ts","../editor/TrackEditor.ts","../editor/SongEditor.ts","../editor/SongPerformance.ts","../editor/Selection.ts","../editor/Preferences.ts","../editor/ChangeNotifier.ts","../editor/SongDocument.ts","../editor/main.ts"],"sourcesContent":["/*!\nCopyright (c) 2012-2022 John Nesky and contributing authors\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of \nthis software and associated documentation files (the \"Software\"), to deal in \nthe Software without restriction, including without limitation the rights to \nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies \nof the Software, and to permit persons to whom the Software is furnished to do \nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all \ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, \nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE \nSOFTWARE.\n*/\n\nexport interface Dictionary<T> {\n    [K: string]: T;\n}\n\nexport interface DictionaryArray<T> extends ReadonlyArray<T> {\n    dictionary: Dictionary<T>;\n}\n\nexport const enum FilterType {\n    lowPass,\n    highPass,\n    peak,\n    length,\n}\n\nexport const enum SustainType {\n\tbright,\n\tacoustic,\n\tlength,\n}\n\nexport const enum EnvelopeType {\n    noteSize,\n    none,\n    punch,\n    flare,\n    twang,\n    swell,\n    tremolo,\n    tremolo2,\n    decay,\n    blip\n}\n\nexport const enum InstrumentType {\n    chip,\n    fm,\n    noise,\n    spectrum,\n    drumset,\n    harmonics,\n    pwm,\n    pickedString,\n    supersaw,\n    customChipWave,\n    mod,\n    length,\n}\n\nexport const enum DropdownID {\n    Vibrato = 0,\n    Pan = 1,\n    Chord = 2,\n    Transition = 3,\n    FM = 4,\n    Envelope = 5,\n\n}\n\nexport const enum EffectType {\n    reverb,\n    chorus,\n    panning,\n    distortion,\n    bitcrusher,\n    noteFilter,\n    echo,\n    pitchShift,\n    detune,\n    vibrato,\n    transition,\n    chord,\n    // If you add more, you'll also have to extend the bitfield used in Base64 which currently uses two six-bit characters.\n    length,\n}\n\nexport const enum EnvelopeComputeIndex {\n    noteVolume,\n    noteFilterAllFreqs,\n    pulseWidth,\n    stringSustain,\n    unison,\n    operatorFrequency0, operatorFrequency1, operatorFrequency2, operatorFrequency3,\n    operatorAmplitude0, operatorAmplitude1, operatorAmplitude2, operatorAmplitude3,\n    feedbackAmplitude,\n    pitchShift,\n    detune,\n    vibratoDepth,\n    noteFilterFreq0, noteFilterFreq1, noteFilterFreq2, noteFilterFreq3, noteFilterFreq4, noteFilterFreq5, noteFilterFreq6, noteFilterFreq7,\n    noteFilterGain0, noteFilterGain1, noteFilterGain2, noteFilterGain3, noteFilterGain4, noteFilterGain5, noteFilterGain6, noteFilterGain7,\n    supersawDynamism,\n\tsupersawSpread,\n\tsupersawShape,\n    length,\n}\n\n/*\nexport const enum InstrumentAutomationIndex {\n    mixVolume,\n    eqFilterAllFreqs,\n    eqFilterFreq0, eqFilterFreq1, eqFilterFreq2, eqFilterFreq3, eqFilterFreq4, eqFilterFreq5, eqFilterFreq6, eqFilterFreq7,\n    eqFilterGain0, eqFilterGain1, eqFilterGain2, eqFilterGain3, eqFilterGain4, eqFilterGain5, eqFilterGain6, eqFilterGain7,\n    distortion,\n    bitcrusherQuantization,\n    bitcrusherFrequency,\n    panning,\n    chorus,\n    echoSustain,\n    //echoDelay, // Wait until tick settings can be computed once for multiple run lengths.\n    reverb,\n    length,\n}\n*/\n\nexport interface BeepBoxOption {\n    readonly index: number;\n    readonly name: string;\n}\n\nexport interface Scale extends BeepBoxOption {\n    readonly flags: ReadonlyArray<boolean>;\n    readonly realName: string;\n}\n\nexport interface Key extends BeepBoxOption {\n    readonly isWhiteKey: boolean;\n    readonly basePitch: number;\n}\n\nexport interface Rhythm extends BeepBoxOption {\n    readonly stepsPerBeat: number;\n    readonly roundUpThresholds: number[] | null;\n}\n\nexport interface ChipWave extends BeepBoxOption {\n    readonly expression: number;\n    samples: Float32Array;\n}\n\nexport interface OperatorWave extends BeepBoxOption {\n    samples: Float32Array;\n}\n\nexport interface ChipNoise extends BeepBoxOption {\n    readonly expression: number;\n    readonly basePitch: number;\n    readonly pitchFilterMult: number;\n    readonly isSoft: boolean;\n    samples: Float32Array | null;\n}\n\nexport interface Transition extends BeepBoxOption {\n    readonly isSeamless: boolean;\n    readonly continues: boolean;\n    readonly slides: boolean;\n    readonly slideTicks: number;\n    readonly includeAdjacentPatterns: boolean;\n}\n\nexport interface Vibrato extends BeepBoxOption {\n    readonly amplitude: number;\n    readonly type: number;\n    readonly delayTicks: number;\n}\n\nexport interface VibratoType extends BeepBoxOption {\n    readonly periodsSeconds: number[];\n    readonly period: number;\n}\n\nexport interface Unison extends BeepBoxOption {\n    readonly voices: number;\n    readonly spread: number;\n    readonly offset: number;\n    readonly expression: number;\n    readonly sign: number;\n}\n\nexport interface Modulator extends BeepBoxOption {\n    readonly name: string; // name that shows up in song editor UI\n    readonly pianoName: string; // short name that shows up in mod piano UI\n    readonly maxRawVol: number; // raw\n    readonly newNoteVol: number; // raw\n    readonly forSong: boolean; // true - setting is song scope\n    convertRealFactor: number; // offset that needs to be applied to get a \"real\" number display of value, for UI purposes\n    readonly associatedEffect: EffectType; // effect that should be enabled for this modulator to work properly. If unused, set to EffectType.length.\n    readonly promptName: string; // long-as-needed name that shows up in tip prompt\n    readonly promptDesc: string[]; // paragraph(s) describing how to use this mod\n\n}\n\nexport interface Chord extends BeepBoxOption {\n    readonly customInterval: boolean;\n    readonly arpeggiates: boolean;\n    readonly strumParts: number;\n    readonly singleTone: boolean;\n}\n\nexport interface Algorithm extends BeepBoxOption {\n    readonly carrierCount: number;\n    readonly associatedCarrier: ReadonlyArray<number>;\n    readonly modulatedBy: ReadonlyArray<ReadonlyArray<number>>;\n}\n\nexport interface OperatorFrequency extends BeepBoxOption {\n    readonly mult: number;\n    readonly hzOffset: number;\n    readonly amplitudeSign: number;\n}\n\nexport interface Feedback extends BeepBoxOption {\n    readonly indices: ReadonlyArray<ReadonlyArray<number>>;\n}\n\nexport interface Envelope extends BeepBoxOption {\n    readonly type: EnvelopeType;\n    readonly speed: number;\n}\n\nexport interface AutomationTarget extends BeepBoxOption {\n    readonly computeIndex: EnvelopeComputeIndex /*| InstrumentAutomationIndex*/ | null;\n    readonly displayName: string;\n    //readonly perNote: boolean; // Whether to compute envelopes on a per-note basis.\n    readonly interleave: boolean; // Whether to interleave this target with the next one in the menu (e.g. filter frequency and gain).\n\treadonly isFilter: boolean; // Filters are special because the maxCount depends on other instrument settings.\n\t//readonly range: number | null; // set if automation is allowed.\n    readonly maxCount: number;\n    readonly effect: EffectType | null;\n    readonly compatibleInstruments: InstrumentType[] | null;\n}\n\nexport class Config {\n    // Params for post-processing compressor\n    public static thresholdVal: number = -10;\n    public static kneeVal: number = 40;\n    public static ratioVal: number = 12;\n    public static attackVal: number = 0;\n    public static releaseVal: number = 0.25;\n\n    public static readonly scales: DictionaryArray<Scale> = toNameMap([\n\n        //   C     Db      D     Eb      E      F     F#      G     Ab      A     Bb      B      C\n        { name: \"Free\", realName: \"chromatic\", flags: [true, true, true, true, true, true, true, true, true, true, true, true] }, // Free\n        { name: \"Major\", realName: \"ionian\", flags: [true, false, true, false, true, true, false, true, false, true, false, true] }, // Major\n        { name: \"Minor\", realName: \"aeolian\", flags: [true, false, true, true, false, true, false, true, true, false, true, false] }, // Minor\n        { name: \"Mixolydian\", realName: \"mixolydian\", flags: [true, false, true, false, true, true, false, true, false, true, true, false] }, // Mixolydian\n        { name: \"Lydian\", realName: \"lydian\", flags: [true, false, true, false, true, false, true, true, false, true, false, true] }, // Lydian\n        { name: \"Dorian\", realName: \"dorian\", flags: [true, false, true, true, false, true, false, true, false, true, true, false] }, // Dorian\n        { name: \"Phrygian\", realName: \"phrygian\", flags: [true, true, false, true, false, true, false, true, true, false, true, false] }, // Phrygian\n        { name: \"Locrian\", realName: \"locrian\", flags: [true, true, false, true, false, true, true, false, true, false, true, false] }, // Locrian\n        { name: \"Lydian Dominant\", realName: \"lydian dominant\", flags: [true, false, true, false, true, false, true, true, false, true, true, false] }, // Lydian Dominant\n        { name: \"Phrygian Dominant\", realName: \"phrygian dominant\", flags: [true, true, false, false, true, true, false, true, true, false, true, false] }, // Phrygian Dominant\n        { name: \"Harmonic Major\", realName: \"harmonic major\", flags: [true, false, true, false, true, true, false, true, true, false, false, true] }, // Harmonic Major\n        { name: \"Harmonic Minor\", realName: \"harmonic minor\", flags: [true, false, true, true, false, true, false, true, true, false, false, true] }, // Harmonic Minor\n        { name: \"Melodic Minor\", realName: \"melodic minor\", flags: [true, false, true, true, false, true, false, true, false, true, false, true] }, // Melodic Minor\n        { name: \"Blues\", realName: \"blues\", flags: [true, false, false, true, false, true, true, true, false, false, true, false] }, // Blues\n        { name: \"Altered\", realName: \"altered\", flags: [true, true, false, true, true, false, true, false, true, false, true, false] }, // Altered\n        { name: \"Major Pentatonic\", realName: \"major pentatonic\", flags: [true, false, true, false, true, false, false, true, false, true, false, false] }, // Major Pentatonic\n        { name: \"Minor Pentatonic\", realName: \"minor pentatonic\", flags: [true, false, false, true, false, true, false, true, false, false, true, false] }, // Minor Pentatonic\n        { name: \"Whole Tone\", realName: \"whole tone\", flags: [true, false, true, false, true, false, true, false, true, false, true, false] }, // Whole Tone\n        { name: \"Octatonic\", realName: \"octatonic\", flags: [true, false, true, true, false, true, true, false, true, true, false, true] }, // Octatonic\n        { name: \"Hexatonic\", realName: \"hexatonic\", flags: [true, false, false, true, true, false, false, true, true, false, false, true] }, // Hexatonic\n\n\n    ]);\n    public static readonly keys: DictionaryArray<Key> = toNameMap([\n        { name: \"C\", isWhiteKey: true, basePitch: 12 }, // C0 has index 12 on the MIDI scale. C7 is 96, and C9 is 120. C10 is barely in the audible range.\n        { name: \"C♯\", isWhiteKey: false, basePitch: 13 },\n        { name: \"D\", isWhiteKey: true, basePitch: 14 },\n        { name: \"D♯\", isWhiteKey: false, basePitch: 15 },\n        { name: \"E\", isWhiteKey: true, basePitch: 16 },\n        { name: \"F\", isWhiteKey: true, basePitch: 17 },\n        { name: \"F♯\", isWhiteKey: false, basePitch: 18 },\n        { name: \"G\", isWhiteKey: true, basePitch: 19 },\n        { name: \"G♯\", isWhiteKey: false, basePitch: 20 },\n        { name: \"A\", isWhiteKey: true, basePitch: 21 },\n        { name: \"A♯\", isWhiteKey: false, basePitch: 22 },\n        { name: \"B\", isWhiteKey: true, basePitch: 23 },\n    ]);\n    public static readonly blackKeyNameParents: ReadonlyArray<number> = [-1, 1, -1, 1, -1, 1, -1, -1, 1, -1, 1, -1];\n    public static readonly tempoMin: number = 30;\n    public static readonly tempoMax: number = 320;\n    public static readonly echoDelayRange: number = 24;\n    public static readonly echoDelayStepTicks: number = 4;\n    public static readonly echoSustainRange: number = 8;\n    public static readonly echoShelfHz: number = 4000.0; // The cutoff freq of the shelf filter that is used to decay echoes.\n    public static readonly echoShelfGain: number = Math.pow(2.0, -0.5);\n    public static readonly reverbShelfHz: number = 8000.0; // The cutoff freq of the shelf filter that is used to decay reverb.\n    public static readonly reverbShelfGain: number = Math.pow(2.0, -1.5);\n    public static readonly reverbRange: number = 32;\n    public static readonly reverbDelayBufferSize: number = 16384; // TODO: Compute a buffer size based on sample rate.\n    public static readonly reverbDelayBufferMask: number = Config.reverbDelayBufferSize - 1; // TODO: Compute a buffer size based on sample rate.\n    public static readonly beatsPerBarMin: number = 3;\n    public static readonly beatsPerBarMax: number = 16;\n    public static readonly barCountMin: number = 1;\n    public static readonly barCountMax: number = 256;\n    public static readonly instrumentCountMin: number = 1;\n    public static readonly layeredInstrumentCountMax: number = 4;\n    public static readonly patternInstrumentCountMax: number = 10;\n    public static readonly partsPerBeat: number = 24;\n    public static readonly ticksPerPart: number = 2;\n    public static readonly ticksPerArpeggio: number = 3;\n    public static readonly arpeggioPatterns: ReadonlyArray<ReadonlyArray<number>> = [[0], [0, 1], [0, 1, 2, 1], [0, 1, 2, 3], [0, 1, 2, 3, 4], [0, 1, 2, 3, 4, 5], [0, 1, 2, 3, 4, 5, 6], [0, 1, 2, 3, 4, 5, 6, 7]];\n    public static readonly rhythms: DictionaryArray<Rhythm> = toNameMap([\n        { name: \"÷3 (triplets)\", stepsPerBeat: 3, /*ticksPerArpeggio: 4, arpeggioPatterns: [[0], [0, 0, 1, 1], [0, 1, 2, 1], [0, 1, 2, 3]]*/ roundUpThresholds: [/*0*/ 5, /*8*/ 12, /*16*/ 18 /*24*/] },\n        { name: \"÷4 (standard)\", stepsPerBeat: 4, /*ticksPerArpeggio: 3, arpeggioPatterns: [[0], [0, 0, 1, 1], [0, 1, 2, 1], [0, 1, 2, 3]]*/ roundUpThresholds: [/*0*/ 3, /*6*/ 9, /*12*/ 17, /*18*/ 21 /*24*/] },\n        { name: \"÷6\", stepsPerBeat: 6, /*ticksPerArpeggio: 4, arpeggioPatterns: [[0], [0, 1], [0, 1, 2, 1], [0, 1, 2, 3]]*/ roundUpThresholds: null },\n        { name: \"÷8\", stepsPerBeat: 8, /*ticksPerArpeggio: 3, arpeggioPatterns: [[0], [0, 1], [0, 1, 2, 1], [0, 1, 2, 3]]*/ roundUpThresholds: null },\n        { name: \"freehand\", stepsPerBeat: 24, /*ticksPerArpeggio: 3, arpeggioPatterns: [[0], [0, 1], [0, 1, 2, 1], [0, 1, 2, 3]]*/ roundUpThresholds: null },\n    ]);\n\n    public static readonly instrumentTypeNames: ReadonlyArray<string> = [\"chip\", \"FM\", \"noise\", \"spectrum\", \"drumset\", \"harmonics\", \"PWM\", \"Picked String\", \"supersaw\", \"custom chip\", \"mod\"];\n    public static readonly instrumentTypeHasSpecialInterval: ReadonlyArray<boolean> = [true, true, false, false, false, true, false, false, false, false];\n    public static readonly chipBaseExpression: number = 0.03375; // Doubled by unison feature, but affected by expression adjustments per unison setting and wave shape.\n    public static readonly fmBaseExpression: number = 0.03;\n    public static readonly noiseBaseExpression: number = 0.19;\n    public static readonly spectrumBaseExpression: number = 0.3; // Spectrum can be in pitch or noise channels, the expression is doubled for noise.\n    public static readonly drumsetBaseExpression: number = 0.45; // Drums tend to be loud but brief!\n    public static readonly harmonicsBaseExpression: number = 0.025;\n    public static readonly pwmBaseExpression: number = 0.04725; // It's actually closer to half of this, the synthesized pulse amplitude range is only .5 to -.5, but also note that the fundamental sine partial amplitude of a square wave is 4/π times the measured square wave amplitude.\n    public static readonly supersawBaseExpression:  number = 0.061425; // It's actually closer to half of this, the synthesized sawtooth amplitude range is only .5 to -.5.\n    public static readonly pickedStringBaseExpression: number = 0.025; // Same as harmonics.\n    public static readonly distortionBaseVolume: number = 0.011; // Distortion is not affected by pitchDamping, which otherwise approximately halves expression for notes around the middle of the range.\n    public static readonly bitcrusherBaseVolume: number = 0.010; // Also not affected by pitchDamping, used when bit crushing is maxed out (aka \"1-bit\" output).\n\n    public static readonly rawChipWaves: DictionaryArray<ChipWave> = toNameMap([\n        { name: \"rounded\", expression: 0.94, samples: centerWave([0.0, 0.2, 0.4, 0.5, 0.6, 0.7, 0.8, 0.85, 0.9, 0.95, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.95, 0.9, 0.85, 0.8, 0.7, 0.6, 0.5, 0.4, 0.2, 0.0, -0.2, -0.4, -0.5, -0.6, -0.7, -0.8, -0.85, -0.9, -0.95, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -0.95, -0.9, -0.85, -0.8, -0.7, -0.6, -0.5, -0.4, -0.2]) },\n        { name: \"triangle\", expression: 1.0, samples: centerWave([1.0 / 15.0, 3.0 / 15.0, 5.0 / 15.0, 7.0 / 15.0, 9.0 / 15.0, 11.0 / 15.0, 13.0 / 15.0, 15.0 / 15.0, 15.0 / 15.0, 13.0 / 15.0, 11.0 / 15.0, 9.0 / 15.0, 7.0 / 15.0, 5.0 / 15.0, 3.0 / 15.0, 1.0 / 15.0, -1.0 / 15.0, -3.0 / 15.0, -5.0 / 15.0, -7.0 / 15.0, -9.0 / 15.0, -11.0 / 15.0, -13.0 / 15.0, -15.0 / 15.0, -15.0 / 15.0, -13.0 / 15.0, -11.0 / 15.0, -9.0 / 15.0, -7.0 / 15.0, -5.0 / 15.0, -3.0 / 15.0, -1.0 / 15.0]) },\n        { name: \"square\", expression: 0.5, samples: centerWave([1.0, -1.0]) },\n        { name: \"1/4 pulse\", expression: 0.5, samples: centerWave([1.0, -1.0, -1.0, -1.0]) },\n        { name: \"1/8 pulse\", expression: 0.5, samples: centerWave([1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0]) },\n        { name: \"sawtooth\", expression: 0.65, samples: centerWave([1.0 / 31.0, 3.0 / 31.0, 5.0 / 31.0, 7.0 / 31.0, 9.0 / 31.0, 11.0 / 31.0, 13.0 / 31.0, 15.0 / 31.0, 17.0 / 31.0, 19.0 / 31.0, 21.0 / 31.0, 23.0 / 31.0, 25.0 / 31.0, 27.0 / 31.0, 29.0 / 31.0, 31.0 / 31.0, -31.0 / 31.0, -29.0 / 31.0, -27.0 / 31.0, -25.0 / 31.0, -23.0 / 31.0, -21.0 / 31.0, -19.0 / 31.0, -17.0 / 31.0, -15.0 / 31.0, -13.0 / 31.0, -11.0 / 31.0, -9.0 / 31.0, -7.0 / 31.0, -5.0 / 31.0, -3.0 / 31.0, -1.0 / 31.0]) },\n        { name: \"double saw\", expression: 0.5, samples: centerWave([0.0, -0.2, -0.4, -0.6, -0.8, -1.0, 1.0, -0.8, -0.6, -0.4, -0.2, 1.0, 0.8, 0.6, 0.4, 0.2]) },\n        { name: \"double pulse\", expression: 0.4, samples: centerWave([1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0]) },\n        { name: \"spiky\", expression: 0.4, samples: centerWave([1.0, -1.0, 1.0, -1.0, 1.0, 0.0]) },\n        { name: \"sine\", expression: 0.88, samples: centerAndNormalizeWave([8.0, 9.0, 11.0, 12.0, 13.0, 14.0, 15.0, 15.0, 15.0, 15.0, 14.0, 14.0, 13.0, 11.0, 10.0, 9.0, 7.0, 6.0, 4.0, 3.0, 2.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 2.0, 4.0, 5.0, 6.0]) },\n        { name: \"flute\", expression: 0.8, samples: centerAndNormalizeWave([3.0, 4.0, 6.0, 8.0, 10.0, 11.0, 13.0, 14.0, 15.0, 15.0, 14.0, 13.0, 11.0, 8.0, 5.0, 3.0]) },\n        { name: \"harp\", expression: 0.8, samples: centerAndNormalizeWave([0.0, 3.0, 3.0, 3.0, 4.0, 5.0, 5.0, 6.0, 7.0, 8.0, 9.0, 11.0, 11.0, 13.0, 13.0, 15.0, 15.0, 14.0, 12.0, 11.0, 10.0, 9.0, 8.0, 7.0, 7.0, 5.0, 4.0, 3.0, 2.0, 1.0, 0.0, 0.0]) },\n        { name: \"sharp clarinet\", expression: 0.38, samples: centerAndNormalizeWave([0.0, 0.0, 0.0, 1.0, 1.0, 8.0, 8.0, 9.0, 9.0, 9.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 7.0, 9.0, 9.0, 10.0, 4.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]) },\n        { name: \"soft clarinet\", expression: 0.45, samples: centerAndNormalizeWave([0.0, 1.0, 5.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 11.0, 11.0, 12.0, 13.0, 12.0, 10.0, 9.0, 7.0, 6.0, 4.0, 3.0, 3.0, 3.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]) },\n        { name: \"alto sax\", expression: 0.3, samples: centerAndNormalizeWave([5.0, 5.0, 6.0, 4.0, 3.0, 6.0, 8.0, 7.0, 2.0, 1.0, 5.0, 6.0, 5.0, 4.0, 5.0, 7.0, 9.0, 11.0, 13.0, 14.0, 14.0, 14.0, 14.0, 13.0, 10.0, 8.0, 7.0, 7.0, 4.0, 3.0, 4.0, 2.0]) },\n        { name: \"bassoon\", expression: 0.35, samples: centerAndNormalizeWave([9.0, 9.0, 7.0, 6.0, 5.0, 4.0, 4.0, 4.0, 4.0, 5.0, 7.0, 8.0, 9.0, 10.0, 11.0, 13.0, 13.0, 11.0, 10.0, 9.0, 7.0, 6.0, 4.0, 2.0, 1.0, 1.0, 1.0, 2.0, 2.0, 5.0, 11.0, 14.0]) },\n        { name: \"trumpet\", expression: 0.22, samples: centerAndNormalizeWave([10.0, 11.0, 8.0, 6.0, 5.0, 5.0, 5.0, 6.0, 7.0, 7.0, 7.0, 7.0, 6.0, 6.0, 7.0, 7.0, 7.0, 7.0, 7.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 7.0, 8.0, 9.0, 11.0, 14.0]) },\n        { name: \"electric guitar\", expression: 0.2, samples: centerAndNormalizeWave([11.0, 12.0, 12.0, 10.0, 6.0, 6.0, 8.0, 0.0, 2.0, 4.0, 8.0, 10.0, 9.0, 10.0, 1.0, 7.0, 11.0, 3.0, 6.0, 6.0, 8.0, 13.0, 14.0, 2.0, 0.0, 12.0, 8.0, 4.0, 13.0, 11.0, 10.0, 13.0]) },\n        { name: \"organ\", expression: 0.2, samples: centerAndNormalizeWave([11.0, 10.0, 12.0, 11.0, 14.0, 7.0, 5.0, 5.0, 12.0, 10.0, 10.0, 9.0, 12.0, 6.0, 4.0, 5.0, 13.0, 12.0, 12.0, 10.0, 12.0, 5.0, 2.0, 2.0, 8.0, 6.0, 6.0, 5.0, 8.0, 3.0, 2.0, 1.0]) },\n        { name: \"pan flute\", expression: 0.35, samples: centerAndNormalizeWave([1.0, 4.0, 7.0, 6.0, 7.0, 9.0, 7.0, 7.0, 11.0, 12.0, 13.0, 15.0, 13.0, 11.0, 11.0, 12.0, 13.0, 10.0, 7.0, 5.0, 3.0, 6.0, 10.0, 7.0, 3.0, 3.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0]) },\n        { name: \"glitch\", expression: 0.5, samples: centerWave([1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0]) },\n    ]);\n    public static readonly chipWaves: DictionaryArray<ChipWave> = rawChipToIntegrated(Config.rawChipWaves);\n    // Noise waves have too many samples to write by hand, they're generated on-demand by getDrumWave instead.\n    public static readonly chipNoises: DictionaryArray<ChipNoise> = toNameMap([\n        { name: \"retro\", expression: 0.25, basePitch: 69, pitchFilterMult: 1024.0, isSoft: false, samples: null },\n        { name: \"white\", expression: 1.0, basePitch: 69, pitchFilterMult: 8.0, isSoft: true, samples: null },\n        // The \"clang\" and \"buzz\" noises are based on similar noises in the modded beepbox! :D\n        { name: \"clang\", expression: 0.4, basePitch: 69, pitchFilterMult: 1024.0, isSoft: false, samples: null },\n        { name: \"buzz\", expression: 0.3, basePitch: 69, pitchFilterMult: 1024.0, isSoft: false, samples: null },\n        { name: \"hollow\", expression: 1.5, basePitch: 96, pitchFilterMult: 1.0, isSoft: true, samples: null },\n        { name: \"shine\", expression: 1.0, basePitch: 69, pitchFilterMult: 1024.0, isSoft: false, samples: null },\n        { name: \"deep\", expression: 1.5, basePitch: 120, pitchFilterMult: 1024.0, isSoft: true, samples: null },\n        { name: \"cutter\", expression: 0.005, basePitch: 96, pitchFilterMult: 1024.0, isSoft: false, samples: null },\n        { name: \"metallic\", expression: 1.0, basePitch: 96, pitchFilterMult: 1024.0, isSoft: false, samples: null },\n    ]);\n\n    public static readonly filterFreqStep: number = 1.0 / 4.0;\n    public static readonly filterFreqRange: number = 34;\n    public static readonly filterFreqReferenceSetting: number = 28;\n    public static readonly filterFreqReferenceHz: number = 8000.0;\n    public static readonly filterFreqMaxHz: number = Config.filterFreqReferenceHz * Math.pow(2.0, Config.filterFreqStep * (Config.filterFreqRange - 1 - Config.filterFreqReferenceSetting)); // ~19khz\n    public static readonly filterFreqMinHz: number = 8.0;\n    public static readonly filterGainRange: number = 15;\n    public static readonly filterGainCenter: number = 7;\n    public static readonly filterGainStep: number = 1.0 / 2.0;\n    public static readonly filterMaxPoints: number = 8;\n    public static readonly filterTypeNames: ReadonlyArray<string> = [\"low-pass\", \"high-pass\", \"peak\"]; // See FilterType enum above.\n    public static readonly filterMorphCount: number = 10; // Number of filter shapes allowed for modulating between. Counts the 0/default position.\n\n    public static readonly filterSimpleCutRange: number = 11;\n    public static readonly filterSimplePeakRange: number = 8;\n\n    public static readonly fadeInRange: number = 10;\n    public static readonly fadeOutTicks: ReadonlyArray<number> = [-24, -12, -6, -3, -1, 6, 12, 24, 48, 72, 96];\n    public static readonly fadeOutNeutral: number = 4;\n    public static readonly drumsetFadeOutTicks: number = 48;\n    public static readonly transitions: DictionaryArray<Transition> = toNameMap([\n        { name: \"normal\", isSeamless: false, continues: false, slides: false, slideTicks: 3, includeAdjacentPatterns: false },\n        { name: \"interrupt\", isSeamless: true, continues: false, slides: false, slideTicks: 3, includeAdjacentPatterns: true },\n        { name: \"continue\", isSeamless: true, continues: true, slides: false, slideTicks: 3, includeAdjacentPatterns: true },\n        { name: \"slide\", isSeamless: true, continues: false, slides: true, slideTicks: 3, includeAdjacentPatterns: true },\n        { name: \"slide in pattern\", isSeamless: true, continues: false, slides: true, slideTicks: 3, includeAdjacentPatterns: false },\n    ]);\n    public static readonly vibratos: DictionaryArray<Vibrato> = toNameMap([\n        { name: \"none\", amplitude: 0.0, type: 0, delayTicks: 0 },\n        { name: \"light\", amplitude: 0.15, type: 0, delayTicks: 0 },\n        { name: \"delayed\", amplitude: 0.3, type: 0, delayTicks: 37 }, // It will fade in over the previous two ticks.\n        { name: \"heavy\", amplitude: 0.45, type: 0, delayTicks: 0 },\n        { name: \"shaky\", amplitude: 0.1, type: 1, delayTicks: 0 },\n    ]);\n    public static readonly vibratoTypes: DictionaryArray<VibratoType> = toNameMap([\n        { name: \"normal\", periodsSeconds: [0.14], period: 0.14 },\n        { name: \"shaky\", periodsSeconds: [0.11, 1.618 * 0.11, 3 * 0.11], period: 266.97 }, // LCM of all periods\n    ]);\n    // This array is more or less a linear step by 0.1 but there's a bit of range added at the start to hit specific ratios, and the end starts to grow faster.\n    //                                                             0       1      2    3     4      5    6    7      8     9   10   11 12   13   14   15   16   17   18   19   20   21 22   23   24   25   26   27   28   29   30   31 32   33   34   35   36   37   38    39  40   41 42    43   44   45   46 47   48 49 50\n    public static readonly arpSpeedScale: ReadonlyArray<number> = [0, 0.0625, 0.125, 0.2, 0.25, 1 / 3, 0.4, 0.5, 2 / 3, 0.75, 0.8, 0.9, 1, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9, 2, 2.1, 2.2, 2.3, 2.4, 2.5, 2.6, 2.7, 2.8, 2.9, 3, 3.1, 3.2, 3.3, 3.4, 3.5, 3.6, 3.7, 3.8, 3.9, 4, 4.15, 4.3, 4.5, 4.8, 5, 5.5, 6, 8];\n\n    public static readonly unisons: DictionaryArray<Unison> = toNameMap([\n        { name: \"none\", voices: 1, spread: 0.0, offset: 0.0, expression: 1.4, sign: 1.0 },\n        { name: \"shimmer\", voices: 2, spread: 0.018, offset: 0.0, expression: 0.8, sign: 1.0 },\n        { name: \"hum\", voices: 2, spread: 0.045, offset: 0.0, expression: 1.0, sign: 1.0 },\n        { name: \"honky tonk\", voices: 2, spread: 0.09, offset: 0.0, expression: 1.0, sign: 1.0 },\n        { name: \"dissonant\", voices: 2, spread: 0.25, offset: 0.0, expression: 0.9, sign: 1.0 },\n        { name: \"fifth\", voices: 2, spread: 3.5, offset: 3.5, expression: 0.9, sign: 1.0 },\n        { name: \"octave\", voices: 2, spread: 6.0, offset: 6.0, expression: 0.8, sign: 1.0 },\n        { name: \"bowed\", voices: 2, spread: 0.02, offset: 0.0, expression: 1.0, sign: -1.0 },\n        { name: \"piano\", voices: 2, spread: 0.01, offset: 0.0, expression: 1.0, sign: 0.7 },\n        { name: \"warbled\", voices: 2, spread: 0.25, offset: 0.05, expression: 0.9, sign: -0.8 },\n    ]);\n    public static readonly effectNames: ReadonlyArray<string> = [\"reverb\", \"chorus\", \"panning\", \"distortion\", \"bitcrusher\", \"note filter\", \"echo\", \"pitch shift\", \"detune\", \"vibrato\", \"transition type\", \"chord type\"];\n    public static readonly effectOrder: ReadonlyArray<EffectType> = [EffectType.panning, EffectType.transition, EffectType.chord, EffectType.pitchShift, EffectType.detune, EffectType.vibrato, EffectType.noteFilter, EffectType.distortion, EffectType.bitcrusher, EffectType.chorus, EffectType.echo, EffectType.reverb];\n    public static readonly noteSizeMax: number = 6;\n    public static readonly volumeRange: number = 50;\n    // Beepbox's old volume scale used factor -0.5 and was [0~7] had roughly value 6 = 0.125 power. This new value is chosen to have -21 be the same,\n    // given that the new scale is [-25~25]. This is such that conversion between the scales is roughly equivalent by satisfying (0.5*6 = 0.1428*21)\t\n    public static readonly volumeLogScale: number = 0.1428;\n    public static readonly panCenter: number = 50;\n    public static readonly panMax: number = Config.panCenter * 2;\n    public static readonly panDelaySecondsMax: number = 0.001;\n    public static readonly chorusRange: number = 8;\n    public static readonly chorusPeriodSeconds: number = 2.0;\n    public static readonly chorusDelayRange: number = 0.0034;\n    public static readonly chorusDelayOffsets: ReadonlyArray<ReadonlyArray<number>> = [[1.51, 2.10, 3.35], [1.47, 2.15, 3.25]];\n    public static readonly chorusPhaseOffsets: ReadonlyArray<ReadonlyArray<number>> = [[0.0, 2.1, 4.2], [3.2, 5.3, 1.0]];\n    public static readonly chorusMaxDelay: number = Config.chorusDelayRange * (1.0 + Config.chorusDelayOffsets[0].concat(Config.chorusDelayOffsets[1]).reduce((x, y) => Math.max(x, y)));\n    public static readonly chords: DictionaryArray<Chord> = toNameMap([\n        { name: \"simultaneous\", customInterval: false, arpeggiates: false, strumParts: 0, singleTone: false },\n        { name: \"strum\", customInterval: false, arpeggiates: false, strumParts: 1, singleTone: false },\n        { name: \"arpeggio\", customInterval: false, arpeggiates: true, strumParts: 0, singleTone: true },\n        { name: \"custom interval\", customInterval: true, arpeggiates: false, strumParts: 0, singleTone: true },\n    ]);\n    public static readonly maxChordSize: number = 9;\n    public static readonly operatorCount: number = 4;\n\tpublic static readonly maxPitchOrOperatorCount: number = Math.max(Config.maxChordSize, Config.operatorCount);\n    public static readonly algorithms: DictionaryArray<Algorithm> = toNameMap([\n        { name: \"1←(2 3 4)\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1], modulatedBy: [[2, 3, 4], [], [], []] },\n        { name: \"1←(2 3←4)\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1], modulatedBy: [[2, 3], [], [4], []] },\n        { name: \"1←2←(3 4)\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1], modulatedBy: [[2], [3, 4], [], []] },\n        { name: \"1←(2 3)←4\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1], modulatedBy: [[2, 3], [4], [4], []] },\n        { name: \"1←2←3←4\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1], modulatedBy: [[2], [3], [4], []] },\n        { name: \"1←3 2←4\", carrierCount: 2, associatedCarrier: [1, 2, 1, 2], modulatedBy: [[3], [4], [], []] },\n        { name: \"1 2←(3 4)\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2], modulatedBy: [[], [3, 4], [], []] },\n        { name: \"1 2←3←4\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2], modulatedBy: [[], [3], [4], []] },\n        { name: \"(1 2)←3←4\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2], modulatedBy: [[3], [3], [4], []] },\n        { name: \"(1 2)←(3 4)\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2], modulatedBy: [[3, 4], [3, 4], [], []] },\n        { name: \"1 2 3←4\", carrierCount: 3, associatedCarrier: [1, 2, 3, 3], modulatedBy: [[], [], [4], []] },\n        { name: \"(1 2 3)←4\", carrierCount: 3, associatedCarrier: [1, 2, 3, 3], modulatedBy: [[4], [4], [4], []] },\n        { name: \"1 2 3 4\", carrierCount: 4, associatedCarrier: [1, 2, 3, 4], modulatedBy: [[], [], [], []] },\n    ]);\n    public static readonly operatorCarrierInterval: ReadonlyArray<number> = [0.0, 0.04, -0.073, 0.091];\n    public static readonly operatorAmplitudeMax: number = 15;\n    public static readonly operatorFrequencies: DictionaryArray<OperatorFrequency> = toNameMap([\n        { name: \"1×\", mult: 1.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n        { name: \"~1×\", mult: 1.0, hzOffset: 1.5, amplitudeSign: -1.0 },\n        { name: \"2×\", mult: 2.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n        { name: \"~2×\", mult: 2.0, hzOffset: -1.3, amplitudeSign: -1.0 },\n        { name: \"3×\", mult: 3.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n        { name: \"4×\", mult: 4.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n        { name: \"5×\", mult: 5.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n        { name: \"6×\", mult: 6.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n        { name: \"7×\", mult: 7.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n        { name: \"8×\", mult: 8.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n        { name: \"9×\", mult: 9.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n        { name: \"11×\", mult: 11.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n        { name: \"13×\", mult: 13.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n        { name: \"16×\", mult: 16.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n        { name: \"20×\", mult: 20.0, hzOffset: 0.0, amplitudeSign: 1.0 },\n    ]);\n    public static readonly envelopes: DictionaryArray<Envelope> = toNameMap([\n        { name: \"none\", type: EnvelopeType.none, speed: 0.0 },\n        { name: \"note size\", type: EnvelopeType.noteSize, speed: 0.0 },\n        { name: \"punch\", type: EnvelopeType.punch, speed: 0.0 },\n        { name: \"flare 1\", type: EnvelopeType.flare, speed: 32.0 },\n        { name: \"flare 2\", type: EnvelopeType.flare, speed: 8.0 },\n        { name: \"flare 3\", type: EnvelopeType.flare, speed: 2.0 },\n        { name: \"twang 1\", type: EnvelopeType.twang, speed: 32.0 },\n        { name: \"twang 2\", type: EnvelopeType.twang, speed: 8.0 },\n        { name: \"twang 3\", type: EnvelopeType.twang, speed: 2.0 },\n        { name: \"swell 1\", type: EnvelopeType.swell, speed: 32.0 },\n        { name: \"swell 2\", type: EnvelopeType.swell, speed: 8.0 },\n        { name: \"swell 3\", type: EnvelopeType.swell, speed: 2.0 },\n        { name: \"tremolo1\", type: EnvelopeType.tremolo, speed: 4.0 },\n        { name: \"tremolo2\", type: EnvelopeType.tremolo, speed: 2.0 },\n        { name: \"tremolo3\", type: EnvelopeType.tremolo, speed: 1.0 },\n        { name: \"tremolo4\", type: EnvelopeType.tremolo2, speed: 4.0 },\n        { name: \"tremolo5\", type: EnvelopeType.tremolo2, speed: 2.0 },\n        { name: \"tremolo6\", type: EnvelopeType.tremolo2, speed: 1.0 },\n        { name: \"decay 1\", type: EnvelopeType.decay, speed: 10.0 },\n        { name: \"decay 2\", type: EnvelopeType.decay, speed: 7.0 },\n        { name: \"decay 3\", type: EnvelopeType.decay, speed: 4.0 },\n        { name: \"blip 1\", type: EnvelopeType.blip, speed: 6.0 },\n        { name: \"blip 2\", type: EnvelopeType.blip, speed: 16.0 },\n        { name: \"blip 3\", type: EnvelopeType.blip, speed: 32.0 },\n    ]);\n    public static readonly feedbacks: DictionaryArray<Feedback> = toNameMap([\n        { name: \"1⟲\", indices: [[1], [], [], []] },\n        { name: \"2⟲\", indices: [[], [2], [], []] },\n        { name: \"3⟲\", indices: [[], [], [3], []] },\n        { name: \"4⟲\", indices: [[], [], [], [4]] },\n        { name: \"1⟲ 2⟲\", indices: [[1], [2], [], []] },\n        { name: \"3⟲ 4⟲\", indices: [[], [], [3], [4]] },\n        { name: \"1⟲ 2⟲ 3⟲\", indices: [[1], [2], [3], []] },\n        { name: \"2⟲ 3⟲ 4⟲\", indices: [[], [2], [3], [4]] },\n        { name: \"1⟲ 2⟲ 3⟲ 4⟲\", indices: [[1], [2], [3], [4]] },\n        { name: \"1→2\", indices: [[], [1], [], []] },\n        { name: \"1→3\", indices: [[], [], [1], []] },\n        { name: \"1→4\", indices: [[], [], [], [1]] },\n        { name: \"2→3\", indices: [[], [], [2], []] },\n        { name: \"2→4\", indices: [[], [], [], [2]] },\n        { name: \"3→4\", indices: [[], [], [], [3]] },\n        { name: \"1→3 2→4\", indices: [[], [], [1], [2]] },\n        { name: \"1→4 2→3\", indices: [[], [], [2], [1]] },\n        { name: \"1→2→3→4\", indices: [[], [1], [2], [3]] },\n    ]);\n    public static readonly chipNoiseLength: number = 1 << 15; // 32768\n    public static readonly spectrumNoiseLength: number = 1 << 15; // 32768\n    public static readonly spectrumBasePitch: number = 24;\n    public static readonly spectrumControlPoints: number = 30;\n    public static readonly spectrumControlPointsPerOctave: number = 7;\n    public static readonly spectrumControlPointBits: number = 3;\n    public static readonly spectrumMax: number = (1 << Config.spectrumControlPointBits) - 1;\n    public static readonly harmonicsControlPoints: number = 28;\n    public static readonly harmonicsRendered: number = 64;\n    public static readonly harmonicsRenderedForPickedString: number = 1 << 8; // 256\n    public static readonly harmonicsControlPointBits: number = 3;\n    public static readonly harmonicsMax: number = (1 << Config.harmonicsControlPointBits) - 1;\n    public static readonly harmonicsWavelength: number = 1 << 11; // 2048\n    public static readonly pulseWidthRange: number = 50;\n    public static readonly pulseWidthStepPower: number = 0.5;\n    public static readonly supersawVoiceCount: number = 7;\n\tpublic static readonly supersawDynamismMax: number = 6;\n\tpublic static readonly supersawSpreadMax: number = 12;\n\tpublic static readonly supersawShapeMax: number = 6;\n    public static readonly pitchChannelCountMin: number = 1;\n    public static readonly pitchChannelCountMax: number = 40;\n    public static readonly noiseChannelCountMin: number = 0;\n    public static readonly noiseChannelCountMax: number = 16;\n    public static readonly modChannelCountMin: number = 0;\n    public static readonly modChannelCountMax: number = 12;\n    public static readonly noiseInterval: number = 6;\n    public static readonly pitchesPerOctave: number = 12; // TODO: Use this for converting pitch to frequency.\n    public static readonly drumCount: number = 12;\n    public static readonly pitchOctaves: number = 8;\n    public static readonly modCount: number = 6;\n    public static readonly maxPitch: number = Config.pitchOctaves * Config.pitchesPerOctave;\n    public static readonly maximumTonesPerChannel: number = Config.maxChordSize * 2;\n    public static readonly justIntonationSemitones: number[] = [1.0 / 2.0, 8.0 / 15.0, 9.0 / 16.0, 3.0 / 5.0, 5.0 / 8.0, 2.0 / 3.0, 32.0 / 45.0, 3.0 / 4.0, 4.0 / 5.0, 5.0 / 6.0, 8.0 / 9.0, 15.0 / 16.0, 1.0, 16.0 / 15.0, 9.0 / 8.0, 6.0 / 5.0, 5.0 / 4.0, 4.0 / 3.0, 45.0 / 32.0, 3.0 / 2.0, 8.0 / 5.0, 5.0 / 3.0, 16.0 / 9.0, 15.0 / 8.0, 2.0].map(x => Math.log2(x) * Config.pitchesPerOctave);\n    public static readonly pitchShiftRange: number = Config.justIntonationSemitones.length;\n    public static readonly pitchShiftCenter: number = Config.pitchShiftRange >> 1;\n    public static readonly detuneCenter: number = 200;\n    public static readonly detuneMax: number = 400;\n    public static readonly detuneMin: number = 0;\n    public static readonly songDetuneMin: number = 0;\n    public static readonly songDetuneMax: number = 500;\n    public static readonly sineWaveLength: number = 1 << 8; // 256\n    public static readonly sineWaveMask: number = Config.sineWaveLength - 1;\n    public static readonly sineWave: Float32Array = generateSineWave();\n\n    // Picked strings have an all-pass filter with a corner frequency based on the tone fundamental frequency, in order to add a slight inharmonicity. (Which is important for distortion.)\n    public static readonly pickedStringDispersionCenterFreq: number = 6000.0; // The tone fundamental freq is pulled toward this freq for computing the all-pass corner freq.\n    public static readonly pickedStringDispersionFreqScale: number = 0.3; // The tone fundamental freq freq moves this much toward the center freq for computing the all-pass corner freq.\n    public static readonly pickedStringDispersionFreqMult: number = 4.0; // The all-pass corner freq is based on this times the adjusted tone fundamental freq.\n    public static readonly pickedStringShelfHz: number = 4000.0; // The cutoff freq of the shelf filter that is used to decay the high frequency energy in the picked string.\n\n    public static readonly distortionRange: number = 8;\n    public static readonly stringSustainRange: number = 15;\n    public static readonly stringDecayRate: number = 0.12;\n    public static readonly enableAcousticSustain: boolean = false;\n\tpublic static readonly sustainTypeNames: ReadonlyArray<string> = [\"bright\", \"acoustic\"]; // See SustainType enum above.\n\t\n    public static readonly bitcrusherFreqRange: number = 14;\n    public static readonly bitcrusherOctaveStep: number = 0.5;\n    public static readonly bitcrusherQuantizationRange: number = 8;\n\n    public static readonly maxEnvelopeCount: number = 12;\n    public static readonly defaultAutomationRange: number = 13;\n    public static readonly instrumentAutomationTargets: DictionaryArray<AutomationTarget> = toNameMap([\n        { name: \"none\", computeIndex: null, displayName: \"none\",             /*perNote: false,*/ interleave: false, isFilter: false, /*range: 0,                              */    maxCount: 1, effect: null, compatibleInstruments: null },\n        { name: \"noteVolume\", computeIndex: EnvelopeComputeIndex.noteVolume, displayName: \"note volume\",      /*perNote:  true,*/ interleave: false, isFilter: false, /*range: Config.volumeRange,             */    maxCount: 1, effect: null, compatibleInstruments: null },\n        { name: \"pulseWidth\", computeIndex: EnvelopeComputeIndex.pulseWidth, displayName: \"pulse width\",      /*perNote:  true,*/ interleave: false, isFilter: false, /*range: Config.pulseWidthRange,         */    maxCount: 1, effect: null, compatibleInstruments: [InstrumentType.pwm, InstrumentType.supersaw] },\n        { name: \"stringSustain\", computeIndex: EnvelopeComputeIndex.stringSustain, displayName: \"sustain\",          /*perNote:  true,*/ interleave: false, isFilter: false, /*range: Config.stringSustainRange,      */    maxCount: 1, effect: null, compatibleInstruments: [InstrumentType.pickedString] },\n        { name: \"unison\", computeIndex: EnvelopeComputeIndex.unison, displayName: \"unison\",           /*perNote:  true,*/ interleave: false, isFilter: false, /*range: Config.defaultAutomationRange,  */    maxCount: 1, effect: null, compatibleInstruments: [InstrumentType.chip, InstrumentType.harmonics, InstrumentType.pickedString] },\n        { name: \"operatorFrequency\", computeIndex: EnvelopeComputeIndex.operatorFrequency0, displayName: \"fm# freq\",         /*perNote:  true,*/ interleave: true, isFilter: false, /*range: Config.defaultAutomationRange,  */    maxCount: Config.operatorCount, effect: null, compatibleInstruments: [InstrumentType.fm] },\n        { name: \"operatorAmplitude\", computeIndex: EnvelopeComputeIndex.operatorAmplitude0, displayName: \"fm# volume\",       /*perNote:  true,*/ interleave: false, isFilter: false, /*range: Config.operatorAmplitudeMax + 1,*/    maxCount: Config.operatorCount, effect: null, compatibleInstruments: [InstrumentType.fm] },\n        { name: \"feedbackAmplitude\", computeIndex: EnvelopeComputeIndex.feedbackAmplitude, displayName: \"fm feedback\",      /*perNote:  true,*/ interleave: false, isFilter: false, /*range: Config.operatorAmplitudeMax + 1,*/    maxCount: 1, effect: null, compatibleInstruments: [InstrumentType.fm] },\n        { name: \"pitchShift\", computeIndex: EnvelopeComputeIndex.pitchShift, displayName: \"pitch shift\",      /*perNote:  true,*/ interleave: false, isFilter: false, /*range: Config.pitchShiftRange,         */    maxCount: 1, effect: EffectType.pitchShift, compatibleInstruments: null },\n        { name: \"detune\", computeIndex: EnvelopeComputeIndex.detune, displayName: \"detune\",           /*perNote:  true,*/ interleave: false, isFilter: false, /*range: Config.detuneMax + 1,           */    maxCount: 1, effect: EffectType.detune, compatibleInstruments: null },\n        { name: \"vibratoDepth\", computeIndex: EnvelopeComputeIndex.vibratoDepth, displayName: \"vibrato range\",    /*perNote:  true,*/ interleave: false, isFilter: false, /*range: Config.defaultAutomationRange,  */    maxCount: 1, effect: EffectType.vibrato, compatibleInstruments: null },\n        { name: \"noteFilterAllFreqs\", computeIndex: EnvelopeComputeIndex.noteFilterAllFreqs, displayName: \"n. filter freqs\",  /*perNote:  true,*/ interleave: false, isFilter: true, /*range: null,                           */    maxCount: 1, effect: EffectType.noteFilter, compatibleInstruments: null },\n        {name: \"noteFilterFreq\",         computeIndex:       EnvelopeComputeIndex.noteFilterFreq0,        displayName: \"n. filter # freq\", /*perNote:  true,*/ interleave: false/*true*/, isFilter:  true, /*range: Config.filterFreqRange, */    maxCount: Config.filterMaxPoints, effect: EffectType.noteFilter, compatibleInstruments: null},\n\t\t// Controlling filter gain is less obvious and intuitive than controlling filter freq, so to avoid confusion I've disabled it for envelopes.\n\t\t{name: \"noteFilterGain\",         computeIndex:                           null,                    displayName: \"n. filter # vol\",  /*perNote:  true,*/ interleave: false, isFilter:  true, /*range: Config.filterGainRange,         */    maxCount: Config.filterMaxPoints, effect: EffectType.noteFilter, compatibleInstruments: null},\n\t\t{name: \"supersawDynamism\",       computeIndex:       EnvelopeComputeIndex.supersawDynamism,       displayName: \"dynamism\",         /*perNote:  true,*/ interleave: false, isFilter: false, /*range: Config.supersawDynamismMax + 1, */    maxCount: 1,    effect: null,                    compatibleInstruments: [InstrumentType.supersaw]},\n\t\t{name: \"supersawSpread\",         computeIndex:       EnvelopeComputeIndex.supersawSpread,         displayName: \"spread\",           /*perNote:  true,*/ interleave: false, isFilter: false, /*range: Config.supersawSpreadMax + 1,   */    maxCount: 1,    effect: null,                    compatibleInstruments: [InstrumentType.supersaw]},\n\t\t{name: \"supersawShape\",          computeIndex:       EnvelopeComputeIndex.supersawShape,          displayName: \"saw↔pulse\",        /*perNote:  true,*/ interleave: false, isFilter: false, /*range: Config.supersawShapeMax + 1,    */    maxCount: 1,    effect: null,                    compatibleInstruments: [InstrumentType.supersaw]},\n\t\t/*\n        {name: \"distortion\",             computeIndex: InstrumentAutomationIndex.distortion,             displayName: \"distortion\",       perNote: false, interleave: false, isFilter: false, range: Config.distortionRange,             maxCount: 1,    effect: EffectType.distortion,   compatibleInstruments: null},\n        {name: \"bitcrusherQuantization\", computeIndex: InstrumentAutomationIndex.bitcrusherQuantization, displayName: \"bit crush\",        perNote: false, interleave: false, isFilter: false, range: Config.bitcrusherQuantizationRange, maxCount: 1,    effect: EffectType.bitcrusher,   compatibleInstruments: null},\n        {name: \"bitcrusherFrequency\",    computeIndex: InstrumentAutomationIndex.bitcrusherFrequency,    displayName: \"freq crush\",       perNote: false, interleave: false, isFilter: false, range: Config.bitcrusherFreqRange,         maxCount: 1,    effect: EffectType.bitcrusher,   compatibleInstruments: null},\n        {name: \"eqFilterAllFreqs\",       computeIndex: InstrumentAutomationIndex.eqFilterAllFreqs,       displayName: \"eq filter freqs\",  perNote: false, interleave: false, isFilter:  true, range: null,                               maxCount: 1,    effect: null,                    compatibleInstruments: null},\n        {name: \"eqFilterFreq\",           computeIndex: InstrumentAutomationIndex.eqFilterFreq0,          displayName: \"eq filter # freq\", perNote: false, interleave:  true, isFilter:  true, range: Config.filterFreqRange,             maxCount: Config.filterMaxPoints, effect: null,  compatibleInstruments: null},\n        {name: \"eqFilterGain\",           computeIndex: InstrumentAutomationIndex.eqFilterGain0,          displayName: \"eq filter # vol\",  perNote: false, interleave: false, isFilter:  true, range: Config.filterGainRange,             maxCount: Config.filterMaxPoints, effect: null,  compatibleInstruments: null},\n        {name: \"panning\",                computeIndex: InstrumentAutomationIndex.panning,                displayName: \"panning\",          perNote: false, interleave: false, isFilter: false, range: Config.panMax + 1,                  maxCount: 1,    effect: EffectType.panning,      compatibleInstruments: null},\n        {name: \"chorus\",                 computeIndex: InstrumentAutomationIndex.chorus,                 displayName: \"chorus\",           perNote: false, interleave: false, isFilter: false, range: Config.chorusRange,                 maxCount: 1,    effect: EffectType.chorus,       compatibleInstruments: null},\n        {name: \"echoSustain\",            computeIndex: InstrumentAutomationIndex.echoSustain,            displayName: \"echo\",             perNote: false, interleave: false, isFilter: false, range: Config.echoSustainRange,            maxCount: 1,    effect: EffectType.echo,         compatibleInstruments: null},\n        {name: \"echoDelay\",              computeIndex: InstrumentAutomationIndex.echoDelay,              displayName: \"echo delay\",       perNote: false, interleave: false, isFilter: false, range: Config.echoDelayRange,              maxCount: 1,    effect: EffectType.echo,         compatibleInstruments: null}, // wait until after we're computing a tick's settings for multiple run lengths.\n        {name: \"reverb\",                 computeIndex: InstrumentAutomationIndex.reverb,                 displayName: \"reverb\",           perNote: false, interleave: false, isFilter: false, range: Config.reverbRange,                 maxCount: 1,    effect: EffectType.reverb,       compatibleInstruments: null},\n        {name: \"mixVolume\",              computeIndex: InstrumentAutomationIndex.mixVolume,              displayName: \"mix volume\",       perNote: false, interleave: false, isFilter: false, range: Config.volumeRange,                 maxCount: 1,    effect: null,                    compatibleInstruments: null},\n        {name: \"envelope#\",              computeIndex: null,                                             displayName: \"envelope\",         perNote: false, interleave: false, isFilter: false, range: Config.defaultAutomationRange,      maxCount: Config.maxEnvelopeCount, effect: null, compatibleInstruments: null}, // maxCount special case for envelopes to be allowed to target earlier ones.\n        */\n    ]);\n    public static readonly operatorWaves: DictionaryArray<OperatorWave> = toNameMap([\n        { name: \"sine\", samples: Config.sineWave },\n        { name: \"triangle\", samples: generateTriWave() },\n        { name: \"sawtooth\", samples: generateSawWave() },\n        { name: \"pulse width\", samples: generateSquareWave() },\n        { name: \"ramp\", samples: generateSawWave(true) },\n        { name: \"trapezoid\", samples: generateTrapezoidWave(2) },\n    ]);\n    public static readonly pwmOperatorWaves: DictionaryArray<OperatorWave> = toNameMap([\n        { name: \"1%\", samples: generateSquareWave(0.01) },\n        { name: \"5%\", samples: generateSquareWave(0.05) },\n        { name: \"12.5%\", samples: generateSquareWave(0.125) },\n        { name: \"25%\", samples: generateSquareWave(0.25) },\n        { name: \"33%\", samples: generateSquareWave(1 / 3) },\n        { name: \"50%\", samples: generateSquareWave(0.5) },\n        { name: \"66%\", samples: generateSquareWave(2 / 3) },\n        { name: \"75%\", samples: generateSquareWave(0.75) },\n        { name: \"87.5%\", samples: generateSquareWave(0.875) },\n        { name: \"95%\", samples: generateSquareWave(0.95) },\n        { name: \"99%\", samples: generateSquareWave(0.99) },\n    ]);\n\n\n    // Height of the small editor column for inserting/deleting rows, in pixels.\n    public static readonly barEditorHeight: number = 10;\n\n    // Careful about changing index ordering for this. Index is stored in URL/JSON etc.\n    public static readonly modulators: DictionaryArray<Modulator> = toNameMap([\n        { name: \"none\", pianoName: \"None\", maxRawVol: 6, newNoteVol: 6, forSong: true, convertRealFactor: 0, associatedEffect: EffectType.length,\n            promptName: \"No Mod Setting\", promptDesc: [ \"No setting has been chosen yet, so this modulator will have no effect. Try choosing a setting with the dropdown, then click this '?' again for more info.\", \"[$LO - $HI]\" ] },\n        { name: \"song volume\", pianoName: \"Volume\", maxRawVol: 100, newNoteVol: 100, forSong: true, convertRealFactor: 0, associatedEffect: EffectType.length,\n            promptName: \"Song Volume\", promptDesc: [ \"This setting affects the overall volume of the song, just like the main volume slider.\", \"At $HI, the volume will be unchanged from default, and it will get gradually quieter down to $LO.\", \"[MULTIPLICATIVE] [$LO - $HI] [%]\" ] },\n        { name: \"tempo\", pianoName: \"Tempo\", maxRawVol: Config.tempoMax - Config.tempoMin, newNoteVol: Math.ceil((Config.tempoMax - Config.tempoMin) / 2), forSong: true, convertRealFactor: Config.tempoMin, associatedEffect: EffectType.length,\n            promptName: \"Song Tempo\", promptDesc: [ \"This setting controls the speed your song plays at, just like the tempo slider.\", \"When you first make a note for this setting, it will default to your current tempo. Raising it speeds up the song, up to $HI BPM, and lowering it slows it down, to a minimum of $LO BPM.\", \"Note that you can make a 'swing' effect by rapidly changing between two tempo values.\", \"[OVERWRITING] [$LO - $HI] [BPM]\" ] },\n        { name: \"song reverb\", pianoName: \"Reverb\", maxRawVol: Config.reverbRange * 2, newNoteVol: Config.reverbRange, forSong: true, convertRealFactor: -Config.reverbRange, associatedEffect: EffectType.length,\n            promptName: \"Song Reverb\", promptDesc: [ \"This setting affects the overall reverb of your song. It works by multiplying existing reverb for instruments, so those with no reverb set will be unaffected.\", \"At $MID, all instruments' reverb will be unchanged from default. This increases up to double the reverb value at $HI, or down to no reverb at $LO.\", \"[MULTIPLICATIVE] [$LO - $HI]\" ] },\n        { name: \"next bar\", pianoName: \"Next Bar\", maxRawVol: 1, newNoteVol: 1, forSong: true, convertRealFactor: 0, associatedEffect: EffectType.length,\n            promptName: \"Go To Next Bar\", promptDesc: [ \"This setting functions a little different from most. Wherever a note is placed, the song will jump immediately to the next bar when it is encountered.\", \"This jump happens at the very start of the note, so the length of a next-bar note is irrelevant. Also, the note can be value 0 or 1, but the value is also irrelevant - wherever you place a note, the song will jump.\", \"You can make mixed-meter songs or intro sections by cutting off unneeded beats with a next-bar modulator.\", \"[$LO - $HI]\" ] },\n        { name: \"note volume\", pianoName: \"Note Vol.\", maxRawVol: Config.volumeRange, newNoteVol: Math.ceil(Config.volumeRange / 2), forSong: false, convertRealFactor: Math.ceil(-Config.volumeRange / 2.0), associatedEffect: EffectType.length,\n            promptName: \"Note Volume\", promptDesc: [ \"This setting affects the volume of your instrument as if its note size had been scaled.\", \"At $MID, an instrument's volume will be unchanged from default. This means you can still use the volume sliders to mix the base volume of instruments. The volume gradually increases up to $HI, or decreases down to mute at $LO.\", \"This setting was the default for volume modulation in JummBox for a long time. Due to some new effects like distortion and bitcrush, note volume doesn't always allow fine volume control. Also, this modulator affects the value of FM modulator waves instead of just carriers. This can distort the sound which may be useful, but also may be undesirable. In those cases, use the 'mix volume' modulator instead, which will always just scale the volume with no added effects.\", \"For display purposes, this mod will show up on the instrument volume slider, as long as there is not also an active 'mix volume' modulator anyhow. However, as mentioned, it works more like changing note volume.\", \"[MULTIPLICATIVE] [$LO - $HI]\" ] },\n        { name: \"pan\", pianoName: \"Pan\", maxRawVol: Config.panMax, newNoteVol: Math.ceil(Config.panMax / 2), forSong: false, convertRealFactor: 0, associatedEffect: EffectType.panning,\n            promptName: \"Instrument Panning\", promptDesc: [ \"This setting controls the panning of your instrument, just like the panning slider.\", \"At $LO, your instrument will sound like it is coming fully from the left-ear side. At $MID it will be right in the middle, and at $HI, it will sound like it's on the right.\", \"[OVERWRITING] [$LO - $HI] [L-R]\" ] },\n        { name: \"reverb\", pianoName: \"Reverb\", maxRawVol: Config.reverbRange, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.reverb,\n            promptName: \"Instrument Reverb\", promptDesc: [ \"This setting controls the reverb of your insturment, just like the reverb slider.\", \"At $LO, your instrument will have no reverb. At $HI, it will be at maximum.\", \"[OVERWRITING] [$LO - $HI]\"] },\n        { name: \"distortion\", pianoName: \"Distortion\", maxRawVol: Config.distortionRange-1, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.distortion,\n            promptName: \"Instrument Distortion\", promptDesc: [ \"This setting controls the amount of distortion for your instrument, just like the distortion slider.\", \"At $LO, your instrument will have no distortion. At $HI, it will be at maximum.\", \"[OVERWRITING] [$LO - $HI]\" ] },\n        { name: \"fm slider 1\", pianoName: \"FM 1\", maxRawVol: 15, newNoteVol: 15, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\n            promptName: \"FM Slider 1\", promptDesc: [ \"This setting affects the strength of the first FM slider, just like the corresponding slider on your instrument.\", \"It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.\", \"For the full range of control with this mod, move your underlying slider all the way to the right.\", \"[MULTIPLICATIVE] [$LO - $HI] [%]\"] },\n        { name: \"fm slider 2\", pianoName: \"FM 2\", maxRawVol: 15, newNoteVol: 15, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\n            promptName: \"FM Slider 2\", promptDesc: [\"This setting affects the strength of the second FM slider, just like the corresponding slider on your instrument.\", \"It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.\", \"For the full range of control with this mod, move your underlying slider all the way to the right.\", \"[MULTIPLICATIVE] [$LO - $HI] [%]\" ] },\n        { name: \"fm slider 3\", pianoName: \"FM 3\", maxRawVol: 15, newNoteVol: 15, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\n            promptName: \"FM Slider 3\", promptDesc: [\"This setting affects the strength of the third FM slider, just like the corresponding slider on your instrument.\", \"It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.\", \"For the full range of control with this mod, move your underlying slider all the way to the right.\", \"[MULTIPLICATIVE] [$LO - $HI] [%]\" ] },\n        { name: \"fm slider 4\", pianoName: \"FM 4\", maxRawVol: 15, newNoteVol: 15, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\n            promptName: \"FM Slider 4\", promptDesc: [\"This setting affects the strength of the fourth FM slider, just like the corresponding slider on your instrument.\", \"It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.\", \"For the full range of control with this mod, move your underlying slider all the way to the right.\", \"[MULTIPLICATIVE] [$LO - $HI] [%]\"] },\n        { name: \"fm feedback\", pianoName: \"FM Feedback\", maxRawVol: 15, newNoteVol: 15, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\n            promptName: \"FM Feedback\", promptDesc: [\"This setting affects the strength of the FM feedback slider, just like the corresponding slider on your instrument.\", \"It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.\", \"For the full range of control with this mod, move your underlying slider all the way to the right.\", \"[MULTIPLICATIVE] [$LO - $HI] [%]\"] },\n        { name: \"pulse width\", pianoName: \"Pulse Width\", maxRawVol: Config.pulseWidthRange, newNoteVol: Config.pulseWidthRange, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\n            promptName: \"Pulse Width\", promptDesc: [\"This setting controls the width of this instrument's pulse wave, just like the pulse width slider.\", \"At $HI, your instrument will sound like a pure square wave (on 50% of the time). It will gradually sound narrower down to $LO, where it will be inaudible (as it is on 0% of the time).\", \"Changing pulse width randomly between a few values is a common strategy in chiptune music to lend some personality to a lead instrument.\", \"[OVERWRITING] [$LO - $HI] [%Duty]\"] },\n        { name: \"detune\", pianoName: \"Detune\", maxRawVol: Config.detuneMax - Config.detuneMin, newNoteVol: Config.detuneCenter, forSong: false, convertRealFactor: -Config.detuneCenter, associatedEffect: EffectType.detune,\n            promptName: \"Instrument Detune\", promptDesc: [\"This setting controls the detune for this instrument, just like the detune slider.\", \"At $MID, your instrument will have no detune applied. Each tick corresponds to one cent, or one-hundredth of a pitch. Thus, each change of 100 ticks corresponds to one half-step of detune, up to two half-steps up at $HI, or two half-steps down at $LO.\", \"[OVERWRITING] [$LO - $HI] [cents]\"] },\n        { name: \"vibrato depth\", pianoName: \"Vibrato Depth\", maxRawVol: 50, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.vibrato,\n            promptName: \"Vibrato Depth\", promptDesc: [\"This setting controls the amount that your pitch moves up and down by during vibrato, just like the vibrato depth slider.\", \"At $LO, your instrument will have no vibrato depth so its vibrato would be inaudible. This increases up to $HI, where an extreme pitch change will be noticeable.\", \"[OVERWRITING] [$LO - $HI] [pitch ÷25]\"] },\n        { name: \"song detune\", pianoName: \"Detune\", maxRawVol: Config.songDetuneMax - Config.songDetuneMin, newNoteVol: Math.ceil((Config.songDetuneMax - Config.songDetuneMin) / 2), forSong: true, convertRealFactor: -250, associatedEffect: EffectType.length,\n            promptName: \"Song Detune\", promptDesc: [\"This setting controls the overall detune of the entire song. There is no associated slider.\", \"At $MID, your song will have no extra detune applied and sound unchanged from default. Each tick corresponds to four cents, or four hundredths of a pitch. Thus, each change of 25 ticks corresponds to one half-step of detune, up to 10 half-steps up at $HI, or 10 half-steps down at $LO.\", \"[MULTIPLICATIVE] [$LO - $HI] [cents x4]\"] },\n        { name: \"vibrato speed\", pianoName: \"Vibrato Speed\", maxRawVol: 30, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.vibrato,\n            promptName: \"Vibrato Speed\", promptDesc: [\"This setting controls the speed your instrument will vibrato at, just like the slider.\", \"A setting of $LO means there will be no oscillation, and vibrato will be disabled. Higher settings will increase the speed, up to a dramatic trill at the max value, $HI.\", \"[OVERWRITING] [$LO - $HI]\"] },\n        { name: \"vibrato delay\", pianoName: \"Vibrato Delay\", maxRawVol: 50, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.vibrato,\n            promptName: \"Vibrato Delay\", promptDesc: [\"This setting controls the amount of time vibrato will be held off for before triggering for every new note, just like the slider.\", \"A setting of $LO means there will be no delay. A setting of 24 corresponds to one full beat of delay. As a sole exception to this scale, setting delay to $HI will completely disable vibrato (as if it had infinite delay).\", \"[OVERWRITING] [$LO - $HI] [beats ÷24]\"] },\n        { name: \"arp speed\", pianoName: \"Arp Speed\", maxRawVol: 50, newNoteVol: 12, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.chord,\n            promptName: \"Arpeggio Speed\", promptDesc: [\"This setting controls the speed at which your instrument's chords arpeggiate, just like the arpeggio speed slider.\", \"Each setting corresponds to a different speed, from the slowest to the fastest. The speeds are listed below.\",\n                \"[0-4]: x0, x1/16, x⅛, x⅕, x¼,\", \"[5-9]: x⅓, x⅖, x½, x⅔, x¾,\", \"[10-14]: x⅘, x0.9, x1, x1.1, x1.2,\", \"[15-19]: x1.3, x1.4, x1.5, x1.6, x1.7,\", \"[20-24]: x1.8, x1.9, x2, x2.1, x2.2,\", \"[25-29]: x2.3, x2.4, x2.5, x2.6, x2.7,\", \"[30-34]: x2.8, x2.9, x3, x3.1, x3.2,\", \"[35-39]: x3.3, x3.4, x3.5, x3.6, x3.7,\" ,\"[40-44]: x3.8, x3.9, x4, x4.15, x4.3,\", \"[45-50]: x4.5, x4.8, x5, x5.5, x6, x8\", \"[OVERWRITING] [$LO - $HI]\"] },\n        { name: \"pan delay\", pianoName: \"Pan Delay\", maxRawVol: 20, newNoteVol: 10, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.panning,\n            promptName: \"Panning Delay\", promptDesc: [\"This setting controls the delay applied to panning for your instrument, just like the pan delay slider.\", \"With more delay, the panning effect will generally be more pronounced. $MID is the default value, whereas $LO will remove any delay at all. No delay can be desirable for chiptune songs.\", \"[OVERWRITING] [$LO - $HI]\"] },\n        { name: \"reset arp\", pianoName: \"Reset Arp\", maxRawVol: 1, newNoteVol: 1, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.chord,\n            promptName: \"Reset Arpeggio\", promptDesc: [\"This setting functions a little different from most. Wherever a note is placed, the arpeggio of this instrument will reset at the very start of that note. This is most noticeable with lower arpeggio speeds. The lengths and values of notes for this setting don't matter, just the note start times.\", \"This mod can be used to sync up your apreggios so that they always sound the same, even if you are using an odd-ratio arpeggio speed or modulating arpeggio speed.\", \"[$LO - $HI]\"] },\n        { name: \"eq filter\", pianoName: \"EQFlt\", maxRawVol: 10, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\n            promptName: \"EQ Filter\", promptDesc: [\"This setting controls a few separate things for your instrument's EQ filter.\", \"When the option 'morph' is selected, your modulator values will indicate a sub-filter index of your EQ filter to 'morph' to over time. For example, a change from 0 to 1 means your main filter (default) will morph to sub-filter 1 over the specified duration. You can shape the main filter and sub-filters in the large filter editor ('+' button). If your two filters' number, type, and order of filter dots all match up, the morph will happen smoothly and you'll be able to hear them changing. If they do not match up, the filters will simply jump between each other.\", \"Note that filters will morph based on endpoints in the pattern editor. So, if you specify a morph from sub-filter 1 to 4 but do not specifically drag in new endpoints for 2 and 3, it will morph directly between 1 and 4 without going through the others.\", \"If you target Dot X or Dot Y, you can finely tune the coordinates of a single dot for your filter. The number of available dots to choose is dependent on your main filter's dot count.\", \"[OVERWRITING] [$LO - $HI]\"] },\n        { name: \"note filter\", pianoName: \"N.Flt\", maxRawVol: 10, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.noteFilter,\n            promptName: \"Note Filter\", promptDesc: [\"This setting controls a few separate things for your instrument's note filter.\", \"When the option 'morph' is selected, your modulator values will indicate a sub-filter index of your note filter to 'morph' to over time. For example, a change from 0 to 1 means your main filter (default) will morph to sub-filter 1 over the specified duration. You can shape the main filter and sub-filters in the large filter editor ('+' button). If your two filters' number, type, and order of filter dots all match up, the morph will happen smoothly and you'll be able to hear them changing. If they do not match up, the filters will simply jump between each other.\", \"Note that filters will morph based on endpoints in the pattern editor. So, if you specify a morph from sub-filter 1 to 4 but do not specifically drag in new endpoints for 2 and 3, it will morph directly between 1 and 4 without going through the others.\", \"If you target Dot X or Dot Y, you can finely tune the coordinates of a single dot for your filter. The number of available dots to choose is dependent on your main filter's dot count.\", \"[OVERWRITING] [$LO - $HI]\"] },\n        { name: \"bit crush\", pianoName: \"Bitcrush\", maxRawVol: Config.bitcrusherQuantizationRange-1, newNoteVol: Math.round(Config.bitcrusherQuantizationRange / 2), forSong: false, convertRealFactor: 0, associatedEffect: EffectType.bitcrusher,\n            promptName: \"Instrument Bit Crush\", promptDesc: [\"This setting controls the bit crush of your instrument, just like the bit crush slider.\", \"At a value of $LO, no bit crush will be applied. This increases and the bit crush effect gets more noticeable up to the max value, $HI.\", \"[OVERWRITING] [$LO - $HI]\"] },\n        { name: \"freq crush\", pianoName: \"Freq Crush\", maxRawVol: Config.bitcrusherFreqRange-1, newNoteVol: Math.round(Config.bitcrusherFreqRange / 2), forSong: false, convertRealFactor: 0, associatedEffect: EffectType.bitcrusher,\n            promptName: \"Instrument Frequency Crush\", promptDesc: [\"This setting controls the frequency crush of your instrument, just like the freq crush slider.\", \"At a value of $LO, no frequency crush will be applied. This increases and the frequency crush effect gets more noticeable up to the max value, $HI.\", \"[OVERWRITING] [$LO - $HI]\"] },\n        { name: \"echo\", pianoName: \"Echo\", maxRawVol: Config.echoSustainRange-1, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.echo,\n            promptName: \"Instrument Echo Sustain\", promptDesc: [\"This setting controls the echo sustain (echo loudness) of your instrument, just like the echo slider.\", \"At $LO, your instrument will have no echo sustain and echo will not be audible. Echo sustain increases and the echo effect gets more noticeable up to the max value, $HI.\", \"[OVERWRITING] [$LO - $HI]\"] },\n        { name: \"echo delay\", pianoName: \"Echo Delay\", maxRawVol: Config.echoDelayRange, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\n            promptName: \"Instrument Echo Delay\", promptDesc: [\"This setting controls the echo delay of your instrument, just like the echo delay slider.\", \"At $LO, your instrument will have very little echo delay, and this increases up to 2 beats of delay at $HI.\", \"[OVERWRITING] [$LO - $HI] [~beats ÷12]\" ]\n        }, // Disabled via associatedEffect and manually in list build in SongEditor, enable and set back to echo after fixing bugginess!\n        { name: \"chorus\", pianoName: \"Chorus\", maxRawVol: Config.chorusRange-1, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.chorus,\n            promptName: \"Instrument Chorus\", promptDesc: [\"This setting controls the chorus strength of your instrument, just like the chorus slider.\", \"At $LO, the chorus effect will be disabled. The strength of the chorus effect increases up to the max value, $HI.\", \"[OVERWRITING] [$LO - $HI]\"] },\n        { name: \"eq filt cut\", pianoName: \"EQFlt Cut\", maxRawVol: Config.filterSimpleCutRange - 1, newNoteVol: Config.filterSimpleCutRange - 1, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\n            promptName: \"EQ Filter Cutoff Frequency\", promptDesc: [\"This setting controls the filter cut position of your instrument, just like the filter cut slider.\", \"This setting is roughly analagous to the horizontal position of a single low-pass dot on the advanced filter editor. At lower values, a wider range of frequencies is cut off.\", \"[OVERWRITING] [$LO - $HI]\"] },\n        { name: \"eq filt peak\", pianoName: \"EQFlt Peak\", maxRawVol: Config.filterSimplePeakRange - 1, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\n            promptName: \"EQ Filter Peak Gain\", promptDesc: [\"This setting controls the filter peak position of your instrument, just like the filter peak slider.\", \"This setting is roughly analagous to the vertical position of a single low-pass dot on the advanced filter editor. At lower values, the cutoff frequency will not be emphasized, and at higher values you will hear emphasis on the cutoff frequency.\", \"[OVERWRITING] [$LO - $HI]\"] },\n        { name: \"note filt cut\", pianoName: \"N.Flt Cut\", maxRawVol: Config.filterSimpleCutRange - 1, newNoteVol: Config.filterSimpleCutRange - 1, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.noteFilter,\n            promptName: \"Note Filter Cutoff Frequency\", promptDesc: [\"This setting controls the filter cut position of your instrument, just like the filter cut slider.\", \"This setting is roughly analagous to the horizontal position of a single low-pass dot on the advanced filter editor. At lower values, a wider range of frequencies is cut off.\", \"[OVERWRITING] [$LO - $HI]\"] },\n        { name: \"note filt peak\", pianoName: \"N.Flt Peak\", maxRawVol: Config.filterSimplePeakRange - 1, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.noteFilter,\n            promptName: \"Note Filter Peak Gain\", promptDesc: [\"This setting controls the filter peak position of your instrument, just like the filter peak slider.\", \"This setting is roughly analagous to the vertical position of a single low-pass dot on the advanced filter editor. At lower values, the cutoff frequency will not be emphasized, and at higher values you will hear emphasis on the cutoff frequency.\", \"[OVERWRITING] [$LO - $HI]\"] },\n        { name: \"pitch shift\", pianoName: \"Pitch Shift\", maxRawVol: Config.pitchShiftRange - 1, newNoteVol: Config.pitchShiftCenter, forSong: false, convertRealFactor: -Config.pitchShiftCenter, associatedEffect: EffectType.pitchShift,\n            promptName: \"Pitch Shift\", promptDesc: [\"This setting controls the pitch offset of your instrument, just like the pitch shift slider.\", \"At $MID your instrument will have no pitch shift. This increases as you decrease toward $LO pitches (half-steps) at the low end, or increases towards +$HI pitches at the high end.\", \"[OVERWRITING] [$LO - $HI] [pitch]\"] },\n        { name: \"sustain\", pianoName: \"Sustain\", maxRawVol: Config.stringSustainRange - 1, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\n            promptName: \"Picked String Sustain\", promptDesc: [\"This setting controls the sustain of your picked string instrument, just like the sustain slider.\", \"At $LO, your instrument will have minimum sustain and sound 'plucky'. This increases to a more held sound as your modulator approaches the maximum, $HI.\", \"[OVERWRITING] [$LO - $HI]\"] },\n        { name: \"mix volume\", pianoName: \"Mix Vol.\", maxRawVol: Config.volumeRange, newNoteVol: Math.ceil(Config.volumeRange / 2), forSong: false, convertRealFactor: Math.ceil(-Config.volumeRange / 2.0), associatedEffect: EffectType.length,\n            promptName: \"Mix Volume\", promptDesc: [\"This setting affects the volume of your instrument as if its volume slider had been moved.\", \"At $MID, an instrument's volume will be unchanged from default. This means you can still use the volume sliders to mix the base volume of instruments, since this setting and the default value work multiplicatively. The volume gradually increases up to $HI, or decreases down to mute at $LO.\", \"Unlike the 'note volume' setting, mix volume is very straightforward and simply affects the resultant instrument volume after all effects are applied.\", \"[MULTIPLICATIVE] [$LO - $HI]\"] },\n        { name: \"envelope speed\", pianoName: \"EnvelopeSpd\", maxRawVol: 50, newNoteVol: 12, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\n            promptName: \"Envelope Speed\", promptDesc: [\"This setting controls how fast all of the envelopes for the instrument play.\", \"At $LO, your instrument's envelopes will be frozen, and at values near there they will change very slowly. At 12, the envelopes will work as usual, performing at normal speed. This increases up to $HI, where the envelopes will change very quickly. The speeds are given below:\",\n                \"[0-4]: x0, x1/16, x⅛, x⅕, x¼,\", \"[5-9]: x⅓, x⅖, x½, x⅔, x¾,\", \"[10-14]: x⅘, x0.9, x1, x1.1, x1.2,\", \"[15-19]: x1.3, x1.4, x1.5, x1.6, x1.7,\", \"[20-24]: x1.8, x1.9, x2, x2.1, x2.2,\", \"[25-29]: x2.3, x2.4, x2.5, x2.6, x2.7,\", \"[30-34]: x2.8, x2.9, x3, x3.1, x3.2,\", \"[35-39]: x3.3, x3.4, x3.5, x3.6, x3.7,\" ,\"[40-44]: x3.8, x3.9, x4, x4.15, x4.3,\", \"[45-50]: x4.5, x4.8, x5, x5.5, x6, x8\", \"[OVERWRITING] [$LO - $HI]\"] },\n        { name: \"dynamism\", pianoName: \"Dynamism\", maxRawVol: Config.supersawDynamismMax, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\n            promptName: \"Supersaw Dynamism\", promptDesc: [\"This setting controls the supersaw dynamism of your instrument, just like the dynamism slider.\", \"At $LO, your instrument will have only a single pulse contributing. Increasing this will raise the contribution of other waves which is similar to a chorus effect. The effect gets more noticeable up to the max value, $HI.\", \"[OVERWRITING] [$LO - $HI]\"] },\n        { name: \"spread\", pianoName: \"Spread\", maxRawVol: Config.supersawSpreadMax, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\n            promptName: \"Supersaw Spread\", promptDesc: [\"This setting controls the supersaw spread of your instrument, just like the spread slider.\", \"At $LO, all the pulses in your supersaw will be at the same frequency. Increasing this value raises the frequency spread of the contributing waves, up to a dissonant spread at the max value, $HI.\", \"[OVERWRITING] [$LO - $HI]\"] },\n        { name: \"saw shape\", pianoName: \"Saw Shape\", maxRawVol: Config.supersawShapeMax, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\n            promptName: \"Supersaw Shape\", promptDesc: [\"This setting controls the supersaw shape of your instrument, just like the Saw↔Pulse slider.\", \"As the slider's name implies, this effect will give you a sawtooth wave at $LO, and a full pulse width wave at $HI. Values in between will be a blend of the two.\", \"[OVERWRITING] [$LO - $HI] [%]\"] },\n    ]);\n}\n\nfunction centerWave(wave: Array<number>): Float32Array {\n    let sum: number = 0.0;\n    for (let i: number = 0; i < wave.length; i++) sum += wave[i];\n    const average: number = sum / wave.length;\n    for (let i: number = 0; i < wave.length; i++) wave[i] -= average;\n    performIntegral(wave);\n    // The first sample should be zero, and we'll duplicate it at the end for easier interpolation.\n    wave.push(0);\n    return new Float32Array(wave);\n}\nfunction centerAndNormalizeWave(wave: Array<number>): Float32Array {\n    let magn: number = 0.0;\n\n    centerWave(wave);\n\n    // Going to length-1 because an extra 0 sample is added on the end as part of centerWave, which shouldn't impact magnitude calculation.\n    for (let i: number = 0; i < wave.length - 1; i++) {\n        magn += Math.abs(wave[i]);\n    }\n    const magnAvg: number = magn / (wave.length - 1);\n\n    for (let i: number = 0; i < wave.length - 1; i++) {\n        wave[i] = wave[i] / magnAvg;\n    }\n\n    return new Float32Array(wave);\n\n}\nexport function performIntegral(wave: { length: number, [index: number]: number }): Float32Array {\n    // Perform the integral on the wave. The synth function will perform the derivative to get the original wave back but with antialiasing.\n    let cumulative: number = 0.0;\n    let newWave: Float32Array = new Float32Array(wave.length);\n    for (let i: number = 0; i < wave.length; i++) {\n        newWave[i] = cumulative;\n        cumulative += wave[i];\n    }\n\n    return newWave;\n}\nexport function performIntegralOld(wave: { length: number, [index: number]: number }): void {\n\t// Old ver used in harmonics/picked string instruments, manipulates wave in place.\n\tlet cumulative: number = 0.0;\n\tfor (let i: number = 0; i < wave.length; i++) {\n\t\tconst temp = wave[i];\n\t\twave[i] = cumulative;\n\t\tcumulative += temp;\n\t}\n}\n\nexport function getPulseWidthRatio(pulseWidth: number): number {\n    // BeepBox formula for reference\n    //return Math.pow(0.5, (Config.pulseWidthRange - 1 - pulseWidth) * Config.pulseWidthStepPower) * 0.5;\n\n    return pulseWidth / (Config.pulseWidthRange * 2);\n}\n\n\n// The function arguments will be defined in FFT.ts, but I want\n// SynthConfig.ts to be at the top of the compiled JS so I won't directly\n// depend on FFT here. synth.ts will take care of importing FFT.ts.\n//function inverseRealFourierTransform(array: {length: number, [index: number]: number}, fullArrayLength: number): void;\n//function scaleElementsByFactor(array: {length: number, [index: number]: number}, factor: number): void;\nexport function getDrumWave(index: number, inverseRealFourierTransform: Function | null, scaleElementsByFactor: Function | null): Float32Array {\n    let wave: Float32Array | null = Config.chipNoises[index].samples;\n    if (wave == null) {\n        wave = new Float32Array(Config.chipNoiseLength + 1);\n        Config.chipNoises[index].samples = wave;\n\n        if (index == 0) {\n            // The \"retro\" drum uses a \"Linear Feedback Shift Register\" similar to the NES noise channel.\n            let drumBuffer: number = 1;\n            for (let i: number = 0; i < Config.chipNoiseLength; i++) {\n                wave[i] = (drumBuffer & 1) * 2.0 - 1.0;\n                let newBuffer: number = drumBuffer >> 1;\n                if (((drumBuffer + newBuffer) & 1) == 1) {\n                    newBuffer += 1 << 14;\n                }\n                drumBuffer = newBuffer;\n            }\n        } else if (index == 1) {\n            // White noise is just random values for each sample.\n            for (let i: number = 0; i < Config.chipNoiseLength; i++) {\n                wave[i] = Math.random() * 2.0 - 1.0;\n            }\n        } else if (index == 2) {\n            // The \"clang\" noise wave is based on a similar noise wave in the modded beepbox made by DAzombieRE.\n            let drumBuffer: number = 1;\n            for (let i: number = 0; i < Config.chipNoiseLength; i++) {\n                wave[i] = (drumBuffer & 1) * 2.0 - 1.0;\n                let newBuffer: number = drumBuffer >> 1;\n                if (((drumBuffer + newBuffer) & 1) == 1) {\n                    newBuffer += 2 << 14;\n                }\n                drumBuffer = newBuffer;\n            }\n        } else if (index == 3) {\n            // The \"buzz\" noise wave is based on a similar noise wave in the modded beepbox made by DAzombieRE.\n            let drumBuffer: number = 1;\n            for (let i: number = 0; i < Config.chipNoiseLength; i++) {\n                wave[i] = (drumBuffer & 1) * 2.0 - 1.0;\n                let newBuffer: number = drumBuffer >> 1;\n                if (((drumBuffer + newBuffer) & 1) == 1) {\n                    newBuffer += 10 << 2;\n                }\n                drumBuffer = newBuffer;\n            }\n        } else if (index == 4) {\n            // \"hollow\" drums, designed in frequency space and then converted via FFT:\n            drawNoiseSpectrum(wave, Config.chipNoiseLength, 10, 11, 1, 1, 0);\n            drawNoiseSpectrum(wave, Config.chipNoiseLength, 11, 14, .6578, .6578, 0);\n            inverseRealFourierTransform!(wave, Config.chipNoiseLength);\n            scaleElementsByFactor!(wave, 1.0 / Math.sqrt(Config.chipNoiseLength));\n        } else if (index == 5) {\n            // \"Shine\" drums from modbox!\n            var drumBuffer = 1;\n            for (var i = 0; i < Config.chipNoiseLength; i++) {\n                wave[i] = (drumBuffer & 1) * 2.0 - 1.0;\n                var newBuffer = drumBuffer >> 1;\n                if (((drumBuffer + newBuffer) & 1) == 1) {\n                    newBuffer += 10 << 2;\n                }\n                drumBuffer = newBuffer;\n            }\n        } else if (index == 6) {\n            // \"Deep\" drums from modbox!\n            drawNoiseSpectrum(wave, Config.chipNoiseLength, 1, 10, 1, 1, 0);\n            drawNoiseSpectrum(wave, Config.chipNoiseLength, 20, 14, -2, -2, 0);\n            inverseRealFourierTransform!(wave, Config.chipNoiseLength);\n            scaleElementsByFactor!(wave, 1.0 / Math.sqrt(Config.chipNoiseLength));\n        } else if (index == 7) {\n            // \"Cutter\" drums from modbox!\n            var drumBuffer = 1;\n            for (var i = 0; i < Config.chipNoiseLength; i++) {\n                wave[i] = (drumBuffer & 1) * 4.0 * (Math.random() * 14 + 1) - 8.0;\n                var newBuffer = drumBuffer >> 1;\n                if (((drumBuffer + newBuffer) & 1) == 1) {\n                    newBuffer += 15 << 2;\n                }\n                drumBuffer = newBuffer;\n            }\n        } else if (index == 8) {\n            // \"Metallic\" drums from modbox!\n            var drumBuffer = 1;\n            for (var i = 0; i < 32768; i++) {\n                wave[i] = (drumBuffer & 1) / 2.0 - 0.5;\n                var newBuffer = drumBuffer >> 1;\n                if (((drumBuffer + newBuffer) & 1) == 1) {\n                    newBuffer -= 10 << 2;\n                }\n                drumBuffer = newBuffer;\n            }\n        } else {\n            throw new Error(\"Unrecognized drum index: \" + index);\n        }\n\n        wave[Config.chipNoiseLength] = wave[0];\n    }\n\n    return wave;\n}\n\nexport function drawNoiseSpectrum(wave: Float32Array, waveLength: number, lowOctave: number, highOctave: number, lowPower: number, highPower: number, overallSlope: number): number {\n    const referenceOctave: number = 11;\n    const referenceIndex: number = 1 << referenceOctave;\n    const lowIndex: number = Math.pow(2, lowOctave) | 0;\n    const highIndex: number = Math.min(waveLength >> 1, Math.pow(2, highOctave) | 0);\n    const retroWave: Float32Array = getDrumWave(0, null, null);\n    let combinedAmplitude: number = 0.0;\n    for (let i: number = lowIndex; i < highIndex; i++) {\n\n        let lerped: number = lowPower + (highPower - lowPower) * (Math.log2(i) - lowOctave) / (highOctave - lowOctave);\n        let amplitude: number = Math.pow(2, (lerped - 1) * 7 + 1) * lerped;\n\n        amplitude *= Math.pow(i / referenceIndex, overallSlope);\n\n        combinedAmplitude += amplitude;\n\n        // Add two different sources of psuedo-randomness to the noise\n        // (individually they aren't random enough) but in a deterministic\n        // way so that live spectrum editing doesn't result in audible pops.\n        // Multiply all the sine wave amplitudes by 1 or -1 based on the\n        // LFSR retro wave (effectively random), and also rotate the phase\n        // of each sine wave based on the golden angle to disrupt the symmetry.\n        amplitude *= retroWave[i];\n        const radians: number = 0.61803398875 * i * i * Math.PI * 2.0;\n\n        wave[i] = Math.cos(radians) * amplitude;\n        wave[waveLength - i] = Math.sin(radians) * amplitude;\n    }\n\n    return combinedAmplitude;\n}\n\nfunction generateSineWave(): Float32Array {\n    const wave: Float32Array = new Float32Array(Config.sineWaveLength + 1);\n    for (let i: number = 0; i < Config.sineWaveLength + 1; i++) {\n        wave[i] = Math.sin(i * Math.PI * 2.0 / Config.sineWaveLength);\n    }\n    return wave;\n}\n\nfunction generateTriWave(): Float32Array {\n    const wave: Float32Array = new Float32Array(Config.sineWaveLength + 1);\n    for (let i: number = 0; i < Config.sineWaveLength + 1; i++) {\n        wave[i] = Math.asin(Math.sin(i * Math.PI * 2.0 / Config.sineWaveLength)) / (Math.PI / 2);\n    }\n    return wave;\n}\n\nfunction generateTrapezoidWave(drive: number = 2): Float32Array {\n    const wave: Float32Array = new Float32Array(Config.sineWaveLength + 1);\n    for (let i: number = 0; i < Config.sineWaveLength + 1; i++) {\n        wave[i] = Math.max(-1.0, Math.min(1.0, Math.asin(Math.sin(i * Math.PI * 2.0 / Config.sineWaveLength)) * drive));\n    }\n    return wave;\n}\n\nfunction generateSquareWave(phaseWidth: number = 0): Float32Array {\n    const wave: Float32Array = new Float32Array(Config.sineWaveLength + 1);\n    const centerPoint: number = Config.sineWaveLength / 4;\n    for (let i: number = 0; i < Config.sineWaveLength + 1; i++) {\n        wave[i] = +((Math.abs(i - centerPoint) < phaseWidth * Config.sineWaveLength / 2)\n            || ((Math.abs(i - Config.sineWaveLength - centerPoint) < phaseWidth * Config.sineWaveLength / 2))) * 2 - 1;\n    }\n    return wave;\n}\n\nfunction generateSawWave(inverse: boolean = false): Float32Array {\n    const wave: Float32Array = new Float32Array(Config.sineWaveLength + 1);\n    for (let i: number = 0; i < Config.sineWaveLength + 1; i++) {\n        wave[i] = ((i + (Config.sineWaveLength / 4.0)) * 2.0 / Config.sineWaveLength) % 2 - 1;\n        wave[i] = inverse ? -wave[i] : wave[i];\n    }\n    return wave;\n}\n\nexport function getArpeggioPitchIndex(pitchCount: number, useFastTwoNoteArp: boolean, arpeggio: number): number {\n    let arpeggioPattern: ReadonlyArray<number> = Config.arpeggioPatterns[pitchCount - 1];\n    if (arpeggioPattern != null) {\n        if (pitchCount == 2 && useFastTwoNoteArp == false) {\n            arpeggioPattern = [0, 0, 1, 1];\n        }\n        return arpeggioPattern[arpeggio % arpeggioPattern.length];\n    } else {\n        return arpeggio % pitchCount;\n    }\n}\n\n// Pardon the messy type casting. This allows accessing array members by numerical index or string name.\nexport function toNameMap<T extends BeepBoxOption>(array: Array<Pick<T, Exclude<keyof T, \"index\">>>): DictionaryArray<T> {\n    const dictionary: Dictionary<T> = {};\n    for (let i: number = 0; i < array.length; i++) {\n        const value: any = array[i];\n        value.index = i;\n        dictionary[value.name] = <T>value;\n    }\n    const result: DictionaryArray<T> = <DictionaryArray<T>><any>array;\n    result.dictionary = dictionary;\n    return result;\n}\n\nexport function effectsIncludeTransition(effects: number): boolean {\n    return (effects & (1 << EffectType.transition)) != 0;\n}\nexport function effectsIncludeChord(effects: number): boolean {\n    return (effects & (1 << EffectType.chord)) != 0;\n}\nexport function effectsIncludePitchShift(effects: number): boolean {\n    return (effects & (1 << EffectType.pitchShift)) != 0;\n}\nexport function effectsIncludeDetune(effects: number): boolean {\n    return (effects & (1 << EffectType.detune)) != 0;\n}\nexport function effectsIncludeVibrato(effects: number): boolean {\n    return (effects & (1 << EffectType.vibrato)) != 0;\n}\nexport function effectsIncludeNoteFilter(effects: number): boolean {\n    return (effects & (1 << EffectType.noteFilter)) != 0;\n}\nexport function effectsIncludeDistortion(effects: number): boolean {\n    return (effects & (1 << EffectType.distortion)) != 0;\n}\nexport function effectsIncludeBitcrusher(effects: number): boolean {\n    return (effects & (1 << EffectType.bitcrusher)) != 0;\n}\nexport function effectsIncludePanning(effects: number): boolean {\n    return (effects & (1 << EffectType.panning)) != 0;\n}\nexport function effectsIncludeChorus(effects: number): boolean {\n    return (effects & (1 << EffectType.chorus)) != 0;\n}\nexport function effectsIncludeEcho(effects: number): boolean {\n    return (effects & (1 << EffectType.echo)) != 0;\n}\nexport function effectsIncludeReverb(effects: number): boolean {\n    return (effects & (1 << EffectType.reverb)) != 0;\n}\nexport function rawChipToIntegrated(raw: DictionaryArray<ChipWave>): DictionaryArray<ChipWave> {\n    const newArray: Array<ChipWave> = new Array<ChipWave>(raw.length);\n    const dictionary: Dictionary<ChipWave> = {};\n    for (let i: number = 0; i < newArray.length; i++) {\n        newArray[i] = Object.assign([], raw[i]);\n        const value: any = newArray[i];\n        value.index = i;\n        dictionary[value.name] = <ChipWave>value;\n    }\n    for (let key in dictionary) {\n        dictionary[key].samples = performIntegral(dictionary[key].samples);\n    }\n    const result: DictionaryArray<ChipWave> = <DictionaryArray<ChipWave>><any>newArray;\n    result.dictionary = dictionary;\n    return result;\n}","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nimport { DictionaryArray, BeepBoxOption, InstrumentType, toNameMap } from \"../synth/SynthConfig\";\n\nexport interface PresetCategory extends BeepBoxOption {\n    readonly presets: DictionaryArray<Preset>;\n}\n\nexport interface Preset extends BeepBoxOption {\n    readonly isNoise?: boolean;\n    readonly isMod?: boolean;\n    readonly generalMidi?: boolean;\n    readonly midiProgram?: number;\n    readonly midiSubharmonicOctaves?: number;\n    readonly customType?: InstrumentType;\n    readonly settings?: any;\n}\n\nexport const isMobile: boolean = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini|android|ipad|playbook|silk/i.test(navigator.userAgent);\n\nexport function prettyNumber(value: number): string {\n    return value.toFixed(2).replace(/\\.?0*$/, \"\");\n}\n\nexport class EditorConfig {\n    public static readonly version: string = \"2.6\"; // Not using patch versions in display right now, maybe someday.\n    public static readonly versionDisplayName: string = \"JummBox \" + EditorConfig.version;\n\n    public static readonly releaseNotesURL: string = \"https://jummbus.bitbucket.io/patch_notes/\" + EditorConfig.version + \".html\";\n\n    public static readonly isOnMac: boolean = /^Mac/i.test(navigator.platform) || /Mac OS X/i.test(navigator.userAgent) || /^(iPhone|iPad|iPod)/i.test(navigator.platform) || /(iPhone|iPad|iPod)/i.test(navigator.userAgent);\n    public static readonly ctrlSymbol: string = EditorConfig.isOnMac ? \"⌘\" : \"Ctrl+\";\n    public static readonly ctrlName: string = EditorConfig.isOnMac ? \"command\" : \"control\";\n\n    public static readonly presetCategories: DictionaryArray<PresetCategory> = toNameMap([\n        {\n        // The order of this array needs to line up with the order of the InstrumentType declarations in SynthConfig.ts. (changes.ts' random instrument generation relies on this, for one.)\n            name: \"Custom Instruments\", presets: <DictionaryArray<Preset>>toNameMap([\n                { name: \"chip wave\", customType: InstrumentType.chip },\n                { name: \"FM (expert)\", customType: InstrumentType.fm },\n                { name: \"basic noise\", customType: InstrumentType.noise },\n                { name: \"spectrum\", customType: InstrumentType.spectrum },\n                { name: \"drumset\", customType: InstrumentType.drumset },\n                { name: \"harmonics\", customType: InstrumentType.harmonics },\n                { name: \"pulse width\", customType: InstrumentType.pwm },\n                { name: \"picked string\", customType: InstrumentType.pickedString },\n                { name: \"supersaw\", customType: InstrumentType.supersaw },\n                { name: \"custom chip\", customType: InstrumentType.customChipWave },\n            ])\n        },\n        {\n            name: \"Retro Presets\", presets: <DictionaryArray<Preset>>toNameMap([\n                { name: \"square wave\", midiProgram: 80, settings: { \"type\": \"chip\", \"eqFilter\": [], \"effects\": [\"aliasing\"], \"transition\": \"interrupt\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -1, \"chord\": \"arpeggio\", \"wave\": \"square\", \"unison\": \"none\", \"envelopes\": [] } },\n                { name: \"triangle wave\", midiProgram: 71, settings: { \"type\": \"chip\", \"eqFilter\": [], \"effects\": [\"aliasing\"], \"transition\": \"interrupt\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -1, \"chord\": \"arpeggio\", \"wave\": \"triangle\", \"unison\": \"none\", \"envelopes\": [] } },\n                { name: \"square lead\", midiProgram: 80, generalMidi: true, settings: { \"type\": \"chip\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 0.3536 }], \"effects\": [\"aliasing\"], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"simultaneous\", \"wave\": \"square\", \"unison\": \"hum\", \"envelopes\": [] } },\n                { name: \"sawtooth lead 1\", midiProgram: 81, generalMidi: true, settings: { \"type\": \"chip\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 0.5 }], \"effects\": [\"aliasing\"], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"simultaneous\", \"wave\": \"sawtooth\", \"unison\": \"shimmer\", \"envelopes\": [] } },\n                { name: \"sawtooth lead 2\", midiProgram: 81, settings: { \"type\": \"chip\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 1 }], \"effects\": [\"vibrato\", \"aliasing\"], \"vibrato\": \"light\", \"transition\": \"normal\", \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": 72, \"chord\": \"simultaneous\", \"wave\": \"sawtooth\", \"unison\": \"hum\", \"envelopes\": [] } },\n                { name: \"chip noise\", midiProgram: 116, isNoise: true, settings: { \"type\": \"noise\", \"transition\": \"hard\", \"effects\": [\"aliasing\"], \"chord\": \"arpeggio\", \"filterCutoffHz\": 4000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"wave\": \"retro\" } },\n                { name: \"FM twang\", midiProgram: 32, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"simultaneous\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15 }, { \"frequency\": \"1×\", \"amplitude\": 15 }, { \"frequency\": \"1×\", \"amplitude\": 0 }, { \"frequency\": \"1×\", \"amplitude\": 0 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"twang 2\", \"index\": 1 }] } },\n                { name: \"FM bass\", midiProgram: 36, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"custom interval\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 11 }, { \"frequency\": \"1×\", \"amplitude\": 7 }, { \"frequency\": \"1×\", \"amplitude\": 9 }, { \"frequency\": \"20×\", \"amplitude\": 3 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"twang 2\", \"index\": 1 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang 3\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang 2\", \"index\": 3 }] } },\n                { name: \"FM flute\", midiProgram: 73, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [], \"transition\": \"normal\", \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -3, \"chord\": \"simultaneous\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15 }, { \"frequency\": \"1×\", \"amplitude\": 6 }, { \"frequency\": \"1×\", \"amplitude\": 0 }, { \"frequency\": \"1×\", \"amplitude\": 0 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"twang 2\", \"index\": 1 }] } },\n                { name: \"FM organ\", midiProgram: 16, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"vibrato\"], \"vibrato\": \"delayed\", \"transition\": \"normal\", \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -3, \"chord\": \"custom interval\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 0, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14 }, { \"frequency\": \"2×\", \"amplitude\": 14 }, { \"frequency\": \"1×\", \"amplitude\": 11 }, { \"frequency\": \"2×\", \"amplitude\": 11 }], \"envelopes\": [] } },\n                { name: \"NES Pulse\", midiProgram: 80, settings: { \"type\": \"custom chip\", \"effects\": [\"aliasing\"], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"arpeggio\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 0.5 }], \"unison\": \"none\", \"vibrato\": \"none\", \"envelopes\": [], \"customChipWave\": [-24, -24, -24, -24, -23, -23, -23, -23, -22, -22, -22, -22, -21, -21, -21, -21, -20, -20, -20, -20, -19, -19, -19, -19, -18, -18, -18, -18, -17, -17, -17, -17, 24, 24, 24, 24, 23, 23, 23, 23, 22, 22, 22, 22, 21, 21, 21, 21, 20, 20, 20, 20, 19, 19, 19, 19, 18, 18, 18, 18, 17, 17, 17, 17] } },\n                { name: \"Gameboy Pulse\", midiProgram: 80, settings: { \"type\": \"custom chip\", \"effects\": [\"aliasing\"], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"arpeggio\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 0.5 }], \"unison\": \"none\", \"envelopes\": [], \"customChipWave\": [-24, -20, -17, -15, -13, -13, -11, -11, -11, -9, -9, -9, -9, -7, -7, -7, -7, -7, -5, -5, -5, -5, -5, -5, -3, -3, -3, -3, -3, -3, -3, -3, 24, 20, 17, 15, 13, 13, 11, 11, 11, 9, 9, 9, 9, 7, 7, 7, 7, 7, 5, 5, 5, 5, 5, 5, 3, 3, 3, 3, 3, 3, 3, 3] } },\n                { name: \"VRC6 Sawtooth\", midiProgram: 81, settings: { \"type\": \"custom chip\", \"effects\": [\"aliasing\"], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"arpeggio\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 0.5 }], \"unison\": \"none\", \"envelopes\": [], \"customChipWave\": [-24, -20, -16, -13, -10, -8, -6, -5, -4, -4, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 8, 8, 8, 8, 8, 8, 8, 8, 12, 12, 12, 12, 12, 12, 12, 12, 16, 16, 16, 16, 16, 16, 16, 16, 20, 20, 20, 20, 20, 20, 20, 20, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24] } },\n                { name: \"Atari Square\", midiProgram: 80, settings: { \"type\": \"custom chip\", \"effects\": [\"aliasing\"], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"arpeggio\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 0.5 }], \"unison\": \"none\", \"envelopes\": [], \"customChipWave\": [-24, -24, -24, -23, -23, -23, -22, -22, -22, -21, -21, -21, -20, -20, -20, -19, -19, -19, -18, -18, -18, -17, -17, -17, -16, -16, -16, -15, -15, -15, -14, -14, -14, -13, -13, -13, 24, 24, 24, 23, 23, 23, 22, 22, 22, 21, 21, 21, 20, 20, 20, 19, 19, 19, 18, 18, 18, 17, 17, 17, 16, 16, 15, 15] } },\n                { name: \"Atari Bass\", midiProgram: 36, settings: { \"type\": \"custom chip\", \"effects\": [\"aliasing\"], \"transition\": \"interrupt\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"arpeggio\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 0.5 }], \"unison\": \"none\", \"envelopes\": [], \"customChipWave\": [-24, -24, -24, -24, -24, -24, -24, -24, -24, 24, 24, 24, 24, 24, 24, -24, -24, -24, 24, 24, 24, -24, -24, -24, 24, 24, 24, -24, -24, -24, 24, 24, -24, -24, -24, -24, -24, -24, -24, -24, -24, 24, 24, 24, 24, 24, 24, -24, -24, 24, 24, 24, 24, 24, -24, -24, -24, -24, 24, 24, -24, -24, 24, 24] } },\n                { name: \"Sunsoft Bass\", midiProgram: 36, settings: { \"type\": \"custom chip\", \"effects\": [\"aliasing\"], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"arpeggio\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 0.5 }], \"unison\": \"none\", \"envelopes\": [], \"customChipWave\": [24, 24, 15, 15, 9, 9, -4, -4, 0, 0, -13, -13, -19, -19, -24, -24, -24, -24, -10, -10, 0, 0, -7, -7, -7, -7, 0, 0, 6, 6, -4, -4, 3, 3, -4, -4, 3, 3, 3, 3, 9, 9, 15, 15, 15, 15, 6, 6, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, 3, 3, 12, 12, 24, 24] } },\n                { name: \"supersaw lead\",    midiProgram:  81, settings: {\"type\":\"supersaw\",\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":6727.17,\"linearGain\":2}],\"effects\":[\"reverb\"],\"reverb\":67,\"fadeInSeconds\":0,\"fadeOutTicks\":-6,\"pulseWidth\":50,\"dynamism\":100,\"spread\":58,\"shape\":0,\"envelopes\":[]}},\n\t\t\n            ])\n        },\n        {\n            name: \"Keyboard Presets\", presets: <DictionaryArray<Preset>>toNameMap([\n                { name: \"grand piano 1\", midiProgram: 0, generalMidi: true, settings: { \"type\": \"Picked String\", \"eqFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 148.65, \"linearGain\": 0.7071 }, { \"type\": \"peak\", \"cutoffHz\": 2000, \"linearGain\": 2.8284 }], \"effects\": [\"note filter\", \"reverb\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 0.125 }], \"reverb\": 67, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"harmonics\": [100, 100, 86, 86, 86, 71, 71, 71, 0, 86, 71, 71, 71, 57, 57, 71, 57, 14, 57, 57, 57, 57, 57, 57, 57, 57, 29, 57], \"unison\": \"piano\", \"stringSustain\": 79, \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"note size\" }] } },\n                { name: \"bright piano\", midiProgram: 1, generalMidi: true, settings: { \"type\": \"Picked String\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 1681.79, \"linearGain\": 0.7071 }, { \"type\": \"high-pass\", \"cutoffHz\": 148.65, \"linearGain\": 0.5 }, { \"type\": \"peak\", \"cutoffHz\": 3363.59, \"linearGain\": 1.4142 }], \"effects\": [\"reverb\"], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 24, \"chord\": \"simultaneous\", \"harmonics\": [100, 100, 86, 86, 71, 71, 0, 71, 71, 71, 71, 71, 71, 14, 57, 57, 57, 57, 57, 57, 29, 57, 57, 57, 57, 57, 57, 57], \"unison\": \"piano\", \"stringSustain\": 86, \"envelopes\": [] } },\n                { name: \"electric grand\", midiProgram: 2, generalMidi: true, settings: { \"type\": \"chip\", \"eqFilter\": [], \"effects\": [\"note filter\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2378.41, \"linearGain\": 0.5 }], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"wave\": \"1/8 pulse\", \"unison\": \"shimmer\", \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 3\" }] } },\n                { name: \"honky-tonk piano\", midiProgram: 3, generalMidi: true, settings: { \"type\": \"Picked String\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 5656.85, \"linearGain\": 0.3536 }], \"effects\": [\"reverb\"], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"harmonics\": [100, 100, 86, 71, 86, 71, 43, 71, 43, 43, 57, 57, 57, 29, 57, 57, 57, 57, 57, 57, 43, 57, 57, 57, 43, 43, 43, 43], \"unison\": \"honky tonk\", \"stringSustain\": 71, \"envelopes\": [] } },\n                { name: \"electric piano 1\", midiProgram: 4, generalMidi: true, settings: { \"type\": \"harmonics\", \"eqFilter\": [], \"effects\": [\"note filter\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 3363.59, \"linearGain\": 0.5 }], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"simultaneous\", \"harmonics\": [86, 100, 100, 71, 71, 57, 57, 43, 43, 43, 29, 29, 29, 14, 14, 14, 0, 0, 0, 0, 0, 57, 0, 0, 0, 0, 0, 0], \"unison\": \"none\", \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 2\" }] } },\n                { name: \"electric piano 2\", midiProgram: 5, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"note filter\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 13454.34, \"linearGain\": 0.25 }], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 0, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 12 }, { \"frequency\": \"1×\", \"amplitude\": 6 }, { \"frequency\": \"1×\", \"amplitude\": 9 }, { \"frequency\": \"16×\", \"amplitude\": 6 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 3\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang 3\", \"index\": 3 }] } },\n                { name: \"harpsichord\", midiProgram: 6, generalMidi: true, settings: { \"type\": \"Picked String\", \"eqFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 250, \"linearGain\": 0.3536 }, { \"type\": \"peak\", \"cutoffHz\": 11313.71, \"linearGain\": 2.8284 }], \"effects\": [\"reverb\"], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 24, \"chord\": \"simultaneous\", \"harmonics\": [100, 100, 100, 86, 57, 86, 86, 86, 86, 57, 57, 71, 71, 86, 86, 71, 71, 86, 86, 71, 71, 71, 71, 71, 71, 71, 71, 71], \"unison\": \"none\", \"stringSustain\": 79, \"envelopes\": [] } },\n                { name: \"clavinet\", midiProgram: 7, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"note filter\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 19027.31, \"linearGain\": 0.3536 }], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"simultaneous\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"3⟲\", \"feedbackAmplitude\": 6, \"operators\": [{ \"frequency\": \"3×\", \"amplitude\": 15 }, { \"frequency\": \"~1×\", \"amplitude\": 6 }, { \"frequency\": \"8×\", \"amplitude\": 4 }, { \"frequency\": \"1×\", \"amplitude\": 0 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 2\" }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"twang 2\" }] } },\n                { name: \"dulcimer\", midiProgram: 15, generalMidi: true, settings: { \"type\": \"Picked String\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 0.3536 }], \"effects\": [\"reverb\"], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"strum\", \"harmonics\": [100, 100, 100, 86, 100, 86, 57, 100, 100, 86, 100, 86, 100, 86, 100, 71, 57, 71, 71, 100, 86, 71, 86, 86, 100, 86, 86, 86], \"unison\": \"piano\", \"stringSustain\": 79, \"envelopes\": [] } },\n                { name: \"grand piano 2\", midiProgram: 0, generalMidi: true, settings: { \"type\": \"harmonics\", \"eqFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 148.65, \"linearGain\": 0.7071 }, { \"type\": \"peak\", \"cutoffHz\": 2000, \"linearGain\": 2.8284 }], \"effects\": [\"note filter\", \"reverb\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 0.125 }], \"reverb\": 67, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"harmonics\": [100, 86, 86, 86, 86, 71, 71, 57, 0, 57, 29, 43, 57, 57, 57, 43, 43, 0, 29, 43, 43, 43, 43, 43, 43, 29, 0, 29], \"unison\": \"piano\", \"stringSustain\": 79, \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"note size\" }] } },\n                { name: \"grand piano 3\",      midiProgram:   0, generalMidi: true, settings: {\"type\":\"Picked String\",\"eqFilter\":[{\"type\":\"high-pass\",\"cutoffHz\":148.65,\"linearGain\":0.7071},{\"type\":\"peak\",\"cutoffHz\":1681.79,\"linearGain\":4},{\"type\":\"low-pass\",\"cutoffHz\":8000,\"linearGain\":0.1768},{\"type\":\"peak\",\"cutoffHz\":3363.59,\"linearGain\":4},{\"type\":\"peak\",\"cutoffHz\":2378.41,\"linearGain\":0.25}],\"effects\":[\"note filter\",\"reverb\"],\"noteFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":4756.83,\"linearGain\":0.3536},{\"type\":\"high-pass\",\"cutoffHz\":125,\"linearGain\":0.0884}],\"reverb\":67,\"fadeInSeconds\":0,\"fadeOutTicks\":48,\"harmonics\":[100,100,86,86,86,71,71,71,0,71,71,71,71,57,57,71,57,14,57,57,57,57,57,57,57,57,29,57],\"unison\":\"piano\",\"stringSustain\":86,\"stringSustainType\":\"acoustic\",\"envelopes\":[{\"target\":\"noteFilterFreq\",\"envelope\":\"note size\",\"index\":0},{\"target\":\"noteFilterFreq\",\"envelope\":\"twang 1\",\"index\":1},{\"target\":\"noteFilterFreq\",\"envelope\":\"twang 1\",\"index\":1}]}},\n\t\t\t\n            ])\n        },\n        {\n            name: \"Idiophone Presets\", presets: <DictionaryArray<Preset>>toNameMap([\n                { name: \"celesta\", midiProgram: 8, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 5657, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"8×\", \"amplitude\": 6, \"envelope\": \"custom\" }, { \"frequency\": \"20×\", \"amplitude\": 3, \"envelope\": \"twang 1\" }, { \"frequency\": \"3×\", \"amplitude\": 1, \"envelope\": \"twang 2\" }] } },\n                { name: \"glockenspiel\", midiProgram: 9, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 5657, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"decay 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"5×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"8×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"20×\", \"amplitude\": 2, \"envelope\": \"twang 1\" }] } },\n                { name: \"music box 1\", midiProgram: 10, generalMidi: true, settings: { \"type\": \"Picked String\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 0.5 }], \"effects\": [\"reverb\"], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"strum\", \"harmonics\": [100, 0, 0, 100, 0, 0, 0, 0, 0, 0, 100, 0, 0, 0, 0, 0, 0, 0, 0, 86, 0, 0, 0, 0, 0, 0, 71, 0], \"unison\": \"none\", \"stringSustain\": 64, \"envelopes\": [] } },\n                { name: \"music box 2\", midiProgram: 10, settings: { \"type\": \"Picked String\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2828.43, \"linearGain\": 0.7071 }], \"effects\": [\"reverb\"], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"strum\", \"harmonics\": [100, 57, 57, 0, 0, 0, 0, 0, 0, 57, 0, 0, 0, 0, 0, 0, 0, 0, 0, 43, 0, 0, 0, 0, 0, 0, 0, 0], \"unison\": \"none\", \"stringSustain\": 29, \"envelopes\": [] } },\n                { name: \"vibraphone\", midiProgram: 11, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1→2→3→4\", \"feedbackAmplitude\": 3, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"~1×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"9×\", \"amplitude\": 3, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 9, \"envelope\": \"custom\" }] } },\n                { name: \"marimba\", midiProgram: 12, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 29, \"filterEnvelope\": \"decay 1\", \"vibrato\": \"none\", \"algorithm\": \"1 2←(3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 6, \"envelope\": \"custom\" }, { \"frequency\": \"13×\", \"amplitude\": 6, \"envelope\": \"twang 1\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\n                { name: \"kalimba\", midiProgram: 108, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"decay 1\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"5×\", \"amplitude\": 3, \"envelope\": \"twang 2\" }, { \"frequency\": \"20×\", \"amplitude\": 3, \"envelope\": \"twang 1\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\n                { name: \"xylophone\", midiProgram: 13, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"6×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"11×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"20×\", \"amplitude\": 6, \"envelope\": \"twang 1\" }] } },\n                { name: \"tubular bell\", midiProgram: 14, generalMidi: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"Picked String\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 0.5 }, { \"type\": \"high-pass\", \"cutoffHz\": 105.11, \"linearGain\": 0.3536 }], \"effects\": [\"reverb\"], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 96, \"chord\": \"strum\", \"harmonics\": [43, 71, 0, 100, 0, 100, 0, 86, 0, 0, 86, 0, 14, 71, 14, 14, 57, 14, 14, 43, 14, 14, 43, 14, 14, 43, 14, 14], \"unison\": \"shimmer\", \"stringSustain\": 86, \"envelopes\": [] } },\n                { name: \"bell synth\", midiProgram: 14, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 29, \"filterEnvelope\": \"twang 3\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"~2×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"7×\", \"amplitude\": 6, \"envelope\": \"twang 3\" }, { \"frequency\": \"20×\", \"amplitude\": 1, \"envelope\": \"twang 1\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\n                { name: \"rain drop\", midiProgram: 96, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"6×\", \"amplitude\": 4, \"envelope\": \"custom\" }, { \"frequency\": \"20×\", \"amplitude\": 3, \"envelope\": \"twang 1\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"tremolo1\" }] } },\n                { name: \"crystal\", midiProgram: 98, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"delayed\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"6×\", \"amplitude\": 4, \"envelope\": \"custom\" }, { \"frequency\": \"13×\", \"amplitude\": 4, \"envelope\": \"custom\" }] } },\n                { name: \"tinkle bell\", midiProgram: 112, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1→2→3→4\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"~2×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"5×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"7×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"16×\", \"amplitude\": 7, \"envelope\": \"custom\" }] } },\n                { name: \"agogo\", midiProgram: 113, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"decay 1\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1→4\", \"feedbackAmplitude\": 15, \"feedbackEnvelope\": \"decay 1\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"5×\", \"amplitude\": 6, \"envelope\": \"custom\" }, { \"frequency\": \"8×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"13×\", \"amplitude\": 11, \"envelope\": \"custom\" }] } },\n            ])\n        },\n        {\n            name: \"Guitar Presets\", presets: <DictionaryArray<Preset>>toNameMap([\n                { name: \"nylon guitar\", midiProgram: 24, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 5657, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1←2←3←4\", \"feedbackType\": \"3⟲\", \"feedbackAmplitude\": 6, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"5×\", \"amplitude\": 2, \"envelope\": \"steady\" }, { \"frequency\": \"7×\", \"amplitude\": 4, \"envelope\": \"steady\" }] } },\n                { name: \"steel guitar\", midiProgram: 25, generalMidi: true, settings: { \"type\": \"Picked String\", \"eqFilter\": [], \"effects\": [\"reverb\"], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"strum\", \"harmonics\": [100, 100, 86, 71, 71, 71, 86, 86, 71, 57, 43, 43, 43, 57, 57, 57, 57, 57, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43], \"unison\": \"none\", \"stringSustain\": 71, \"envelopes\": [] } },\n                { name: \"jazz guitar\", midiProgram: 26, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 100, 86, 71, 57, 71, 71, 43, 57, 71, 57, 43, 29, 29, 29, 29, 29, 29, 29, 29, 14, 14, 14, 14, 14, 14, 14, 0] } },\n                { name: \"clean guitar\", midiProgram: 27, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [86, 100, 100, 100, 86, 57, 86, 100, 100, 100, 71, 57, 43, 71, 86, 71, 57, 57, 71, 71, 71, 71, 57, 57, 57, 57, 57, 43] } },\n                { name: \"muted guitar\", midiProgram: 28, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 7, \"feedbackEnvelope\": \"twang 2\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 4, \"envelope\": \"twang 3\" }, { \"frequency\": \"4×\", \"amplitude\": 4, \"envelope\": \"twang 2\" }, { \"frequency\": \"16×\", \"amplitude\": 4, \"envelope\": \"twang 1\" }] } },\n            ])\n        },\n        {\n            name: \"Picked Bass Presets\", presets: <DictionaryArray<Preset>>toNameMap([\n                { name: \"acoustic bass\", midiProgram: 32, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 86, 71, 71, 71, 71, 57, 57, 57, 57, 43, 43, 43, 43, 43, 29, 29, 29, 29, 29, 29, 14, 14, 14, 14, 14, 14, 14] } },\n                { name: \"fingered bass\", midiProgram: 33, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 86, 71, 57, 71, 43, 57, 29, 29, 29, 29, 29, 29, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 0] } },\n                { name: \"picked bass\", midiProgram: 34, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 0, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"3⟲\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 5, \"envelope\": \"steady\" }, { \"frequency\": \"11×\", \"amplitude\": 1, \"envelope\": \"twang 3\" }, { \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"steady\" }] } },\n                { name: \"fretless bass\", midiProgram: 35, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 1000, \"filterResonance\": 14, \"filterEnvelope\": \"flare 2\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 100, 86, 71, 71, 57, 57, 71, 71, 71, 57, 57, 57, 57, 57, 57, 57, 43, 43, 43, 43, 43, 43, 43, 43, 29, 29, 14] } },\n                { name: \"slap bass 1\", midiProgram: 36, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 4000, \"filterResonance\": 0, \"filterEnvelope\": \"twang 1\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 100, 100, 100, 86, 71, 57, 29, 29, 43, 43, 57, 71, 57, 29, 29, 43, 57, 57, 57, 43, 43, 43, 57, 71, 71, 71, 71] } },\n                { name: \"slap bass 2\", midiProgram: 37, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 5657, \"filterResonance\": 0, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1←2←3←4\", \"feedbackType\": \"3⟲\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"3×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"steady\" }, { \"frequency\": \"13×\", \"amplitude\": 3, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 11, \"envelope\": \"steady\" }] } },\n                { name: \"bass synth 1\", midiProgram: 38, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 4000, \"filterResonance\": 43, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"3⟲ 4⟲\", \"feedbackAmplitude\": 9, \"feedbackEnvelope\": \"twang 2\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"twang 1\" }, { \"frequency\": \"~1×\", \"amplitude\": 13, \"envelope\": \"twang 2\" }] } },\n                { name: \"bass synth 2\", midiProgram: 39, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 1000, \"filterResonance\": 57, \"filterEnvelope\": \"punch\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1→2\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"steady\" }, { \"frequency\": \"3×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\n                { name: \"bass & lead\", midiProgram: 87, generalMidi: true, settings: { \"type\": \"chip\", \"transition\": \"hard\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 86, \"filterEnvelope\": \"twang 2\", \"wave\": \"sawtooth\", \"interval\": \"shimmer\", \"vibrato\": \"none\" } },\n                { name: \"dubstep yoi yoi\", midiProgram: 87, settings: { \"type\": \"chip\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 0.7071 }], \"effects\": [\"note filter\", \"bitcrusher\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 594.6, \"linearGain\": 11.3137 }], \"bitcrusherOctave\": 1.5, \"bitcrusherQuantization\": 0, \"transition\": \"slide\", \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -3, \"chord\": \"arpeggio\", \"wave\": \"sawtooth\", \"unison\": \"none\", \"envelopes\": [{ \"target\": \"noteFilterFreq\", \"envelope\": \"flare 2\", \"index\": 0 }] } },\n            ])\n        },\n        {\n            name: \"Picked String Presets\", presets: <DictionaryArray<Preset>>toNameMap([\n                { name: \"pizzicato strings\", midiProgram: 45, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"medium fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 1000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 7, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"6×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"~1×\", \"amplitude\": 10, \"envelope\": \"steady\" }] } },\n                { name: \"harp\", midiProgram: 46, generalMidi: true, settings: { \"type\": \"FM\", \"transition\": \"hard fade\", \"effects\": \"reverb\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 0, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"3⟲\", \"feedbackAmplitude\": 6, \"feedbackEnvelope\": \"twang 2\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 6, \"envelope\": \"custom\" }, { \"frequency\": \"~2×\", \"amplitude\": 3, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }] } },\n                { name: \"sitar\", midiProgram: 104, generalMidi: true, settings: { \"type\": \"FM\", \"transition\": \"hard fade\", \"effects\": \"reverb\", \"chord\": \"strum\", \"filterCutoffHz\": 8000, \"filterResonance\": 57, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"twang 3\" }, { \"frequency\": \"9×\", \"amplitude\": 3, \"envelope\": \"twang 3\" }, { \"frequency\": \"16×\", \"amplitude\": 9, \"envelope\": \"swell 3\" }] } },\n                { name: \"banjo\", midiProgram: 105, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"2⟲\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"steady\" }, { \"frequency\": \"11×\", \"amplitude\": 3, \"envelope\": \"twang 3\" }, { \"frequency\": \"1×\", \"amplitude\": 11, \"envelope\": \"steady\" }] } },\n                { name: \"ukulele\", midiProgram: 105, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 0, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"3⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"9×\", \"amplitude\": 4, \"envelope\": \"twang 2\" }, { \"frequency\": \"1×\", \"amplitude\": 11, \"envelope\": \"steady\" }] } },\n                { name: \"shamisen\", midiProgram: 106, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"3⟲\", \"feedbackAmplitude\": 9, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"steady\" }, { \"frequency\": \"16×\", \"amplitude\": 4, \"envelope\": \"twang 3\" }, { \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"steady\" }] } },\n                { name: \"koto\", midiProgram: 107, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"twang 2\", \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"6×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 8, \"envelope\": \"twang 3\" }, { \"frequency\": \"~2×\", \"amplitude\": 8, \"envelope\": \"twang 3\" }] } },\n            ])\n        },\n        {\n            name: \"Distortion Presets\", presets: <DictionaryArray<Preset>>toNameMap([\n                { name: \"overdrive guitar\", midiProgram: 29, generalMidi: true, settings: { \"type\": \"Picked String\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 0.7071 }, { \"type\": \"high-pass\", \"cutoffHz\": 210.22, \"linearGain\": 1 }, { \"type\": \"low-pass\", \"cutoffHz\": 5656.85, \"linearGain\": 1 }, { \"type\": \"peak\", \"cutoffHz\": 840.9, \"linearGain\": 0.5 }], \"effects\": [\"note filter\", \"distortion\"], \"noteFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 297.3, \"linearGain\": 2 }, { \"type\": \"low-pass\", \"cutoffHz\": 2378.41, \"linearGain\": 0.7071 }], \"distortion\": 71, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 12, \"chord\": \"strum\", \"harmonics\": [86, 100, 100, 86, 86, 86, 86, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57], \"unison\": \"none\", \"stringSustain\": 71, \"envelopes\": [{ \"target\": \"noteFilterFreq\", \"envelope\": \"note size\", \"index\": 1 }] } },\n                { name: \"distortion guitar\", midiProgram: 30, generalMidi: true, settings: { \"type\": \"Picked String\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 0.7071 }, { \"type\": \"high-pass\", \"cutoffHz\": 210.22, \"linearGain\": 1 }, { \"type\": \"low-pass\", \"cutoffHz\": 5656.85, \"linearGain\": 1 }, { \"type\": \"peak\", \"cutoffHz\": 594.6, \"linearGain\": 0.3536 }, { \"type\": \"peak\", \"cutoffHz\": 1000, \"linearGain\": 0.25 }], \"effects\": [\"note filter\", \"distortion\", \"reverb\"], \"noteFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 353.55, \"linearGain\": 2 }, { \"type\": \"low-pass\", \"cutoffHz\": 2000, \"linearGain\": 1 }], \"distortion\": 86, \"reverb\": 67, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 12, \"chord\": \"strum\", \"harmonics\": [86, 100, 100, 86, 86, 86, 86, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57], \"unison\": \"none\", \"stringSustain\": 71, \"envelopes\": [{ \"target\": \"noteFilterFreq\", \"envelope\": \"note size\", \"index\": 1 }] } },\n                { name: \"charango synth\", midiProgram: 84, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 11313.71, \"linearGain\": 1 }], \"effects\": [], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"strum\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1→2→3→4\", \"feedbackAmplitude\": 8, \"operators\": [{ \"frequency\": \"3×\", \"amplitude\": 13 }, { \"frequency\": \"~1×\", \"amplitude\": 5 }, { \"frequency\": \"4×\", \"amplitude\": 6 }, { \"frequency\": \"3×\", \"amplitude\": 7 }], \"envelopes\": [{ \"target\": \"feedbackAmplitude\", \"envelope\": \"twang 3\" }] } },\n                { name: \"guitar harmonics\", midiProgram: 31, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 2 }], \"effects\": [\"reverb\"], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"strum\", \"algorithm\": \"1←(2 3)←4\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 2, \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 12 }, { \"frequency\": \"16×\", \"amplitude\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 2 }, { \"frequency\": \"~1×\", \"amplitude\": 12 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"swell 1\", \"index\": 1 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"punch\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang 1\", \"index\": 3 }] } },\n                { name: \"PWM overdrive\", midiProgram: 29, settings: { \"type\": \"PWM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 5656.85, \"linearGain\": 1.4142 }], \"effects\": [], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"strum\", \"pulseWidth\": 17.67767, \"envelopes\": [{ \"target\": \"pulseWidth\", \"envelope\": \"punch\" }] } },\n                { name: \"PWM distortion\", midiProgram: 30, settings: { \"type\": \"PWM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 3363.59, \"linearGain\": 2 }], \"effects\": [\"vibrato\"], \"vibrato\": \"delayed\", \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"strum\", \"pulseWidth\": 50, \"envelopes\": [{ \"target\": \"pulseWidth\", \"envelope\": \"swell 1\" }] } },\n                { name: \"FM overdrive\", midiProgram: 29, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 1 }], \"effects\": [\"reverb\"], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"strum\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1→2\", \"feedbackAmplitude\": 2, \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 15 }, { \"frequency\": \"1×\", \"amplitude\": 12 }, { \"frequency\": \"~2×\", \"amplitude\": 6 }, { \"frequency\": \"1×\", \"amplitude\": 12 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"twang 1\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"swell 3\", \"index\": 3 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"punch\" }] } },\n                { name: \"FM distortion\", midiProgram: 30, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 2 }], \"effects\": [\"reverb\"], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"strum\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1→2\", \"feedbackAmplitude\": 4, \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 15 }, { \"frequency\": \"1×\", \"amplitude\": 11 }, { \"frequency\": \"1×\", \"amplitude\": 9 }, { \"frequency\": \"~2×\", \"amplitude\": 4 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"swell 1\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"swell 3\", \"index\": 3 }] } },\n            ])\n        },\n        {\n            name: \"Bellows Presets\", presets: <DictionaryArray<Preset>>toNameMap([\n                { name: \"drawbar organ 1\", midiProgram: 16, generalMidi: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [86, 86, 0, 86, 0, 0, 0, 86, 0, 0, 0, 0, 0, 0, 0, 86, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] } },\n                { name: \"drawbar organ 2\", midiProgram: 16, midiSubharmonicOctaves: 1, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [86, 29, 71, 86, 71, 14, 0, 100, 0, 0, 0, 86, 0, 0, 0, 71, 0, 0, 0, 57, 0, 0, 0, 29, 0, 0, 0, 0] } },\n                { name: \"percussive organ\", midiProgram: 17, generalMidi: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"FM\", \"transition\": \"hard\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"punch\", \"vibrato\": \"light\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1→3 2→4\", \"feedbackAmplitude\": 7, \"feedbackEnvelope\": \"decay 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 8, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 8, \"envelope\": \"custom\" }] } },\n                { name: \"rock organ\", midiProgram: 18, generalMidi: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"punch\", \"vibrato\": \"delayed\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"flare 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"6×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 5, \"envelope\": \"steady\" }] } },\n                { name: \"pipe organ\", midiProgram: 19, generalMidi: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"FM\", \"transition\": \"cross fade\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"8×\", \"amplitude\": 8, \"envelope\": \"custom\" }] } },\n                { name: \"reed organ\", midiProgram: 20, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [71, 86, 100, 86, 71, 100, 57, 71, 71, 71, 43, 43, 43, 71, 43, 71, 57, 57, 57, 57, 57, 57, 57, 29, 43, 29, 29, 14] } },\n                { name: \"accordion\", midiProgram: 21, generalMidi: true, settings: { \"type\": \"chip\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 0, \"filterEnvelope\": \"swell 1\", \"wave\": \"double saw\", \"interval\": \"honky tonk\", \"vibrato\": \"none\" } },\n                { name: \"bandoneon\", midiProgram: 23, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 29, \"filterEnvelope\": \"swell 1\", \"interval\": \"hum\", \"vibrato\": \"none\", \"harmonics\": [86, 86, 86, 57, 71, 86, 57, 71, 71, 71, 57, 43, 57, 43, 71, 43, 71, 57, 57, 43, 43, 43, 57, 43, 43, 29, 29, 29] } },\n                { name: \"bagpipe\", midiProgram: 109, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 43, \"filterEnvelope\": \"punch\", \"interval\": \"hum\", \"vibrato\": \"none\", \"harmonics\": [71, 86, 86, 100, 100, 86, 57, 100, 86, 71, 71, 71, 57, 57, 57, 71, 57, 71, 57, 71, 43, 57, 57, 43, 43, 43, 43, 43] } },\n            ])\n        },\n        {\n            name: \"String Presets\", presets: <DictionaryArray<Preset>>toNameMap([\n                { name: \"violin 1\", midiProgram: 40, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 1.4142 }, { \"type\": \"high-pass\", \"cutoffHz\": 105.11, \"linearGain\": 0.3536 }], \"effects\": [\"vibrato\", \"reverb\"], \"vibrato\": \"delayed\", \"reverb\": 67, \"transition\": \"normal\", \"fadeInSeconds\": 0.0413, \"fadeOutTicks\": 6, \"chord\": \"simultaneous\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"1→2\", \"feedbackAmplitude\": 5, \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 9 }, { \"frequency\": \"3×\", \"amplitude\": 9 }, { \"frequency\": \"2×\", \"amplitude\": 7 }, { \"frequency\": \"7×\", \"amplitude\": 5 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"swell 1\", \"index\": 3 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"twang 3\" }] } },\n                { name: \"viola\", midiProgram: 41, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"delayed\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲\", \"feedbackAmplitude\": 8, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"7×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"13×\", \"amplitude\": 4, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 5, \"envelope\": \"steady\" }] } },\n                { name: \"cello\", midiProgram: 42, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 0.1768 }, { \"type\": \"high-pass\", \"cutoffHz\": 297.3, \"linearGain\": 0.7071 }, { \"type\": \"peak\", \"cutoffHz\": 4756.83, \"linearGain\": 5.6569 }], \"effects\": [\"note filter\", \"reverb\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 16000, \"linearGain\": 0.0884 }], \"reverb\": 67, \"transition\": \"normal\", \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": 12, \"chord\": \"simultaneous\", \"algorithm\": \"(1 2)←3←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 3, \"operators\": [{ \"frequency\": \"16×\", \"amplitude\": 5 }, { \"frequency\": \"~1×\", \"amplitude\": 10 }, { \"frequency\": \"1×\", \"amplitude\": 9 }, { \"frequency\": \"6×\", \"amplitude\": 3 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"swell 1\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"swell 1\", \"index\": 3 }] } },\n                { name: \"contrabass\", midiProgram: 43, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"delayed\", \"algorithm\": \"(1 2)←3←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"16×\", \"amplitude\": 5, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"steady\" }, { \"frequency\": \"6×\", \"amplitude\": 3, \"envelope\": \"swell 1\" }] } },\n                { name: \"fiddle\", midiProgram: 110, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"delayed\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"3⟲ 4⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"8×\", \"amplitude\": 8, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"steady\" }, { \"frequency\": \"16×\", \"amplitude\": 3, \"envelope\": \"steady\" }] } },\n                { name: \"tremolo strings\", midiProgram: 44, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"medium fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 0, \"filterEnvelope\": \"tremolo4\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1→2→3→4\", \"feedbackAmplitude\": 12, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"custom\" }, { \"frequency\": \"~2×\", \"amplitude\": 8, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 8, \"envelope\": \"custom\" }, { \"frequency\": \"7×\", \"amplitude\": 8, \"envelope\": \"custom\" }] } },\n                { name: \"strings\", midiProgram: 48, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"4⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 7, \"envelope\": \"steady\" }, { \"frequency\": \"7×\", \"amplitude\": 3, \"envelope\": \"swell 1\" }] } },\n                { name: \"slow strings\", midiProgram: 49, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"soft fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 0, \"filterEnvelope\": \"swell 2\", \"vibrato\": \"none\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"4⟲\", \"feedbackAmplitude\": 6, \"feedbackEnvelope\": \"flare 3\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 7, \"envelope\": \"steady\" }, { \"frequency\": \"7×\", \"amplitude\": 4, \"envelope\": \"swell 1\" }] } },\n                { name: \"strings synth 1\", midiProgram: 50, generalMidi: true, settings: { \"type\": \"chip\", \"transition\": \"soft fade\", \"effects\": \"chorus & reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"wave\": \"sawtooth\", \"interval\": \"hum\", \"vibrato\": \"delayed\" } },\n                { name: \"strings synth 2\", midiProgram: 51, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"soft fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 12, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"3×\", \"amplitude\": 6, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"custom\" }] } },\n                { name: \"orchestra hit 1\", midiProgram: 55, generalMidi: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 14, \"filterEnvelope\": \"custom\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 14, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"twang 3\" }, { \"frequency\": \"2×\", \"amplitude\": 15, \"envelope\": \"flare 3\" }, { \"frequency\": \"4×\", \"amplitude\": 15, \"envelope\": \"flare 2\" }, { \"frequency\": \"8×\", \"amplitude\": 15, \"envelope\": \"flare 1\" }] } },\n                { name: \"violin 2\", midiProgram: 40, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2828, \"linearGain\": 1.4142 }, { \"type\": \"high-pass\", \"cutoffHz\": 105.11, \"linearGain\": 0.3536 }], \"effects\": [\"vibrato\", \"reverb\"], \"vibrato\": \"light\", \"reverb\": 67, \"transition\": \"normal\", \"fadeInSeconds\": 0.0413, \"fadeOutTicks\": 6, \"chord\": \"simultaneous\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"4⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 7, \"envelope\": \"steady\" }, { \"frequency\": \"7×\", \"amplitude\": 8, \"envelope\": \"swell 1\" }] } },\n                { name: \"orchestra hit 2\", midiProgram: 55, midiSubharmonicOctaves: 1, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"medium fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"decay 1\", \"vibrato\": \"delayed\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 14, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 14, \"envelope\": \"custom\" }] } },\n                { name: \"supersaw string\",  midiProgram:  41, settings: {\"type\":\"supersaw\",\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":2828.43,\"linearGain\":1.4142},{\"type\":\"low-pass\",\"cutoffHz\":3363.59,\"linearGain\":0.1768}],\"effects\":[\"note filter\",\"reverb\"],\"noteFilter\":[{\"type\":\"high-pass\",\"cutoffHz\":500,\"linearGain\":0.1768}],\"reverb\":33,\"fadeInSeconds\":0.0263,\"fadeOutTicks\":6,\"pulseWidth\":35.35534,\"dynamism\":83,\"spread\":8,\"shape\":50,\"envelopes\":[{\"target\":\"noteFilterFreq\",\"envelope\":\"twang 1\",\"index\":0}]}},\n                { name: \"supersaw string 2\", midiProgram: 41, settings: {\"type\":\"supersaw\",\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":2378.41,\"linearGain\":0.5},{\"type\":\"high-pass\",\"cutoffHz\":594.6,\"linearGain\":0.25},{\"type\":\"peak\",\"cutoffHz\":2000,\"linearGain\":2.8284},{\"type\":\"peak\",\"cutoffHz\":4756.83,\"linearGain\":2}],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"eqSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":2378.41,\"linearGain\":0.5},{\"type\":\"high-pass\",\"cutoffHz\":594.6,\"linearGain\":0.25},{\"type\":\"peak\",\"cutoffHz\":2000,\"linearGain\":2.8284},{\"type\":\"peak\",\"cutoffHz\":4756.83,\"linearGain\":2}],\"effects\":[\"note filter\",\"chorus\",\"reverb\"],\"noteFilterType\":false,\"noteSimpleCut\":10,\"noteSimplePeak\":0,\"noteFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":8000,\"linearGain\":1}],\"noteSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":8000,\"linearGain\":1}],\"chorus\":57,\"reverb\":42,\"fadeInSeconds\":0.0575,\"fadeOutTicks\":-6,\"pulseWidth\":50,\"dynamism\":67,\"spread\":58,\"shape\":0,\"envelopes\":[{\"target\":\"noteFilterAllFreqs\",\"envelope\":\"punch\"},{\"target\":\"pulseWidth\",\"envelope\":\"flare 2\"}]}},\n            ])\n        },\n        {\n            name: \"Vocal Presets\", presets: <DictionaryArray<Preset>>toNameMap([\n                { name: \"choir soprano\", midiProgram: 94, generalMidi: true, settings: { \"type\": \"harmonics\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2828.43, \"linearGain\": 2 }, { \"type\": \"peak\", \"cutoffHz\": 1189.21, \"linearGain\": 5.6569 }, { \"type\": \"high-pass\", \"cutoffHz\": 707.11, \"linearGain\": 2.8284 }, { \"type\": \"peak\", \"cutoffHz\": 2000, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 840.9, \"linearGain\": 0.25 }, { \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 11.3137 }], \"effects\": [\"vibrato\", \"chorus\", \"reverb\"], \"vibrato\": \"shaky\", \"chorus\": 100, \"reverb\": 33, \"fadeInSeconds\": 0.0413, \"fadeOutTicks\": 24, \"harmonics\": [100, 100, 86, 57, 29, 29, 57, 71, 57, 29, 14, 14, 14, 29, 43, 57, 43, 29, 14, 14, 14, 14, 14, 14, 0, 0, 0, 0], \"unison\": \"none\", \"envelopes\": [] } },\n                { name: \"choir tenor\", midiProgram: 52, generalMidi: true, settings: { \"type\": \"harmonics\", \"eqFilter\": [{ \"type\": \"peak\", \"cutoffHz\": 1000, \"linearGain\": 11.3137 }, { \"type\": \"peak\", \"cutoffHz\": 707.11, \"linearGain\": 5.6569 }, { \"type\": \"peak\", \"cutoffHz\": 840.9, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 1681.79, \"linearGain\": 0.0884 }, { \"type\": \"high-pass\", \"cutoffHz\": 297.3, \"linearGain\": 0.7071 }, { \"type\": \"low-pass\", \"cutoffHz\": 2828.43, \"linearGain\": 11.3137 }], \"effects\": [\"vibrato\", \"chorus\", \"reverb\"], \"vibrato\": \"shaky\", \"chorus\": 100, \"reverb\": 67, \"transition\": \"normal\", \"fadeInSeconds\": 0.0413, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"harmonics\": [86, 100, 100, 86, 71, 57, 43, 29, 29, 29, 29, 43, 43, 43, 29, 29, 29, 29, 29, 29, 29, 29, 29, 14, 14, 14, 14, 14], \"unison\": \"none\", \"envelopes\": [] } },\n                { name: \"choir bass\", midiProgram: 52, settings: { \"type\": \"harmonics\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2378.41, \"linearGain\": 11.3137 }, { \"type\": \"peak\", \"cutoffHz\": 594.6, \"linearGain\": 5.6569 }, { \"type\": \"peak\", \"cutoffHz\": 1681.79, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 707.11, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 840.9, \"linearGain\": 11.3137 }], \"effects\": [\"vibrato\", \"chorus\", \"reverb\"], \"vibrato\": \"shaky\", \"chorus\": 100, \"reverb\": 67, \"transition\": \"normal\", \"fadeInSeconds\": 0.0413, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"harmonics\": [71, 86, 100, 100, 86, 86, 57, 43, 29, 29, 29, 29, 29, 29, 43, 43, 43, 43, 43, 29, 29, 29, 29, 14, 14, 14, 14, 14], \"unison\": \"none\", \"envelopes\": [] } },\n                { name: \"solo soprano\", midiProgram: 85, settings: { \"type\": \"harmonics\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2828.43, \"linearGain\": 2 }, { \"type\": \"peak\", \"cutoffHz\": 1189.21, \"linearGain\": 5.6569 }, { \"type\": \"high-pass\", \"cutoffHz\": 707.11, \"linearGain\": 2.8284 }, { \"type\": \"peak\", \"cutoffHz\": 2000, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 840.9, \"linearGain\": 0.25 }], \"effects\": [\"vibrato\", \"reverb\"], \"vibrato\": \"shaky\", \"reverb\": 33, \"fadeInSeconds\": 0.0413, \"fadeOutTicks\": 12, \"harmonics\": [86, 100, 86, 43, 14, 14, 57, 71, 57, 14, 14, 14, 14, 14, 43, 57, 43, 14, 14, 14, 14, 14, 14, 14, 0, 0, 0, 0], \"unison\": \"none\", \"envelopes\": [] } },\n                { name: \"solo tenor\", midiProgram: 85, settings: { \"type\": \"harmonics\", \"eqFilter\": [{ \"type\": \"peak\", \"cutoffHz\": 1000, \"linearGain\": 11.3137 }, { \"type\": \"peak\", \"cutoffHz\": 707.11, \"linearGain\": 5.6569 }, { \"type\": \"peak\", \"cutoffHz\": 840.9, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 1681.79, \"linearGain\": 0.0884 }, { \"type\": \"high-pass\", \"cutoffHz\": 297.3, \"linearGain\": 0.7071 }, { \"type\": \"low-pass\", \"cutoffHz\": 2828.43, \"linearGain\": 11.3137 }], \"effects\": [\"vibrato\", \"reverb\"], \"vibrato\": \"shaky\", \"reverb\": 33, \"fadeInSeconds\": 0.0413, \"fadeOutTicks\": 12, \"harmonics\": [86, 100, 100, 86, 71, 57, 43, 29, 29, 29, 29, 43, 43, 43, 29, 29, 29, 29, 29, 29, 29, 29, 29, 14, 14, 14, 14, 14], \"unison\": \"none\", \"envelopes\": [] } },\n                { name: \"solo bass\", midiProgram: 85, settings: { \"type\": \"harmonics\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2378.41, \"linearGain\": 5.6569 }, { \"type\": \"peak\", \"cutoffHz\": 594.6, \"linearGain\": 8 }, { \"type\": \"peak\", \"cutoffHz\": 1681.79, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 707.11, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 840.9, \"linearGain\": 8 }, { \"type\": \"high-pass\", \"cutoffHz\": 210.22, \"linearGain\": 1.4142 }], \"effects\": [\"vibrato\", \"reverb\"], \"vibrato\": \"shaky\", \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": 12, \"chord\": \"simultaneous\", \"harmonics\": [71, 86, 100, 100, 86, 86, 57, 43, 29, 29, 29, 29, 29, 29, 43, 43, 43, 43, 43, 29, 29, 29, 29, 14, 14, 14, 14, 14], \"unison\": \"none\", \"envelopes\": [] } },\n                { name: \"voice ooh\", midiProgram: 53, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 57, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"shaky\", \"harmonics\": [100, 57, 43, 43, 14, 14, 0, 0, 0, 14, 29, 29, 14, 0, 14, 29, 29, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] } },\n                { name: \"voice synth\", midiProgram: 54, generalMidi: true, settings: { \"type\": \"chip\", \"transition\": \"medium fade\", \"effects\": \"chorus & reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 57, \"filterEnvelope\": \"steady\", \"wave\": \"rounded\", \"interval\": \"union\", \"vibrato\": \"light\" } },\n                { name: \"vox synth lead\", midiProgram: 85, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"vibrato\": \"light\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1→2→3→4\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"punch\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"9×\", \"amplitude\": 5, \"envelope\": \"custom\" }, { \"frequency\": \"20×\", \"amplitude\": 1, \"envelope\": \"custom\" }, { \"frequency\": \"~1×\", \"amplitude\": 4, \"envelope\": \"steady\" }] } },\n                { name: \"tiny robot\", midiProgram: 85, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"vibrato\", \"reverb\"], \"vibrato\": \"delayed\", \"reverb\": 33, \"transition\": \"slide\", \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -3, \"chord\": \"simultaneous\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 2, \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 15 }, { \"frequency\": \"1×\", \"amplitude\": 7 }, { \"frequency\": \"~1×\", \"amplitude\": 7 }, { \"frequency\": \"1×\", \"amplitude\": 0 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"punch\", \"index\": 1 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"twang 3\" }] } },\n                { name: \"yowie\", midiProgram: 85, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 86, \"filterEnvelope\": \"tremolo5\", \"vibrato\": \"none\", \"algorithm\": \"1←2←(3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 12, \"feedbackEnvelope\": \"tremolo3\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"16×\", \"amplitude\": 5, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 5, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\n                { name: \"mouse\", midiProgram: 85, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"vibrato\", \"reverb\"], \"vibrato\": \"light\", \"reverb\": 33, \"transition\": \"slide in pattern\", \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -3, \"chord\": \"simultaneous\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 5, \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 13 }, { \"frequency\": \"5×\", \"amplitude\": 12 }, { \"frequency\": \"1×\", \"amplitude\": 0 }, { \"frequency\": \"1×\", \"amplitude\": 0 }], \"envelopes\": [{ \"target\": \"noteVolume\", \"envelope\": \"note size\" }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"flare 2\" }] } },\n                { name: \"gumdrop\", midiProgram: 85, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 15, \"envelope\": \"punch\" }, { \"frequency\": \"4×\", \"amplitude\": 15, \"envelope\": \"punch\" }, { \"frequency\": \"7×\", \"amplitude\": 15, \"envelope\": \"punch\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"twang 1\" }] } },\n                { name: \"echo drop\", midiProgram: 102, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"punch\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"~2×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"~1×\", \"amplitude\": 5, \"envelope\": \"steady\" }, { \"frequency\": \"11×\", \"amplitude\": 2, \"envelope\": \"steady\" }, { \"frequency\": \"16×\", \"amplitude\": 5, \"envelope\": \"swell 3\" }] } },\n                { name: \"dark choir\", midiProgram: 85, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 29, \"filterEnvelope\": \"swell 1\", \"spectrum\": [43, 14, 14, 14, 14, 14, 14, 100, 14, 14, 14, 57, 14, 14, 100, 14, 43, 14, 43, 14, 14, 43, 14, 29, 14, 29, 14, 14, 29, 0] } },\n            ])\n        },\n        {\n            name: \"Brass Presets\", presets: <DictionaryArray<Preset>>toNameMap([\n                { name: \"trumpet\", midiProgram: 56, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 9, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 5, \"envelope\": \"flare 2\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\n                { name: \"trombone\", midiProgram: 57, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"2⟲\", \"feedbackAmplitude\": 7, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\n                { name: \"tuba\", midiProgram: 58, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"2⟲\", \"feedbackAmplitude\": 8, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\n                { name: \"muted trumpet\", midiProgram: 59, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 2.8284 }, { \"type\": \"peak\", \"cutoffHz\": 4000, \"linearGain\": 2.8284 }], \"effects\": [\"note filter\", \"reverb\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 3363.59, \"linearGain\": 1 }], \"reverb\": 33, \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -3, \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 5, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 13 }, { \"frequency\": \"1×\", \"amplitude\": 5 }, { \"frequency\": \"9×\", \"amplitude\": 5 }, { \"frequency\": \"13×\", \"amplitude\": 7 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"swell 1\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"swell 1\", \"index\": 3 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"flare 2\" }] } },\n                { name: \"french horn\", midiProgram: 60, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 1 }, { \"type\": \"peak\", \"cutoffHz\": 2378.41, \"linearGain\": 2.8284 }], \"effects\": [\"reverb\"], \"reverb\": 33, \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -3, \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 3, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15 }, { \"frequency\": \"1×\", \"amplitude\": 12 }, { \"frequency\": \"1×\", \"amplitude\": 10 }, { \"frequency\": \"~1×\", \"amplitude\": 8 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"swell 1\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"flare 2\", \"index\": 3 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"swell 1\" }] } },\n                { name: \"brass section\", midiProgram: 61, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"punch\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 6, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"swell 1\" }, { \"frequency\": \"~1×\", \"amplitude\": 10, \"envelope\": \"swell 1\" }] } },\n                { name: \"brass synth 1\", midiProgram: 62, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 11, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"flare 1\" }, { \"frequency\": \"~1×\", \"amplitude\": 8, \"envelope\": \"flare 2\" }] } },\n                { name: \"brass synth 2\", midiProgram: 63, generalMidi: true, settings: { \"type\": \"FM\", \"transition\": \"soft\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 43, \"filterEnvelope\": \"twang 3\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 9, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"flare 1\" }, { \"frequency\": \"~1×\", \"amplitude\": 7, \"envelope\": \"flare 1\" }] } },\n                { name: \"pulse brass\", midiProgram: 62, settings: { \"type\": \"PWM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 29, \"filterEnvelope\": \"swell 1\", \"pulseWidth\": 50, \"pulseEnvelope\": \"flare 3\", \"vibrato\": \"none\" } },\n            ])\n        },\n        {\n            name: \"Reed Presets\", presets: <DictionaryArray<Preset>>toNameMap([\n                { name: \"soprano sax\", midiProgram: 64, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←2←3←4\", \"feedbackType\": \"4⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 4, \"envelope\": \"swell 1\" }, { \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"steady\" }, { \"frequency\": \"5×\", \"amplitude\": 4, \"envelope\": \"punch\" }] } },\n                { name: \"alto sax\", midiProgram: 65, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"punch\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"4×\", \"amplitude\": 6, \"envelope\": \"swell 1\" }, { \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"steady\" }] } },\n                { name: \"tenor sax\", midiProgram: 66, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←2←3←4\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 6, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 7, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 3, \"envelope\": \"steady\" }, { \"frequency\": \"8×\", \"amplitude\": 3, \"envelope\": \"steady\" }] } },\n                { name: \"baritone sax\", midiProgram: 67, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"swell 2\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"8×\", \"amplitude\": 4, \"envelope\": \"steady\" }, { \"frequency\": \"4×\", \"amplitude\": 5, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 4, \"envelope\": \"punch\" }] } },\n                { name: \"sax synth\", midiProgram: 64, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"light\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\n                { name: \"shehnai\", midiProgram: 111, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"light\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 3, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\n                { name: \"oboe\", midiProgram: 68, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"swell 1\", \"vibrato\": \"none\", \"algorithm\": \"1 2←(3 4)\", \"feedbackType\": \"2⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"tremolo5\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"6×\", \"amplitude\": 2, \"envelope\": \"steady\" }] } },\n                { name: \"english horn\", midiProgram: 69, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1 2←(3 4)\", \"feedbackType\": \"2⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"punch\" }, { \"frequency\": \"8×\", \"amplitude\": 4, \"envelope\": \"steady\" }] } },\n                { name: \"bassoon\", midiProgram: 70, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 707, \"filterResonance\": 57, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"6×\", \"amplitude\": 6, \"envelope\": \"swell 1\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\n                { name: \"clarinet\", midiProgram: 71, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 43, 86, 57, 86, 71, 86, 71, 71, 71, 71, 71, 71, 43, 71, 71, 57, 57, 57, 57, 57, 57, 43, 43, 43, 29, 14, 0] } },\n                { name: \"harmonica\", midiProgram: 22, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 29, \"filterEnvelope\": \"swell 1\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 9, \"feedbackEnvelope\": \"tremolo5\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"steady\" }, { \"frequency\": \"~2×\", \"amplitude\": 2, \"envelope\": \"twang 3\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\n            ])\n        },\n        {\n            name: \"Flute Presets\", presets: <DictionaryArray<Preset>>toNameMap([\n                { name: \"flute 1\", midiProgram: 73, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"4⟲\", \"feedbackAmplitude\": 7, \"feedbackEnvelope\": \"decay 2\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 4, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 3, \"envelope\": \"steady\" }, { \"frequency\": \"~1×\", \"amplitude\": 1, \"envelope\": \"punch\" }] } },\n                { name: \"recorder\", midiProgram: 74, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 29, \"filterEnvelope\": \"swell 2\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 43, 57, 43, 57, 43, 43, 43, 43, 43, 43, 43, 43, 29, 29, 29, 29, 29, 29, 29, 14, 14, 14, 14, 14, 14, 14, 0] } },\n                { name: \"whistle\", midiProgram: 78, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"chorus & reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"delayed\", \"harmonics\": [100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] } },\n                { name: \"ocarina\", midiProgram: 79, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 14, 57, 14, 29, 14, 14, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] } },\n                { name: \"piccolo\", midiProgram: 72, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"4⟲\", \"feedbackAmplitude\": 15, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"~2×\", \"amplitude\": 3, \"envelope\": \"punch\" }, { \"frequency\": \"~1×\", \"amplitude\": 5, \"envelope\": \"punch\" }] } },\n                { name: \"shakuhachi\", midiProgram: 77, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"vibrato\": \"delayed\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"3→4\", \"feedbackAmplitude\": 15, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 3, \"envelope\": \"punch\" }, { \"frequency\": \"~1×\", \"amplitude\": 4, \"envelope\": \"twang 1\" }, { \"frequency\": \"20×\", \"amplitude\": 15, \"envelope\": \"steady\" }] } },\n                { name: \"pan flute\", midiProgram: 75, generalMidi: true, settings: { \"type\": \"spectrum\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 9513.66, \"linearGain\": 5.6569 }], \"effects\": [\"note filter\", \"reverb\"], \"noteFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 0.7071 }], \"reverb\": 33, \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": -3, \"spectrum\": [100, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 71, 0, 0, 14, 0, 57, 0, 29, 14, 29, 14, 14, 29, 14, 29, 14, 14, 29, 14], \"envelopes\": [{ \"target\": \"noteFilterFreq\", \"envelope\": \"twang 1\", \"index\": 0 }, { \"target\": \"noteVolume\", \"envelope\": \"punch\" }] } },\n                { name: \"blown bottle\", midiProgram: 76, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 57, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 7, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 4, \"envelope\": \"custom\" }, { \"frequency\": \"6×\", \"amplitude\": 2, \"envelope\": \"custom\" }, { \"frequency\": \"11×\", \"amplitude\": 2, \"envelope\": \"custom\" }] } },\n                { name: \"calliope\", midiProgram: 82, generalMidi: true, settings: { \"type\": \"spectrum\", \"transition\": \"cross fade\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"spectrum\": [100, 0, 0, 0, 0, 0, 0, 86, 0, 0, 0, 71, 0, 0, 57, 0, 43, 0, 29, 14, 14, 29, 14, 14, 14, 14, 14, 14, 14, 14] } },\n                { name: \"chiffer\", midiProgram: 83, generalMidi: true, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"punch\", \"spectrum\": [86, 0, 0, 0, 0, 0, 0, 71, 0, 0, 0, 71, 0, 0, 57, 0, 57, 0, 43, 14, 14, 43, 14, 29, 14, 29, 29, 29, 29, 14] } },\n                { name: \"breath noise\", midiProgram: 121, generalMidi: true, settings: { \"type\": \"spectrum\", \"eqFilter\": [], \"effects\": [\"chord type\", \"note filter\", \"reverb\"], \"chord\": \"strum\", \"noteFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 840.9, \"linearGain\": 0.3536 }, { \"type\": \"low-pass\", \"cutoffHz\": 16000, \"linearGain\": 0.3536 }], \"reverb\": 33, \"fadeInSeconds\": 0.0413, \"fadeOutTicks\": 12, \"spectrum\": [71, 0, 0, 0, 0, 0, 0, 29, 0, 0, 0, 71, 0, 0, 29, 0, 100, 29, 14, 29, 100, 29, 100, 14, 14, 71, 0, 29, 0, 0], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 1\" }] } },\n                { name: \"flute 2\", midiProgram: 73, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"seamless\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"delayed\", \"harmonics\": [100, 43, 86, 57, 86, 71, 86, 71, 71, 71, 71, 71, 71, 43, 71, 71, 57, 57, 57, 57, 57, 57, 43, 43, 43, 29, 14, 0] } },\n            ])\n        },\n        {\n            name: \"Pad Presets\", presets: <DictionaryArray<Preset>>toNameMap([\n                { name: \"new age pad\", midiProgram: 88, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"chorus\"], \"chorus\": 100, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 3, \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 14 }, { \"frequency\": \"~1×\", \"amplitude\": 4 }, { \"frequency\": \"6×\", \"amplitude\": 3 }, { \"frequency\": \"13×\", \"amplitude\": 3 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"swell 2\", \"index\": 1 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang 3\", \"index\": 2 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"swell 3\" }] } },\n                { name: \"warm pad\", midiProgram: 89, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"note filter\", \"chorus\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 3363.59, \"linearGain\": 1 }], \"chorus\": 100, \"transition\": \"normal\", \"fadeInSeconds\": 0.0575, \"fadeOutTicks\": 96, \"chord\": \"simultaneous\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 7, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14 }, { \"frequency\": \"1×\", \"amplitude\": 6 }, { \"frequency\": \"1×\", \"amplitude\": 0 }, { \"frequency\": \"1×\", \"amplitude\": 0 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"swell 3\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"swell 1\", \"index\": 1 }] } },\n                { name: \"polysynth pad\", midiProgram: 90, generalMidi: true, settings: { \"type\": \"chip\", \"eqFilter\": [], \"effects\": [\"vibrato\", \"note filter\", \"chorus\"], \"vibrato\": \"delayed\", \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2828.43, \"linearGain\": 1 }], \"chorus\": 100, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"wave\": \"sawtooth\", \"unison\": \"honky tonk\", \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 3\" }] } },\n                { name: \"space voice pad\", midiProgram: 91, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 5.6569 }, { \"type\": \"peak\", \"cutoffHz\": 2828.43, \"linearGain\": 5.6569 }, { \"type\": \"peak\", \"cutoffHz\": 1414.21, \"linearGain\": 0.1768 }], \"effects\": [\"chorus\"], \"chorus\": 100, \"transition\": \"normal\", \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": 72, \"chord\": \"simultaneous\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 5, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 10 }, { \"frequency\": \"2×\", \"amplitude\": 8 }, { \"frequency\": \"3×\", \"amplitude\": 7 }, { \"frequency\": \"11×\", \"amplitude\": 2 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"punch\", \"index\": 3 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"swell 2\" }] } },\n                { name: \"bowed glass pad\", midiProgram: 92, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"note filter\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 0.5 }], \"transition\": \"normal\", \"fadeInSeconds\": 0.0575, \"fadeOutTicks\": 96, \"chord\": \"simultaneous\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 0, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 10 }, { \"frequency\": \"2×\", \"amplitude\": 12 }, { \"frequency\": \"3×\", \"amplitude\": 7 }, { \"frequency\": \"7×\", \"amplitude\": 4 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 3\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang 3\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"flare 3\", \"index\": 3 }] } },\n                { name: \"metallic pad\", midiProgram: 93, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"note filter\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 0.5 }], \"transition\": \"normal\", \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": 72, \"chord\": \"simultaneous\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 13, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15 }, { \"frequency\": \"~1×\", \"amplitude\": 9 }, { \"frequency\": \"1×\", \"amplitude\": 7 }, { \"frequency\": \"11×\", \"amplitude\": 7 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 3\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"swell 2\", \"index\": 2 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"twang 3\" }] } },\n                { name: \"sweep pad\", midiProgram: 95, generalMidi: true, settings: { \"type\": \"chip\", \"eqFilter\": [], \"effects\": [\"note filter\", \"chorus\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 4 }], \"chorus\": 100, \"transition\": \"normal\", \"fadeInSeconds\": 0.0575, \"fadeOutTicks\": 96, \"chord\": \"simultaneous\", \"wave\": \"sawtooth\", \"unison\": \"hum\", \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"flare 3\" }] } },\n                { name: \"atmosphere\", midiProgram: 99, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 1 }], \"effects\": [\"chorus\", \"reverb\"], \"chorus\": 100, \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"strum\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"3⟲ 4⟲\", \"feedbackAmplitude\": 3, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14 }, { \"frequency\": \"~1×\", \"amplitude\": 10 }, { \"frequency\": \"3×\", \"amplitude\": 7 }, { \"frequency\": \"1×\", \"amplitude\": 7 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"swell 3\", \"index\": 1 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang 2\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang 3\", \"index\": 3 }] } },\n                { name: \"brightness\", midiProgram: 100, generalMidi: true, settings: { \"type\": \"Picked String\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 2 }], \"effects\": [\"chorus\"], \"chorus\": 100, \"transition\": \"normal\", \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": 72, \"chord\": \"simultaneous\", \"harmonics\": [100, 86, 86, 86, 43, 57, 43, 71, 43, 43, 43, 57, 43, 43, 57, 71, 57, 43, 29, 43, 57, 57, 43, 29, 29, 29, 29, 14], \"unison\": \"octave\", \"stringSustain\": 86, \"envelopes\": [] } },\n                { name: \"goblins\", midiProgram: 101, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"peak\", \"cutoffHz\": 2828.43, \"linearGain\": 11.3137 }], \"effects\": [\"note filter\", \"chorus\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 1681.79, \"linearGain\": 0.5 }], \"chorus\": 100, \"transition\": \"normal\", \"fadeInSeconds\": 0.0575, \"fadeOutTicks\": 96, \"chord\": \"simultaneous\", \"algorithm\": \"1←2←3←4\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 10, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15 }, { \"frequency\": \"4×\", \"amplitude\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 10 }, { \"frequency\": \"1×\", \"amplitude\": 0 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"swell 2\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"swell 3\", \"index\": 1 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"tremolo1\", \"index\": 2 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"flare 3\" }] } },\n                { name: \"sci-fi\", midiProgram: 103, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"peak\", \"cutoffHz\": 9513.66, \"linearGain\": 2.8284 }], \"effects\": [\"note filter\", \"chorus\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 0.5 }], \"chorus\": 100, \"transition\": \"normal\", \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"algorithm\": \"(1 2)←3←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 8, \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 13 }, { \"frequency\": \"2×\", \"amplitude\": 10 }, { \"frequency\": \"5×\", \"amplitude\": 5 }, { \"frequency\": \"11×\", \"amplitude\": 8 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 3\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang 3\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"tremolo5\", \"index\": 3 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"twang 3\" }] } },\n                { name: \"flutter pad\", midiProgram: 90, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"vibrato\", \"note filter\", \"chorus\"], \"vibrato\": \"delayed\", \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 4 }], \"chorus\": 100, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"1⟲ 2⟲ 3⟲\", \"feedbackAmplitude\": 9, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 13 }, { \"frequency\": \"5×\", \"amplitude\": 7 }, { \"frequency\": \"7×\", \"amplitude\": 5 }, { \"frequency\": \"~1×\", \"amplitude\": 6 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 3\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"tremolo1\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"punch\", \"index\": 3 }] } },\n                { name: \"feedback pad\", midiProgram: 89, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"peak\", \"cutoffHz\": 2378.41, \"linearGain\": 8 }], \"effects\": [], \"transition\": \"normal\", \"fadeInSeconds\": 0.0575, \"fadeOutTicks\": 96, \"chord\": \"custom interval\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 8, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15 }, { \"frequency\": \"1×\", \"amplitude\": 15 }, { \"frequency\": \"1×\", \"amplitude\": 15 }, { \"frequency\": \"~1×\", \"amplitude\": 15 }], \"envelopes\": [{ \"target\": \"feedbackAmplitude\", \"envelope\": \"swell 2\" }] } },\n                { name: \"supersaw pad\",     midiProgram:  93, settings: {\"type\":\"supersaw\",\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":8000,\"linearGain\":0.1768}],\"effects\":[\"reverb\"],\"reverb\":100,\"fadeInSeconds\":0.0263,\"fadeOutTicks\":24,\"pulseWidth\":50,\"dynamism\":100,\"spread\":58,\"shape\":0,\"envelopes\":[]}},\n            ])\n        },\n        {\n            name: \"Drum Presets\", presets: <DictionaryArray<Preset>>toNameMap([\n                { name: \"standard drumset\", midiProgram: 116, isNoise: true, settings: { \"type\": \"drumset\", \"effects\": \"reverb\", \"drums\": [{ \"filterEnvelope\": \"twang 1\", \"spectrum\": [57, 71, 71, 86, 86, 86, 71, 71, 71, 71, 57, 57, 57, 57, 43, 43, 43, 43, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29] }, { \"filterEnvelope\": \"twang 1\", \"spectrum\": [0, 0, 0, 100, 71, 71, 57, 86, 57, 57, 57, 71, 43, 43, 57, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43] }, { \"filterEnvelope\": \"twang 1\", \"spectrum\": [0, 0, 0, 0, 100, 57, 43, 43, 29, 57, 43, 29, 71, 43, 43, 43, 43, 57, 43, 43, 43, 43, 43, 43, 43, 43, 29, 43, 43, 43] }, { \"filterEnvelope\": \"twang 1\", \"spectrum\": [0, 0, 0, 0, 0, 71, 57, 43, 43, 43, 57, 57, 43, 29, 57, 43, 43, 43, 29, 43, 57, 43, 43, 43, 43, 43, 43, 29, 43, 43] }, { \"filterEnvelope\": \"decay 2\", \"spectrum\": [0, 14, 29, 43, 86, 71, 29, 43, 43, 43, 43, 29, 71, 29, 71, 29, 43, 43, 43, 43, 57, 43, 43, 57, 43, 43, 43, 57, 57, 57] }, { \"filterEnvelope\": \"decay 1\", \"spectrum\": [0, 0, 14, 14, 14, 14, 29, 29, 29, 43, 43, 43, 57, 57, 57, 71, 71, 71, 71, 71, 71, 71, 71, 57, 57, 57, 57, 43, 43, 43] }, { \"filterEnvelope\": \"twang 3\", \"spectrum\": [43, 43, 43, 71, 29, 29, 43, 43, 43, 29, 43, 43, 43, 29, 29, 43, 43, 29, 29, 29, 57, 14, 57, 43, 43, 57, 43, 43, 57, 57] }, { \"filterEnvelope\": \"decay 3\", \"spectrum\": [29, 43, 43, 43, 43, 29, 29, 43, 29, 29, 43, 29, 14, 29, 43, 29, 43, 29, 57, 29, 43, 57, 43, 71, 43, 71, 57, 57, 71, 71] }, { \"filterEnvelope\": \"twang 3\", \"spectrum\": [43, 29, 29, 43, 29, 29, 29, 57, 29, 29, 29, 57, 43, 43, 29, 29, 57, 43, 43, 43, 71, 43, 43, 71, 57, 71, 71, 71, 71, 71] }, { \"filterEnvelope\": \"decay 3\", \"spectrum\": [57, 57, 57, 43, 57, 57, 43, 43, 57, 43, 43, 43, 71, 57, 43, 57, 86, 71, 57, 86, 71, 57, 86, 100, 71, 86, 86, 86, 86, 86] }, { \"filterEnvelope\": \"flare 1\", \"spectrum\": [0, 0, 14, 14, 14, 14, 29, 29, 29, 43, 43, 43, 57, 57, 71, 71, 86, 86, 100, 100, 100, 100, 100, 100, 100, 100, 86, 57, 29, 0] }, { \"filterEnvelope\": \"decay 2\", \"spectrum\": [14, 14, 14, 14, 29, 14, 14, 29, 14, 43, 14, 43, 57, 86, 57, 57, 100, 57, 43, 43, 57, 100, 57, 43, 29, 14, 0, 0, 0, 0] }] } },\n                { name: \"steel pan\", midiProgram: 114, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 62.5, \"linearGain\": 0.1768 }], \"effects\": [\"note filter\", \"chorus\", \"reverb\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 13454.34, \"linearGain\": 0.25 }], \"chorus\": 67, \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 24, \"chord\": \"simultaneous\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 14 }, { \"frequency\": \"7×\", \"amplitude\": 3 }, { \"frequency\": \"3×\", \"amplitude\": 5 }, { \"frequency\": \"4×\", \"amplitude\": 4 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"decay 2\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"flare 1\", \"index\": 1 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"flare 2\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"swell 2\", \"index\": 3 }] } },\n                { name: \"steel pan synth\", midiProgram: 114, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"note filter\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 13454.34, \"linearGain\": 0.25 }], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"simultaneous\", \"algorithm\": \"1 2 3←4\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 5, \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 12 }, { \"frequency\": \"2×\", \"amplitude\": 15 }, { \"frequency\": \"4×\", \"amplitude\": 14 }, { \"frequency\": \"~1×\", \"amplitude\": 3 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 1\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"note size\", \"index\": 0 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"note size\", \"index\": 1 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"flare 1\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"flare 2\", \"index\": 3 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"flare 1\" }] } },\n                { name: \"timpani\", midiProgram: 47, generalMidi: true, settings: { \"type\": \"spectrum\", \"eqFilter\": [{ \"type\": \"peak\", \"cutoffHz\": 6727.17, \"linearGain\": 5.6569 }], \"effects\": [\"pitch shift\", \"note filter\", \"reverb\"], \"pitchShiftSemitones\": 15, \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 19027.31, \"linearGain\": 0.5 }], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"spectrum\": [100, 0, 0, 0, 86, 0, 0, 71, 0, 14, 43, 14, 43, 43, 0, 29, 43, 29, 29, 29, 43, 29, 43, 29, 43, 43, 43, 43, 43, 43], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 1\" }, { \"target\": \"pitchShift\", \"envelope\": \"twang 1\" }] } },\n                { name: \"dark strike\", midiProgram: 47, settings: { \"type\": \"spectrum\", \"eqFilter\": [], \"effects\": [\"note filter\", \"reverb\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 0.7071 }], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"spectrum\": [0, 0, 14, 14, 14, 29, 29, 43, 43, 86, 43, 43, 43, 29, 86, 29, 29, 29, 86, 29, 14, 14, 14, 14, 0, 0, 0, 0, 0, 0], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 2\" }] } },\n                { name: \"woodblock\", midiProgram: 115, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -2.5, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"spectrum\": [0, 14, 29, 43, 43, 57, 86, 86, 71, 57, 57, 43, 43, 57, 86, 86, 43, 43, 71, 57, 57, 57, 57, 57, 86, 86, 71, 71, 71, 71] } },\n                { name: \"taiko drum\", midiProgram: 116, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -0.5, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 29, \"filterEnvelope\": \"twang 1\", \"spectrum\": [71, 100, 100, 43, 43, 71, 71, 43, 43, 43, 43, 43, 43, 57, 29, 57, 43, 57, 43, 43, 57, 43, 43, 43, 43, 43, 43, 43, 43, 43] } },\n                { name: \"melodic drum\", midiProgram: 117, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -1.5, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 43, \"filterEnvelope\": \"twang 1\", \"spectrum\": [100, 71, 71, 57, 57, 43, 43, 71, 43, 43, 43, 57, 43, 43, 57, 43, 43, 43, 43, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29] } },\n                { name: \"drum synth\", midiProgram: 118, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -2, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 43, \"filterEnvelope\": \"decay 1\", \"spectrum\": [100, 86, 71, 57, 43, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29] } },\n                { name: \"tom-tom\", midiProgram: 116, isNoise: true, midiSubharmonicOctaves: -1, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"spectrum\": [100, 29, 14, 0, 0, 86, 14, 43, 29, 86, 29, 14, 29, 57, 43, 43, 43, 43, 57, 43, 43, 43, 29, 57, 43, 43, 43, 43, 43, 43] } },\n                { name: \"metal pipe\", midiProgram: 117, isNoise: true, midiSubharmonicOctaves: -1.5, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 8000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"spectrum\": [29, 43, 86, 43, 43, 43, 43, 43, 100, 29, 14, 14, 100, 14, 14, 0, 0, 0, 0, 0, 14, 29, 29, 14, 0, 0, 14, 29, 0, 0] } },\n                { name: \"synth kick\", midiProgram: 47, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -6, \"chord\": \"simultaneous\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"operators\": [{ \"frequency\": \"8×\", \"amplitude\": 15 }, { \"frequency\": \"1×\", \"amplitude\": 0 }, { \"frequency\": \"1×\", \"amplitude\": 0 }, { \"frequency\": \"1×\", \"amplitude\": 0 }], \"envelopes\": [{ \"target\": \"operatorFrequency\", \"envelope\": \"twang 1\", \"index\": 0 }, { \"target\": \"noteVolume\", \"envelope\": \"twang 2\" }] } },\n            ])\n        },\n        {\n            name: \"Novelty Presets\", presets: <DictionaryArray<Preset>>toNameMap([\n                { name: \"guitar fret noise\", midiProgram: 120, generalMidi: true, settings: { \"type\": \"spectrum\", \"eqFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 1000, \"linearGain\": 0.1768 }], \"effects\": [\"note filter\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 5.6569 }], \"transition\": \"normal\", \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": -3, \"chord\": \"simultaneous\", \"spectrum\": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 29, 14, 0, 0, 43, 0, 43, 0, 71, 43, 0, 57, 0], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"flare 1\" }, { \"target\": \"noteVolume\", \"envelope\": \"twang 2\" }] } },\n                { name: \"fifth saw lead\", midiProgram: 86, generalMidi: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"chip\", \"eqFilter\": [], \"effects\": [\"note filter\", \"chorus\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2828.43, \"linearGain\": 1.4142 }], \"chorus\": 67, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"wave\": \"sawtooth\", \"unison\": \"fifth\", \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 3\" }] } },\n                { name: \"fifth swell\", midiProgram: 86, midiSubharmonicOctaves: 1, settings: { \"type\": \"chip\", \"eqFilter\": [], \"effects\": [\"note filter\", \"chorus\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2000, \"linearGain\": 2 }], \"chorus\": 100, \"transition\": \"normal\", \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": 72, \"chord\": \"simultaneous\", \"wave\": \"sawtooth\", \"unison\": \"fifth\", \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"swell 3\" }] } },\n                { name: \"soundtrack\", midiProgram: 97, generalMidi: true, settings: { \"type\": \"chip\", \"eqFilter\": [], \"effects\": [\"note filter\", \"chorus\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2378.41, \"linearGain\": 0.5 }], \"chorus\": 67, \"transition\": \"normal\", \"fadeInSeconds\": 0.0413, \"fadeOutTicks\": 72, \"chord\": \"simultaneous\", \"wave\": \"sawtooth\", \"unison\": \"fifth\", \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"flare 3\" }] } },\n                { name: \"reverse cymbal\", midiProgram: 119, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -3, settings: { \"type\": \"spectrum\", \"effects\": \"none\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"swell 3\", \"spectrum\": [29, 57, 57, 29, 57, 57, 29, 29, 43, 29, 29, 43, 29, 29, 57, 57, 14, 57, 14, 57, 71, 71, 57, 86, 57, 100, 86, 86, 86, 86] } },\n                { name: \"seashore\", midiProgram: 122, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -3, settings: { \"type\": \"spectrum\", \"transition\": \"soft fade\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 0, \"filterEnvelope\": \"swell 3\", \"spectrum\": [14, 14, 29, 29, 43, 43, 43, 57, 57, 57, 57, 57, 57, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 57] } },\n                { name: \"bird tweet\", midiProgram: 123, generalMidi: true, settings: { \"type\": \"harmonics\", \"eqFilter\": [], \"effects\": [\"chord type\", \"vibrato\", \"reverb\"], \"chord\": \"strum\", \"vibrato\": \"heavy\", \"reverb\": 67, \"fadeInSeconds\": 0.0575, \"fadeOutTicks\": -6, \"harmonics\": [0, 0, 0, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \"unison\": \"hum\", \"envelopes\": [{ \"target\": \"noteVolume\", \"envelope\": \"decay 1\" }] } },\n                { name: \"telephone ring\", midiProgram: 124, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"note filter\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 5656.85, \"linearGain\": 1 }], \"transition\": \"normal\", \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": -3, \"chord\": \"arpeggio\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 12 }, { \"frequency\": \"1×\", \"amplitude\": 4 }, { \"frequency\": \"20×\", \"amplitude\": 1 }, { \"frequency\": \"1×\", \"amplitude\": 0 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"tremolo4\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"tremolo1\", \"index\": 1 }] } },\n                { name: \"helicopter\", midiProgram: 125, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -0.5, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"seamless\", \"chord\": \"arpeggio\", \"filterCutoffHz\": 1414, \"filterResonance\": 14, \"filterEnvelope\": \"tremolo4\", \"spectrum\": [14, 43, 43, 57, 57, 57, 71, 71, 71, 71, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 71, 71, 71, 71, 71, 71, 71, 57, 57] } },\n                { name: \"applause\", midiProgram: 126, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -3, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"soft fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"swell 3\", \"spectrum\": [14, 14, 29, 29, 29, 43, 43, 57, 71, 71, 86, 86, 86, 71, 71, 57, 57, 57, 71, 86, 86, 86, 86, 86, 71, 71, 57, 57, 57, 57] } },\n                { name: \"gunshot\", midiProgram: 127, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -2, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 1414, \"filterResonance\": 29, \"filterEnvelope\": \"twang 1\", \"spectrum\": [14, 29, 43, 43, 57, 57, 57, 71, 71, 71, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 71, 71, 71, 71, 57, 57, 57, 57, 43] } },\n                { name: \"scoot\", midiProgram: 92, settings: { \"type\": \"chip\", \"eqFilter\": [], \"effects\": [\"note filter\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 707.11, \"linearGain\": 4 }], \"transition\": \"normal\", \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": -3, \"chord\": \"simultaneous\", \"wave\": \"double saw\", \"unison\": \"shimmer\", \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"flare 1\" }] } },\n                { name: \"buzz saw\", midiProgram: 30, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 9513.66, \"linearGain\": 0.5 }], \"effects\": [], \"transition\": \"normal\", \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -3, \"chord\": \"custom interval\", \"algorithm\": \"1←2←3←4\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 4, \"operators\": [{ \"frequency\": \"5×\", \"amplitude\": 13 }, { \"frequency\": \"1×\", \"amplitude\": 10 }, { \"frequency\": \"~1×\", \"amplitude\": 6 }, { \"frequency\": \"11×\", \"amplitude\": 12 }], \"envelopes\": [] } },\n                { name: \"mosquito\", midiProgram: 93, settings: { \"type\": \"PWM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2828.43, \"linearGain\": 2 }], \"effects\": [\"vibrato\"], \"vibrato\": \"shaky\", \"transition\": \"normal\", \"fadeInSeconds\": 0.0575, \"fadeOutTicks\": -6, \"chord\": \"simultaneous\", \"pulseWidth\": 4.41942, \"envelopes\": [{ \"target\": \"pulseWidth\", \"envelope\": \"tremolo6\" }] } },\n                { name: \"breathing\", midiProgram: 126, isNoise: true, midiSubharmonicOctaves: -1, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"swell 2\", \"spectrum\": [14, 14, 14, 29, 29, 29, 29, 29, 43, 29, 29, 43, 43, 43, 29, 29, 71, 43, 86, 86, 57, 100, 86, 86, 86, 86, 71, 86, 71, 57] } },\n                { name: \"klaxon synth\", midiProgram: 125, isNoise: true, midiSubharmonicOctaves: -1, settings: { \"type\": \"noise\", \"effects\": \"reverb\", \"transition\": \"slide\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 86, \"filterEnvelope\": \"steady\", \"wave\": \"buzz\" } },\n                { name: \"theremin\", midiProgram: 40, settings: { \"type\": \"harmonics\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 0.7071 }], \"effects\": [\"vibrato\", \"reverb\"], \"vibrato\": \"heavy\", \"reverb\": 33, \"transition\": \"slide in pattern\", \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -6, \"chord\": \"simultaneous\", \"harmonics\": [100, 71, 57, 43, 29, 29, 14, 14, 14, 14, 14, 14, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \"unison\": \"none\", \"envelopes\": [] } },\n                { name: \"sonar ping\", midiProgram: 121, settings: { \"type\": \"spectrum\", \"eqFilter\": [], \"effects\": [\"note filter\", \"reverb\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 1681.79, \"linearGain\": 0.5 }], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": 72, \"chord\": \"simultaneous\", \"spectrum\": [100, 43, 29, 29, 14, 14, 14, 14, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 2\" }] } },\n            ])\n        },\n    ]);\n\n    public static valueToPreset(presetValue: number): Preset | null {\n        const categoryIndex: number = presetValue >> 6;\n        const presetIndex: number = presetValue & 0x3F;\n        return EditorConfig.presetCategories[categoryIndex].presets[presetIndex];\n    }\n\n    public static midiProgramToPresetValue(program: number): number | null {\n        for (let categoryIndex: number = 0; categoryIndex < EditorConfig.presetCategories.length; categoryIndex++) {\n            const category: PresetCategory = EditorConfig.presetCategories[categoryIndex];\n            for (let presetIndex: number = 0; presetIndex < category.presets.length; presetIndex++) {\n                const preset: Preset = category.presets[presetIndex];\n                if (preset.generalMidi && preset.midiProgram == program) return (categoryIndex << 6) + presetIndex;\n            }\n        }\n        return null;\n    }\n\n    public static nameToPresetValue(presetName: string): number | null {\n        for (let categoryIndex: number = 0; categoryIndex < EditorConfig.presetCategories.length; categoryIndex++) {\n            const category: PresetCategory = EditorConfig.presetCategories[categoryIndex];\n            for (let presetIndex: number = 0; presetIndex < category.presets.length; presetIndex++) {\n                const preset: Preset = category.presets[presetIndex];\n                if (preset.name == presetName) return (categoryIndex << 6) + presetIndex;\n            }\n        }\n        return null;\n    }\n}\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\n\nexport function applyElementArgs<T extends HTMLElement | SVGElement | DocumentFragment>(element: T, args: Array<any>): T {\n\tfor (const arg of args) {\n\t\tif (arg instanceof Node) {\n\t\t\telement.appendChild(arg);\n\t\t} else if (typeof arg === \"string\") {\n\t\t\telement.appendChild(document.createTextNode(arg));\n\t\t} else if (typeof arg === \"function\") {\n\t\t\tapplyElementArgs(element, [arg()]);\n\t\t} else if (Array.isArray(arg)) {\n\t\t\tapplyElementArgs(element, arg);\n\t\t} else if (arg && typeof Symbol !== \"undefined\" && typeof arg[Symbol.iterator] === \"function\") {\n\t\t\tapplyElementArgs(element, [...arg]);\n\t\t} else if (arg && arg.constructor === Object && element instanceof Element) {\n\t\t\t// If the argument is a literal {} Object\n\t\t\tfor (const key of Object.keys(arg)) {\n\t\t\t\tconst value = arg[key];\n\t\t\t\t/*if (key === \"classList\") {\n\t\t\t\t\tif (typeof value === \"string\") {\n\t\t\t\t\t\telement.classList.add(...value.split(\" \"));\n\t\t\t\t\t} else if (Array.isArray(arg) || (value && typeof Symbol !== \"undefined\" && typeof value[Symbol.iterator] === \"function\")) {\n\t\t\t\t\t\telement.classList.add(...value);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.warn(\"Invalid classList value \\\"\" + value + \"\\\" on \" + element.tagName + \" element.\");\n\t\t\t\t\t}\n\t\t\t\t} else*/ if (key === \"class\" /* || key === \"className\" */) {\n\t\t\t\t\tif (typeof value === \"string\") {\n\t\t\t\t\t\telement.setAttribute(\"class\", value);\n\t\t\t\t\t} else if (Array.isArray(arg) || (value && typeof Symbol !== \"undefined\" && typeof value[Symbol.iterator] === \"function\")) {\n\t\t\t\t\t\telement.setAttribute(\"class\", [...value].join(\" \"));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.warn(\"Invalid \" + key + \" value \\\"\" + value + \"\\\" on \" + element.tagName + \" element.\");\n\t\t\t\t\t}\n\t\t\t\t} else if (key === \"style\") {\n\t\t\t\t\tif (value && value.constructor === Object) {\n\t\t\t\t\t\tfor (const styleKey of Object.keys(value)) {\n\t\t\t\t\t\t\tif (styleKey in (<HTMLElement | SVGElement>element).style) {\n\t\t\t\t\t\t\t\t// In practice, camelCase and kebab-case properties both work as properties on CSSStyleDeclaration objects.\n\t\t\t\t\t\t\t\t(<any> element).style[styleKey] = value[styleKey];\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// CSS variables start with -- and must be set with setProperty.\n\t\t\t\t\t\t\t\t(<HTMLElement | SVGElement>element).style.setProperty(styleKey, value[styleKey]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\telement.setAttribute(key, value);\n\t\t\t\t\t}\n\t\t\t\t} else if (typeof(value) === \"function\") {\n\t\t\t\t\t// If value is a callback, set as a property instead trying to coerce to string.\n\t\t\t\t\t(<any>element)[key] = value;\n\t\t\t\t} else if (typeof(value) === \"boolean\") {\n\t\t\t\t\t// If value is boolean, set attribute if true, remove if false.\n\t\t\t\t\tif (value) element.setAttribute(key, \"\");\n\t\t\t\t\telse element.removeAttribute(key);\n\t\t\t\t} else {\n\t\t\t\t\t// Default to setting attribute, as if writing html directly.\n\t\t\t\t\telement.setAttribute(key, value);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\t// Just convert unrecognized objects to text and append them.\n\t\t\telement.appendChild(document.createTextNode(arg));\n\t\t}\n\t}\n\treturn element;\n}\n\nexport const svgNS: string = \"http://www.w3.org/2000/svg\";\n\nexport function parseHTML(...args: Array<any>): DocumentFragment {\n\treturn document.createRange().createContextualFragment(args.join());\n}\n\n//let svgParser: SVGSVGElement | null = null;\nexport function parseSVG(...args: Array<any>): DocumentFragment {\n\tconst fragment: DocumentFragment = document.createDocumentFragment();\n\t\n\t// Internet Explorer doesn't support the first method here, so I commented it out and used a slightly more complex one involving DOMParser below.\n\t/*\n\tif (svgParser === null) svgParser = <SVGSVGElement>document.createElementNS(svgNS, \"svg\");\n\tsvgParser.innerHTML = args.join();\n\twhile (svgParser.firstChild !== null) fragment.appendChild(svgParser.firstChild);\n\t*/\n\tconst svgParser: Element = new DOMParser().parseFromString(\"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\">\" + args.join() + \"</svg>\", \"image/svg+xml\").documentElement;\n\twhile (svgParser.firstChild !== null) {\n\t\tdocument.importNode(svgParser.firstChild, true);\n\t\tfragment.appendChild(svgParser.firstChild);\n\t}\n\t\n\treturn fragment;\n}\n\nexport function replaceScriptWith(...args: Array<any>): void {\n\tlet currentScript: HTMLScriptElement | SVGScriptElement | null = document.currentScript;\n\tif (currentScript == null) { // double-equals to intentionally include undefined in Internet Explorer.\n\t\t\n\t\t// Internet Explorer doens't support currentScript, try this method instead:\n\t\tif (document.readyState === \"loading\") {\n\t\t\tconst scripts: HTMLCollectionOf<HTMLScriptElement> = document.getElementsByTagName(\"script\");\n\t\t\tcurrentScript = scripts[scripts.length - 1];\n\t\t}\n\t\t\n\t\tif (currentScript == null) {\n\t\t\tconsole.warn(\"Couldn't replace script because no script is currently being parsed and executed, maybe this is happening in a callback function or event handler instead?\");\n\t\t\treturn;\n\t\t}\n\t}\n\tif (currentScript.parentNode === null) {\n\t\tconsole.warn(\"Couldn't replace script element because it is not attached to a parent anymore, did you try to replace the same script more than once?\");\n\t\treturn;\n\t}\n\tcurrentScript.parentNode.replaceChild(applyElementArgs(document.createDocumentFragment(), args), currentScript);\n}\n\nexport function applyToElement<T extends HTMLElement | SVGElement | DocumentFragment>(element: T, ...args: Array<any>): T {\n\tif (!(element instanceof Element || element instanceof DocumentFragment)) {\n\t\tconsole.warn(\"Couldn't apply to provided argument because it's not an element or DocumentFragment.\");\n\t\treturn element;\n\t}\n\treturn applyElementArgs(element, args);\n}\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\n\nimport {applyElementArgs, svgNS, parseHTML, parseSVG, replaceScriptWith, applyToElement} from \"./elements-base\";\nexport {replaceScriptWith, applyToElement};\n\ninterface HTMLElementFactory {\n\t(...args: Array<string>): DocumentFragment;\n\t//readonly [key: string]: (...args: Array<any>) => HTMLElement;\n\ta(...args: Array<any>): HTMLAnchorElement;\n\tabbr(...args: Array<any>): HTMLElement;\n\taddress(...args: Array<any>): HTMLElement;\n\tarea(...args: Array<any>): HTMLAreaElement;\n\tarticle(...args: Array<any>): HTMLElement;\n\taside(...args: Array<any>): HTMLElement;\n\taudio(...args: Array<any>): HTMLAudioElement;\n\tb(...args: Array<any>): HTMLElement;\n\tbase(...args: Array<any>): HTMLBaseElement;\n\tbdi(...args: Array<any>): HTMLElement;\n\tbdo(...args: Array<any>): HTMLElement;\n\tblockquote(...args: Array<any>): HTMLQuoteElement;\n\tbr(...args: Array<any>): HTMLBRElement;\n\tbutton(...args: Array<any>): HTMLButtonElement;\n\tcanvas(...args: Array<any>): HTMLCanvasElement;\n\tcaption(...args: Array<any>): HTMLTableCaptionElement;\n\tcite(...args: Array<any>): HTMLElement;\n\tcode(...args: Array<any>): HTMLElement;\n\tcol(...args: Array<any>): HTMLTableColElement;\n\tcolgroup(...args: Array<any>): HTMLTableColElement;\n\tdatalist(...args: Array<any>): HTMLDataListElement;\n\tdd(...args: Array<any>): HTMLElement;\n\tdel(...args: Array<any>): HTMLModElement;\n\tdetails(...args: Array<any>): HTMLDetailsElement;\n\tdfn(...args: Array<any>): HTMLElement;\n\tdialog(...args: Array<any>): HTMLDialogElement;\n\tdiv(...args: Array<any>): HTMLDivElement;\n\tdl(...args: Array<any>): HTMLDListElement;\n\tdt(...args: Array<any>): HTMLElement;\n\tem(...args: Array<any>): HTMLElement;\n\tembed(...args: Array<any>): HTMLEmbedElement;\n\tfieldset(...args: Array<any>): HTMLFieldSetElement;\n\tfigcaption(...args: Array<any>): HTMLElement;\n\tfigure(...args: Array<any>): HTMLElement;\n\tfooter(...args: Array<any>): HTMLElement;\n\tform(...args: Array<any>): HTMLFormElement;\n\th1(...args: Array<any>): HTMLHeadingElement;\n\th2(...args: Array<any>): HTMLHeadingElement;\n\th3(...args: Array<any>): HTMLHeadingElement;\n\th4(...args: Array<any>): HTMLHeadingElement;\n\th5(...args: Array<any>): HTMLHeadingElement;\n\th6(...args: Array<any>): HTMLHeadingElement;\n\theader(...args: Array<any>): HTMLElement;\n\thr(...args: Array<any>): HTMLHRElement;\n\ti(...args: Array<any>): HTMLElement;\n\tiframe(...args: Array<any>): HTMLIFrameElement;\n\timg(...args: Array<any>): HTMLImageElement;\n\tinput(...args: Array<any>): HTMLInputElement;\n\tins(...args: Array<any>): HTMLModElement;\n\tkbd(...args: Array<any>): HTMLElement;\n\tlabel(...args: Array<any>): HTMLLabelElement;\n\tlegend(...args: Array<any>): HTMLLegendElement;\n\tli(...args: Array<any>): HTMLLIElement;\n\tlink(...args: Array<any>): HTMLLinkElement;\n\tmain(...args: Array<any>): HTMLElement;\n\tmap(...args: Array<any>): HTMLMapElement;\n\tmark(...args: Array<any>): HTMLElement;\n\tmenu(...args: Array<any>): HTMLMenuElement;\n\tmenuitem(...args: Array<any>): HTMLUnknownElement;\n\tmeta(...args: Array<any>): HTMLMetaElement;\n\tmeter(...args: Array<any>): HTMLMeterElement;\n\tnav(...args: Array<any>): HTMLElement;\n\tnoscript(...args: Array<any>): HTMLElement;\n\tobject(...args: Array<any>): HTMLObjectElement;\n\tol(...args: Array<any>): HTMLOListElement;\n\toptgroup(...args: Array<any>): HTMLOptGroupElement;\n\toption(...args: Array<any>): HTMLOptionElement;\n\toutput(...args: Array<any>): HTMLOutputElement;\n\tp(...args: Array<any>): HTMLParagraphElement;\n\tparam(...args: Array<any>): HTMLParamElement;\n\tpicture(...args: Array<any>): HTMLPictureElement;\n\tpre(...args: Array<any>): HTMLPreElement;\n\tprogress(...args: Array<any>): HTMLProgressElement;\n\tq(...args: Array<any>): HTMLQuoteElement;\n\trp(...args: Array<any>): HTMLElement;\n\trt(...args: Array<any>): HTMLElement;\n\truby(...args: Array<any>): HTMLElement;\n\ts(...args: Array<any>): HTMLElement;\n\tsamp(...args: Array<any>): HTMLElement;\n\tscript(...args: Array<any>): HTMLScriptElement;\n\tsection(...args: Array<any>): HTMLElement;\n\tselect(...args: Array<any>): HTMLSelectElement;\n\tsmall(...args: Array<any>): HTMLElement;\n\tsource(...args: Array<any>): HTMLSourceElement;\n\tspan(...args: Array<any>): HTMLSpanElement;\n\tstrong(...args: Array<any>): HTMLElement;\n\tstyle(...args: Array<any>): HTMLStyleElement;\n\tsub(...args: Array<any>): HTMLElement;\n\tsummary(...args: Array<any>): HTMLElement;\n\tsup(...args: Array<any>): HTMLElement;\n\ttable(...args: Array<any>): HTMLTableElement;\n\ttbody(...args: Array<any>): HTMLTableSectionElement;\n\ttd(...args: Array<any>): HTMLTableCellElement;\n\ttemplate(...args: Array<any>): HTMLTemplateElement;\n\ttextarea(...args: Array<any>): HTMLTextAreaElement;\n\ttfoot(...args: Array<any>): HTMLTableSectionElement;\n\tth(...args: Array<any>): HTMLTableCellElement;\n\tthead(...args: Array<any>): HTMLTableSectionElement;\n\ttime(...args: Array<any>): HTMLTimeElement;\n\ttitle(...args: Array<any>): HTMLTitleElement;\n\ttr(...args: Array<any>): HTMLTableRowElement;\n\ttrack(...args: Array<any>): HTMLTrackElement;\n\tu(...args: Array<any>): HTMLElement;\n\tul(...args: Array<any>): HTMLUListElement;\n\tvar(...args: Array<any>): HTMLElement;\n\tvideo(...args: Array<any>): HTMLVideoElement;\n\twbr(...args: Array<any>): HTMLElement;\n}\n\ninterface SVGElementFactory {\n\t(...args: Array<string>): DocumentFragment;\n\t//readonly [key: string]: (...args: Array<any>) => SVGElement;\n\ta(...args: Array<any>): SVGAElement;\n\taltGlyph(...args: Array<any>): SVGElement;\n\taltGlyphDef(...args: Array<any>): SVGElement;\n\taltGlyphItem(...args: Array<any>): SVGElement;\n\tanimate(...args: Array<any>): SVGAnimateElement;\n\tanimateMotion(...args: Array<any>): SVGAnimateMotionElement;\n\tanimateTransform(...args: Array<any>): SVGAnimateTransformElement;\n\tcircle(...args: Array<any>): SVGCircleElement;\n\tclipPath(...args: Array<any>): SVGClipPathElement;\n\t\"color-profile\"(...args: Array<any>): SVGElement;\n\tcolor_profile(...args: Array<any>): SVGElement;\n\tcursor(...args: Array<any>): SVGElement;\n\tdefs(...args: Array<any>): SVGDefsElement;\n\tdesc(...args: Array<any>): SVGDescElement;\n\tdiscard(...args: Array<any>): SVGElement;\n\tellipse(...args: Array<any>): SVGEllipseElement;\n\tfeBlend(...args: Array<any>): SVGFEBlendElement;\n\tfeColorMatrix(...args: Array<any>): SVGFEColorMatrixElement;\n\tfeComponentTransfer(...args: Array<any>): SVGFEComponentTransferElement;\n\tfeComposite(...args: Array<any>): SVGFECompositeElement;\n\tfeConvolveMatrix(...args: Array<any>): SVGFEConvolveMatrixElement;\n\tfeDiffuseLighting(...args: Array<any>): SVGFEDiffuseLightingElement;\n\tfeDisplacementMap(...args: Array<any>): SVGFEDisplacementMapElement;\n\tfeDistantLight(...args: Array<any>): SVGFEDistantLightElement;\n\tfeDropShadow(...args: Array<any>): SVGElement;\n\tfeFlood(...args: Array<any>): SVGFEFloodElement;\n\tfeFuncA(...args: Array<any>): SVGFEFuncAElement;\n\tfeFuncB(...args: Array<any>): SVGFEFuncBElement;\n\tfeFuncG(...args: Array<any>): SVGFEFuncGElement;\n\tfeFuncR(...args: Array<any>): SVGFEFuncRElement;\n\tfeGaussianBlur(...args: Array<any>): SVGFEGaussianBlurElement;\n\tfeImage(...args: Array<any>): SVGFEImageElement;\n\tfeMerge(...args: Array<any>): SVGFEMergeElement;\n\tfeMergeNode(...args: Array<any>): SVGFEMergeNodeElement;\n\tfeMorphology(...args: Array<any>): SVGFEMorphologyElement;\n\tfeOffset(...args: Array<any>): SVGFEOffsetElement;\n\tfePointLight(...args: Array<any>): SVGFEPointLightElement;\n\tfeSpecularLighting(...args: Array<any>): SVGFESpecularLightingElement;\n\tfeSpotLight(...args: Array<any>): SVGFESpotLightElement;\n\tfeTile(...args: Array<any>): SVGFETileElement;\n\tfeTurbulence(...args: Array<any>): SVGFETurbulenceElement;\n\tfilter(...args: Array<any>): SVGFilterElement;\n\tfont(...args: Array<any>): SVGElement;\n\t\"font-face\"(...args: Array<any>): SVGElement;\n\tfont_face(...args: Array<any>): SVGElement;\n\t\"font-face-format\"(...args: Array<any>): SVGElement;\n\tfont_face_format(...args: Array<any>): SVGElement;\n\t\"font-face-name\"(...args: Array<any>): SVGElement;\n\tfont_face_name(...args: Array<any>): SVGElement;\n\t\"font-face-src\"(...args: Array<any>): SVGElement;\n\tfont_face_src(...args: Array<any>): SVGElement;\n\t\"font-face-uri\"(...args: Array<any>): SVGElement;\n\tfont_face_uri(...args: Array<any>): SVGElement;\n\tforeignObject(...args: Array<any>): SVGForeignObjectElement;\n\tg(...args: Array<any>): SVGGElement;\n\tglyph(...args: Array<any>): SVGElement;\n\tglyphRef(...args: Array<any>): SVGElement;\n\thkern(...args: Array<any>): SVGElement;\n\timage(...args: Array<any>): SVGImageElement;\n\tline(...args: Array<any>): SVGLineElement;\n\tlinearGradient(...args: Array<any>): SVGLinearGradientElement;\n\tmarker(...args: Array<any>): SVGMarkerElement;\n\tmask(...args: Array<any>): SVGMaskElement;\n\tmetadata(...args: Array<any>): SVGMetadataElement;\n\t\"missing-glyph\"(...args: Array<any>): SVGElement;\n\tmissing_glyph(...args: Array<any>): SVGElement;\n\tmpath(...args: Array<any>): SVGElement;\n\tpath(...args: Array<any>): SVGPathElement;\n\tpattern(...args: Array<any>): SVGPatternElement;\n\tpolygon(...args: Array<any>): SVGPolygonElement;\n\tpolyline(...args: Array<any>): SVGPolylineElement;\n\tradialGradient(...args: Array<any>): SVGRadialGradientElement;\n\trect(...args: Array<any>): SVGRectElement;\n\tscript(...args: Array<any>): SVGScriptElement;\n\tset(...args: Array<any>): SVGElement;\n\tstop(...args: Array<any>): SVGStopElement;\n\tstyle(...args: Array<any>): SVGStyleElement;\n\tsvg(...args: Array<any>): SVGSVGElement;\n\tswitch(...args: Array<any>): SVGSwitchElement;\n\tsymbol(...args: Array<any>): SVGSymbolElement;\n\ttext(...args: Array<any>): SVGTextElement;\n\ttextPath(...args: Array<any>): SVGTextPathElement;\n\ttitle(...args: Array<any>): SVGTitleElement;\n\ttref(...args: Array<any>): SVGElement;\n\ttspan(...args: Array<any>): SVGTSpanElement;\n\tuse(...args: Array<any>): SVGUseElement;\n\tview(...args: Array<any>): SVGViewElement;\n\tvkern(...args: Array<any>): SVGElement;\n}\n\nexport const HTML: HTMLElementFactory = <HTMLElementFactory> <unknown> parseHTML;\nexport const SVG: SVGElementFactory = <SVGElementFactory> <unknown> parseSVG;\n\nfor (const name of \"a abbr address area article aside audio b base bdi bdo blockquote br button canvas caption cite code col colgroup datalist dd del details dfn dialog div dl dt em embed fieldset figcaption figure footer form h1 h2 h3 h4 h5 h6 header hr i iframe img input ins kbd label legend li link main map mark menu menuitem meta meter nav noscript object ol optgroup option output p param picture pre progress q rp rt ruby s samp script section select small source span strong style sub summary sup table tbody td template textarea tfoot th thead time title tr track u ul var video wbr\".split(\" \")) {\n\t(<any>HTML)[name] = (...args: Array<any>) => applyElementArgs(document.createElement(name), args);\n}\nfor (const name of \"a altGlyph altGlyphDef altGlyphItem animate animateMotion animateTransform circle clipPath color-profile cursor defs desc discard ellipse feBlend feColorMatrix feComponentTransfer feComposite feConvolveMatrix feDiffuseLighting feDisplacementMap feDistantLight feDropShadow feFlood feFuncA feFuncB feFuncG feFuncR feGaussianBlur feImage feMerge feMergeNode feMorphology feOffset fePointLight feSpecularLighting feSpotLight feTile feTurbulence filter font font-face font-face-format font-face-name font-face-src font-face-uri foreignObject g glyph glyphRef hkern image line linearGradient marker mask metadata missing-glyph mpath path pattern polygon polyline radialGradient rect script set stop style svg switch symbol text textPath title tref tspan use view vkern\".split(\" \")) {\n\t(<any>SVG)[name] = (...args: Array<any>) => applyElementArgs(<SVGElement> document.createElementNS(svgNS, name), args);\n\tif (/-/.test(name)) {\n\t\tconst snakeCaseName = name.replace(/-/g, \"_\");\n\t\t(<any>SVG)[snakeCaseName] = (...args: Array<any>) => applyElementArgs(<SVGElement> document.createElementNS(svgNS, name), args);\n\t}\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nimport { BeepBoxOption, DictionaryArray, toNameMap, Config } from \"../synth/SynthConfig\";\nimport { Song } from \"../synth/synth\";\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\n\nexport interface ChannelColors extends BeepBoxOption {\n    readonly secondaryChannel: string;\n    readonly primaryChannel: string;\n    readonly secondaryNote: string;\n    readonly primaryNote: string;\n}\n\nexport class ColorConfig {\n    public static colorLookup: Map<number, ChannelColors> = new Map<number, ChannelColors>();\n\tpublic static usesColorFormula: boolean = false;\n    public static readonly themes: { [name: string]: string } = {\n        \"dark classic\": `\n\t\t\t:root {\n\t\t\t\t--page-margin: black;\n\t\t\t\t--editor-background: black;\n\t\t\t\t--hover-preview: white;\n\t\t\t\t--playhead: white;\n\t\t\t\t--primary-text: white;\n\t\t\t\t--secondary-text: #999;\n\t\t\t\t--inverted-text: black;\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t\t--loop-accent: #74f;\n\t\t\t\t--link-accent: #98f;\n\t\t\t\t--ui-widget-background: #444;\n\t\t\t\t--ui-widget-focus: #777;\n\t\t\t\t--pitch-background: #444;\n\t\t\t\t--tonic: #864;\n\t\t\t\t--fifth-note: #468;\n\t\t\t\t--white-piano-key: #bbb;\n\t\t\t\t--black-piano-key: #444;\n\t\t\t\t\t--use-color-formula: false;\n\t\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t\t--input-box-outline: #333;\n\t\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t--pitch1-secondary-channel: #0099A1;\n\t\t\t\t--pitch1-primary-channel:   #25F3FF;\n\t\t\t\t--pitch1-secondary-note:    #00BDC7;\n\t\t\t\t--pitch1-primary-note:      #92F9FF;\n\t\t\t\t--pitch2-secondary-channel: #A1A100;\n\t\t\t\t--pitch2-primary-channel:   #FFFF25;\n\t\t\t\t--pitch2-secondary-note:    #C7C700;\n\t\t\t\t--pitch2-primary-note:      #FFFF92;\n\t\t\t\t--pitch3-secondary-channel: #C75000;\n\t\t\t\t--pitch3-primary-channel:   #FF9752;\n\t\t\t\t--pitch3-secondary-note:    #FF771C;\n\t\t\t\t--pitch3-primary-note:      #FFCDAB;\n\t\t\t\t--pitch4-secondary-channel: #00A100;\n\t\t\t\t--pitch4-primary-channel:   #50FF50;\n\t\t\t\t--pitch4-secondary-note:    #00C700;\n\t\t\t\t--pitch4-primary-note:      #A0FFA0;\n\t\t\t\t--pitch5-secondary-channel: #D020D0;\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\n\t\t\t\t--pitch5-secondary-note:    #E040E0;\n\t\t\t\t--pitch5-primary-note:      #FFC0FF;\n\t\t\t\t--pitch6-secondary-channel: #7777B0;\n\t\t\t\t--pitch6-primary-channel:   #A0A0FF;\n\t\t\t\t--pitch6-secondary-note:    #8888D0;\n\t\t\t\t--pitch6-primary-note:      #D0D0FF;\n\t\t\t\t--pitch7-secondary-channel: #8AA100;\n\t\t\t\t--pitch7-primary-channel:   #DEFF25;\n\t\t\t\t--pitch7-secondary-note:    #AAC700;\n\t\t\t\t--pitch7-primary-note:      #E6FF92;\n\t\t\t\t--pitch8-secondary-channel: #DF0019;\n\t\t\t\t--pitch8-primary-channel:   #FF98A4;\n\t\t\t\t--pitch8-secondary-note:    #FF4E63;\n\t\t\t\t--pitch8-primary-note:      #FFB2BB;\n\t\t\t\t--pitch9-secondary-channel: #00A170;\n\t\t\t\t--pitch9-primary-channel:   #50FFC9;\n\t\t\t\t--pitch9-secondary-note:    #00C78A;\n\t\t\t\t--pitch9-primary-note:      #83FFD9;\n\t\t\t\t--pitch10-secondary-channel:#A11FFF;\n\t\t\t\t--pitch10-primary-channel:  #CE8BFF;\n\t\t\t\t--pitch10-secondary-note:   #B757FF;\n\t\t\t\t--pitch10-primary-note:     #DFACFF;\n\t\t\t\t--noise1-secondary-channel: #6F6F6F;\n\t\t\t\t--noise1-primary-channel:   #AAAAAA;\n\t\t\t\t--noise1-secondary-note:    #A7A7A7;\n\t\t\t\t--noise1-primary-note:      #E0E0E0;\n\t\t\t\t--noise2-secondary-channel: #996633;\n\t\t\t\t--noise2-primary-channel:   #DDAA77;\n\t\t\t\t--noise2-secondary-note:    #CC9966;\n\t\t\t\t--noise2-primary-note:      #F0D0BB;\n\t\t\t\t--noise3-secondary-channel: #4A6D8F;\n\t\t\t\t--noise3-primary-channel:   #77AADD;\n\t\t\t\t--noise3-secondary-note:    #6F9FCF;\n\t\t\t\t--noise3-primary-note:      #BBD7FF;\n\t\t\t\t--noise4-secondary-channel: #7A4F9A;\n\t\t\t\t--noise4-primary-channel:   #AF82D2;\n\t\t\t\t--noise4-secondary-note:    #9E71C1;\n\t\t\t\t--noise4-primary-note:      #D4C1EA;\n\t\t\t\t--noise5-secondary-channel: #607837;\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\n          --mod1-secondary-channel:   #339955;\n\t\t\t\t\t--mod1-primary-channel:     #77fc55;\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\n\t\t\t\t\t--mod1-primary-note:        #cdffee;\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\n\t\t\t\t\t--mod2-primary-note:        #ffb8de;\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\n\t\t\t\t\t--mod3-primary-note:\t    #f8ddff;\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\n\t\t\t\t\t--mod4-primary-note:        #fff6d3;\n\t\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t\t--disabled-note-secondary:  #666;\n\t\t\t\t}\n\t\t\t`,\n        \"dark competition\": `\n\t\t\t\t:root {\n\t\t\t\t\t--page-margin: black;\n\t\t\t\t\t--editor-background: black;\n\t\t\t\t\t--hover-preview: #ddd;\n\t\t\t\t\t--playhead: #ddd;\n\t\t\t\t\t--primary-text: #ddd;\n\t\t\t\t\t--secondary-text: #8e695b;\n\t\t\t\t\t--inverted-text: black;\n\t\t\t\t\t--text-selection: rgba(169,0,255,0.99);\n\t\t\t\t\t--box-selection-fill: rgba(221,221,221,0.2);\n\t\t\t\t\t--loop-accent: #bf15ba;\n\t\t\t\t\t--link-accent: #f888ff;\n\t\t\t\t\t--ui-widget-background: #443a3a;\n\t\t\t\t\t--ui-widget-focus: #777;\n\t\t\t\t\t--pitch-background: #353333;\n\t\t\t\t\t--tonic: #884a44;\n\t\t\t\t\t--fifth-note: #415498;\n\t\t\t\t\t--white-piano-key: #bbb;\n\t\t\t\t\t--black-piano-key: #444;\n\t\t\t\t\t--use-color-formula: false;\n\t\t\t\t\t--track-editor-bg-pitch: #444;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\n\t\t\t\t\t--track-editor-bg-noise: #444;\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\n\t\t\t\t\t--track-editor-bg-mod: #234;\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t\t\t--overwriting-mod-slider: #654;\n\t\t\t\t\t--indicator-primary: #74f;\n\t\t\t\t\t--indicator-secondary: #444;\n\t\t\t\t\t--select2-opt-group: #585858;\n\t\t\t\t\t--input-box-outline: #333;\n\t\t\t\t\t--mute-button-normal: #ffa033;\n\t\t\t\t\t--mute-button-mod: #9a6bff;\n\t\t\t\t\t--pitch1-secondary-channel: #0099a1;\n\t\t\t\t\t--pitch1-primary-channel:   #25f3ff;\n\t\t\t\t\t--pitch1-secondary-note:    #00bdc7;\n\t\t\t\t\t--pitch1-primary-note:      #92f9ff;\n\t\t\t\t\t--pitch2-secondary-channel: #a1a100;\n\t\t\t\t\t--pitch2-primary-channel:   #ffff25;\n\t\t\t\t\t--pitch2-secondary-note:    #c7c700;\n\t\t\t\t\t--pitch2-primary-note:      #ffff92;\n\t\t\t\t\t--pitch3-secondary-channel: #c75000;\n\t\t\t\t\t--pitch3-primary-channel:   #ff9752;\n\t\t\t\t\t--pitch3-secondary-note:    #ff771c;\n\t\t\t\t\t--pitch3-primary-note:      #ffcdab;\n\t\t\t\t\t--pitch4-secondary-channel: #00a100;\n\t\t\t\t\t--pitch4-primary-channel:   #50ff50;\n\t\t\t\t\t--pitch4-secondary-note:    #00c700;\n\t\t\t\t\t--pitch4-primary-note:      #a0ffa0;\n\t\t\t\t\t--pitch5-secondary-channel: #d020d0;\n\t\t\t\t\t--pitch5-primary-channel:   #ff90ff;\n\t\t\t\t\t--pitch5-secondary-note:    #e040e0;\n\t\t\t\t\t--pitch5-primary-note:      #ffc0ff;\n\t\t\t\t\t--pitch6-secondary-channel: #7777b0;\n\t\t\t\t\t--pitch6-primary-channel:   #a0a0ff;\n\t\t\t\t\t--pitch6-secondary-note:    #8888d0;\n\t\t\t\t\t--pitch6-primary-note:      #d0d0ff;\n\t\t\t\t\t--pitch7-secondary-channel: #8AA100;\n\t\t\t\t\t--pitch7-primary-channel:   #DEFF25;\n\t\t\t\t\t--pitch7-secondary-note:\t  #AAC700;\n\t\t\t\t\t--pitch7-primary-note:\t\t\t#E6FF92;\n\t\t\t\t\t--pitch8-secondary-channel: #DF0019;\n\t\t\t\t\t--pitch8-primary-channel:   #FF98A4;\n\t\t\t\t\t--pitch8-secondary-note:    #FF4E63;\n\t\t\t\t\t--pitch8-primary-note:      #FFB2BB;\n\t\t\t\t\t--pitch9-secondary-channel: #00A170;\n\t\t\t\t\t--pitch9-primary-channel:   #50FFC9;\n\t\t\t\t\t--pitch9-secondary-note:    #00C78A;\n\t\t\t\t\t--pitch9-primary-note:\t\t\t#83FFD9;\n\t\t\t\t\t--pitch10-secondary-channel:#A11FFF;\n\t\t\t\t\t--pitch10-primary-channel:  #CE8BFF;\n\t\t\t\t\t--pitch10-secondary-note:   #B757FF;\n\t\t\t\t\t--pitch10-primary-note:     #DFACFF;\n\t\t\t\t\t--noise1-secondary-channel: #6f6f6f;\n\t\t\t\t\t--noise1-primary-channel:   #aaaaaa;\n\t\t\t\t\t--noise1-secondary-note:    #a7a7a7;\n\t\t\t\t\t--noise1-primary-note:      #e0e0e0;\n\t\t\t\t\t--noise2-secondary-channel: #996633;\n\t\t\t\t\t--noise2-primary-channel:   #ddaa77;\n\t\t\t\t\t--noise2-secondary-note:    #cc9966;\n\t\t\t\t\t--noise2-primary-note:      #f0d0bb;\n\t\t\t\t\t--noise3-secondary-channel: #4a6d8f;\n\t\t\t\t\t--noise3-primary-channel:   #77aadd;\n\t\t\t\t\t--noise3-secondary-note:    #6f9fcf;\n\t\t\t\t\t--noise3-primary-note:      #bbd7ff;\n\t\t\t\t\t--noise4-secondary-channel: #6B3E8E;\n\t\t\t\t\t--noise4-primary-channel:   #AF82D2;\n\t\t\t\t\t--noise4-secondary-note:    #9E71C1;\n\t\t\t\t\t--noise4-primary-note:      #D4C1EA;\n\t\t\t\t\t--noise5-secondary-channel: #607837;\n\t\t\t\t\t--noise5-primary-channel:   #A2BB77;\n\t\t\t\t\t--noise5-secondary-note:    #91AA66;\n\t\t\t\t\t--noise5-primary-note:      #C5E2B2;\n\t\t\t\t\t--mod1-secondary-channel:   #339955;\n\t\t\t\t\t--mod1-primary-channel:     #77fc55;\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\n\t\t\t\t\t--mod1-primary-note:        #cdffee;\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\n\t\t\t\t\t--mod2-primary-note:        #ffb8de;\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\n\t\t\t\t\t--mod3-primary-note:\t\t\t  #f8ddff;\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\n\t\t\t\t\t--mod4-primary-note:        #fff6d3;\n\t\t\t\t\t--mod-label-primary:        #999;\n\t\t\t\t\t--mod-label-secondary-text: #333;\n\t\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t\t--disabled-note-primary:    #999;\n\t\t\t\t\t--disabled-note-secondary:  #666;\n\n\t\t\t}\n\t\t`,\n        \"light classic\": `\n\t\t\t:root {\n\t\t\t\t-webkit-text-stroke-width: 0.5px;\n\t\t\t\t--page-margin: #685d88;\n\t\t\t\t--editor-background: white;\n\t\t\t\t--hover-preview: black;\n\t\t\t\t--playhead: rgba(0,0,0,0.5);\n\t\t\t\t--primary-text: black;\n\t\t\t\t--secondary-text: #777;\n\t\t\t\t--inverted-text: white;\n\t\t\t\t--text-selection: rgba(200,170,255,0.99);\n\t\t\t\t--box-selection-fill: rgba(0,0,0,0.1);\n\t\t\t\t--loop-accent: #98f;\n\t\t\t\t--link-accent: #74f;\n\t\t\t\t--ui-widget-background: #ececec;\n\t\t\t\t--ui-widget-focus: #eee;\n\t\t\t\t--pitch-background: #ececec;\n\t\t\t\t--tonic: #f0d6b6;\n\t\t\t\t--fifth-note: #bbddf0;\n\t\t\t\t--white-piano-key: #eee;\n\t\t\t\t--black-piano-key: #666;\n\t\t\t\t\t--use-color-formula: false;\n\t\t\t\t\t--track-editor-bg-pitch: #ececec;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #fdfdfd;\n\t\t\t\t\t--track-editor-bg-noise: #ececec;\n\t\t\t\t\t--track-editor-bg-noise-dim: #fdfdfd;\n\t\t\t\t\t--track-editor-bg-mod: #dbecfd;\n\t\t\t\t\t--track-editor-bg-mod-dim: #ecfdff;\n\t\t\t\t\t--multiplicative-mod-slider: #789;\n\t\t\t\t\t--overwriting-mod-slider: #987;\n\t\t\t\t\t--indicator-primary: #98f;\n\t\t\t\t\t--indicator-secondary: #cde;\n\t\t\t\t\t--select2-opt-group: #cecece;\n\t\t\t\t\t--input-box-outline: #ddd;\n\t\t\t\t\t--mute-button-normal: #c0b47f;\n\t\t\t\t\t--mute-button-mod: #bd7fc0;\n\t\t\t\t--pitch1-secondary-channel: #6CD9ED;\n\t\t\t\t--pitch1-primary-channel:   #00A0BD;\n\t\t\t\t--pitch1-secondary-note:    #34C2DC;\n\t\t\t\t--pitch1-primary-note:      #00758A;\n\t\t\t\t--pitch2-secondary-channel: #E3C941;\n\t\t\t\t--pitch2-primary-channel:   #B49700;\n\t\t\t\t--pitch2-secondary-note:    #D1B628;\n\t\t\t\t--pitch2-primary-note:      #836E00;\n\t\t\t\t--pitch3-secondary-channel: #FF9D61;\n\t\t\t\t--pitch3-primary-channel:   #E14E00;\n\t\t\t\t--pitch3-secondary-note:    #F67D3C;\n\t\t\t\t--pitch3-primary-note:      #B64000;\n\t\t\t\t--pitch4-secondary-channel: #4BE24B;\n\t\t\t\t--pitch4-primary-channel:   #00A800;\n\t\t\t\t--pitch4-secondary-note:    #2DC82D;\n\t\t\t\t--pitch4-primary-note:      #008000;\n\t\t\t\t--pitch5-secondary-channel: #FF90FF;\n\t\t\t\t--pitch5-primary-channel:   #E12EDF;\n\t\t\t\t--pitch5-secondary-note:    #EC6EEC;\n\t\t\t\t--pitch5-primary-note:      #A600A5;\n\t\t\t\t--pitch6-secondary-channel: #B5B5FE;\n\t\t\t\t--pitch6-primary-channel:   #6969FD;\n\t\t\t\t--pitch6-secondary-note:    #9393FE;\n\t\t\t\t--pitch6-primary-note:      #4A4AD7;\n\t\t\t\t--pitch7-secondary-channel: #C2D848;\n\t\t\t\t--pitch7-primary-channel:   #8EA800;\n\t\t\t\t--pitch7-secondary-note:    #B0C82D;\n\t\t\t\t--pitch7-primary-note:      #6C8000;\n\t\t\t\t--pitch8-secondary-channel: #FF90A4;\n\t\t\t\t--pitch8-primary-channel:   #E12E4D;\n\t\t\t\t--pitch8-secondary-note:    #EC6E85;\n\t\t\t\t--pitch8-primary-note:      #A6001D;\n\t\t\t\t--pitch9-secondary-channel: #41E3B5;\n\t\t\t\t--pitch9-primary-channel:   #00B481;\n\t\t\t\t--pitch9-secondary-note:    #28D1A1;\n\t\t\t\t--pitch9-primary-note:      #00835E;\n\t\t\t\t--pitch10-secondary-channel:#CA77FF;\n\t\t\t\t--pitch10-primary-channel:  #9609FF;\n\t\t\t\t--pitch10-secondary-note:   #B54FFF;\n\t\t\t\t--pitch10-primary-note:     #8400E3;\n\t\t\t\t--noise1-secondary-channel: #C1C1C1;\n\t\t\t\t--noise1-primary-channel:   #898989;\n\t\t\t\t--noise1-secondary-note:    #ADADAD;\n\t\t\t\t--noise1-primary-note:      #6C6C6C;\n\t\t\t\t--noise2-secondary-channel: #E8BB8C;\n\t\t\t\t--noise2-primary-channel:   #BD7D3A;\n\t\t\t\t--noise2-secondary-note:    #D1A374;\n\t\t\t\t--noise2-primary-note:      #836342;\n\t\t\t\t--noise3-secondary-channel: #9BC4EB;\n\t\t\t\t--noise3-primary-channel:   #4481BE;\n\t\t\t\t--noise3-secondary-note:    #7CA7D3;\n\t\t\t\t--noise3-primary-note:      #476685;\n\t\t\t\t--noise4-secondary-channel: #C5A5E0;\n\t\t\t\t--noise4-primary-channel:   #8553AE;\n\t\t\t\t--noise4-secondary-note:    #B290CC;\n\t\t\t\t--noise4-primary-note:      #684F7D;\n\t\t\t\t--noise5-secondary-channel: #B8CE93;\n\t\t\t\t--noise5-primary-channel:   #87A74F;\n\t\t\t\t--noise5-secondary-note:    #ABC183;\n\t\t\t\t--noise5-primary-note:      #68784C;\n\t\t\t\t\t--mod1-secondary-channel:   #339955;\n\t\t\t\t\t--mod1-primary-channel:     #77dd55;\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\n\t\t\t\t\t--mod1-primary-note:        #2ad84a;\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\n\t\t\t\t\t--mod2-primary-note:        #ba124a;\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\n\t\t\t\t\t--mod3-primary-note:        #7a1caa;\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\n\t\t\t\t\t--mod4-primary-note:        #a86810;\n\t\t\t\t\t--mod-label-primary:        #dddddd;\n\t\t\t\t\t--mod-label-secondary-text: #777;\n\t\t\t\t\t--mod-label-primary-text:   black;\n\t\t\t\t\t--disabled-note-primary:    #666;\n\t\t\t\t\t--disabled-note-secondary:  #aaa;\n\t\t\t}\n\t\t\t\n\t\t\t.beepboxEditor button, .beepboxEditor select {\n\t\t\t\tbox-shadow: inset 0 0 0 1px var(--secondary-text);\n\t\t\t}\n\n\t\t\t\t.select2-selection__rendered {\n\t\t\t\t\tbox-shadow: inset 0 0 0 1px var(--secondary-text);\n\t\t\t\t}\n\t\t`,\n        \"jummbox classic\": `\n\t\t\t\t:root {\n\t\t\t\t\t--page-margin: #040410;\n\t\t\t\t\t--editor-background: #040410;\n\t\t\t\t\t--hover-preview: white;\n\t\t\t\t\t--playhead: rgba(255, 255, 255, 0.9);\n\t\t\t\t\t--primary-text: white;\n\t\t\t\t\t--secondary-text: #84859a;\n\t\t\t\t\t--inverted-text: black;\n\t\t\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t\t\t--box-selection-fill: #044b94;\n\t\t\t\t\t--loop-accent: #74f;\n\t\t\t\t\t--link-accent: #98f;\n\t\t\t\t\t--ui-widget-background: #393e4f;\n\t\t\t\t\t--ui-widget-focus: #6d6886;\n\t\t\t\t\t--pitch-background: #393e4f;\n\t\t\t\t\t--tonic: #725491;\n\t\t\t\t\t--fifth-note: #54547a;\n\t\t\t\t\t--white-piano-key: #eee;\n\t\t\t\t\t--black-piano-key: #666;\n\t\t\t\t\t--use-color-formula: true;\n\t\t\t\t\t--track-editor-bg-pitch: #393e4f;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #1c1d28;\n\t\t\t\t\t--track-editor-bg-noise: #3d3535;\n\t\t\t\t\t--track-editor-bg-noise-dim: #161313;\n\t\t\t\t\t--track-editor-bg-mod: #283560;\n\t\t\t\t\t--track-editor-bg-mod-dim: #0a101f;\n\t\t\t\t\t--multiplicative-mod-slider: #606c9f;\n\t\t\t\t\t--overwriting-mod-slider: #6850b5;\n\t\t\t\t\t--indicator-primary: #9c64f7;\n\t\t\t\t\t--indicator-secondary: #393e4f;\n\t\t\t\t\t--select2-opt-group: #5d576f;\n\t\t\t\t\t--input-box-outline: #222;\n\t\t\t\t\t--mute-button-normal: #dda85d;\n\t\t\t\t\t--mute-button-mod: #886eae;\n\t\t\t\t\t--mod-label-primary: #282840;\n\t\t\t\t\t--mod-label-secondary-text: rgb(87, 86, 120);\n\t\t\t\t\t--mod-label-primary-text: white;\n\t\t\t\t\t--pitch-secondary-channel-hue: 0;\n\t\t\t\t\t--pitch-secondary-channel-hue-scale: 6.5;\n\t\t\t\t\t--pitch-secondary-channel-sat: 83.3;\n\t\t\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\n\t\t\t\t\t--pitch-secondary-channel-lum: 40;\n\t\t\t\t\t--pitch-secondary-channel-lum-scale: 0.05;\n\t\t\t\t\t--pitch-primary-channel-hue: 0;\n\t\t\t\t\t--pitch-primary-channel-hue-scale: 6.5;\n\t\t\t\t\t--pitch-primary-channel-sat: 100;\n\t\t\t\t\t--pitch-primary-channel-sat-scale: 0.1;\n\t\t\t\t\t--pitch-primary-channel-lum: 67.5;\n\t\t\t\t\t--pitch-primary-channel-lum-scale: 0.05;\n\t\t\t\t\t--pitch-secondary-note-hue: 0;\n\t\t\t\t\t--pitch-secondary-note-hue-scale: 6.5;\n\t\t\t\t\t--pitch-secondary-note-sat: 93.9;\n\t\t\t\t\t--pitch-secondary-note-sat-scale: 0.1;\n\t\t\t\t\t--pitch-secondary-note-lum: 25;\n\t\t\t\t\t--pitch-secondary-note-lum-scale: 0.05;\n\t\t\t\t\t--pitch-primary-note-hue: 0;\n\t\t\t\t\t--pitch-primary-note-hue-scale: 6.5;\n\t\t\t\t\t--pitch-primary-note-sat: 100;\n\t\t\t\t\t--pitch-primary-note-sat-scale: 0.05;\n\t\t\t\t\t--pitch-primary-note-lum: 85.6;\n\t\t\t\t\t--pitch-primary-note-lum-scale: 0.025;\n\t\t\t\t\t--noise-secondary-channel-hue: 0;\n\t\t\t\t\t--noise-secondary-channel-hue-scale: 2;\n\t\t\t\t\t--noise-secondary-channel-sat: 25;\n\t\t\t\t\t--noise-secondary-channel-sat-scale: 0;\n\t\t\t\t\t--noise-secondary-channel-lum: 42;\n\t\t\t\t\t--noise-secondary-channel-lum-scale: 0;\n\t\t\t\t\t--noise-primary-channel-hue: 0;\n\t\t\t\t\t--noise-primary-channel-hue-scale: 2;\n\t\t\t\t\t--noise-primary-channel-sat: 33;\n\t\t\t\t\t--noise-primary-channel-sat-scale: 0;\n\t\t\t\t\t--noise-primary-channel-lum: 63.5;\n\t\t\t\t\t--noise-primary-channel-lum-scale: 0;\n\t\t\t\t\t--noise-secondary-note-hue: 0;\n\t\t\t\t\t--noise-secondary-note-hue-scale: 2;\n\t\t\t\t\t--noise-secondary-note-sat: 33.5;\n\t\t\t\t\t--noise-secondary-note-sat-scale: 0;\n\t\t\t\t\t--noise-secondary-note-lum: 55;\n\t\t\t\t\t--noise-secondary-note-lum-scale: 0;\n\t\t\t\t\t--noise-primary-note-hue: 0;\n\t\t\t\t\t--noise-primary-note-hue-scale: 2;\n\t\t\t\t\t--noise-primary-note-sat: 46.5;\n\t\t\t\t\t--noise-primary-note-sat-scale: 0;\n\t\t\t\t\t--noise-primary-note-lum: 74;\n\t\t\t\t\t--noise-primary-note-lum-scale: 0;\n\t\t\t\t\t--mod-secondary-channel-hue: 192;\n\t\t\t\t\t--mod-secondary-channel-hue-scale: 1.5;\n\t\t\t\t\t--mod-secondary-channel-sat: 88;\n\t\t\t\t\t--mod-secondary-channel-sat-scale: 0;\n\t\t\t\t\t--mod-secondary-channel-lum: 50;\n\t\t\t\t\t--mod-secondary-channel-lum-scale: 0;\n\t\t\t\t\t--mod-primary-channel-hue: 192;\n\t\t\t\t\t--mod-primary-channel-hue-scale: 1.5;\n\t\t\t\t\t--mod-primary-channel-sat: 96;\n\t\t\t\t\t--mod-primary-channel-sat-scale: 0;\n\t\t\t\t\t--mod-primary-channel-lum: 80;\n\t\t\t\t\t--mod-primary-channel-lum-scale: 0;\n\t\t\t\t\t--mod-secondary-note-hue: 192;\n\t\t\t\t\t--mod-secondary-note-hue-scale: 1.5;\n\t\t\t\t\t--mod-secondary-note-sat: 92;\n\t\t\t\t\t--mod-secondary-note-sat-scale: 0;\n\t\t\t\t\t--mod-secondary-note-lum: 45;\n\t\t\t\t\t--mod-secondary-note-lum-scale: 0;\n\t\t\t\t\t--mod-primary-note-hue: 192;\n\t\t\t\t\t--mod-primary-note-hue-scale: 1.5;\n\t\t\t\t\t--mod-primary-note-sat: 96;\n\t\t\t\t\t--mod-primary-note-sat-scale: 0;\n\t\t\t\t\t--mod-primary-note-lum: 85;\n\t\t\t\t\t--mod-primary-note-lum-scale: 0;\n\t\t\t\t\t--disabled-note-primary:    #91879f;\n\t\t\t\t\t--disabled-note-secondary:  #6a677a;\n\t\t\t\t}\n\t\t\t`,\n        \"forest\": `\n\t\t\t\t:root {\n\t\t\t\t\t--page-margin: #010c03;\n\t\t\t\t\t--editor-background: #010c03;\n\t\t\t\t\t--hover-preview: #efe;\n\t\t\t\t\t--playhead: rgba(232, 255, 232, 0.9);\n\t\t\t\t\t--primary-text: #efe;\n\t\t\t\t\t--secondary-text: #70A070;\n\t\t\t\t\t--inverted-text: #280228;\n\t\t\t\t\t--text-selection: rgba(255,68,199,0.99);\n\t\t\t\t\t--box-selection-fill: #267aa3;\n\t\t\t\t\t--loop-accent: #ffe845;\n\t\t\t\t\t--link-accent: #9f8;\n\t\t\t\t\t--ui-widget-background: #203829;\n\t\t\t\t\t--ui-widget-focus: #487860;\n\t\t\t\t\t--pitch-background: #203829;\n\t\t\t\t\t--tonic: #2b8d20;\n\t\t\t\t\t--fifth-note: #385840;\n\t\t\t\t\t--white-piano-key: #bda;\n\t\t\t\t\t--black-piano-key: #573;\n\t\t\t\t\t--use-color-formula: true;\n\t\t\t\t\t--track-editor-bg-pitch: #254820;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #102819;\n\t\t\t\t\t--track-editor-bg-noise: #304050;\n\t\t\t\t\t--track-editor-bg-noise-dim: #102030;\n\t\t\t\t\t--track-editor-bg-mod: #506030;\n\t\t\t\t\t--track-editor-bg-mod-dim: #2a300a;\n\t\t\t\t\t--multiplicative-mod-slider: #205c8f;\n\t\t\t\t\t--overwriting-mod-slider: #20ac6f;\n\t\t\t\t\t--indicator-primary: #dcd866;\n\t\t\t\t\t--indicator-secondary: #203829;\n\t\t\t\t\t--select2-opt-group: #1a6f5a;\n\t\t\t\t\t--input-box-outline: #242;\n\t\t\t\t\t--mute-button-normal: #49e980;\n\t\t\t\t\t--mute-button-mod: #c2e502;\n\t\t\t\t\t--mod-label-primary: #133613;\n\t\t\t\t\t--mod-label-secondary-text: rgb(27, 126, 40);\n\t\t\t\t\t--mod-label-primary-text: #efe;\n\t\t\t\t\t--pitch-secondary-channel-hue: 120;\n\t\t\t\t\t--pitch-secondary-channel-hue-scale: 8.1;\n\t\t\t\t\t--pitch-secondary-channel-sat: 59;\n\t\t\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\n\t\t\t\t\t--pitch-secondary-channel-lum: 50;\n\t\t\t\t\t--pitch-secondary-channel-lum-scale: 0.04;\n\t\t\t\t\t--pitch-primary-channel-hue: 120;\n\t\t\t\t\t--pitch-primary-channel-hue-scale: 8.1;\n\t\t\t\t\t--pitch-primary-channel-sat: 86;\n\t\t\t\t\t--pitch-primary-channel-sat-scale: 0.1;\n\t\t\t\t\t--pitch-primary-channel-lum: 70;\n\t\t\t\t\t--pitch-primary-channel-lum-scale: 0.04;\n\t\t\t\t\t--pitch-secondary-note-hue: 120;\n\t\t\t\t\t--pitch-secondary-note-hue-scale: 8.1;\n\t\t\t\t\t--pitch-secondary-note-sat: 85;\n\t\t\t\t\t--pitch-secondary-note-sat-scale: 0.1;\n\t\t\t\t\t--pitch-secondary-note-lum: 30;\n\t\t\t\t\t--pitch-secondary-note-lum-scale: 0.04;\n\t\t\t\t\t--pitch-primary-note-hue: 120;\n\t\t\t\t\t--pitch-primary-note-hue-scale: 8.1;\n\t\t\t\t\t--pitch-primary-note-sat: 90;\n\t\t\t\t\t--pitch-primary-note-sat-scale: 0.05;\n\t\t\t\t\t--pitch-primary-note-lum: 80;\n\t\t\t\t\t--pitch-primary-note-lum-scale: 0.025;\n\t\t\t\t\t--noise-secondary-channel-hue: 200;\n\t\t\t\t\t--noise-secondary-channel-hue-scale: 1.1;\n\t\t\t\t\t--noise-secondary-channel-sat: 25;\n\t\t\t\t\t--noise-secondary-channel-sat-scale: 0;\n\t\t\t\t\t--noise-secondary-channel-lum: 22;\n\t\t\t\t\t--noise-secondary-channel-lum-scale: 0;\n\t\t\t\t\t--noise-primary-channel-hue: 200;\n\t\t\t\t\t--noise-primary-channel-hue-scale: 1.1;\n\t\t\t\t\t--noise-primary-channel-sat: 48;\n\t\t\t\t\t--noise-primary-channel-sat-scale: 0;\n\t\t\t\t\t--noise-primary-channel-lum: 65;\n\t\t\t\t\t--noise-primary-channel-lum-scale: 0;\n\t\t\t\t\t--noise-secondary-note-hue: 200;\n\t\t\t\t\t--noise-secondary-note-hue-scale: 1.1;\n\t\t\t\t\t--noise-secondary-note-sat: 33.5;\n\t\t\t\t\t--noise-secondary-note-sat-scale: 0;\n\t\t\t\t\t--noise-secondary-note-lum: 33;\n\t\t\t\t\t--noise-secondary-note-lum-scale: 0;\n\t\t\t\t\t--noise-primary-note-hue: 200;\n\t\t\t\t\t--noise-primary-note-hue-scale: 1.1;\n\t\t\t\t\t--noise-primary-note-sat: 46.5;\n\t\t\t\t\t--noise-primary-note-sat-scale: 0;\n\t\t\t\t\t--noise-primary-note-lum: 64;\n\t\t\t\t\t--noise-primary-note-lum-scale: 0;\n\t\t\t\t\t--mod-secondary-channel-hue: 40;\n\t\t\t\t\t--mod-secondary-channel-hue-scale: 1.8;\n\t\t\t\t\t--mod-secondary-channel-sat: 44;\n\t\t\t\t\t--mod-secondary-channel-sat-scale: 0;\n\t\t\t\t\t--mod-secondary-channel-lum: 50;\n\t\t\t\t\t--mod-secondary-channel-lum-scale: 0;\n\t\t\t\t\t--mod-primary-channel-hue: 40;\n\t\t\t\t\t--mod-primary-channel-hue-scale: 1.8;\n\t\t\t\t\t--mod-primary-channel-sat: 60;\n\t\t\t\t\t--mod-primary-channel-sat-scale: 0;\n\t\t\t\t\t--mod-primary-channel-lum: 80;\n\t\t\t\t\t--mod-primary-channel-lum-scale: 0;\n\t\t\t\t\t--mod-secondary-note-hue: 40;\n\t\t\t\t\t--mod-secondary-note-hue-scale: 1.8;\n\t\t\t\t\t--mod-secondary-note-sat: 62;\n\t\t\t\t\t--mod-secondary-note-sat-scale: 0;\n\t\t\t\t\t--mod-secondary-note-lum: 55;\n\t\t\t\t\t--mod-secondary-note-lum-scale: 0;\n\t\t\t\t\t--mod-primary-note-hue: 40;\n\t\t\t\t\t--mod-primary-note-hue-scale: 1.8;\n\t\t\t\t\t--mod-primary-note-sat: 66;\n\t\t\t\t\t--mod-primary-note-sat-scale: 0;\n\t\t\t\t\t--mod-primary-note-lum: 85;\n\t\t\t\t\t--mod-primary-note-lum-scale: 0;\n\t\t\t\t\t--disabled-note-primary:    #536e5c;\n\t\t\t\t\t--disabled-note-secondary:  #395440;\n\t\t\t\t}\n\t\t\t`,\n        \"canyon\": `\n\t\t\t\t:root {\n\t\t\t\t\t--page-margin: #0a0000;\n\t\t\t\t\t--editor-background: #0a0000;\n\t\t\t\t\t--hover-preview: white;\n\t\t\t\t\t--playhead: rgba(247, 172, 196, 0.9);\n\t\t\t\t\t--primary-text: #f5d6bf;\n\t\t\t\t\t--secondary-text: #934050;\n\t\t\t\t\t--inverted-text: #290505;\n\t\t\t\t\t--text-selection: rgba(255, 208, 68, 0.99);\n\t\t\t\t\t--box-selection-fill: #94044870;\n\t\t\t\t\t--loop-accent: #ff1e1e;\n\t\t\t\t\t--link-accent: #da7b76;\n\t\t\t\t\t--ui-widget-background: #533137;\n\t\t\t\t\t--ui-widget-focus: #743e4b;\n\t\t\t\t\t--pitch-background: #4f3939;\n\t\t\t\t\t--tonic: #9e4145;\n\t\t\t\t\t--fifth-note: #5b3e6b;\n\t\t\t\t\t--white-piano-key: #d89898;\n\t\t\t\t\t--black-piano-key: #572b29;\n\t\t\t\t\t--use-color-formula: true;\n\t\t\t\t\t--track-editor-bg-pitch: #5e3a41;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #281d1c;\n\t\t\t\t\t--track-editor-bg-noise: #3a3551;\n\t\t\t\t\t--track-editor-bg-noise-dim: #272732;\n\t\t\t\t\t--track-editor-bg-mod: #552045;\n\t\t\t\t\t--track-editor-bg-mod-dim: #3e1442;\n\t\t\t\t\t--multiplicative-mod-slider: #9f6095;\n\t\t\t\t\t--overwriting-mod-slider: #b55050;\n\t\t\t\t\t--indicator-primary: #f2f764;\n\t\t\t\t\t--indicator-secondary: #4f3939;\n\t\t\t\t\t--select2-opt-group: #673030;\n\t\t\t\t\t--input-box-outline: #443131;\n\t\t\t\t\t--mute-button-normal: #d81833;\n\t\t\t\t\t--mute-button-mod: #9e2691;\n\t\t\t\t\t--mod-label-primary: #5f2b39;\n\t\t\t\t\t--mod-label-secondary-text: rgb(158, 66, 122);\n\t\t\t\t\t--mod-label-primary-text: #e6caed;\n\t\t\t\t\t--pitch-secondary-channel-hue: 0;\n\t\t\t\t\t--pitch-secondary-channel-hue-scale: 11.8;\n\t\t\t\t\t--pitch-secondary-channel-sat: 73.3;\n\t\t\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\n\t\t\t\t\t--pitch-secondary-channel-lum: 40;\n\t\t\t\t\t--pitch-secondary-channel-lum-scale: 0.05;\n\t\t\t\t\t--pitch-primary-channel-hue: 0;\n\t\t\t\t\t--pitch-primary-channel-hue-scale: 11.8;\n\t\t\t\t\t--pitch-primary-channel-sat: 90;\n\t\t\t\t\t--pitch-primary-channel-sat-scale: 0.1;\n\t\t\t\t\t--pitch-primary-channel-lum: 67.5;\n\t\t\t\t\t--pitch-primary-channel-lum-scale: 0.05;\n\t\t\t\t\t--pitch-secondary-note-hue: 0;\n\t\t\t\t\t--pitch-secondary-note-hue-scale: 11.8;\n\t\t\t\t\t--pitch-secondary-note-sat: 83.9;\n\t\t\t\t\t--pitch-secondary-note-sat-scale: 0.1;\n\t\t\t\t\t--pitch-secondary-note-lum: 35;\n\t\t\t\t\t--pitch-secondary-note-lum-scale: 0.05;\n\t\t\t\t\t--pitch-primary-note-hue: 0;\n\t\t\t\t\t--pitch-primary-note-hue-scale: 11.8;\n\t\t\t\t\t--pitch-primary-note-sat: 100;\n\t\t\t\t\t--pitch-primary-note-sat-scale: 0.05;\n\t\t\t\t\t--pitch-primary-note-lum: 85.6;\n\t\t\t\t\t--pitch-primary-note-lum-scale: 0.025;\n\t\t\t\t\t--noise-secondary-channel-hue: 60;\n\t\t\t\t\t--noise-secondary-channel-hue-scale: 2;\n\t\t\t\t\t--noise-secondary-channel-sat: 25;\n\t\t\t\t\t--noise-secondary-channel-sat-scale: 0;\n\t\t\t\t\t--noise-secondary-channel-lum: 42;\n\t\t\t\t\t--noise-secondary-channel-lum-scale: 0;\n\t\t\t\t\t--noise-primary-channel-hue: 60;\n\t\t\t\t\t--noise-primary-channel-hue-scale: 2;\n\t\t\t\t\t--noise-primary-channel-sat: 33;\n\t\t\t\t\t--noise-primary-channel-sat-scale: 0;\n\t\t\t\t\t--noise-primary-channel-lum: 63.5;\n\t\t\t\t\t--noise-primary-channel-lum-scale: 0;\n\t\t\t\t\t--noise-secondary-note-hue: 60;\n\t\t\t\t\t--noise-secondary-note-hue-scale: 2;\n\t\t\t\t\t--noise-secondary-note-sat: 33.5;\n\t\t\t\t\t--noise-secondary-note-sat-scale: 0;\n\t\t\t\t\t--noise-secondary-note-lum: 55;\n\t\t\t\t\t--noise-secondary-note-lum-scale: 0;\n\t\t\t\t\t--noise-primary-note-hue: 60;\n\t\t\t\t\t--noise-primary-note-hue-scale: 2;\n\t\t\t\t\t--noise-primary-note-sat: 46.5;\n\t\t\t\t\t--noise-primary-note-sat-scale: 0;\n\t\t\t\t\t--noise-primary-note-lum: 74;\n\t\t\t\t\t--noise-primary-note-lum-scale: 0;\n\t\t\t\t\t--mod-secondary-channel-hue: 222;\n\t\t\t\t\t--mod-secondary-channel-hue-scale: 1.5;\n\t\t\t\t\t--mod-secondary-channel-sat: 88;\n\t\t\t\t\t--mod-secondary-channel-sat-scale: 0;\n\t\t\t\t\t--mod-secondary-channel-lum: 50;\n\t\t\t\t\t--mod-secondary-channel-lum-scale: 0;\n\t\t\t\t\t--mod-primary-channel-hue: 222;\n\t\t\t\t\t--mod-primary-channel-hue-scale: 1.5;\n\t\t\t\t\t--mod-primary-channel-sat: 96;\n\t\t\t\t\t--mod-primary-channel-sat-scale: 0;\n\t\t\t\t\t--mod-primary-channel-lum: 80;\n\t\t\t\t\t--mod-primary-channel-lum-scale: 0;\n\t\t\t\t\t--mod-secondary-note-hue: 222;\n\t\t\t\t\t--mod-secondary-note-hue-scale: 1.5;\n\t\t\t\t\t--mod-secondary-note-sat: 92;\n\t\t\t\t\t--mod-secondary-note-sat-scale: 0;\n\t\t\t\t\t--mod-secondary-note-lum: 54;\n\t\t\t\t\t--mod-secondary-note-lum-scale: 0;\n\t\t\t\t\t--mod-primary-note-hue: 222;\n\t\t\t\t\t--mod-primary-note-hue-scale: 1.5;\n\t\t\t\t\t--mod-primary-note-sat: 96;\n\t\t\t\t\t--mod-primary-note-sat-scale: 0;\n\t\t\t\t\t--mod-primary-note-lum: 75;\n\t\t\t\t\t--mod-primary-note-lum-scale: 0;\n\t\t\t\t\t--disabled-note-primary:    #515164;\n\t\t\t\t\t--disabled-note-secondary:  #2a2a3a;\n\t\t\t\t}\n\t\t\t`,\n        \"midnight\": `\n\t\t:root {\n\t\t\t--page-margin: #000;\n\t\t\t--editor-background: #000;\n\t\t\t--hover-preview: #757575;\n\t\t\t--playhead: #fff;\n\t\t\t--primary-text: #fff;\n\t\t\t--secondary-text: #acacac;\n\t\t\t--inverted-text: #290505;\n\t\t\t--text-selection: rgba(155, 155, 155, 0.99);\n\t\t\t--box-selection-fill: #79797970;\n\t\t\t--loop-accent: #646464;\n\t\t\t--link-accent: #707070;\n\t\t\t--ui-widget-background: #353535;\n\t\t\t--ui-widget-focus: #464646;\n\t\t\t--pitch-background: #222121;\n\t\t\t--tonic: #555955;\n\t\t\t--fifth-note: #1a1818;\n\t\t\t--white-piano-key: #a89e9e;\n\t\t\t--black-piano-key: #2d2424;\n\t\t\t--use-color-formula: true;\n\t\t\t--track-editor-bg-pitch: #373737;\n\t\t\t--track-editor-bg-pitch-dim: #131313;\n\t\t\t--track-editor-bg-noise: #484848;\n\t\t\t--track-editor-bg-noise-dim: #131313;\n\t\t\t--track-editor-bg-mod: #373737;\n\t\t\t--track-editor-bg-mod-dim: #131313;\n\t\t\t--multiplicative-mod-slider: #555;\n\t\t\t--overwriting-mod-slider: #464545;\n\t\t\t--indicator-primary: #e0e0e0;\n\t\t\t--indicator-secondary: #404040;\n\t\t\t--select2-opt-group: #3c3b3b;\n\t\t\t--input-box-outline: #757575;\n\t\t\t--mute-button-normal: #8e8d8d;\n\t\t\t--mute-button-mod: #ddd;\n\t\t\t--mod-label-primary: #262526;\n\t\t\t--mod-label-secondary-text: rgb(227, 222, 225);\n\t\t\t--mod-label-primary-text: #b9b9b9;\n\t\t\t--pitch-secondary-channel-hue: 240;\n\t\t\t--pitch-secondary-channel-hue-scale: 228;\n\t\t\t--pitch-secondary-channel-sat: 73.3;\n\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\n\t\t\t--pitch-secondary-channel-lum: 25;\n\t\t\t--pitch-secondary-channel-lum-scale: 0.05;\n\t\t\t--pitch-primary-channel-hue: 240;\n\t\t\t--pitch-primary-channel-hue-scale: 228;\n\t\t\t--pitch-primary-channel-sat: 80;\n\t\t\t--pitch-primary-channel-sat-scale: 0.1;\n\t\t\t--pitch-primary-channel-lum: 60.5;\n\t\t\t--pitch-primary-channel-lum-scale: 0.05;\n\t\t\t--pitch-secondary-note-hue: 240;\n\t\t\t--pitch-secondary-note-hue-scale: 228;\n\t\t\t--pitch-secondary-note-sat: 73.9;\n\t\t\t--pitch-secondary-note-sat-scale: 0.1;\n\t\t\t--pitch-secondary-note-lum: 32;\n\t\t\t--pitch-secondary-note-lum-scale: 0.05;\n\t\t\t--pitch-primary-note-hue: 240;\n\t\t\t--pitch-primary-note-hue-scale: 228;\n\t\t\t--pitch-primary-note-sat: 90;\n\t\t\t--pitch-primary-note-sat-scale: 0.05;\n\t\t\t--pitch-primary-note-lum: 80.6;\n\t\t\t--pitch-primary-note-lum-scale: 0.025;\n\t\t\t--noise-secondary-channel-hue: 160;\n\t\t\t--noise-secondary-channel-hue-scale: 2;\n\t\t\t--noise-secondary-channel-sat: 25;\n\t\t\t--noise-secondary-channel-sat-scale: 0;\n\t\t\t--noise-secondary-channel-lum: 42;\n\t\t\t--noise-secondary-channel-lum-scale: 0;\n\t\t\t--noise-primary-channel-hue: 160;\n\t\t\t--noise-primary-channel-hue-scale: 2;\n\t\t\t--noise-primary-channel-sat: 33;\n\t\t\t--noise-primary-channel-sat-scale: 0;\n\t\t\t--noise-primary-channel-lum: 63.5;\n\t\t\t--noise-primary-channel-lum-scale: 0;\n\t\t\t--noise-secondary-note-hue: 160;\n\t\t\t--noise-secondary-note-hue-scale: 2;\n\t\t\t--noise-secondary-note-sat: 33.5;\n\t\t\t--noise-secondary-note-sat-scale: 0;\n\t\t\t--noise-secondary-note-lum: 55;\n\t\t\t--noise-secondary-note-lum-scale: 0;\n\t\t\t--noise-primary-note-hue: 160;\n\t\t\t--noise-primary-note-hue-scale: 2;\n\t\t\t--noise-primary-note-sat: 46.5;\n\t\t\t--noise-primary-note-sat-scale: 0;\n\t\t\t--noise-primary-note-lum: 74;\n\t\t\t--noise-primary-note-lum-scale: 0;\n\t\t\t--mod-secondary-channel-hue: 62;\n\t\t\t--mod-secondary-channel-hue-scale: 1.5;\n\t\t\t--mod-secondary-channel-sat: 88;\n\t\t\t--mod-secondary-channel-sat-scale: 0;\n\t\t\t--mod-secondary-channel-lum: 30;\n\t\t\t--mod-secondary-channel-lum-scale: 0;\n\t\t\t--mod-primary-channel-hue: 62;\n\t\t\t--mod-primary-channel-hue-scale: 1.5;\n\t\t\t--mod-primary-channel-sat: 96;\n\t\t\t--mod-primary-channel-sat-scale: 0;\n\t\t\t--mod-primary-channel-lum: 80;\n\t\t\t--mod-primary-channel-lum-scale: 0;\n\t\t\t--mod-secondary-note-hue: 62;\n\t\t\t--mod-secondary-note-hue-scale: 1.5;\n\t\t\t--mod-secondary-note-sat: 92;\n\t\t\t--mod-secondary-note-sat-scale: 0;\n\t\t\t--mod-secondary-note-lum: 34;\n\t\t\t--mod-secondary-note-lum-scale: 0;\n\t\t\t--mod-primary-note-hue: 62;\n\t\t\t--mod-primary-note-hue-scale: 1.5;\n\t\t\t--mod-primary-note-sat: 96;\n\t\t\t--mod-primary-note-sat-scale: 0;\n\t\t\t--mod-primary-note-lum: 75;\n\t\t\t--mod-primary-note-lum-scale: 0;\n\t\t\t--disabled-note-primary:    #66a;\n\t\t\t--disabled-note-secondary:  #447;\n\t\t}\n\t`,\n        \"jummbox light\": `\n\t\t\t\t:root {\n\t\t\t\t\t-webkit-text-stroke-width: 0.5px;\n\t\t\t\t\t--page-margin: #fefdff;\n\t\t\t\t\t--editor-background: #fefdff;\n\t\t\t\t\t--hover-preview: #302880;\n\t\t\t\t\t--playhead: rgba(62, 32, 120, 0.9);\n\t\t\t\t\t--primary-text: #401890;\n\t\t\t\t\t--secondary-text: #8769af;\n\t\t\t\t\t--inverted-text: #fefdff;\n\t\t\t\t\t--text-selection: rgba(255,160,235,0.99);\n\t\t\t\t\t--box-selection-fill: rgba(30,62,220,0.5);\n\t\t\t\t\t--loop-accent: #4c35d4;\n\t\t\t\t\t--link-accent: #7af;\n\t\t\t\t\t--ui-widget-background: #bf9cec;\n\t\t\t\t\t--ui-widget-focus: #e9c4ff;\n\t\t\t\t\t--pitch-background: #e2d9f9;\n\t\t\t\t\t--tonic: #c288cc;\n\t\t\t\t\t--fifth-note: #d8c9fd;\n\t\t\t\t\t--white-piano-key: #e2e2ff;\n\t\t\t\t\t--black-piano-key: #66667a;\n\t\t\t\t\t--use-color-formula: true;\n\t\t\t\t\t--track-editor-bg-pitch: #d9e5ec;\n\t\t\t\t\t--track-editor-bg-pitch-dim: #eaeef5;\n\t\t\t\t\t--track-editor-bg-noise: #ffc3ae;\n\t\t\t\t\t--track-editor-bg-noise-dim: #ffe0cf;\n\t\t\t\t\t--track-editor-bg-mod: #c9accc;\n\t\t\t\t\t--track-editor-bg-mod-dim: #ebe3ef;\n\t\t\t\t\t--multiplicative-mod-slider: #807caf;\n\t\t\t\t\t--overwriting-mod-slider: #909cdf;\n\t\t\t\t\t--indicator-primary: #ae38ff;\n\t\t\t\t\t--indicator-secondary: #bbd4ec;\n\t\t\t\t\t--select2-opt-group: #c1b7f1;\n\t\t\t\t\t--input-box-outline: #bbb;\n\t\t\t\t\t--mute-button-normal: #e9b752;\n\t\t\t\t\t--mute-button-mod: #9558ee;\n\t\t\t\t\t--mod-label-primary: #ececff;\n\t\t\t\t\t--mod-label-secondary-text: rgb(197, 145, 247);\n\t\t\t\t\t--mod-label-primary-text: #302880;\n\t\t\t\t\t--pitch-secondary-channel-hue: 0;\n\t\t\t\t\t--pitch-secondary-channel-hue-scale: 8.1;\n\t\t\t\t\t--pitch-secondary-channel-sat: 53.3;\n\t\t\t\t\t--pitch-secondary-channel-sat-scale: -0.1;\n\t\t\t\t\t--pitch-secondary-channel-lum: 72;\n\t\t\t\t\t--pitch-secondary-channel-lum-scale: -0.05;\n\t\t\t\t\t--pitch-primary-channel-hue: 0;\n\t\t\t\t\t--pitch-primary-channel-hue-scale: 8.1;\n\t\t\t\t\t--pitch-primary-channel-sat: 97;\n\t\t\t\t\t--pitch-primary-channel-sat-scale: -0.1;\n\t\t\t\t\t--pitch-primary-channel-lum: 45.5;\n\t\t\t\t\t--pitch-primary-channel-lum-scale: -0.05;\n\t\t\t\t\t--pitch-secondary-note-hue: 0;\n\t\t\t\t\t--pitch-secondary-note-hue-scale: 8.1;\n\t\t\t\t\t--pitch-secondary-note-sat: 93.9;\n\t\t\t\t\t--pitch-secondary-note-sat-scale: -0.1;\n\t\t\t\t\t--pitch-secondary-note-lum: 95;\n\t\t\t\t\t--pitch-secondary-note-lum-scale: -0.05;\n\t\t\t\t\t--pitch-primary-note-hue: 0;\n\t\t\t\t\t--pitch-primary-note-hue-scale: 8.1;\n\t\t\t\t\t--pitch-primary-note-sat: 100;\n\t\t\t\t\t--pitch-primary-note-sat-scale: 0.05;\n\t\t\t\t\t--pitch-primary-note-lum: 43.6;\n\t\t\t\t\t--pitch-primary-note-lum-scale: -0.025;\n\t\t\t\t\t--noise-secondary-channel-hue: 220;\n\t\t\t\t\t--noise-secondary-channel-hue-scale: 2;\n\t\t\t\t\t--noise-secondary-channel-sat: 25;\n\t\t\t\t\t--noise-secondary-channel-sat-scale: 0;\n\t\t\t\t\t--noise-secondary-channel-lum: 62;\n\t\t\t\t\t--noise-secondary-channel-lum-scale: -0.1;\n\t\t\t\t\t--noise-primary-channel-hue: 220;\n\t\t\t\t\t--noise-primary-channel-hue-scale: 2;\n\t\t\t\t\t--noise-primary-channel-sat: 53;\n\t\t\t\t\t--noise-primary-channel-sat-scale: 0;\n\t\t\t\t\t--noise-primary-channel-lum: 53.5;\n\t\t\t\t\t--noise-primary-channel-lum-scale: -0.1;\n\t\t\t\t\t--noise-secondary-note-hue: 220;\n\t\t\t\t\t--noise-secondary-note-hue-scale: 2;\n\t\t\t\t\t--noise-secondary-note-sat: 58.5;\n\t\t\t\t\t--noise-secondary-note-sat-scale: 0;\n\t\t\t\t\t--noise-secondary-note-lum: 85;\n\t\t\t\t\t--noise-secondary-note-lum-scale: -1;\n\t\t\t\t\t--noise-primary-note-hue: 220;\n\t\t\t\t\t--noise-primary-note-hue-scale: 2;\n\t\t\t\t\t--noise-primary-note-sat: 56.5;\n\t\t\t\t\t--noise-primary-note-sat-scale: 0;\n\t\t\t\t\t--noise-primary-note-lum: 54;\n\t\t\t\t\t--noise-primary-note-lum-scale: -1;\n\t\t\t\t\t--mod-secondary-channel-hue: 90;\n\t\t\t\t\t--mod-secondary-channel-hue-scale: 1.5;\n\t\t\t\t\t--mod-secondary-channel-sat: 88;\n\t\t\t\t\t--mod-secondary-channel-sat-scale: 0;\n\t\t\t\t\t--mod-secondary-channel-lum: 60;\n\t\t\t\t\t--mod-secondary-channel-lum-scale: 0;\n\t\t\t\t\t--mod-primary-channel-hue: 90;\n\t\t\t\t\t--mod-primary-channel-hue-scale: 1.5;\n\t\t\t\t\t--mod-primary-channel-sat: 100;\n\t\t\t\t\t--mod-primary-channel-sat-scale: 0;\n\t\t\t\t\t--mod-primary-channel-lum: 65;\n\t\t\t\t\t--mod-primary-channel-lum-scale: 0;\n\t\t\t\t\t--mod-secondary-note-hue: 90;\n\t\t\t\t\t--mod-secondary-note-hue-scale: 1.5;\n\t\t\t\t\t--mod-secondary-note-sat: 92;\n\t\t\t\t\t--mod-secondary-note-sat-scale: 0;\n\t\t\t\t\t--mod-secondary-note-lum: 95;\n\t\t\t\t\t--mod-secondary-note-lum-scale: 0;\n\t\t\t\t\t--mod-primary-note-hue: 90;\n\t\t\t\t\t--mod-primary-note-hue-scale: 1.5;\n\t\t\t\t\t--mod-primary-note-sat: 96;\n\t\t\t\t\t--mod-primary-note-sat-scale: 0;\n\t\t\t\t\t--mod-primary-note-lum: 55;\n\t\t\t\t\t--mod-primary-note-lum-scale: 0;\n\t\t\t\t\t--disabled-note-primary:    #868;\n\t\t\t\t\t--disabled-note-secondary:  #767;\n\t\t\t\t}\n\n\t\t\t\t.beepboxEditor button, .beepboxEditor select {\n\t\t\t\t\tbox-shadow: inset 0 0 0 1px var(--secondary-text);\n\t\t\t\t}\n\n\t\t\t\t.select2-selection__rendered {\n\t\t\t\t\tbox-shadow: inset 0 0 0 1px var(--secondary-text);\n\t\t\t\t}\n\t\t\t`,\n\n\t\t\"beachcombing\": `\n\t\t\t:root {\n\t\t\t--page-margin: #010121;\n\t\t\t--editor-background: #020222;\n\t\t\t--hover-preview: #f3ffff;\n\t\t\t--playhead: #fff;\n\t\t\t--primary-text: #c1f1ff;\n\t\t\t--secondary-text: #546775;\n\t\t\t--inverted-text: black;\n\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t--box-selection-fill: #3e0028;\n\t\t\t--loop-accent: #5a00ff;\n\t\t\t--link-accent: #ff00c8fc;\n\t\t\t--ui-widget-background: #1f2b52;\n\t\t\t--ui-widget-focus: #384e91;\n\t\t\t--pitch-background: #2c3155;\n\t\t\t--tonic: #a32f6e;\n\t\t\t--fifth-note: #0044a0;\n\t\t\t--white-piano-key: #fff;\n\t\t\t--black-piano-key: #202d42;\n\t\t\t--use-color-formula: false;\n\t\t\t--track-editor-bg-pitch: #34406c;\n\t\t\t--track-editor-bg-pitch-dim: #1c1d28;\n\t\t\t--track-editor-bg-noise: #562e3b;\n\t\t\t--track-editor-bg-noise-dim: #161313;\n\t\t\t--track-editor-bg-mod: #372e66;\n\t\t\t--track-editor-bg-mod-dim: #2a1640;\n\t\t\t--multiplicative-mod-slider: #606c9f;\n\t\t\t--overwriting-mod-slider: #6850b5;\n\t\t\t--indicator-primary: #ff67c2;\n\t\t\t--indicator-secondary: #393e4f;\n\t\t\t--select2-opt-group: #5d576f;\n\t\t\t--input-box-outline: #222;\n\t\t\t--mute-button-normal: #7ce1ff;\n\t\t\t--mute-button-mod: #db519d;\n\t\t\t--pitch1-secondary-channel: #329b70;\n\t\t\t--pitch1-primary-channel: #53ffb8;\n\t\t\t--pitch1-secondary-note: #4cb98c;\n\t\t\t--pitch1-primary-note: #98ffd4;\n\t\t\t--pitch2-secondary-channel: #8e8632;\n\t\t\t--pitch2-primary-channel: #fff36a;\n\t\t\t--pitch2-secondary-note: #afaf22;\n\t\t\t--pitch2-primary-note: #f9f93f;\n\t\t\t--pitch3-secondary-channel: #018e8e;\n\t\t\t--pitch3-primary-channel: #00ffff;\n\t\t\t--pitch3-secondary-note: #24b7b7;\n\t\t\t--pitch3-primary-note: #a7ffff;\n\t\t\t--pitch4-secondary-channel: #6c003d;\n\t\t\t--pitch4-primary-channel: #ff0090;\n\t\t\t--pitch4-secondary-note: #a73c78;\n\t\t\t--pitch4-primary-note: #ff98d2;\n\t\t\t--pitch5-secondary-channel: #0e8153;\n\t\t\t--pitch5-primary-channel: #59ffbd;\n\t\t\t--pitch5-secondary-note: #489979;\n\t\t\t--pitch5-primary-note: #b0ffe0;\n\t\t\t--pitch6-secondary-channel: #185aab;\n\t\t\t--pitch6-primary-channel: #4e7ce5;\n\t\t\t--pitch6-secondary-note: #3e99d9;\n\t\t\t--pitch6-primary-note: #b3e3ff;\n\t\t\t--pitch7-secondary-channel: #4f007d;\n\t\t\t--pitch7-primary-channel: #a200ff;\n\t\t\t--pitch7-secondary-note: #9741c9;\n\t\t\t--pitch7-primary-note: #d386ff;\n\t\t\t--pitch8-secondary-channel: #101c8d;\n\t\t\t--pitch8-primary-channel: #1c5df1;\n\t\t\t--pitch8-secondary-note: #FF4E63;\n\t\t\t--pitch8-primary-note: #FFB2BB;\n\t\t\t--pitch9-secondary-channel: #00A170;\n\t\t\t--pitch9-primary-channel: #50FFC9;\n\t\t\t--pitch9-secondary-note: #00C78A;\n\t\t\t--pitch9-primary-note: #83FFD9;\n\t\t\t--pitch10-secondary-channel: #A11FFF;\n\t\t\t--pitch10-primary-channel: #CE8BFF;\n\t\t\t--pitch10-secondary-note: #B757FF;\n\t\t\t--pitch10-primary-note: #DFACFF;\n\t\t\t--noise1-secondary-channel: #635070;\n\t\t\t--noise1-primary-channel: #9071db;\n\t\t\t--noise1-secondary-note: #915dc1;\n\t\t\t--noise1-primary-note: #c5a5ff;\n\t\t\t--noise2-secondary-channel: #993367;\n\t\t\t--noise2-primary-channel: #dd777c;\n\t\t\t--noise2-secondary-note: #cc6695;\n\t\t\t--noise2-primary-note: #f0bbd1;\n\t\t\t--noise3-secondary-channel: #4a8c8f;\n\t\t\t--noise3-primary-channel: #77c5dd;\n\t\t\t--noise3-secondary-note: #6fb4cf;\n\t\t\t--noise3-primary-note: #bbf2ff;\n\t\t\t--noise4-secondary-channel: #8e3e7d;\n\t\t\t--noise4-primary-channel: #c682d2;\n\t\t\t--noise4-secondary-note: #b871c1;\n\t\t\t--noise4-primary-note: #ffb8f0;\n\t\t\t--noise5-secondary-channel: #785e37;\n\t\t\t--noise5-primary-channel: #bb9d77;\n\t\t\t--noise5-secondary-note: #aa8c66;\n\t\t\t--noise5-primary-note: #e2d1b2;\n\t\t\t--mod1-secondary-channel: #4e8397;\n\t\t\t--mod1-primary-channel: #92e6f3;\n\t\t\t--mod1-secondary-note: #76b9d9;\n\t\t\t--mod1-primary-note: #cde3ff;\n\t\t\t--mod2-secondary-channel: #ad5774;\n\t\t\t--mod2-primary-channel: #eba4ae;\n\t\t\t--mod2-secondary-note: #c9719b;\n\t\t\t--mod2-primary-note: #fdcee7;\n\t\t\t--mod3-secondary-channel: #6f579f;\n\t\t\t--mod3-primary-channel: #b192f7;\n\t\t\t--mod3-secondary-note: #a778e1;\n\t\t\t--mod3-primary-note: #f8ddff;\n\t\t\t--mod4-secondary-channel: #a88a36;\n\t\t\t--mod4-primary-channel: #bec825;\n\t\t\t--mod4-secondary-note: #aecb57;\n\t\t\t--mod4-primary-note: #dee9bd;\n\t\t\t--mod-label-primary: #2c2c56;\n\t\t\t--mod-label-secondary-text: rgb(71,69,147);\n\t\t\t--mod-label-primary-text: white;\n\t\t\t--disabled-note-primary: #91879f;\n\t\t\t--disabled-note-secondary: #6a677a;\n\n\n\t\t\t}\n\t\t`,\n\n\t\t\"roe\": `\n\t\t\t:root {\n\t\t\t--page-margin: #050000;\n\t\t\t--editor-background: #050000;\n\t\t\t--hover-preview: white;\n\t\t\t--playhead: white;\n\t\t\t--primary-text: #b8cee0;\n\t\t\t--secondary-text: #cb3434;\n\t\t\t--inverted-text: black;\n\t\t\t--text-selection: rgb(255 68 68 / 99%);\n\t\t\t--box-selection-fill: rgb(255 0 0 / 30%);\n\t\t\t--loop-accent: #7744FF;\n\t\t\t--link-accent: #FF2A2A;\n\t\t\t--ui-widget-background: #1a2642;\n\t\t\t--ui-widget-focus: #2c3f6d;\n\t\t\t--pitch-background: #15111a;\n\t\t\t--tonic: #1b3041;\n\t\t\t--fifth-note: #381818;\n\t\t\t--white-piano-key: #cdcdcd;\n\t\t\t--black-piano-key: #232323;\n\t\t\t--use-color-formula: false;\n\t\t\t--track-editor-bg-pitch: #302938;\n\t\t\t--track-editor-bg-pitch-dim: #211c26;\n\t\t\t--track-editor-bg-noise: #261f42;\n\t\t\t--track-editor-bg-noise-dim: #1a152d;\n\t\t\t--track-editor-bg-mod: #183049;\n\t\t\t--track-editor-bg-mod-dim: #102132;\n\t\t\t--multiplicative-mod-slider: #344a7f;\n\t\t\t--overwriting-mod-slider: #344a7f;\n\t\t\t--indicator-primary: #FF2A2A;\n\t\t\t--indicator-secondary: #800000;\n\t\t\t--select2-opt-group: #141e34;\n\t\t\t--input-box-outline: #141e34;\n\t\t\t--mute-button-normal: #299eff;\n\t\t\t--mute-button-mod: #165a93;\n\t\t\t--pitch1-secondary-channel: #273c90;\n\t\t\t--pitch1-primary-channel: #476BFF;\n\t\t\t--pitch1-secondary-note: #273c90;\n\t\t\t--pitch1-primary-note: #476BFF;\n\t\t\t--pitch2-secondary-channel: #3a3898;\n\t\t\t--pitch2-primary-channel: #625FFB;\n\t\t\t--pitch2-secondary-note: #3a3898;\n\t\t\t--pitch2-primary-note: #625FFB;\n\t\t\t--pitch3-secondary-channel: #542780;\n\t\t\t--pitch3-primary-channel: #9C49EC;\n\t\t\t--pitch3-secondary-note: #542780;\n\t\t\t--pitch3-primary-note: #9C49EC;\n\t\t\t--pitch4-secondary-channel: #84225d;\n\t\t\t--pitch4-primary-channel: #fd3fb1;\n\t\t\t--pitch4-secondary-note: #84225d;\n\t\t\t--pitch4-primary-note: #fd3fb1;\n\t\t\t--pitch5-secondary-channel: #8d2323;\n\t\t\t--pitch5-primary-channel: #ff3f3f;\n\t\t\t--pitch5-secondary-note: #8d2323;\n\t\t\t--pitch5-primary-note: #ff3f3f;\n\t\t\t--pitch6-secondary-channel: #84225d;\n\t\t\t--pitch6-primary-channel: #fd3fb1;\n\t\t\t--pitch6-secondary-note: #84225d;\n\t\t\t--pitch6-primary-note: #fd3fb1;\n\t\t\t--pitch7-secondary-channel: #542780;\n\t\t\t--pitch7-primary-channel: #9C49EC;\n\t\t\t--pitch7-secondary-note: #542780;\n\t\t\t--pitch7-primary-note: #9C49EC;\n\t\t\t--pitch8-secondary-channel: #3a3898;\n\t\t\t--pitch8-primary-channel: #625FFB;\n\t\t\t--pitch8-secondary-note: #3a3898;\n\t\t\t--pitch8-primary-note: #625FFB;\n\t\t\t--pitch9-secondary-channel: #273c90;\n\t\t\t--pitch9-primary-channel: #476BFF;\n\t\t\t--pitch9-secondary-note: #273c90;\n\t\t\t--pitch9-primary-note: #476BFF;\n\t\t\t--pitch10-secondary-channel: #165a93;\n\t\t\t--pitch10-primary-channel: #299EFF;\n\t\t\t--pitch10-secondary-note: #165a93;\n\t\t\t--pitch10-primary-note: #299EFF;\n\t\t\t--noise1-secondary-channel: #4281FF;\n\t\t\t--noise1-primary-channel: #96b9ff;\n\t\t\t--noise1-secondary-note: #4281FF;\n\t\t\t--noise1-primary-note: #96b9ff;\n\t\t\t--noise2-secondary-channel: #7347FF;\n\t\t\t--noise2-primary-channel: #c3b0ff;\n\t\t\t--noise2-secondary-note: #7347FF;\n\t\t\t--noise2-primary-note: #c3b0ff;\n\t\t\t--noise3-secondary-channel: #9F3CBF;\n\t\t\t--noise3-primary-channel: #e29cf9;\n\t\t\t--noise3-secondary-note: #9F3CBF;\n\t\t\t--noise3-primary-note: #e29cf9;\n\t\t\t--noise4-secondary-channel: #D3326F;\n\t\t\t--noise4-primary-channel: #fb9bbf;\n\t\t\t--noise4-secondary-note: #D3326F;\n\t\t\t--noise4-primary-note: #fb9bbf;\n\t\t\t--noise5-secondary-channel: #FF2A2A;\n\t\t\t--noise5-primary-channel: #ffa2a2;\n\t\t\t--noise5-secondary-note: #FF2A2A;\n\t\t\t--noise5-primary-note: #ffa2a2;\n\t\t\t--mod1-secondary-channel: #47587a;\n\t\t\t--mod1-primary-channel: #96b9ff;\n\t\t\t--mod1-secondary-note: #47587a;\n\t\t\t--mod1-primary-note: #96b9ff;\n\t\t\t--mod2-secondary-channel: #716791;\n\t\t\t--mod2-primary-channel: #c3b0ff;\n\t\t\t--mod2-secondary-note: #716791;\n\t\t\t--mod2-primary-note: #c3b0ff;\n\t\t\t--mod3-secondary-channel: #6f4c7b;\n\t\t\t--mod3-primary-channel: #e29cf9;\n\t\t\t--mod3-secondary-note: #6f4c7b;\n\t\t\t--mod3-primary-note: #e29cf9;\n\t\t\t--mod4-secondary-channel: #9e6279;\n\t\t\t--mod4-primary-channel: #fb9bbf;\n\t\t\t--mod4-secondary-note: #9e6279;\n\t\t\t--mod4-primary-note: #fb9bbf;\n\t\t\t--mod-label-primary: #15111a;\n\t\t\t--mod-label-secondary-text: #cb3434;\n\t\t\t--mod-label-primary-text: white;\n\t\t\t--disabled-note-primary: #c9c9c9;\n\t\t\t--disabled-note-secondary: #616161;\n\t\t}`,\n\n\t\t\"moonlight\": `\n\t\t\t:root {\n\t\t\t--page-margin: #020514;\n\t\t\t--editor-background: #020514;\n\t\t\t--hover-preview: white;\n\t\t\t--playhead: white;\n\t\t\t--primary-text: #D4DCE9;\n\t\t\t--secondary-text: #3E87DA;\n\t\t\t--inverted-text: black;\n\t\t\t--text-selection: #03599bd9;\n\t\t\t--box-selection-fill: hsl(206deg 66% 41% / 85%);\n\t\t\t--loop-accent: #639BD6;\n\t\t\t--link-accent: #A8C6E8;\n\t\t\t--ui-widget-background: #1e2940;\n\t\t\t--ui-widget-focus: #324b81;\n\t\t\t--pitch-background: #223849;\n\t\t\t--tonic: #33536c;\n\t\t\t--fifth-note: hsl(206deg 36% 16%);\n\t\t\t--white-piano-key: #c1bfe9;\n\t\t\t--black-piano-key: #454354;\n\t\t\t--use-color-formula: false;\n\t\t\t--track-editor-bg-pitch: #25568d80;\n\t\t\t--track-editor-bg-pitch-dim: #10253c80;\n\t\t\t--track-editor-bg-noise: #25568d80;\n\t\t\t--track-editor-bg-noise-dim: #10253c80;\n\t\t\t--track-editor-bg-mod: #25568d80;\n\t\t\t--track-editor-bg-mod-dim: #10253c80;\n\t\t\t--multiplicative-mod-slider: #0476cd;\n\t\t\t--overwriting-mod-slider: #035899;\n\t\t\t--indicator-primary: #57a1f4;\n\t\t\t--indicator-secondary: #2e5684;\n\t\t\t--select2-opt-group: #24355c;\n\t\t\t--input-box-outline: #141e34;\n\t\t\t--mute-button-normal: #6ebffc;\n\t\t\t--mute-button-mod: #0a92fa;\n\t\t\t--pitch1-secondary-channel: #47425c;\n\t\t\t--pitch1-primary-channel: #918bac;\n\t\t\t--pitch1-secondary-note: #6b6489;\n\t\t\t--pitch1-primary-note: #a8a3bf;\n\t\t\t--pitch2-secondary-channel: #626493;\n\t\t\t--pitch2-primary-channel: #bdbed3;\n\t\t\t--pitch2-secondary-note: #626493;\n\t\t\t--pitch2-primary-note: #bdbed3;\n\t\t\t--pitch3-secondary-channel: #6e89b4;\n\t\t\t--pitch3-primary-channel: #d4dce9;\n\t\t\t--pitch3-secondary-note: #6e89b4;\n\t\t\t--pitch3-primary-note: #d4dce9;\n\t\t\t--pitch4-secondary-channel: #4c77a9;\n\t\t\t--pitch4-primary-channel: #a8c6e8;\n\t\t\t--pitch4-secondary-note: #4c77a9;\n\t\t\t--pitch4-primary-note: #a8c6e8;\n\t\t\t--pitch5-secondary-channel: #314e6d;\n\t\t\t--pitch5-primary-channel: #639bd6;\n\t\t\t--pitch5-secondary-note: #46698f;\n\t\t\t--pitch5-primary-note: #639bd6;\n\t\t\t--pitch6-secondary-channel: #143d6b;\n\t\t\t--pitch6-primary-channel: #3e87da;\n\t\t\t--pitch6-secondary-note: #143d6b;\n\t\t\t--pitch6-primary-note: #3e87da;\n\t\t\t--pitch7-secondary-channel: #314e6d;\n\t\t\t--pitch7-primary-channel: #639bd6;\n\t\t\t--pitch7-secondary-note: #314e6d;\n\t\t\t--pitch7-primary-note: #639bd6;\n\t\t\t--pitch8-secondary-channel: #4c77a9;\n\t\t\t--pitch8-primary-channel: #a8c6e8;\n\t\t\t--pitch8-secondary-note: #4c77a9;\n\t\t\t--pitch8-primary-note: #a8c6e8;\n\t\t\t--pitch9-secondary-channel: #6e89b4;\n\t\t\t--pitch9-primary-channel: #d4dce9;\n\t\t\t--pitch9-secondary-note: #6e89b4;\n\t\t\t--pitch9-primary-note: #d4dce9;\n\t\t\t--pitch10-secondary-channel: #626493;\n\t\t\t--pitch10-primary-channel: #bdbed3;\n\t\t\t--pitch10-secondary-note: #626493;\n\t\t\t--pitch10-primary-note: #bdbed3;\n\t\t\t--noise1-secondary-channel: #4b4a55;\n\t\t\t--noise1-primary-channel: #9795a3;\n\t\t\t--noise1-secondary-note: #4b4a55;\n\t\t\t--noise1-primary-note: #9795a3;\n\t\t\t--noise2-secondary-channel: #858e9d;\n\t\t\t--noise2-primary-channel: #d7dce5;\n\t\t\t--noise2-secondary-note: #858e9d;\n\t\t\t--noise2-primary-note: #d7dce5;\n\t\t\t--noise3-secondary-channel: #394e65;\n\t\t\t--noise3-primary-channel: #809bb7;\n\t\t\t--noise3-secondary-note: #394e65;\n\t\t\t--noise3-primary-note: #809bb7;\n\t\t\t--noise4-secondary-channel: #37577b;\n\t\t\t--noise4-primary-channel: #6189b8;\n\t\t\t--noise4-secondary-note: #37577b;\n\t\t\t--noise4-primary-note: #6189b8;\n\t\t\t--noise5-secondary-channel: #223849;\n\t\t\t--noise5-primary-channel: #5588af;\n\t\t\t--noise5-secondary-note: #223849;\n\t\t\t--noise5-primary-note: #5588af;\n\t\t\t--mod1-secondary-channel: #3e336c;\n\t\t\t--mod1-primary-channel: #6d60a4;\n\t\t\t--mod1-secondary-note: #3e336c;\n\t\t\t--mod1-primary-note: #6d60a4;\n\t\t\t--mod2-secondary-channel: #716791;\n\t\t\t--mod2-primary-channel: #bdbed3;\n\t\t\t--mod2-secondary-note: #716791;\n\t\t\t--mod2-primary-note: #bdbed3;\n\t\t\t--mod3-secondary-channel: #6b91bd;\n\t\t\t--mod3-primary-channel: #4b8fdd;\n\t\t\t--mod3-secondary-note: #597ca7;\n\t\t\t--mod3-primary-note: #7eade3;\n\t\t\t--mod4-secondary-channel: #14559f;\n\t\t\t--mod4-primary-channel: #3386e6;\n\t\t\t--mod4-secondary-note: #14559f;\n\t\t\t--mod4-primary-note: #3386e6;\n\t\t\t--mod-label-primary: #1e2940;\n\t\t\t--mod-label-secondary-text: #748ebe;\n\t\t\t--mod-label-primary-text: white;\n\t\t\t--disabled-note-primary: #828282;\n\t\t\t--disabled-note-secondary: #4f4f4f;\n\t\t\t}`,\n\n\t\t\"autumn\": `\n\t\t:root {\n\t\t\t--page-margin: #060304;\n\t\t\t--editor-background: #060304;\n\t\t\t--hover-preview: white;\n\t\t\t--playhead: white;\n\t\t\t--primary-text: white;\n\t\t\t--secondary-text: #999;\n\t\t\t--inverted-text: black;\n\t\t\t--text-selection: rgb(115 80 76);\n\t\t\t--box-selection-fill: rgb(174 73 81 / 45%);\n\t\t\t--loop-accent: #834A69;\n\t\t\t--link-accent: #98f;\n\t\t\t--ui-widget-background: #2a2523;\n\t\t\t--ui-widget-focus: #4e4c44;\n\t\t\t--pitch-background: #121212;\n\t\t\t--tonic: #4f4f4f;\n\t\t\t--fifth-note: #222;\n\t\t\t--white-piano-key: #b59b9b;\n\t\t\t--black-piano-key: #231e1e;\n\t\t\t--use-color-formula: false;\n\t\t\t--track-editor-bg-pitch: #352f38;\n\t\t\t--track-editor-bg-pitch-dim: #232025;\n\t\t\t--track-editor-bg-noise: #3c3029;\n\t\t\t--track-editor-bg-noise-dim: #251d19;\n\t\t\t--track-editor-bg-mod: #202623;\n\t\t\t--track-editor-bg-mod-dim: #131715;\n\t\t\t--multiplicative-mod-slider: #D9D16E;\n\t\t\t--overwriting-mod-slider: #2D826F;\n\t\t\t--indicator-primary: #D9D16E;\n\t\t\t--indicator-secondary: #444226;\n\t\t\t--select2-opt-group: #20191c;\n\t\t\t--input-box-outline: #20191c;\n\t\t\t--mute-button-normal: var(--pitch2-primary-channel);\n\t\t\t--mute-button-mod: var(--pitch4-primary-channel);\n\t\t\t--pitch1-secondary-channel: #704a34;\n\t\t\t--pitch1-primary-channel: #D9895A;\n\t\t\t--pitch1-secondary-note: #704a34;\n\t\t\t--pitch1-primary-note: #D9895A;\n\t\t\t--pitch2-secondary-channel: #5f3538;\n\t\t\t--pitch2-primary-channel: #AE4951;\n\t\t\t--pitch2-secondary-note: #5f3538;\n\t\t\t--pitch2-primary-note: #AE4951;\n\t\t\t--pitch3-secondary-channel: #5c4336;\n\t\t\t--pitch3-primary-channel: #CA9A81;\n\t\t\t--pitch3-secondary-note: #5c4336;\n\t\t\t--pitch3-primary-note: #CA9A81;\n\t\t\t--pitch4-secondary-channel: #1d3143;\n\t\t\t--pitch4-primary-channel: #386995;\n\t\t\t--pitch4-secondary-note: #1d3143;\n\t\t\t--pitch4-primary-note: #386995;\n\t\t\t--pitch5-secondary-channel: #9c8a58;\n\t\t\t--pitch5-primary-channel: #D9D16E;\n\t\t\t--pitch5-secondary-note: #7c783f;\n\t\t\t--pitch5-primary-note: #D9D16E;\n\t\t\t--pitch6-secondary-channel: #886562;\n\t\t\t--pitch6-primary-channel: #D3A9A5;\n\t\t\t--pitch6-secondary-note: #886562;\n\t\t\t--pitch6-primary-note: #D3A9A5;\n\t\t\t--pitch7-secondary-channel: #1c3f37;\n\t\t\t--pitch7-primary-channel: #2D826F;\n\t\t\t--pitch7-secondary-note: #1c3f37;\n\t\t\t--pitch7-primary-note: #2D826F;\n\t\t\t--pitch8-secondary-channel: #442e2d;\n\t\t\t--pitch8-primary-channel: #815150;\n\t\t\t--pitch8-secondary-note: #442e2d;\n\t\t\t--pitch8-primary-note: #815150;\n\t\t\t--pitch9-secondary-channel: #8e6f60;\n\t\t\t--pitch9-primary-channel: #E5B8A1;\n\t\t\t--pitch9-secondary-note: #8e6f60;\n\t\t\t--pitch9-primary-note: #E5B8A1;\n\t\t\t--pitch10-secondary-channel: #4f3142;\n\t\t\t--pitch10-primary-channel: #834A69;\n\t\t\t--pitch10-secondary-note: #4f3142;\n\t\t\t--pitch10-primary-note: #834A69;\n\t\t\t--noise1-secondary-channel: #6b5346;\n\t\t\t--noise1-primary-channel: #b99c89;\n\t\t\t--noise1-secondary-note: #6b5346;\n\t\t\t--noise1-primary-note: #F0D0BB;\n\t\t\t--noise2-secondary-channel: #4a3839;\n\t\t\t--noise2-primary-channel: #9c6b6e;\n\t\t\t--noise2-secondary-note: #4a3839;\n\t\t\t--noise2-primary-note: #c18b8f;\n\t\t\t--noise3-secondary-channel: #2d3c4a;\n\t\t\t--noise3-primary-channel: #536e86;\n\t\t\t--noise3-secondary-note: #2d3c4a;\n\t\t\t--noise3-primary-note: #8fa8c0;\n\t\t\t--noise4-secondary-channel: #273f3a;\n\t\t\t--noise4-primary-channel: #4e8377;\n\t\t\t--noise4-secondary-note: #273f3a;\n\t\t\t--noise4-primary-note: #87baae;\n\t\t\t--noise5-secondary-channel: #372730;\n\t\t\t--noise5-primary-channel: #7f5e70;\n\t\t\t--noise5-secondary-note: #372730;\n\t\t\t--noise5-primary-note: #cc96b3;\n\t\t\t--mod1-secondary-channel: #783f1f;\n\t\t\t--mod1-primary-channel: #dc6d2c;\n\t\t\t--mod1-secondary-note: #783f1f;\n\t\t\t--mod1-primary-note: #dc6d2c;\n\t\t\t--mod2-secondary-channel: #0b3153;\n\t\t\t--mod2-primary-channel: #1464ac;\n\t\t\t--mod2-secondary-note: #0b3153;\n\t\t\t--mod2-primary-note: #1464ac;\n\t\t\t--mod3-secondary-channel: #075040;\n\t\t\t--mod3-primary-channel: #08a17f;\n\t\t\t--mod3-secondary-note: #075040;\n\t\t\t--mod3-primary-note: #08a17f;\n\t\t\t--mod4-secondary-channel: #631640;\n\t\t\t--mod4-primary-channel: #b4186d;\n\t\t\t--mod4-secondary-note: #631640;\n\t\t\t--mod4-primary-note: #b4186d;\n\t\t\t--mod-label-primary: #000;\n\t\t\t--mod-label-secondary-text: #707070;\n\t\t\t--mod-label-primary-text: white;\n\t\t\t--disabled-note-primary: #5d5d5d;\n\t\t\t--disabled-note-secondary: #292929;\n\t\t}`,\n\n\t\t\"fruit\": `\n\t\t:root {\n\t\t\t--page-margin: #040507;\n\t\t\t--editor-background: #040507;\n\t\t\t--hover-preview: white;\n\t\t\t--playhead: white;\n\t\t\t--primary-text: white;\n\t\t\t--secondary-text: #999;\n\t\t\t--inverted-text: black;\n\t\t\t--text-selection: rgb(115 103 76);\n\t\t\t--box-selection-fill: rgb(174 109 73 / 45%);\n\t\t\t--loop-accent: #EC897D;\n\t\t\t--link-accent: #FDE484;\n\t\t\t--ui-widget-background: #22222c;\n\t\t\t--ui-widget-focus: #39394c;\n\t\t\t--pitch-background: #101010;\n\t\t\t--tonic: #2c2d34;\n\t\t\t--fifth-note: #191a20;\n\t\t\t--white-piano-key: #bbbaba;\n\t\t\t--black-piano-key: #2d2d2d;\n\t\t\t--use-color-formula: false;\n\t\t\t--track-editor-bg-pitch: #2b2d40;\n\t\t\t--track-editor-bg-pitch-dim: #191a25;\n\t\t\t--track-editor-bg-noise: #3c3644;\n\t\t\t--track-editor-bg-noise-dim: #26222b;\n\t\t\t--track-editor-bg-mod: #322a2a;\n\t\t\t--track-editor-bg-mod-dim: #191515;\n\t\t\t--multiplicative-mod-slider: #977da9;\n\t\t\t--overwriting-mod-slider: #798FA7;\n\t\t\t--indicator-primary: #EAAC9D;\n\t\t\t--indicator-secondary: #5e413a;\n\t\t\t--select2-opt-group: #191920;\n\t\t\t--input-box-outline: #191920;\n\t\t\t--mute-button-normal: #798FA7;\n\t\t\t--mute-button-mod: #354457;\n\t\t\t--pitch1-secondary-channel: #91655a;\n\t\t\t--pitch1-primary-channel: #EAAC9D;\n\t\t\t--pitch1-secondary-note: #91655a;\n\t\t\t--pitch1-primary-note: #EAAC9D;\n\t\t\t--pitch2-secondary-channel: #8f6513;\n\t\t\t--pitch2-primary-channel: #FFAF12;\n\t\t\t--pitch2-secondary-note: #8f6513;\n\t\t\t--pitch2-primary-note: #FFAF12;\n\t\t\t--pitch3-secondary-channel: #212f46;\n\t\t\t--pitch3-primary-channel: #34558B;\n\t\t\t--pitch3-secondary-note: #212f46;\n\t\t\t--pitch3-primary-note: #34558B;\n\t\t\t--pitch4-secondary-channel: #2e6b5b;\n\t\t\t--pitch4-primary-channel: #4EC5A7;\n\t\t\t--pitch4-secondary-note: #2e6b5b;\n\t\t\t--pitch4-primary-note: #4EC5A7;\n\t\t\t--pitch5-secondary-channel: #555D46;\n\t\t\t--pitch5-primary-channel: #aabf84;\n\t\t\t--pitch5-secondary-note: #555D46;\n\t\t\t--pitch5-primary-note: #aabf84;\n\t\t\t--pitch6-secondary-channel: #A2553B;\n\t\t\t--pitch6-primary-channel: #e59a81;\n\t\t\t--pitch6-secondary-note: #A2553B;\n\t\t\t--pitch6-primary-note: #e59a81;\n\t\t\t--pitch7-secondary-channel: #7b4021;\n\t\t\t--pitch7-primary-channel: #FE813E;\n\t\t\t--pitch7-secondary-note: #7b4021;\n\t\t\t--pitch7-primary-note: #FE813E;\n\t\t\t--pitch8-secondary-channel: #847753;\n\t\t\t--pitch8-primary-channel: #EFDAA3;\n\t\t\t--pitch8-secondary-note: #847753;\n\t\t\t--pitch8-primary-note: #EFDAA3;\n\t\t\t--pitch9-secondary-channel: #2c3642;\n\t\t\t--pitch9-primary-channel: #798FA7;\n\t\t\t--pitch9-secondary-note: #2c3642;\n\t\t\t--pitch9-primary-note: #798FA7;\n\t\t\t--pitch10-secondary-channel: #0d4453;\n\t\t\t--pitch10-primary-channel: #107895;\n\t\t\t--pitch10-secondary-note: #0d4453;\n\t\t\t--pitch10-primary-note: #107895;\n\t\t\t--noise1-secondary-channel: #71617C;\n\t\t\t--noise1-primary-channel: #977da9;\n\t\t\t--noise1-secondary-note: #71617C;\n\t\t\t--noise1-primary-note: #977da9;\n\t\t\t--noise2-secondary-channel: #3B3D4A;\n\t\t\t--noise2-primary-channel: #707591;\n\t\t\t--noise2-secondary-note: #3B3D4A;\n\t\t\t--noise2-primary-note: #707591;\n\t\t\t--noise3-secondary-channel: #625f5e;\n\t\t\t--noise3-primary-channel: #A19D9C;\n\t\t\t--noise3-secondary-note: #625f5e;\n\t\t\t--noise3-primary-note: #A19D9C;\n\t\t\t--noise4-secondary-channel: #ab847b;\n\t\t\t--noise4-primary-channel: #EAAC9D;\n\t\t\t--noise4-secondary-note: #ab847b;\n\t\t\t--noise4-primary-note: #EAAC9D;\n\t\t\t--noise5-secondary-channel: #B49D74;\n\t\t\t--noise5-primary-channel: #dec69b;\n\t\t\t--noise5-secondary-note: #B49D74;\n\t\t\t--noise5-primary-note: #dec69b;\n\t\t\t--mod1-secondary-channel: #722124;\n\t\t\t--mod1-primary-channel: #D13A41;\n\t\t\t--mod1-secondary-note: #722124;\n\t\t\t--mod1-primary-note: #D13A41;\n\t\t\t--mod2-secondary-channel: #213657;\n\t\t\t--mod2-primary-channel: #34558B;\n\t\t\t--mod2-secondary-note: #213657;\n\t\t\t--mod2-primary-note: #34558B;\n\t\t\t--mod3-secondary-channel: #555D46;\n\t\t\t--mod3-primary-channel: #848f6d;\n\t\t\t--mod3-secondary-note: #555D46;\n\t\t\t--mod3-primary-note: #848f6d;\n\t\t\t--mod4-secondary-channel: #71617C;\n\t\t\t--mod4-primary-channel: #a68ab9;\n\t\t\t--mod4-secondary-note: #71617C;\n\t\t\t--mod4-primary-note: #a68ab9;\n\t\t\t--mod-label-primary: #282828;\n\t\t\t--mod-label-secondary-text: #707070;\n\t\t\t--mod-label-primary-text: white;\n\t\t\t--disabled-note-primary: #5d5d5d;\n\t\t\t--disabled-note-secondary: #292929;\n\t\t}`,\n\n\t\t\"sunset\": `\n\t\t:root {\n\t\t\t--page-margin: #040300;\n\t\t\t--editor-background: #040300;\n\t\t\t--hover-preview: white;\n\t\t\t--playhead: white;\n\t\t\t--primary-text: white;\n\t\t\t--secondary-text: #999;\n\t\t\t--inverted-text: black;\n\t\t\t--text-selection: rgb(94 0 157);\n\t\t\t--box-selection-fill: rgb(174 173 73 / 45%);\n\t\t\t--loop-accent: #EC897D;\n\t\t\t--link-accent: #FDE484;\n\t\t\t--ui-widget-background: #241b24;\n\t\t\t--ui-widget-focus: #3a2e39;\n\t\t\t--pitch-background: #141414;\n\t\t\t--tonic: #2C212B;\n\t\t\t--fifth-note: #2E2A15;\n\t\t\t--white-piano-key: #bbbaba;\n\t\t\t--black-piano-key: #2d2d2d;\n\t\t\t--use-color-formula: false;\n\t\t\t--track-editor-bg-pitch: #2d2e42;\n\t\t\t--track-editor-bg-pitch-dim: #191a25;\n\t\t\t--track-editor-bg-noise: #393340;\n\t\t\t--track-editor-bg-noise-dim: #26222b;\n\t\t\t--track-editor-bg-mod: #232a2c;\n\t\t\t--track-editor-bg-mod-dim: #151819;\n\t\t\t--multiplicative-mod-slider: #977da9;\n\t\t\t--overwriting-mod-slider: #798FA7;\n\t\t\t--indicator-primary: #F28891;\n\t\t\t--indicator-secondary: #601d23;\n\t\t\t--select2-opt-group: #151015;\n\t\t\t--input-box-outline: #151015;\n\t\t\t--mute-button-normal: #E4739D;\n\t\t\t--mute-button-mod: #9650A6;\n\t\t\t--pitch1-secondary-channel: #7F7721;\n\t\t\t--pitch1-primary-channel: #F3E79A;\n\t\t\t--pitch1-secondary-note: #7F7721;\n\t\t\t--pitch1-primary-note: #F3E79A;\n\t\t\t--pitch2-secondary-channel: #785E20;\n\t\t\t--pitch2-primary-channel: #F7D086;\n\t\t\t--pitch2-secondary-note: #785E20;\n\t\t\t--pitch2-primary-note: #F7D086;\n\t\t\t--pitch3-secondary-channel: #6E4219;\n\t\t\t--pitch3-primary-channel: #F9B881;\n\t\t\t--pitch3-secondary-note: #6E4219;\n\t\t\t--pitch3-primary-note: #F9B881;\n\t\t\t--pitch4-secondary-channel: #79351F;\n\t\t\t--pitch4-primary-channel: #F7A086;\n\t\t\t--pitch4-secondary-note: #79351F;\n\t\t\t--pitch4-primary-note: #F7A086;\n\t\t\t--pitch5-secondary-channel: #81272F;\n\t\t\t--pitch5-primary-channel: #F28891;\n\t\t\t--pitch5-secondary-note: #81272F;\n\t\t\t--pitch5-primary-note: #F28891;\n\t\t\t--pitch6-secondary-channel: #8F224D;\n\t\t\t--pitch6-primary-channel: #E4739D;\n\t\t\t--pitch6-secondary-note: #8F224D;\n\t\t\t--pitch6-primary-note: #E4739D;\n\t\t\t--pitch7-secondary-channel: #611548;\n\t\t\t--pitch7-primary-channel: #CF63A6;\n\t\t\t--pitch7-secondary-note: #611548;\n\t\t\t--pitch7-primary-note: #CF63A6;\n\t\t\t--pitch8-secondary-channel: #561253;\n\t\t\t--pitch8-primary-channel: #B557A9;\n\t\t\t--pitch8-secondary-note: #4D104A;\n\t\t\t--pitch8-primary-note: #B557A9;\n\t\t\t--pitch9-secondary-channel: #4c1260;\n\t\t\t--pitch9-primary-channel: #9650A6;\n\t\t\t--pitch9-secondary-note: #3C0F4C;\n\t\t\t--pitch9-primary-note: #9650A6;\n\t\t\t--pitch10-secondary-channel: #3e1d78;\n\t\t\t--pitch10-primary-channel: #704D9E;\n\t\t\t--pitch10-secondary-note: #27124C;\n\t\t\t--pitch10-primary-note: #704D9E;\n\t\t\t--noise1-secondary-channel: #A7A578;\n\t\t\t--noise1-primary-channel: #EFE9AC;\n\t\t\t--noise1-secondary-note: #A7A578;\n\t\t\t--noise1-primary-note: #EFE9AC;\n\t\t\t--noise2-secondary-channel: #947A5F;\n\t\t\t--noise2-primary-channel: #FBCEA8;\n\t\t\t--noise2-secondary-note: #947A5F;\n\t\t\t--noise2-primary-note: #FBCEA8;\n\t\t\t--noise3-secondary-channel: #A3635D;\n\t\t\t--noise3-primary-channel: #F4A5AB;\n\t\t\t--noise3-secondary-note: #A3635D;\n\t\t\t--noise3-primary-note: #F4A5AB;\n\t\t\t--noise4-secondary-channel: #724D60;\n\t\t\t--noise4-primary-channel: #CD90B6;\n\t\t\t--noise4-secondary-note: #724D60;\n\t\t\t--noise4-primary-note: #CD90B6;\n\t\t\t--noise5-secondary-channel: #503F5C;\n\t\t\t--noise5-primary-channel: #7C6A9E;\n\t\t\t--noise5-secondary-note: #503F5C;\n\t\t\t--noise5-primary-note: #7C6A9E;\n\t\t\t--mod1-secondary-channel: #371883;\n\t\t\t--mod1-primary-channel: #6416C6;\n\t\t\t--mod1-secondary-note: #1F0A52;\n\t\t\t--mod1-primary-note: #6416C6;\n\t\t\t--mod2-secondary-channel: #690645;\n\t\t\t--mod2-primary-channel: #E52FA2;\n\t\t\t--mod2-secondary-note: #690645;\n\t\t\t--mod2-primary-note: #E52FA2;\n\t\t\t--mod3-secondary-channel: #943618;\n\t\t\t--mod3-primary-channel: #eb5b2c;\n\t\t\t--mod3-secondary-note: #943618;\n\t\t\t--mod3-primary-note: #eb5b2c;\n\t\t\t--mod4-secondary-channel: #928409;\n\t\t\t--mod4-primary-channel: #ecd50e;\n\t\t\t--mod4-secondary-note: #928409;\n\t\t\t--mod4-primary-note: #ecd50e;\n\t\t\t--mod-label-primary: #282828;\n\t\t\t--mod-label-secondary-text: #707070;\n\t\t\t--mod-label-primary-text: white;\n\t\t\t--disabled-note-primary: #5d5d5d;\n\t\t\t--disabled-note-secondary: #292929;\n\t\t}`,\n\n\t\t\"toxic\": `\n\t\t:root {\n\t\t\t--page-margin: #010003;\n\t\t\t--editor-background: #010003;\n\t\t\t--hover-preview: white;\n\t\t\t--playhead: white;\n\t\t\t--primary-text: white;\n\t\t\t--secondary-text: #999;\n\t\t\t--inverted-text: black;\n\t\t\t--text-selection: rgb(147 195 0);\n\t\t\t--box-selection-fill: rgb(145 174 73 / 49%);\n\t\t\t--loop-accent: #BCDE2C;\n\t\t\t--link-accent: #edff9f;\n\t\t\t--ui-widget-background: #261e2e;\n\t\t\t--ui-widget-focus: #322042;\n\t\t\t--pitch-background: #141c15;\n\t\t\t--tonic: #282c21;\n\t\t\t--fifth-note: #18221a;\n\t\t\t--white-piano-key: #e3e3e3;\n\t\t\t--black-piano-key: #2d2d2d;\n\t\t\t--use-color-formula: false;\n\t\t\t--track-editor-bg-pitch: #38293e;\n\t\t\t--track-editor-bg-pitch-dim: #251c29;\n\t\t\t--track-editor-bg-noise: #2c304c;\n\t\t\t--track-editor-bg-noise-dim: #191b2b;\n\t\t\t--track-editor-bg-mod: #311b32;\n\t\t\t--track-editor-bg-mod-dim: #1d101e;\n\t\t\t--multiplicative-mod-slider: #977da9;\n\t\t\t--overwriting-mod-slider: #798FA7;\n\t\t\t--indicator-primary: #aae9ff;\n\t\t\t--indicator-secondary: #253e46;\n\t\t\t--select2-opt-group: #110d15;\n\t\t\t--input-box-outline: #110d15;\n\t\t\t--mute-button-normal: #8f5ad1;\n\t\t\t--mute-button-mod: #482574;\n\t\t\t--pitch1-secondary-channel: #6b7f19;\n\t\t\t--pitch1-primary-channel: #BCDE2C;\n\t\t\t--pitch1-secondary-note: #6b7f19;\n\t\t\t--pitch1-primary-note: #BCDE2C;\n\t\t\t--pitch2-secondary-channel: #497a31;\n\t\t\t--pitch2-primary-channel: #7BD152;\n\t\t\t--pitch2-secondary-note: #497a31;\n\t\t\t--pitch2-primary-note: #7BD152;\n\t\t\t--pitch3-secondary-channel: #286b40;\n\t\t\t--pitch3-primary-channel: #45BE71;\n\t\t\t--pitch3-secondary-note: #286b40;\n\t\t\t--pitch3-primary-note: #45BE71;\n\t\t\t--pitch4-secondary-channel: #125140;\n\t\t\t--pitch4-primary-channel: #25A884;\n\t\t\t--pitch4-secondary-note: #125140;\n\t\t\t--pitch4-primary-note: #25A884;\n\t\t\t--pitch5-secondary-channel: #114c49;\n\t\t\t--pitch5-primary-channel: #21908C;\n\t\t\t--pitch5-secondary-note: #114c49;\n\t\t\t--pitch5-primary-note: #21908C;\n\t\t\t--pitch6-secondary-channel: #143843;\n\t\t\t--pitch6-primary-channel: #2B788E;\n\t\t\t--pitch6-secondary-note: #143843;\n\t\t\t--pitch6-primary-note: #2B788E;\n\t\t\t--pitch7-secondary-channel: #1d354e;\n\t\t\t--pitch7-primary-channel: #355F8D;\n\t\t\t--pitch7-secondary-note: #1a2f46;\n\t\t\t--pitch7-primary-note: #355F8D;\n\t\t\t--pitch8-secondary-channel: #2c2e5a;\n\t\t\t--pitch8-primary-channel: #414486;\n\t\t\t--pitch8-secondary-note: #1e1f3d;\n\t\t\t--pitch8-primary-note: #414486;\n\t\t\t--pitch9-secondary-channel: #3c1f5e;\n\t\t\t--pitch9-primary-channel: #5e3b89;\n\t\t\t--pitch9-secondary-note: #25133b;\n\t\t\t--pitch9-primary-note: #5e3b89;\n\t\t\t--pitch10-secondary-channel: #510264;\n\t\t\t--pitch10-primary-channel: #720d8a;\n\t\t\t--pitch10-secondary-note: #440154;\n\t\t\t--pitch10-primary-note: #720d8a;\n\t\t\t--noise1-secondary-channel: #BCDE2C;\n\t\t\t--noise1-primary-channel: #edff9f;\n\t\t\t--noise1-secondary-note: #BCDE2C;\n\t\t\t--noise1-primary-note: #edff9f;\n\t\t\t--noise2-secondary-channel: #45BE71;\n\t\t\t--noise2-primary-channel: #89ffb4;\n\t\t\t--noise2-secondary-note: #45BE71;\n\t\t\t--noise2-primary-note: #89ffb4;\n\t\t\t--noise3-secondary-channel: #21908C;\n\t\t\t--noise3-primary-channel: #72fffa;\n\t\t\t--noise3-secondary-note: #21908C;\n\t\t\t--noise3-primary-note: #72fffa;\n\t\t\t--noise4-secondary-channel: #355F8D;\n\t\t\t--noise4-primary-channel: #7cb6f5;\n\t\t\t--noise4-secondary-note: #355F8D;\n\t\t\t--noise4-primary-note: #7cb6f5;\n\t\t\t--noise5-secondary-channel: #482574;\n\t\t\t--noise5-primary-channel: #8f5ad1;\n\t\t\t--noise5-secondary-note: #48257A;\n\t\t\t--noise5-primary-note: #8f5ad1;\n\t\t\t--mod1-secondary-channel: #815a16;\n\t\t\t--mod1-primary-channel: #F5AB29;\n\t\t\t--mod1-secondary-note: #815a16;\n\t\t\t--mod1-primary-note: #F5AB29;\n\t\t\t--mod2-secondary-channel: #4d341a;\n\t\t\t--mod2-primary-channel: #C98540;\n\t\t\t--mod2-secondary-note: #4d341a;\n\t\t\t--mod2-primary-note: #C98540;\n\t\t\t--mod3-secondary-channel: #643734;\n\t\t\t--mod3-primary-channel: #A75D58;\n\t\t\t--mod3-secondary-note: #643734;\n\t\t\t--mod3-primary-note: #A75D58;\n\t\t\t--mod4-secondary-channel: #461430;\n\t\t\t--mod4-primary-channel: #812359;\n\t\t\t--mod4-secondary-note: #3f112b;\n\t\t\t--mod4-primary-note: #812359;\n\t\t\t--mod-label-primary: #282828;\n\t\t\t--mod-label-secondary-text: #707070;\n\t\t\t--mod-label-primary-text: white;\n\t\t\t--disabled-note-primary: #5d5d5d;\n\t\t\t--disabled-note-secondary: #292929;\n\t\t}`,\n\n\t\t\"violet verdant\": `\n\t\t:root {\n\t\t\t--page-margin: #0e031a;\n\t\t\t--editor-background: #0e031a;\n\t\t\t--hover-preview: #e5ffea;\n\t\t\t--playhead: rgba(255, 255, 255, 0.9);\n\t\t\t--primary-text: #f0e0ff;\n\t\t\t--secondary-text: #706087;\n\t\t\t--inverted-text: black;\n\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t--box-selection-fill: #225835;\n\t\t\t--loop-accent: #8f00fb;\n\t\t\t--link-accent: #82dd5d;\n\t\t\t--ui-widget-background: #303c66;\n\t\t\t--ui-widget-focus: #62559b;\n\t\t\t--pitch-background: #293b52;\n\t\t\t--tonic: #5b46ad;\n\t\t\t--fifth-note: #42604d;\n\t\t\t--white-piano-key: #f6e8ff;\n\t\t\t--black-piano-key: #5a4972;\n\t\t\t--use-color-formula: true;\n\t\t\t--track-editor-bg-pitch: #392a46;\n\t\t\t--track-editor-bg-pitch-dim: #1c1d28;\n\t\t\t--track-editor-bg-noise: #403150;\n\t\t\t--track-editor-bg-noise-dim: #161313;\n\t\t\t--track-editor-bg-mod: #253c25;\n\t\t\t--track-editor-bg-mod-dim: #0c1811;\n\t\t\t--multiplicative-mod-slider: #606c9f;\n\t\t\t--overwriting-mod-slider: #6850b5;\n\t\t\t--indicator-primary: #9c64f7;\n\t\t\t--indicator-secondary: #393e4f;\n\t\t\t--select2-opt-group: #5d576f;\n\t\t\t--input-box-outline: #403150;\n\t\t\t--mute-button-normal: #82dd5d;\n\t\t\t--mute-button-mod: #945de5;\n\t\t\t--mod-label-primary: #312840;\n\t\t\t--mod-label-secondary-text: rgb(88 70 104);\n\t\t\t--mod-label-primary-text: #82dd5d;\n\t\t\t--pitch-secondary-channel-hue: 64;\n\t\t\t--pitch-secondary-channel-hue-scale: 6.1;\n\t\t\t--pitch-secondary-channel-sat: 63.3;\n\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\n\t\t\t--pitch-secondary-channel-lum: 40;\n\t\t\t--pitch-secondary-channel-lum-scale: 0.05;\n\t\t\t--pitch-primary-channel-hue: 64;\n\t\t\t--pitch-primary-channel-hue-scale: 6.1;\n\t\t\t--pitch-primary-channel-sat: 90;\n\t\t\t--pitch-primary-channel-sat-scale: 0.1;\n\t\t\t--pitch-primary-channel-lum: 67.5;\n\t\t\t--pitch-primary-channel-lum-scale: 0.05;\n\t\t\t--pitch-secondary-note-hue: 32;\n\t\t\t--pitch-secondary-note-hue-scale: 6.1;\n\t\t\t--pitch-secondary-note-sat: 87.9;\n\t\t\t--pitch-secondary-note-sat-scale: 0.1;\n\t\t\t--pitch-secondary-note-lum: 25;\n\t\t\t--pitch-secondary-note-lum-scale: 0.05;\n\t\t\t--pitch-primary-note-hue: 64;\n\t\t\t--pitch-primary-note-hue-scale: 6.1;\n\t\t\t--pitch-primary-note-sat: 90;\n\t\t\t--pitch-primary-note-sat-scale: 0.05;\n\t\t\t--pitch-primary-note-lum: 85.6;\n\t\t\t--pitch-primary-note-lum-scale: 0.025;\n\t\t\t--noise-secondary-channel-hue: 192;\n\t\t\t--noise-secondary-channel-hue-scale: 2;\n\t\t\t--noise-secondary-channel-sat: 45;\n\t\t\t--noise-secondary-channel-sat-scale: 0;\n\t\t\t--noise-secondary-channel-lum: 32;\n\t\t\t--noise-secondary-channel-lum-scale: 0;\n\t\t\t--noise-primary-channel-hue: 192;\n\t\t\t--noise-primary-channel-hue-scale: 2;\n\t\t\t--noise-primary-channel-sat: 33;\n\t\t\t--noise-primary-channel-sat-scale: 0;\n\t\t\t--noise-primary-channel-lum: 43.5;\n\t\t\t--noise-primary-channel-lum-scale: 0;\n\t\t\t--noise-secondary-note-hue: 160;\n\t\t\t--noise-secondary-note-hue-scale: 2;\n\t\t\t--noise-secondary-note-sat: 33.5;\n\t\t\t--noise-secondary-note-sat-scale: 0;\n\t\t\t--noise-secondary-note-lum: 45;\n\t\t\t--noise-secondary-note-lum-scale: 0;\n\t\t\t--noise-primary-note-hue: 192;\n\t\t\t--noise-primary-note-hue-scale: 2;\n\t\t\t--noise-primary-note-sat: 46.5;\n\t\t\t--noise-primary-note-sat-scale: 0;\n\t\t\t--noise-primary-note-lum: 74;\n\t\t\t--noise-primary-note-lum-scale: 0;\n\t\t\t--mod-secondary-channel-hue: 132;\n\t\t\t--mod-secondary-channel-hue-scale: 1.5;\n\t\t\t--mod-secondary-channel-sat: 88;\n\t\t\t--mod-secondary-channel-sat-scale: 0;\n\t\t\t--mod-secondary-channel-lum: 50;\n\t\t\t--mod-secondary-channel-lum-scale: 0;\n\t\t\t--mod-primary-channel-hue: 132;\n\t\t\t--mod-primary-channel-hue-scale: 1.5;\n\t\t\t--mod-primary-channel-sat: 96;\n\t\t\t--mod-primary-channel-sat-scale: 0;\n\t\t\t--mod-primary-channel-lum: 80;\n\t\t\t--mod-primary-channel-lum-scale: 0;\n\t\t\t--mod-secondary-note-hue: 100;\n\t\t\t--mod-secondary-note-hue-scale: 1.5;\n\t\t\t--mod-secondary-note-sat: 92;\n\t\t\t--mod-secondary-note-sat-scale: 0;\n\t\t\t--mod-secondary-note-lum: 45;\n\t\t\t--mod-secondary-note-lum-scale: 0;\n\t\t\t--mod-primary-note-hue: 132;\n\t\t\t--mod-primary-note-hue-scale: 1.5;\n\t\t\t--mod-primary-note-sat: 96;\n\t\t\t--mod-primary-note-sat-scale: 0;\n\t\t\t--mod-primary-note-lum: 85;\n\t\t\t--mod-primary-note-lum-scale: 0;\n\t\t\t--disabled-note-primary: #91879f;\n\t\t\t--disabled-note-secondary: #6a677a;\n\t\t}`,\n\n\t\t\"portal\": `\n\t\t:root {\n\t\t\t--page-margin: #04081a;\n\t\t\t--editor-background: #04081a;\n\t\t\t--hover-preview: white;\n\t\t\t--playhead: white;\n\t\t\t--primary-text: white;\n\t\t\t--secondary-text: #999;\n\t\t\t--inverted-text: black;\n\t\t\t--text-selection: rgba(119,68,255,0.99);\n\t\t\t--box-selection-fill: rgb(0 72 181);\n\t\t\t--loop-accent: #44d4ff;\n\t\t\t--link-accent: #ffa500;\n\t\t\t--ui-widget-background: #212c4a;\n\t\t\t--ui-widget-focus: #121f42;\n\t\t\t--pitch-background: #1b263e;\n\t\t\t--tonic: #995d00;\n\t\t\t--fifth-note: #0898a1;\n\t\t\t--white-piano-key: #ffffff;\n\t\t\t--black-piano-key: #516d7a;\n\t\t\t--use-color-formula: false;\n\t\t\t--track-editor-bg-pitch: #213352;\n\t\t\t--track-editor-bg-pitch-dim: #152032;\n\t\t\t--track-editor-bg-noise: #403524;\n\t\t\t--track-editor-bg-noise-dim: #2a1f0e;\n\t\t\t--track-editor-bg-mod: #234;\n\t\t\t--track-editor-bg-mod-dim: #123;\n\t\t\t--multiplicative-mod-slider: #456;\n\t\t\t--overwriting-mod-slider: #654;\n\t\t\t--indicator-primary: #5490ff;\n\t\t\t--indicator-secondary: #444;\n\t\t\t--select2-opt-group: #585858;\n\t\t\t--input-box-outline: #333;\n\t\t\t--mute-button-normal: #3372ff;\n\t\t\t--mute-button-mod: #dd872f;\n\t\t\t--pitch1-secondary-channel: #0099A1;\n\t\t\t--pitch1-primary-channel: #77f7ff;\n\t\t\t--pitch1-secondary-note: #00BDC7;\n\t\t\t--pitch1-primary-note: #92F9FF;\n\t\t\t--pitch2-secondary-channel: #0083a1;\n\t\t\t--pitch2-primary-channel: #35d9ff;\n\t\t\t--pitch2-secondary-note: #0083a1;\n\t\t\t--pitch2-primary-note: #a4eeff;\n\t\t\t--pitch3-secondary-channel: #0074c7;\n\t\t\t--pitch3-primary-channel: #3caeff;\n\t\t\t--pitch3-secondary-note: #00477a;\n\t\t\t--pitch3-primary-note: #aadcff;\n\t\t\t--pitch4-secondary-channel: #0039a1;\n\t\t\t--pitch4-primary-channel: #2673ff;\n\t\t\t--pitch4-secondary-note: #001f56;\n\t\t\t--pitch4-primary-note: #9bbeff;\n\t\t\t--pitch5-secondary-channel: #31148b;\n\t\t\t--pitch5-primary-channel: #7042ff;\n\t\t\t--pitch5-secondary-note: #190656;\n\t\t\t--pitch5-primary-note: #b79fff;\n\t\t\t--pitch6-secondary-channel: #979934;\n\t\t\t--pitch6-primary-channel: #fbff2f;\n\t\t\t--pitch6-secondary-note: #5d5e0a;\n\t\t\t--pitch6-primary-note: #fdff9a;\n\t\t\t--pitch7-secondary-channel: #b78f00;\n\t\t\t--pitch7-primary-channel: #ffd747;\n\t\t\t--pitch7-secondary-note: #5e3d00;\n\t\t\t--pitch7-primary-note: #ffe381;\n\t\t\t--pitch8-secondary-channel: #9d6500;\n\t\t\t--pitch8-primary-channel: #ffa400;\n\t\t\t--pitch8-secondary-note: #583900;\n\t\t\t--pitch8-primary-note: #ffd07c;\n\t\t\t--pitch9-secondary-channel: #744203;\n\t\t\t--pitch9-primary-channel: #ff8e00;\n\t\t\t--pitch9-secondary-note: #502d00;\n\t\t\t--pitch9-primary-note: #ffcb89;\n\t\t\t--pitch10-secondary-channel: #a32d00;\n\t\t\t--pitch10-primary-channel: #ff885b;\n\t\t\t--pitch10-secondary-note: #521700;\n\t\t\t--pitch10-primary-note: #ffb397;\n\t\t\t--noise1-secondary-channel: #6e2210;\n\t\t\t--noise1-primary-channel: #ff4600;\n\t\t\t--noise1-secondary-note: #4c1a08;\n\t\t\t--noise1-primary-note: #ffc9b4;\n\t\t\t--noise2-secondary-channel: #6a3110;\n\t\t\t--noise2-primary-channel: #ff782a;\n\t\t\t--noise2-secondary-note: #4c1f05;\n\t\t\t--noise2-primary-note: #ffb488;\n\t\t\t--noise3-secondary-channel: #72460e;\n\t\t\t--noise3-primary-channel: #d9871f;\n\t\t\t--noise3-secondary-note: #442905;\n\t\t\t--noise3-primary-note: #ffdcae;\n\t\t\t--noise4-secondary-channel: #837a0f;\n\t\t\t--noise4-primary-channel: #f7ea55;\n\t\t\t--noise4-secondary-note: #605906;\n\t\t\t--noise4-primary-note: #fff9ab;\n\t\t\t--noise5-secondary-channel: #8c8f00;\n\t\t\t--noise5-primary-channel: #fdff90;\n\t\t\t--noise5-secondary-note: #606200;\n\t\t\t--noise5-primary-note: #feffbc;\n\t\t\t--mod1-secondary-channel: #561b97;\n\t\t\t--mod1-primary-channel: #aa66f5;\n\t\t\t--mod1-secondary-note: #30075c;\n\t\t\t--mod1-primary-note: #cd9fff;\n\t\t\t--mod2-secondary-channel: #5116df;\n\t\t\t--mod2-primary-channel: #6b2dff;\n\t\t\t--mod2-secondary-note: #36138b;\n\t\t\t--mod2-primary-note: #bea3ff;\n\t\t\t--mod3-secondary-channel: #2535a1;\n\t\t\t--mod3-primary-channel: #3f57ff;\n\t\t\t--mod3-secondary-note: #0e185c;\n\t\t\t--mod3-primary-note: #8494ff;\n\t\t\t--mod4-secondary-channel: #1b5883;\n\t\t\t--mod4-primary-channel: #5eb7f5;\n\t\t\t--mod4-secondary-note: #072f4a;\n\t\t\t--mod4-primary-note: #63beff;\n\t\t\t--mod-label-primary: #24293a;\n\t\t\t--mod-label-secondary-text: #454d4e;\n\t\t\t--mod-label-primary-text: #7bd4ff;\n\t\t\t--disabled-note-primary: #072f4a;\n\t\t\t--disabled-note-secondary: #6585a7;\n\t\t}`,\n\n\t\t\"fusion\":\n\t\t`:root {\n\t\t\t--page-margin: #0c0306;\n\t\t\t--editor-background: #0c0306;\n\t\t\t--hover-preview: white;\n\t\t\t--playhead: white;\n\t\t\t--primary-text: #26d9cd;\n\t\t\t--secondary-text: #ff6666;\n\t\t\t--inverted-text: white;\n\t\t\t--text-selection: #ffffff;\n\t\t\t--box-selection-fill: #ff00004d;\n\t\t\t--loop-accent: #ff6666;\n\t\t\t--link-accent: white;\n\t\t\t--ui-widget-background: #232323;\n\t\t\t--ui-widget-focus: #303030;\n\t\t\t--pitch-background: hsl(61deg 100% 70% / 25%);\n\t\t\t--tonic: #66a3ff40;\n\t\t\t--fifth-note: #ff666640;\n\t\t\t--white-piano-key: #cdcdcd;\n\t\t\t--black-piano-key: #232323;\n\t\t\t--use-color-formula: false;\n\t\t\t--track-editor-bg-pitch: #404040bf;\n\t\t\t--track-editor-bg-pitch-dim: #151515;\n\t\t\t--track-editor-bg-noise: #404040bf;\n\t\t\t--track-editor-bg-noise-dim: #151515;\n\t\t\t--track-editor-bg-mod: #404040bf;\n\t\t\t--track-editor-bg-mod-dim: #151515;\n\t\t\t--multiplicative-mod-slider: #ef7692;\n\t\t\t--overwriting-mod-slider: #f43e69;\n\t\t\t--indicator-primary: #26d9cd;\n\t\t\t--indicator-secondary: hsl(176deg 70% 25%);\n\t\t\t--select2-opt-group: #232323;\n\t\t\t--input-box-outline: #141e34;\n\t\t\t--mute-button-normal: #26d9cd;\n\t\t\t--mute-button-mod: hsl(346deg 70% 50%);\n\t\t\t--pitch1-secondary-channel: #bf4040;\n\t\t\t--pitch1-primary-channel: #ff6666;\n\t\t\t--pitch1-secondary-note: #bf4040;\n\t\t\t--pitch1-primary-note: #ff6666;\n\t\t\t--pitch2-secondary-channel: #bf5b40;\n\t\t\t--pitch2-primary-channel: #ff8766;\n\t\t\t--pitch2-secondary-note: #bf5b40;\n\t\t\t--pitch2-primary-note: #ff8766;\n\t\t\t--pitch3-secondary-channel: #bf7940;\n\t\t\t--pitch3-primary-channel: #ffab66;\n\t\t\t--pitch3-secondary-note: #bf7940;\n\t\t\t--pitch3-primary-note: #ffab66;\n\t\t\t--pitch4-secondary-channel: #bf9b40;\n\t\t\t--pitch4-primary-channel: #ffd466;\n\t\t\t--pitch4-secondary-note: #bf9b40;\n\t\t\t--pitch4-primary-note: #ffd466;\n\t\t\t--pitch5-secondary-channel: #bdbf40;\n\t\t\t--pitch5-primary-channel: #fcff66;\n\t\t\t--pitch5-secondary-note: #bdbf40;\n\t\t\t--pitch5-primary-note: #fcff66;\n\t\t\t--pitch6-secondary-channel: #9dbf40;\n\t\t\t--pitch6-primary-channel: #d6ff66;\n\t\t\t--pitch6-secondary-note: #9dbf40;\n\t\t\t--pitch6-primary-note: #d6ff66;\n\t\t\t--pitch7-secondary-channel: #9dbf40;\n\t\t\t--pitch7-primary-channel: #fcff66;\n\t\t\t--pitch7-secondary-note: #9dbf40;\n\t\t\t--pitch7-primary-note: #fcff66;\n\t\t\t--pitch8-secondary-channel: #bf9b40;\n\t\t\t--pitch8-primary-channel: #ffd466;\n\t\t\t--pitch8-secondary-note: #bf9b40;\n\t\t\t--pitch8-primary-note: #ffd466;\n\t\t\t--pitch9-secondary-channel: #bf5b40;\n\t\t\t--pitch9-primary-channel: #ffab66;\n\t\t\t--pitch9-secondary-note: #bf5b40;\n\t\t\t--pitch9-primary-note: #ffab66;\n\t\t\t--pitch10-secondary-channel: #d15a1f;\n\t\t\t--pitch10-primary-channel: #ff8766;\n\t\t\t--pitch10-secondary-note: #d15a1f;\n\t\t\t--pitch10-primary-note: #ff8766;\n\t\t\t--noise1-secondary-channel: #4073bf;\n\t\t\t--noise1-primary-channel: #66a3ff;\n\t\t\t--noise1-secondary-note: #4073bf;\n\t\t\t--noise1-primary-note: #66a3ff;\n\t\t\t--noise2-secondary-channel: #405dbf;\n\t\t\t--noise2-primary-channel: #668aff;\n\t\t\t--noise2-secondary-note: #405dbf;\n\t\t\t--noise2-primary-note: #668aff;\n\t\t\t--noise3-secondary-channel: #4f40bf;\n\t\t\t--noise3-primary-channel: #7866ff;\n\t\t\t--noise3-secondary-note: #4f40bf;\n\t\t\t--noise3-primary-note: #7866ff;\n\t\t\t--noise4-secondary-channel: #8840bf;\n\t\t\t--noise4-primary-channel: #bd66ff;\n\t\t\t--noise4-secondary-note: #8840bf;\n\t\t\t--noise4-primary-note: #bd66ff;\n\t\t\t--noise5-secondary-channel: #bf40b5;\n\t\t\t--noise5-primary-channel: #ff66f2;\n\t\t\t--noise5-secondary-note: #bf40b5;\n\t\t\t--noise5-primary-note: #ff66f2;\n\t\t\t--mod1-secondary-channel: #cc6666;\n\t\t\t--mod1-primary-channel: #ff9999;\n\t\t\t--mod1-secondary-note: #cc6666;\n\t\t\t--mod1-primary-note: #ff9999;\n\t\t\t--mod2-secondary-channel: #cc7766;\n\t\t\t--mod2-primary-channel: #ffaa99;\n\t\t\t--mod2-secondary-note: #bf5540;\n\t\t\t--mod2-primary-note: #ffaa99;\n\t\t\t--mod3-secondary-channel: #cc8866;\n\t\t\t--mod3-primary-channel: #ffbb99;\n\t\t\t--mod3-secondary-note: #cc8866;\n\t\t\t--mod3-primary-note: #ffbb99;\n\t\t\t--mod4-secondary-channel: #cc9966;\n\t\t\t--mod4-primary-channel: #ffcc99;\n\t\t\t--mod4-secondary-note: #cc9966;\n\t\t\t--mod4-primary-note: #ffcc99;\n\t\t\t--mod-label-primary: #999;\n\t\t\t--mod-label-secondary-text: #333;\n\t\t\t--mod-label-primary-text: black;\n\t\t\t--disabled-note-primary: #696969;\n\t\t\t--disabled-note-secondary: #232323;\n\t\t}`,\n\n\t\t\"inverse\":\n\t\t\t`:root {\n\t\t\t--page-margin: #c4c8e3;\n\t\t\t--editor-background: #c4c8e3;\n\t\t\t--hover-preview: #000000;\n\t\t\t--playhead: #243953;\n\t\t\t--primary-text: black;\n\t\t\t--secondary-text: #855b95;\n\t\t\t--inverted-text: black;\n\t\t\t--text-selection: rgb(132 125 255);\n\t\t\t--box-selection-fill: rgb(174 109 73 / 65%);\n\t\t\t--loop-accent: #EC897D;\n\t\t\t--link-accent: #4e00c8;\n\t\t\t--ui-widget-background: #e7e7ff;\n\t\t\t--ui-widget-focus: #d0d3e9;\n\t\t\t--pitch-background: #ffffff;\n\t\t\t--tonic: #bbbbbb;\n\t\t\t--fifth-note: #dcdcdc;\n\t\t\t--white-piano-key: #ffffff;\n\t\t\t--black-piano-key: #615f66;\n\t\t\t--use-color-formula: false;\n\t\t\t--track-editor-bg-pitch: #e9ebff;\n\t\t\t--track-editor-bg-pitch-dim: #e9ebff;\n\t\t\t--track-editor-bg-noise: #fdf2fe;\n\t\t\t--track-editor-bg-noise-dim: #fdf2fe;\n\t\t\t--track-editor-bg-mod: #dbdefe;\n\t\t\t--track-editor-bg-mod-dim: #dbdefe;\n\t\t\t--multiplicative-mod-slider: #6900b3;\n\t\t\t--overwriting-mod-slider: #004b9d;\n\t\t\t--indicator-primary: #ff633d;\n\t\t\t--indicator-secondary: #933822;\n\t\t\t--select2-opt-group: #e7e7ff;\n\t\t\t--input-box-outline: #e7e7ff;\n\t\t\t--mute-button-normal: #0072ef;\n\t\t\t--mute-button-mod: #002e67;\n\t\t\t--pitch1-secondary-channel: #b77d6e;\n\t\t\t--pitch1-primary-channel: #ff9d85;\n\t\t\t--pitch1-secondary-note: #b77d6e;\n\t\t\t--pitch1-primary-note: #ff9d85;\n\t\t\t--pitch2-secondary-channel: #be8821;\n\t\t\t--pitch2-primary-channel: #FFAF12;\n\t\t\t--pitch2-secondary-note: #be8821;\n\t\t\t--pitch2-primary-note: #FFAF12;\n\t\t\t--pitch3-secondary-channel: #3a62a4;\n\t\t\t--pitch3-primary-channel: #528ae6;\n\t\t\t--pitch3-secondary-note: #3a62a4;\n\t\t\t--pitch3-primary-note: #528ae6;\n\t\t\t--pitch4-secondary-channel: #3e8d78;\n\t\t\t--pitch4-primary-channel: #4EC5A7;\n\t\t\t--pitch4-secondary-note: #3e8d78;\n\t\t\t--pitch4-primary-note: #4EC5A7;\n\t\t\t--pitch5-secondary-channel: #84906d;\n\t\t\t--pitch5-primary-channel: #aabf84;\n\t\t\t--pitch5-secondary-note: #84906d;\n\t\t\t--pitch5-primary-note: #aabf84;\n\t\t\t--pitch6-secondary-channel: #bd6345;\n\t\t\t--pitch6-primary-channel: #e59a81;\n\t\t\t--pitch6-secondary-note: #bd6345;\n\t\t\t--pitch6-primary-note: #e59a81;\n\t\t\t--pitch7-secondary-channel: #aa592f;\n\t\t\t--pitch7-primary-channel: #FE813E;\n\t\t\t--pitch7-secondary-note: #aa592f;\n\t\t\t--pitch7-primary-note: #FE813E;\n\t\t\t--pitch8-secondary-channel: #b2a171;\n\t\t\t--pitch8-primary-channel: #ffd76d;\n\t\t\t--pitch8-secondary-note: #b2a171;\n\t\t\t--pitch8-primary-note: #ffd76d;\n\t\t\t--pitch9-secondary-channel: #4f6177;\n\t\t\t--pitch9-primary-channel: #798FA7;\n\t\t\t--pitch9-secondary-note: #4f6177;\n\t\t\t--pitch9-primary-note: #798FA7;\n\t\t\t--pitch10-secondary-channel: #165162;\n\t\t\t--pitch10-primary-channel: #107895;\n\t\t\t--pitch10-secondary-note: #165162;\n\t\t\t--pitch10-primary-note: #107895;\n\t\t\t--noise1-secondary-channel: #71617C;\n\t\t\t--noise1-primary-channel: #977da9;\n\t\t\t--noise1-secondary-note: #71617C;\n\t\t\t--noise1-primary-note: #977da9;\n\t\t\t--noise2-secondary-channel: #4a4c5b;\n\t\t\t--noise2-primary-channel: #707591;\n\t\t\t--noise2-secondary-note: #4a4c5b;\n\t\t\t--noise2-primary-note: #707591;\n\t\t\t--noise3-secondary-channel: #817c7b;\n\t\t\t--noise3-primary-channel: #A19D9C;\n\t\t\t--noise3-secondary-note: #817c7b;\n\t\t\t--noise3-primary-note: #A19D9C;\n\t\t\t--noise4-secondary-channel: #ab847b;\n\t\t\t--noise4-primary-channel: #EAAC9D;\n\t\t\t--noise4-secondary-note: #ab847b;\n\t\t\t--noise4-primary-note: #EAAC9D;\n\t\t\t--noise5-secondary-channel: #B49D74;\n\t\t\t--noise5-primary-channel: #dec69b;\n\t\t\t--noise5-secondary-note: #B49D74;\n\t\t\t--noise5-primary-note: #dec69b;\n\t\t\t--mod1-secondary-channel: #722124;\n\t\t\t--mod1-primary-channel: #D13A41;\n\t\t\t--mod1-secondary-note: #722124;\n\t\t\t--mod1-primary-note: #D13A41;\n\t\t\t--mod2-secondary-channel: #213657;\n\t\t\t--mod2-primary-channel: #34558B;\n\t\t\t--mod2-secondary-note: #213657;\n\t\t\t--mod2-primary-note: #34558B;\n\t\t\t--mod3-secondary-channel: #555D46;\n\t\t\t--mod3-primary-channel: #848f6d;\n\t\t\t--mod3-secondary-note: #555D46;\n\t\t\t--mod3-primary-note: #848f6d;\n\t\t\t--mod4-secondary-channel: #71617C;\n\t\t\t--mod4-primary-channel: #a68ab9;\n\t\t\t--mod4-secondary-note: #71617C;\n\t\t\t--mod4-primary-note: #a68ab9;\n\t\t\t--mod-label-primary: #e9e9e9;\n\t\t\t--mod-label-secondary-text: #707070;\n\t\t\t--mod-label-primary-text: black;\n\t\t\t--disabled-note-primary: #959595;\n\t\t\t--disabled-note-secondary: #6e6e6e;\n\t\t\t}`,\n\n\t\t\"nebula\": `\n\t\t:root {\n\t\t\t--page-margin: #040410;\n\t\t\t--editor-background: #150e1f;\n\t\t\t--hover-preview: white;\n\t\t\t--playhead: rgba(255, 255, 255, 0.9);\n\t\t\t--primary-text: white;\n\t\t\t--secondary-text: #8C849A;\n\t\t\t--inverted-text: black;\n\t\t\t--text-selection: rgba(141,79,201,0.99);\n\t\t\t--box-selection-fill: #311E44;\n\t\t\t--loop-accent: #CC688C;\n\t\t\t--link-accent: #817DC9;\n\t\t\t--ui-widget-background: #44394F;\n\t\t\t--ui-widget-focus: #7A6386;\n\t\t\t--pitch-background: #393e4f40;\n\t\t\t--tonic: #7D5C9EC0;\n\t\t\t--fifth-note: #ab77bd50;\n\t\t\t--white-piano-key: #EEEEEE;\n\t\t\t--black-piano-key: #5F5566;\n\t\t\t--use-color-formula: true;\n\t\t\t--track-editor-bg-pitch: #46374C;\n\t\t\t--track-editor-bg-pitch-dim: #1F1C2850;\n\t\t\t--track-editor-bg-noise: #3D353B;\n\t\t\t--track-editor-bg-noise-dim: #16131550;\n\t\t\t--track-editor-bg-mod: #623F4C;\n\t\t\t--track-editor-bg-mod-dim: #361A2450;\n\t\t\t--multiplicative-mod-slider: #9F6E6A;\n\t\t\t--overwriting-mod-slider: #A664B5;\n\t\t\t--indicator-primary: #CC6B8E;\n\t\t\t--indicator-secondary: #44394F;\n\t\t\t--select2-opt-group: #6A576F;\n\t\t\t--input-box-outline: #222;\n\t\t\t--mute-button-normal: #BF91DC;\n\t\t\t--mute-button-mod: #DC8C9A;\n\t\t\t--mod-label-primary: #3A2840;\n\t\t\t--mod-label-secondary-text: #62485E;\n\t\t\t--mod-label-primary-text: white;\n\t\t\t--pitch-secondary-channel-hue: -96;\n\t\t\t--pitch-secondary-channel-hue-scale: 4.2;\n\t\t\t--pitch-secondary-channel-sat: 50.3;\n\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\n\t\t\t--pitch-secondary-channel-lum: 40;\n\t\t\t--pitch-secondary-channel-lum-scale: 0.05;\n\t\t\t--pitch-primary-channel-hue: -96;\n\t\t\t--pitch-primary-channel-hue-scale: 4.2;\n\t\t\t--pitch-primary-channel-sat: 70;\n\t\t\t--pitch-primary-channel-sat-scale: 0.1;\n\t\t\t--pitch-primary-channel-lum: 67.5;\n\t\t\t--pitch-primary-channel-lum-scale: 0.05;\n\t\t\t--pitch-secondary-note-hue: -96;\n\t\t\t--pitch-secondary-note-hue-scale: 4.2;\n\t\t\t--pitch-secondary-note-sat: 70.9;\n\t\t\t--pitch-secondary-note-sat-scale: 0.1;\n\t\t\t--pitch-secondary-note-lum: 25;\n\t\t\t--pitch-secondary-note-lum-scale: 0.05;\n\t\t\t--pitch-primary-note-hue: -96;\n\t\t\t--pitch-primary-note-hue-scale: 4.2;\n\t\t\t--pitch-primary-note-sat: 90;\n\t\t\t--pitch-primary-note-sat-scale: 0.05;\n\t\t\t--pitch-primary-note-lum: 85.6;\n\t\t\t--pitch-primary-note-lum-scale: 0.025;\n\t\t\t--noise-secondary-channel-hue: 16;\n\t\t\t--noise-secondary-channel-hue-scale: -1.33;\n\t\t\t--noise-secondary-channel-sat: 25;\n\t\t\t--noise-secondary-channel-sat-scale: 0;\n\t\t\t--noise-secondary-channel-lum: 42;\n\t\t\t--noise-secondary-channel-lum-scale: 0;\n\t\t\t--noise-primary-channel-hue: 16;\n\t\t\t--noise-primary-channel-hue-scale: -1.33;\n\t\t\t--noise-primary-channel-sat: 33;\n\t\t\t--noise-primary-channel-sat-scale: 0;\n\t\t\t--noise-primary-channel-lum: 63.5;\n\t\t\t--noise-primary-channel-lum-scale: 0;\n\t\t\t--noise-secondary-note-hue: 12;\n\t\t\t--noise-secondary-note-hue-scale: -1.33;\n\t\t\t--noise-secondary-note-sat: 33.5;\n\t\t\t--noise-secondary-note-sat-scale: 0;\n\t\t\t--noise-secondary-note-lum: 55;\n\t\t\t--noise-secondary-note-lum-scale: 0;\n\t\t\t--noise-primary-note-hue: 12;\n\t\t\t--noise-primary-note-hue-scale: -1.33;\n\t\t\t--noise-primary-note-sat: 46.5;\n\t\t\t--noise-primary-note-sat-scale: 0;\n\t\t\t--noise-primary-note-lum: 74;\n\t\t\t--noise-primary-note-lum-scale: 0;\n\t\t\t--mod-secondary-channel-hue: 12;\n\t\t\t--mod-secondary-channel-hue-scale: -.75;\n\t\t\t--mod-secondary-channel-sat: 50;\n\t\t\t--mod-secondary-channel-sat-scale: 0;\n\t\t\t--mod-secondary-channel-lum: 50;\n\t\t\t--mod-secondary-channel-lum-scale: 0;\n\t\t\t--mod-primary-channel-hue: 12;\n\t\t\t--mod-primary-channel-hue-scale: -.75;\n\t\t\t--mod-primary-channel-sat: 70;\n\t\t\t--mod-primary-channel-sat-scale: 0;\n\t\t\t--mod-primary-channel-lum: 80;\n\t\t\t--mod-primary-channel-lum-scale: 0;\n\t\t\t--mod-secondary-note-hue: 12;\n\t\t\t--mod-secondary-note-hue-scale: -.75;\n\t\t\t--mod-secondary-note-sat: 75;\n\t\t\t--mod-secondary-note-sat-scale: 0;\n\t\t\t--mod-secondary-note-lum: 45;\n\t\t\t--mod-secondary-note-lum-scale: 0;\n\t\t\t--mod-primary-note-hue: 12;\n\t\t\t--mod-primary-note-hue-scale: -.75;\n\t\t\t--mod-primary-note-sat: 85;\n\t\t\t--mod-primary-note-sat-scale: 0;\n\t\t\t--mod-primary-note-lum: 85;\n\t\t\t--mod-primary-note-lum-scale: 0;\n\t\t\t--disabled-note-primary: #aaa;\n\t\t\t--disabled-note-secondary: #666;\n\t\t}`,\n\n\t\t\"roe light\": `\n\t\t:root {\n\t\t\t--page-margin: #fff5f5;\n\t\t\t--editor-background: #fff5f5;\n\t\t\t--hover-preview: #0e8bf1;\n\t\t\t--playhead: 000;\n\t\t\t--primary-text: #0e8bf1;\n\t\t\t--secondary-text: #f10e0e;\n\t\t\t--inverted-text: white;\n\t\t\t--text-selection: #ff4444fc;\n\t\t\t--box-selection-fill: #ff00004d;\n\t\t\t--loop-accent: #9a75ff;\n\t\t\t--link-accent: #ff7070;\n\t\t\t--ui-widget-background: #bdc9e5;\n\t\t\t--ui-widget-focus: #a3b7e5;\n\t\t\t--pitch-background: #d0c7db;\n\t\t\t--tonic: #bed3e4;\n\t\t\t--fifth-note: #e7c6c6;\n\t\t\t--white-piano-key: #cdcdcd;\n\t\t\t--black-piano-key: #232323;\n\t\t\t--use-color-formula: false;\n\t\t\t--track-editor-bg-pitch: #e5e1ea;\n\t\t\t--track-editor-bg-pitch-dim: #cbc4d4;\n\t\t\t--track-editor-bg-noise: #e0ddee;\n\t\t\t--track-editor-bg-noise-dim: #c1bade;\n\t\t\t--track-editor-bg-mod: #d8e6f3;\n\t\t\t--track-editor-bg-mod-dim: #b1cce7;\n\t\t\t--multiplicative-mod-slider: #8097cb;\n\t\t\t--overwriting-mod-slider: #8097cb;\n\t\t\t--indicator-primary: #FF2A2A;\n\t\t\t--indicator-secondary: #92a6d3;\n\t\t\t--select2-opt-group: #b6c4e2;\n\t\t\t--input-box-outline: #bdc9e5;\n\t\t\t--mute-button-normal: #66baff;\n\t\t\t--mute-button-mod: #1a98ff;\n\t\t\t--pitch1-secondary-channel: #273c90;\n\t\t\t--pitch1-primary-channel: #476BFF;\n\t\t\t--pitch1-secondary-note: #273c90;\n\t\t\t--pitch1-primary-note: #476BFF;\n\t\t\t--pitch2-secondary-channel: #3a3898;\n\t\t\t--pitch2-primary-channel: #625FFB;\n\t\t\t--pitch2-secondary-note: #3a3898;\n\t\t\t--pitch2-primary-note: #625FFB;\n\t\t\t--pitch3-secondary-channel: #542780;\n\t\t\t--pitch3-primary-channel: #9C49EC;\n\t\t\t--pitch3-secondary-note: #542780;\n\t\t\t--pitch3-primary-note: #9C49EC;\n\t\t\t--pitch4-secondary-channel: #84225d;\n\t\t\t--pitch4-primary-channel: #fd3fb1;\n\t\t\t--pitch4-secondary-note: #84225d;\n\t\t\t--pitch4-primary-note: #fd3fb1;\n\t\t\t--pitch5-secondary-channel: #8d2323;\n\t\t\t--pitch5-primary-channel: #ff3f3f;\n\t\t\t--pitch5-secondary-note: #8d2323;\n\t\t\t--pitch5-primary-note: #ff3f3f;\n\t\t\t--pitch6-secondary-channel: #84225d;\n\t\t\t--pitch6-primary-channel: #fd3fb1;\n\t\t\t--pitch6-secondary-note: #84225d;\n\t\t\t--pitch6-primary-note: #fd3fb1;\n\t\t\t--pitch7-secondary-channel: #542780;\n\t\t\t--pitch7-primary-channel: #9C49EC;\n\t\t\t--pitch7-secondary-note: #542780;\n\t\t\t--pitch7-primary-note: #9C49EC;\n\t\t\t--pitch8-secondary-channel: #3a3898;\n\t\t\t--pitch8-primary-channel: #625FFB;\n\t\t\t--pitch8-secondary-note: #3a3898;\n\t\t\t--pitch8-primary-note: #625FFB;\n\t\t\t--pitch9-secondary-channel: #273c90;\n\t\t\t--pitch9-primary-channel: #476BFF;\n\t\t\t--pitch9-secondary-note: #273c90;\n\t\t\t--pitch9-primary-note: #476BFF;\n\t\t\t--pitch10-secondary-channel: #165a93;\n\t\t\t--pitch10-primary-channel: #299EFF;\n\t\t\t--pitch10-secondary-note: #165a93;\n\t\t\t--pitch10-primary-note: #299EFF;\n\t\t\t--noise1-secondary-channel: #336bdb;\n\t\t\t--noise1-primary-channel: #4281FF;\n\t\t\t--noise1-secondary-note: #336bdb;\n\t\t\t--noise1-primary-note: #4281FF;\n\t\t\t--noise2-secondary-channel: #5e38dc;\n\t\t\t--noise2-primary-channel: #7347FF;\n\t\t\t--noise2-secondary-note: #5e38dc;\n\t\t\t--noise2-primary-note: #7347FF;\n\t\t\t--noise3-secondary-channel: #7d3097;\n\t\t\t--noise3-primary-channel: #9F3CBF;\n\t\t\t--noise3-secondary-note: #7d3097;\n\t\t\t--noise3-primary-note: #9F3CBF;\n\t\t\t--noise4-secondary-channel: #ad2559;\n\t\t\t--noise4-primary-channel: #D3326F;\n\t\t\t--noise4-secondary-note: #ad2559;\n\t\t\t--noise4-primary-note: #D3326F;\n\t\t\t--noise5-secondary-channel: #d02525;\n\t\t\t--noise5-primary-channel: #FF2A2A;\n\t\t\t--noise5-secondary-note: #d02525;\n\t\t\t--noise5-primary-note: #FF2A2A;\n\t\t\t--mod1-secondary-channel: #35415a;\n\t\t\t--mod1-primary-channel: #47587a;\n\t\t\t--mod1-secondary-note: #35415a;\n\t\t\t--mod1-primary-note: #47587a;\n\t\t\t--mod2-secondary-channel: #5a5374;\n\t\t\t--mod2-primary-channel: #716791;\n\t\t\t--mod2-secondary-note: #5a5374;\n\t\t\t--mod2-primary-note: #716791;\n\t\t\t--mod3-secondary-channel: #53385c;\n\t\t\t--mod3-primary-channel: #6f4c7b;\n\t\t\t--mod3-secondary-note: #53385c;\n\t\t\t--mod3-primary-note: #6f4c7b;\n\t\t\t--mod4-secondary-channel: #7e4e60;\n\t\t\t--mod4-primary-channel: #9e6279;\n\t\t\t--mod4-secondary-note: #7e4e60;\n\t\t\t--mod4-primary-note: #9e6279;\n\t\t\t--mod-label-primary: #d0c7db;\n\t\t\t--mod-label-secondary-text: #cb3434;\n\t\t\t--mod-label-primary-text: black;\n\t\t\t--disabled-note-primary: #616161;\n\t\t\t--disabled-note-secondary: #474747;\n\t\t}`,\n\n\t\t\"energized\": `\n\t\t:root {\n\t\t\t--page-margin: #000a08;\n\t\t\t--editor-background: #000a08;\n\t\t\t--hover-preview: #ffffcc;\n\t\t\t--playhead: #ccfff5;\n\t\t\t--primary-text: white;\n\t\t\t--secondary-text: #d9d98c;\n\t\t\t--inverted-text: black;\n\t\t\t--text-selection: #ffff6659;\n\t\t\t--box-selection-fill: #ffffff33;\n\t\t\t--loop-accent: #ffff00;\n\t\t\t--link-accent: #00ffcc;\n\t\t\t--ui-widget-background: #141f1d;\n\t\t\t--ui-widget-focus: #24423d;\n\t\t\t--pitch-background: #001410;\n\t\t\t--tonic: #00241d;\n\t\t\t--fifth-note: #ffff6633;\n\t\t\t--white-piano-key: #66998f;\n\t\t\t--black-piano-key: #141f1d;\n\t\t\t--use-color-formula: false;\n\t\t\t--track-editor-bg-pitch: #66998f40;\n\t\t\t--track-editor-bg-pitch-dim: #293d3940;\n\t\t\t--track-editor-bg-noise: #66998f40;\n\t\t\t--track-editor-bg-noise-dim: #293d3940;\n\t\t\t--track-editor-bg-mod: #99996640;\n\t\t\t--track-editor-bg-mod-dim: #3d3d2940;\n\t\t\t--multiplicative-mod-slider: #ffff00;\n\t\t\t--overwriting-mod-slider: #00ffcc;\n\t\t\t--indicator-primary: #ffff00;\n\t\t\t--indicator-secondary: #141f1d;\n\t\t\t--select2-opt-group: #1b312e;\n\t\t\t--input-box-outline: #141f1d;\n\t\t\t--mute-button-normal: #00ffcc;\n\t\t\t--mute-button-mod: #00997a;\n\t\t\t--pitch1-secondary-channel: #bfbf40;\n\t\t\t--pitch1-primary-channel: #ffff64;\n\t\t\t--pitch1-secondary-note: #bfbf40;\n\t\t\t--pitch1-primary-note: #ffff64;\n\t\t\t--pitch2-secondary-channel: #a2bf40;\n\t\t\t--pitch2-primary-channel: #e0ff7d;\n\t\t\t--pitch2-secondary-note: #a2bf40;\n\t\t\t--pitch2-primary-note: #e0ff7d;\n\t\t\t--pitch3-secondary-channel: #75bf40;\n\t\t\t--pitch3-primary-channel: #c1ff96;\n\t\t\t--pitch3-secondary-note: #75bf40;\n\t\t\t--pitch3-primary-note: #c1ff96;\n\t\t\t--pitch4-secondary-channel: #40bf51;\n\t\t\t--pitch4-primary-channel: #a2ffaf;\n\t\t\t--pitch4-secondary-note: #40bf51;\n\t\t\t--pitch4-primary-note: #a2ffaf;\n\t\t\t--pitch5-secondary-channel: #40bf86;\n\t\t\t--pitch5-primary-channel: #83ffc8;\n\t\t\t--pitch5-secondary-note: #40bf86;\n\t\t\t--pitch5-primary-note: #83ffc8;\n\t\t\t--pitch6-secondary-channel: #40bfa6;\n\t\t\t--pitch6-primary-channel: #64ffe1;\n\t\t\t--pitch6-secondary-note: #40bfa6;\n\t\t\t--pitch6-primary-note: #64ffe1;\n\t\t\t--pitch7-secondary-channel: #40bf86;\n\t\t\t--pitch7-primary-channel: #83ffc8;\n\t\t\t--pitch7-secondary-note: #40bf86;\n\t\t\t--pitch7-primary-note: #83ffc8;\n\t\t\t--pitch8-secondary-channel: #40bf51;\n\t\t\t--pitch8-primary-channel: #a2ffaf;\n\t\t\t--pitch8-secondary-note: #40bf51;\n\t\t\t--pitch8-primary-note: #a2ffaf;\n\t\t\t--pitch9-secondary-channel: #75bf40;\n\t\t\t--pitch9-primary-channel: #c1ff96;\n\t\t\t--pitch9-secondary-note: #75bf40;\n\t\t\t--pitch9-primary-note: #c1ff96;\n\t\t\t--pitch10-secondary-channel: #a2bf40;\n\t\t\t--pitch10-primary-channel: #e0ff7d;\n\t\t\t--pitch10-secondary-note: #a2bf40;\n\t\t\t--pitch10-primary-note: #e0ff7d;\n\t\t\t--noise1-secondary-channel: #a6a659;\n\t\t\t--noise1-primary-channel: #ffffcc;\n\t\t\t--noise1-secondary-note: #a6a659;\n\t\t\t--noise1-primary-note: #ffffcc;\n\t\t\t--noise2-secondary-channel: #94a659;\n\t\t\t--noise2-primary-channel: #f3ffcc;\n\t\t\t--noise2-secondary-note: #94a659;\n\t\t\t--noise2-primary-note: #f3ffcc;\n\t\t\t--noise3-secondary-channel: #79a659;\n\t\t\t--noise3-primary-channel: #e1ffcc;\n\t\t\t--noise3-secondary-note: #79a659;\n\t\t\t--noise3-primary-note: #e1ffcc;\n\t\t\t--noise4-secondary-channel: #94a659;\n\t\t\t--noise4-primary-channel: #f3ffcc;\n\t\t\t--noise4-secondary-note: #94a659;\n\t\t\t--noise4-primary-note: #f3ffcc;\n\t\t\t--noise5-secondary-channel: #a6a659;\n\t\t\t--noise5-primary-channel: #ffffcc;\n\t\t\t--noise5-secondary-note: #a6a659;\n\t\t\t--noise5-primary-note: #ffffcc;\n\t\t\t--mod1-secondary-channel: #a3a329;\n\t\t\t--mod1-primary-channel: #ffff00;\n\t\t\t--mod1-secondary-note: #a3a329;\n\t\t\t--mod1-primary-note: #ffff00;\n\t\t\t--mod2-secondary-channel: #a38529;\n\t\t\t--mod2-primary-channel: #ffbf00;\n\t\t\t--mod2-secondary-note: #a38529;\n\t\t\t--mod2-primary-note: #ffbf00;\n\t\t\t--mod3-secondary-channel: #a36629;\n\t\t\t--mod3-primary-channel: #ff7f00;\n\t\t\t--mod3-secondary-note: #a36629;\n\t\t\t--mod3-primary-note: #ff7f00;\n\t\t\t--mod4-secondary-channel: #a38529;\n\t\t\t--mod4-primary-channel: #ffbf00;\n\t\t\t--mod4-secondary-note: #a38529;\n\t\t\t--mod4-primary-note: #ffbf00;\n\t\t\t--mod-label-primary: #141f1d;\n\t\t\t--mod-label-secondary-text: #d9d98c;\n\t\t\t--mod-label-primary-text: white;\n\t\t\t--disabled-note-primary: #808080;\n\t\t\t--disabled-note-secondary: #666666;\n\t\t}`,\n\n\t\t\"neapolitan\":\n\t\t`:root {\n\t\t\t--page-margin: #120807;\n\t\t\t--editor-background: #120807;\n\t\t\t--hover-preview: #e79a82;\n\t\t\t--playhead: #e79a82;\n\t\t\t--primary-text: #decdbf;\n\t\t\t--secondary-text: #fa99bb;\n\t\t\t--inverted-text: black;\n\t\t\t--text-selection: #990036;\n\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\n\t\t\t--loop-accent: #f6377a;\n\t\t\t--link-accent: #f6377a;\n\t\t\t--ui-widget-background: #24160f;\n\t\t\t--ui-widget-focus: #362217;\n\t\t\t--pitch-background: #1e1106;\n\t\t\t--tonic: #382414;\n\t\t\t--fifth-note: #41240c;\n\t\t\t--white-piano-key: #e1c5b7;\n\t\t\t--black-piano-key: #482c1e;\n\t\t\t--use-color-formula: false;\n\t\t\t--track-editor-bg-pitch: #4d2a19;\n\t\t\t--track-editor-bg-pitch-dim: #27150c;\n\t\t\t--track-editor-bg-noise: #4d2a19;\n\t\t\t--track-editor-bg-noise-dim: #27150c;\n\t\t\t--track-editor-bg-mod: #4d2a19;\n\t\t\t--track-editor-bg-mod-dim: #27150c;\n\t\t\t--multiplicative-mod-slider: #decdbf;\n\t\t\t--overwriting-mod-slider: #decdbf;\n\t\t\t--indicator-primary: #decdbf;\n\t\t\t--indicator-secondary: #362217;\n\t\t\t--select2-opt-group: #24160f;\n\t\t\t--input-box-outline: #24160f;\n\t\t\t--mute-button-normal: #ff66a1;\n\t\t\t--mute-button-mod: #e61968;\n\t\t\t--pitch1-secondary-channel: #680029;\n\t\t\t--pitch1-primary-channel: #cc0052;\n\t\t\t--pitch1-secondary-note: #660029;\n\t\t\t--pitch1-primary-note: #cc0052;\n\t\t\t--pitch2-secondary-channel: #7e1b43;\n\t\t\t--pitch2-primary-channel: #d32e71;\n\t\t\t--pitch2-secondary-note: #7e1b43;\n\t\t\t--pitch2-primary-note: #d32e71;\n\t\t\t--pitch3-secondary-channel: #aa275e;\n\t\t\t--pitch3-primary-channel: #da5d91;\n\t\t\t--pitch3-secondary-note: #aa275e;\n\t\t\t--pitch3-primary-note: #da5d91;\n\t\t\t--pitch4-secondary-channel: #cc3878;\n\t\t\t--pitch4-primary-channel: #e18bb0;\n\t\t\t--pitch4-secondary-note: #cc3878;\n\t\t\t--pitch4-primary-note: #e18bb0;\n\t\t\t--pitch5-secondary-channel: #d06c9b;\n\t\t\t--pitch5-primary-channel: #e9bad0;\n\t\t\t--pitch5-secondary-note: #d06c9b;\n\t\t\t--pitch5-primary-note: #e9bad0;\n\t\t\t--pitch6-secondary-channel: #c9acc5;\n\t\t\t--pitch6-primary-channel: #f0e8ef;\n\t\t\t--pitch6-secondary-note: #c9acc5;\n\t\t\t--pitch6-primary-note: #f0e8ef;\n\t\t\t--pitch7-secondary-channel: #d06c9b;\n\t\t\t--pitch7-primary-channel: #e9bad0;\n\t\t\t--pitch7-secondary-note: #d06c9b;\n\t\t\t--pitch7-primary-note: #e9bad0;\n\t\t\t--pitch8-secondary-channel: #cc3878;\n\t\t\t--pitch8-primary-channel: #e18bb0;\n\t\t\t--pitch8-secondary-note: #cc3878;\n\t\t\t--pitch8-primary-note: #e18bb0;\n\t\t\t--pitch9-secondary-channel: #aa275e;\n\t\t\t--pitch9-primary-channel: #da5d91;\n\t\t\t--pitch9-secondary-note: #aa275e;\n\t\t\t--pitch9-primary-note: #da5d91;\n\t\t\t--pitch10-secondary-channel: #7e1b43;\n\t\t\t--pitch10-primary-channel: #d32e71;\n\t\t\t--pitch10-secondary-note: #7e1b43;\n\t\t\t--pitch10-primary-note: #d32e71;\n\t\t\t--noise1-secondary-channel: #683a37;\n\t\t\t--noise1-primary-channel: #A85F5A;\n\t\t\t--noise1-secondary-note: #683a37;\n\t\t\t--noise1-primary-note: #A85F5A;\n\t\t\t--noise2-secondary-channel: #7c4a41;\n\t\t\t--noise2-primary-channel: #B47A70;\n\t\t\t--noise2-secondary-note: #7c4a41;\n\t\t\t--noise2-primary-note: #B47A70;\n\t\t\t--noise3-secondary-channel: #935f4d;\n\t\t\t--noise3-primary-channel: #c09587;\n\t\t\t--noise3-secondary-note: #935f4d;\n\t\t\t--noise3-primary-note: #C09587;\n\t\t\t--noise4-secondary-channel: #aa795a;\n\t\t\t--noise4-primary-channel: #cdb09d;\n\t\t\t--noise4-secondary-note: #aa795a;\n\t\t\t--noise4-primary-note: #CDAF9D;\n\t\t\t--noise5-secondary-channel: #bb987c;\n\t\t\t--noise5-primary-channel: #decdbf;\n\t\t\t--noise5-secondary-note: #bb987c;\n\t\t\t--noise5-primary-note: #decdbf;\n\t\t\t--mod1-secondary-channel: #6ca784;\n\t\t\t--mod1-primary-channel: #accdb9;\n\t\t\t--mod1-secondary-note: #6ca784;\n\t\t\t--mod1-primary-note: #accdb9;\n\t\t\t--mod2-secondary-channel: #7daa9f;\n\t\t\t--mod2-primary-channel: #bbd3cd;\n\t\t\t--mod2-secondary-note: #7daa9f;\n\t\t\t--mod2-primary-note: #bbd3cd;\n\t\t\t--mod3-secondary-channel: #70a3a9;\n\t\t\t--mod3-primary-channel: #afcccf;\n\t\t\t--mod3-secondary-note: #70a3a9;\n\t\t\t--mod3-primary-note: #afcccf;\n\t\t\t--mod4-secondary-channel: #5698b8;\n\t\t\t--mod4-primary-channel: #9ec3d6;\n\t\t\t--mod4-secondary-note: #5698b8;\n\t\t\t--mod4-primary-note: #9ec3d6;\n\t\t\t--mod-label-primary: #24160f;\n\t\t\t--mod-label-secondary-text: #E5AFC2;\n\t\t\t--mod-label-primary-text: #decdbf;\n\t\t\t--disabled-note-primary: #bababa;\n\t\t\t--disabled-note-secondary: #878787;\n\t\t}`,\n\n\t\t\"poly\":\n\t\t\t`:root {\n\t\t\t--page-margin: #000;\n\t\t\t--editor-background: #000;\n\t\t\t--hover-preview: #808080;\n\t\t\t--playhead: #808080;\n\t\t\t--primary-text: white;\n\t\t\t--secondary-text: #cccccc;\n\t\t\t--inverted-text: black;\n\t\t\t--text-selection: #696969;\n\t\t\t--box-selection-fill: #cccccc40;\n\t\t\t--loop-accent: #808080;\n\t\t\t--link-accent: white;\n\t\t\t--ui-widget-background: #232323;\n\t\t\t--ui-widget-focus: #303030;\n\t\t\t--pitch-background: #1a1a1a;\n\t\t\t--tonic: #262626;\n\t\t\t--fifth-note: #0d0d0d;\n\t\t\t--white-piano-key: #808080;\n\t\t\t--black-piano-key: #232323;\n\t\t\t--use-color-formula: true;\n\t\t\t--track-editor-bg-pitch: #262626;\n\t\t\t--track-editor-bg-pitch-dim: #1a1a1a;\n\t\t\t--track-editor-bg-noise: #262626;\n\t\t\t--track-editor-bg-noise-dim: #1a1a1a;\n\t\t\t--track-editor-bg-mod: #262626;\n\t\t\t--track-editor-bg-mod-dim: #1a1a1a;\n\t\t\t--multiplicative-mod-slider: #808080;\n\t\t\t--overwriting-mod-slider: #808080;\n\t\t\t--indicator-primary: #808080;\n\t\t\t--indicator-secondary: #333333;\n\t\t\t--select2-opt-group: #232323;\n\t\t\t--input-box-outline: #222;\n\t\t\t--mute-button-normal: #808080;\n\t\t\t--mute-button-mod: #808080;\n\t\t\t--mod-label-primary: #232323;\n\t\t\t--mod-label-secondary-text: #696969;\n\t\t\t--mod-label-primary-text: #cdcdcd;\n\t\t\t--pitch-secondary-channel-hue: 208;\n\t\t\t--pitch-secondary-channel-hue-scale: 10;\n\t\t\t--pitch-secondary-channel-sat: 100;\n\t\t\t--pitch-secondary-channel-sat-scale: 0;\n\t\t\t--pitch-secondary-channel-lum: 88;\n\t\t\t--pitch-secondary-channel-lum-scale: 0;\n\t\t\t--pitch-primary-channel-hue: 207;\n\t\t\t--pitch-primary-channel-hue-scale: 10;\n\t\t\t--pitch-primary-channel-sat: 100;\n\t\t\t--pitch-primary-channel-sat-scale: 0;\n\t\t\t--pitch-primary-channel-lum: 910;\n\t\t\t--pitch-primary-channel-lum-scale: 0;\n\t\t\t--pitch-secondary-note-hue: 208;\n\t\t\t--pitch-secondary-note-hue-scale: 10;\n\t\t\t--pitch-secondary-note-sat: 100;\n\t\t\t--pitch-secondary-note-sat-scale: 0;\n\t\t\t--pitch-secondary-note-lum: 88;\n\t\t\t--pitch-secondary-note-lum-scale: 0;\n\t\t\t--pitch-primary-note-hue: 208;\n\t\t\t--pitch-primary-note-hue-scale: 10;\n\t\t\t--pitch-primary-note-sat: 100;\n\t\t\t--pitch-primary-note-sat-scale: 0;\n\t\t\t--pitch-primary-note-lum: 910;\n\t\t\t--pitch-primary-note-lum-scale: 0;\n\t\t\t--noise-secondary-channel-hue: 328;\n\t\t\t--noise-secondary-channel-hue-scale: 10;\n\t\t\t--noise-secondary-channel-sat: 100;\n\t\t\t--noise-secondary-channel-sat-scale: 0;\n\t\t\t--noise-secondary-channel-lum: 88;\n\t\t\t--noise-secondary-channel-lum-scale: 0;\n\t\t\t--noise-primary-channel-hue: 327;\n\t\t\t--noise-primary-channel-hue-scale: 10;\n\t\t\t--noise-primary-channel-sat: 100;\n\t\t\t--noise-primary-channel-sat-scale: 0;\n\t\t\t--noise-primary-channel-lum: 910;\n\t\t\t--noise-primary-channel-lum-scale: 0;\n\t\t\t--noise-secondary-note-hue: 328;\n\t\t\t--noise-secondary-note-hue-scale: 10;\n\t\t\t--noise-secondary-note-sat: 100;\n\t\t\t--noise-secondary-note-sat-scale: 0;\n\t\t\t--noise-secondary-note-lum: 88;\n\t\t\t--noise-secondary-note-lum-scale: 0;\n\t\t\t--noise-primary-note-hue: 327;\n\t\t\t--noise-primary-note-hue-scale: 10;\n\t\t\t--noise-primary-note-sat: 100;\n\t\t\t--noise-primary-note-sat-scale: 0;\n\t\t\t--noise-primary-note-lum: 910;\n\t\t\t--noise-primary-note-lum-scale: 0;\n\t\t\t--mod-secondary-channel-hue: 87;\n\t\t\t--mod-secondary-channel-hue-scale: 10;\n\t\t\t--mod-secondary-channel-sat: 100;\n\t\t\t--mod-secondary-channel-sat-scale: 0;\n\t\t\t--mod-secondary-channel-lum: 88;\n\t\t\t--mod-secondary-channel-lum-scale: 0;\n\t\t\t--mod-primary-channel-hue: 88;\n\t\t\t--mod-primary-channel-hue-scale: 10;\n\t\t\t--mod-primary-channel-sat: 100;\n\t\t\t--mod-primary-channel-sat-scale: 0;\n\t\t\t--mod-primary-channel-lum: 910;\n\t\t\t--mod-primary-channel-lum-scale: 0;\n\t\t\t--mod-secondary-note-hue: 87;\n\t\t\t--mod-secondary-note-hue-scale: 10;\n\t\t\t--mod-secondary-note-sat: 100;\n\t\t\t--mod-secondary-note-sat-scale: 0;\n\t\t\t--mod-secondary-note-lum: 88;\n\t\t\t--mod-secondary-note-lum-scale: 0;\n\t\t\t--mod-primary-note-hue: 88;\n\t\t\t--mod-primary-note-hue-scale: 10;\n\t\t\t--mod-primary-note-sat: 100;\n\t\t\t--mod-primary-note-sat-scale: 0;\n\t\t\t--mod-primary-note-lum: 910;\n\t\t\t--mod-primary-note-lum-scale: 0;\n\t\t\t--disabled-note-primary: #c6c6c6;\n\t\t\t--disabled-note-secondary: #8c8c8c;\n\t\t}`,\n\n\t\t\"blutonium\":\n\t\t\t`:root {\n\t\t\t--page-margin: #02070D;\n\t\t\t--editor-background: #02070D;\n\t\t\t--hover-preview: white;\n\t\t\t--playhead: white;\n\t\t\t--primary-text: #9bd1ee;\n\t\t\t--secondary-text: #5a6da8;\n\t\t\t--inverted-text: black;\n\t\t\t--text-selection: rgb(68 68 255 / 99%);\n\t\t\t--box-selection-fill: rgb(0 0 255 / 30%);\n\t\t\t--loop-accent: #024aca;\n\t\t\t--link-accent: #024aca;\n\t\t\t--ui-widget-background: #161c2e;\n\t\t\t--ui-widget-focus: #262c3e;\n\t\t\t--pitch-background: #22272D;\n\t\t\t--tonic: #1b3056;\n\t\t\t--fifth-note: #344051;\n\t\t\t--white-piano-key: #a6c6ed;\n\t\t\t--black-piano-key: #2f4687;\n\t\t\t--use-color-formula: false;\n\t\t\t--track-editor-bg-pitch: #25284c;\n\t\t\t--track-editor-bg-pitch-dim: #211c26;\n\t\t\t--track-editor-bg-noise: #261f42;\n\t\t\t--track-editor-bg-noise-dim: #1a152d;\n\t\t\t--track-editor-bg-mod: #183049;\n\t\t\t--track-editor-bg-mod-dim: #102132;\n\t\t\t--multiplicative-mod-slider: #344a7f;\n\t\t\t--overwriting-mod-slider: #344a7f;\n\t\t\t--indicator-primary: #024aca;\n\t\t\t--indicator-secondary: #00177d;\n\t\t\t--select2-opt-group: #141e34;\n\t\t\t--input-box-outline: #141e34;\n\t\t\t--mute-button-normal: #273b9d;\n\t\t\t--mute-button-mod: #27989d;\n\t\t\t--pitch1-secondary-channel: hsl(200, 100%, 40%);\n\t\t\t--pitch1-primary-channel: #99ddff;\n\t\t\t--pitch1-secondary-note: hsl(200, 100%, 40%);\n\t\t\t--pitch1-primary-note: #99ddff;\n\t\t\t--pitch2-secondary-channel: \thsl(212, 100%, 34%);\n\t\t\t--pitch2-primary-channel: #5BA8FF;\n\t\t\t--pitch2-secondary-note: hsl(212, 100%, 34%);\n\t\t\t--pitch2-primary-note: #5BA8FF;\n\t\t\t--pitch3-secondary-channel: #024ACA;\n\t\t\t--pitch3-primary-channel: #0A89FF;\n\t\t\t--pitch3-secondary-note: #024ACA;\n\t\t\t--pitch3-primary-note: #0A89FF;\n\t\t\t--pitch4-secondary-channel: #00177D;\n\t\t\t--pitch4-primary-channel: #024ACA;\n\t\t\t--pitch4-secondary-note: #00177D;\n\t\t\t--pitch4-primary-note: #024ACA;\n\t\t\t--pitch5-secondary-channel: #000e4e;\n\t\t\t--pitch5-primary-channel: #0023bf;\n\t\t\t--pitch5-secondary-note: #000e4e;\n\t\t\t--pitch5-primary-note: #0023bf;\n\t\t\t--pitch6-secondary-channel: #8990FE;\n\t\t\t--pitch6-primary-channel: #C2C6FF;\n\t\t\t--pitch6-secondary-note: #8990FE;\n\t\t\t--pitch6-primary-note: #C2C6FF;\n\t\t\t--pitch7-secondary-channel: #5E65D3;\n\t\t\t--pitch7-primary-channel: #8990FE;\n\t\t\t--pitch7-secondary-note: #5E65D3;\n\t\t\t--pitch7-primary-note: #8990FE;\n\t\t\t--pitch8-secondary-channel: #3138A6;\n\t\t\t--pitch8-primary-channel: #5E65D3;\n\t\t\t--pitch8-secondary-note: #3138A6;\n\t\t\t--pitch8-primary-note: #5E65D3;\n\t\t\t--pitch9-secondary-channel: #1B0B7F;\n\t\t\t--pitch9-primary-channel: #3138A6;\n\t\t\t--pitch9-secondary-note: #1B0B7F;\n\t\t\t--pitch9-primary-note: #3138A6;\n\t\t\t--pitch10-secondary-channel: #13015D;\n\t\t\t--pitch10-primary-channel: #1c02bd;\n\t\t\t--pitch10-secondary-note: #13015D;\n\t\t\t--pitch10-primary-note: #1c02bd;\n\t\t\t--noise1-secondary-channel: #A675FE;\n\t\t\t--noise1-primary-channel: #E2C9FF;\n\t\t\t--noise1-secondary-note: #A675FE;\n\t\t\t--noise1-primary-note: #E2C9FF;\n\t\t\t--noise2-secondary-channel: #6A31CA;\n\t\t\t--noise2-primary-channel: #A675FE;\n\t\t\t--noise2-secondary-note: #6A31CA;\n\t\t\t--noise2-primary-note: #A675FE;\n\t\t\t--noise3-secondary-channel: #5A1991;\n\t\t\t--noise3-primary-channel: #6A31CA;\n\t\t\t--noise3-secondary-note: #5A1991;\n\t\t\t--noise3-primary-note: #6A31CA;\n\t\t\t--noise4-secondary-channel: #2f1a68;\n\t\t\t--noise4-primary-channel: #5A1991;\n\t\t\t--noise4-secondary-note: #2f1a68;\n\t\t\t--noise4-primary-note: #5A1991;\n\t\t\t--noise5-secondary-channel: #211640;\n\t\t\t--noise5-primary-channel: #391b8d;\n\t\t\t--noise5-secondary-note: #211640;\n\t\t\t--noise5-primary-note: #391b8d;\n\t\t\t--mod1-secondary-channel: #25E2CD;\n\t\t\t--mod1-primary-channel: #BDFFCA;\n\t\t\t--mod1-secondary-note: #25E2CD;\n\t\t\t--mod1-primary-note: #BDFFCA;\n\t\t\t--mod2-secondary-channel: #0A98AC;\n\t\t\t--mod2-primary-channel: #25E2CD;\n\t\t\t--mod2-secondary-note: #0A98AC;\n\t\t\t--mod2-primary-note: #25E2CC;\n\t\t\t--mod3-secondary-channel: #005280;\n\t\t\t--mod3-primary-channel: #0A98AC;\n\t\t\t--mod3-secondary-note: #005280;\n\t\t\t--mod3-primary-note: #0A98AC;\n\t\t\t--mod4-secondary-channel: #0f3670;\n\t\t\t--mod4-primary-channel: #1369c1;\n\t\t\t--mod4-secondary-note: #0f3670;\n\t\t\t--mod4-primary-note: #1369c1;\n\t\t\t--mod-label-primary: #191d26;\n\t\t\t--mod-label-secondary-text: #024aca;\n\t\t\t--mod-label-primary-text: #ffffffa6;\n\t\t\t--disabled-note-primary: #c9c9c9;\n\t\t\t--disabled-note-secondary: #616161;\n\t}`,\n    };\n\n    public static readonly pageMargin: string = \"var(--page-margin)\";\n    public static readonly editorBackground: string = \"var(--editor-background)\";\n    public static readonly hoverPreview: string = \"var(--hover-preview)\";\n    public static readonly playhead: string = \"var(--playhead)\";\n    public static readonly primaryText: string = \"var(--primary-text)\";\n    public static readonly secondaryText: string = \"var(--secondary-text)\";\n    public static readonly invertedText: string = \"var(--inverted-text)\";\n    public static readonly textSelection: string = \"var(--text-selection)\";\n    public static readonly boxSelectionFill: string = \"var(--box-selection-fill)\";\n    public static readonly loopAccent: string = \"var(--loop-accent)\";\n    public static readonly linkAccent: string = \"var(--link-accent)\";\n    public static readonly uiWidgetBackground: string = \"var(--ui-widget-background)\";\n    public static readonly uiWidgetFocus: string = \"var(--ui-widget-focus)\";\n    public static readonly pitchBackground: string = \"var(--pitch-background)\";\n    public static readonly tonic: string = \"var(--tonic)\";\n    public static readonly fifthNote: string = \"var(--fifth-note)\";\n    public static readonly whitePianoKey: string = \"var(--white-piano-key)\";\n    public static readonly blackPianoKey: string = \"var(--black-piano-key)\";\n    public static readonly useColorFormula: string = \"var(--use-color-formula)\";\n    public static readonly pitchSecondaryChannelHue: string = \"var(--pitch-secondary-channel-hue)\";\n    public static readonly pitchSecondaryChannelHueScale: string = \"var(--pitch-secondary-channel-hue-scale)\";\n    public static readonly pitchSecondaryChannelSat: string = \"var(--pitch-secondary-channel-sat)\";\n    public static readonly pitchSecondaryChannelSatScale: string = \"var(--pitch-secondary-channel-sat-scale)\";\n    public static readonly pitchSecondaryChannelLum: string = \"var(--pitch-secondary-channel-lum)\";\n    public static readonly pitchSecondaryChannelLumScale: string = \"var(--pitch-secondary-channel-lum-scale)\";\n    public static readonly pitchPrimaryChannelHue: string = \"var(--pitch-primary-channel-hue)\";\n    public static readonly pitchPrimaryChannelHueScale: string = \"var(--pitch-primary-channel-hue-scale)\";\n    public static readonly pitchPrimaryChannelSat: string = \"var(--pitch-primary-channel-sat)\";\n    public static readonly pitchPrimaryChannelSatScale: string = \"var(--pitch-primary-channel-sat-scale)\";\n    public static readonly pitchPrimaryChannelLum: string = \"var(--pitch-primary-channel-lum)\";\n    public static readonly pitchPrimaryChannelLumScale: string = \"var(--pitch-primary-channel-lum-scale)\";\n    public static readonly pitchSecondaryNoteHue: string = \"var(--pitch-secondary-note-hue)\";\n    public static readonly pitchSecondaryNoteHueScale: string = \"var(--pitch-secondary-note-hue-scale)\";\n    public static readonly pitchSecondaryNoteSat: string = \"var(--pitch-secondary-note-sat)\";\n    public static readonly pitchSecondaryNoteSatScale: string = \"var(--pitch-secondary-note-sat-scale)\";\n    public static readonly pitchSecondaryNoteLum: string = \"var(--pitch-secondary-note-lum)\";\n    public static readonly pitchSecondaryNoteLumScale: string = \"var(--pitch-secondary-note-lum-scale)\";\n    public static readonly pitchPrimaryNoteHue: string = \"var(--pitch-primary-note-hue)\";\n    public static readonly pitchPrimaryNoteHueScale: string = \"var(--pitch-primary-note-hue-scale)\";\n    public static readonly pitchPrimaryNoteSat: string = \"var(--pitch-primary-note-sat)\";\n    public static readonly pitchPrimaryNoteSatScale: string = \"var(--pitch-primary-note-sat-scale)\";\n    public static readonly pitchPrimaryNoteLum: string = \"var(--pitch-primary-note-lum)\";\n    public static readonly pitchPrimaryNoteLumScale: string = \"var(--pitch-primary-note-lum-scale)\";\n    public static readonly modSecondaryChannelHue: string = \"var(--mod-secondary-channel-hue)\";\n    public static readonly modSecondaryChannelHueScale: string = \"var(--mod-secondary-channel-hue-scale)\";\n    public static readonly modSecondaryChannelSat: string = \"var(--mod-secondary-channel-sat)\";\n    public static readonly modSecondaryChannelSatScale: string = \"var(--mod-secondary-channel-sat-scale)\";\n    public static readonly modSecondaryChannelLum: string = \"var(--mod-secondary-channel-lum)\";\n    public static readonly modSecondaryChannelLumScale: string = \"var(--mod-secondary-channel-lum-scale)\";\n    public static readonly modPrimaryChannelHue: string = \"var(--mod-primary-channel-hue)\";\n    public static readonly modPrimaryChannelHueScale: string = \"var(--mod-primary-channel-hue-scale)\";\n    public static readonly modPrimaryChannelSat: string = \"var(--mod-primary-channel-sat)\";\n    public static readonly modPrimaryChannelSatScale: string = \"var(--mod-primary-channel-sat-scale)\";\n    public static readonly modPrimaryChannelLum: string = \"var(--mod-primary-channel-lum)\";\n    public static readonly modPrimaryChannelLumScale: string = \"var(--mod-primary-channel-lum-scale)\";\n    public static readonly modSecondaryNoteHue: string = \"var(--mod-secondary-note-hue)\";\n    public static readonly modSecondaryNoteHueScale: string = \"var(--mod-secondary-note-hue-scale)\";\n    public static readonly modSecondaryNoteSat: string = \"var(--mod-secondary-note-sat)\";\n    public static readonly modSecondaryNoteSatScale: string = \"var(--mod-secondary-note-sat-scale)\";\n    public static readonly modSecondaryNoteLum: string = \"var(--mod-secondary-note-lum)\";\n    public static readonly modSecondaryNoteLumScale: string = \"var(--mod-secondary-note-lum-scale)\";\n    public static readonly modPrimaryNoteHue: string = \"var(--mod-primary-note-hue)\";\n    public static readonly modPrimaryNoteHueScale: string = \"var(--mod-primary-note-hue-scale)\";\n    public static readonly modPrimaryNoteSat: string = \"var(--mod-primary-note-sat)\";\n    public static readonly modPrimaryNoteSatScale: string = \"var(--mod-primary-note-sat-scale)\";\n    public static readonly modPrimaryNoteLum: string = \"var(--mod-primary-note-lum)\";\n    public static readonly modPrimaryNoteLumScale: string = \"var(--mod-primary-note-lum-scale)\";\n    public static readonly noiseSecondaryChannelHue: string = \"var(--noise-secondary-channel-hue)\";\n    public static readonly noiseSecondaryChannelHueScale: string = \"var(--noise-secondary-channel-hue-scale)\";\n    public static readonly noiseSecondaryChannelSat: string = \"var(--noise-secondary-channel-sat)\";\n    public static readonly noiseSecondaryChannelSatScale: string = \"var(--noise-secondary-channel-sat-scale)\";\n    public static readonly noiseSecondaryChannelLum: string = \"var(--noise-secondary-channel-lum)\";\n    public static readonly noiseSecondaryChannelLumScale: string = \"var(--noise-secondary-channel-lum-scale)\";\n    public static readonly noisePrimaryChannelHue: string = \"var(--noise-primary-channel-hue)\";\n    public static readonly noisePrimaryChannelHueScale: string = \"var(--noise-primary-channel-hue-scale)\";\n    public static readonly noisePrimaryChannelSat: string = \"var(--noise-primary-channel-sat)\";\n    public static readonly noisePrimaryChannelSatScale: string = \"var(--noise-primary-channel-sat-scale)\";\n    public static readonly noisePrimaryChannelLum: string = \"var(--noise-primary-channel-lum)\";\n    public static readonly noisePrimaryChannelLumScale: string = \"var(--noise-primary-channel-lum-scale)\";\n    public static readonly noiseSecondaryNoteHue: string = \"var(--noise-secondary-note-hue)\";\n    public static readonly noiseSecondaryNoteHueScale: string = \"var(--noise-secondary-note-hue-scale)\";\n    public static readonly noiseSecondaryNoteSat: string = \"var(--noise-secondary-note-sat)\";\n    public static readonly noiseSecondaryNoteSatScale: string = \"var(--noise-secondary-note-sat-scale)\";\n    public static readonly noiseSecondaryNoteLum: string = \"var(--noise-secondary-note-lum)\";\n    public static readonly noiseSecondaryNoteLumScale: string = \"var(--noise-secondary-note-lum-scale)\";\n    public static readonly noisePrimaryNoteHue: string = \"var(--noise-primary-note-hue)\";\n    public static readonly noisePrimaryNoteHueScale: string = \"var(--noise-primary-note-hue-scale)\";\n    public static readonly noisePrimaryNoteSat: string = \"var(--noise-primary-note-sat)\";\n    public static readonly noisePrimaryNoteSatScale: string = \"var(--noise-primary-note-sat-scale)\";\n    public static readonly noisePrimaryNoteLum: string = \"var(--noise-primary-note-lum)\";\n    public static readonly noisePrimaryNoteLumScale: string = \"var(--noise-primary-note-lum-scale)\";\n    public static readonly trackEditorBgPitch: string = \"var(--track-editor-bg-pitch)\";\n    public static readonly trackEditorBgPitchDim: string = \"var(--track-editor-bg-pitch-dim)\";\n    public static readonly trackEditorBgNoise: string = \"var(--track-editor-bg-noise)\";\n    public static readonly trackEditorBgNoiseDim: string = \"var(--track-editor-bg-noise-dim)\";\n    public static readonly trackEditorBgMod: string = \"var(--track-editor-bg-mod)\";\n    public static readonly trackEditorBgModDim: string = \"var(--track-editor-bg-mod-dim)\";\n    public static readonly multiplicativeModSlider: string = \"var(--multiplicative-mod-slider)\";\n    public static readonly overwritingModSlider: string = \"var(--overwriting-mod-slider)\";\n    public static readonly indicatorPrimary: string = \"var(--indicator-primary)\";\n    public static readonly indicatorSecondary: string = \"var(--indicator-secondary)\";\n    public static readonly select2OptGroup: string = \"var(--select2-opt-group)\";\n    public static readonly inputBoxOutline: string = \"var(--input-box-outline)\";\n    public static readonly muteButtonNormal: string = \"var(--mute-button-normal)\";\n    public static readonly muteButtonMod: string = \"var(--mute-button-mod)\";\n    public static readonly modLabelPrimary: string = \"var(--mod-label-primary)\";\n    public static readonly modLabelSecondaryText: string = \"var(--mod-label-secondary-text)\";\n    public static readonly modLabelPrimaryText: string = \"var(--mod-label-primary-text)\";\n    public static readonly disabledNotePrimary: string = \"var(--disabled-note-primary)\";\n\tpublic static readonly disabledNoteSecondary: string = \"var(--disabled-note-secondary)\";\n\n\tpublic static c_pitchSecondaryChannelHue: number = 0;\n\tpublic static c_pitchSecondaryChannelHueScale: number = 0;\n\tpublic static c_pitchSecondaryChannelSat: number = 0;\n\tpublic static c_pitchSecondaryChannelSatScale: number = 0;\n\tpublic static c_pitchSecondaryChannelLum: number = 0;\n\tpublic static c_pitchSecondaryChannelLumScale: number = 0;\n\tpublic static c_pitchPrimaryChannelHue: number = 0;\n\tpublic static c_pitchPrimaryChannelHueScale: number = 0;\n\tpublic static c_pitchPrimaryChannelSat: number = 0;\n\tpublic static c_pitchPrimaryChannelSatScale: number = 0;\n\tpublic static c_pitchPrimaryChannelLum: number = 0;\n\tpublic static c_pitchPrimaryChannelLumScale: number = 0;\n\tpublic static c_pitchSecondaryNoteHue: number = 0;\n\tpublic static c_pitchSecondaryNoteHueScale: number = 0;\n\tpublic static c_pitchSecondaryNoteSat: number = 0;\n\tpublic static c_pitchSecondaryNoteSatScale: number = 0;\n\tpublic static c_pitchSecondaryNoteLum: number = 0;\n\tpublic static c_pitchSecondaryNoteLumScale: number = 0;\n\tpublic static c_pitchPrimaryNoteHue: number = 0;\n\tpublic static c_pitchPrimaryNoteHueScale: number = 0;\n\tpublic static c_pitchPrimaryNoteSat: number = 0;\n\tpublic static c_pitchPrimaryNoteSatScale: number = 0;\n\tpublic static c_pitchPrimaryNoteLum: number = 0;\n\tpublic static c_pitchPrimaryNoteLumScale: number = 0;\n\tpublic static c_modSecondaryChannelHue: number = 0;\n\tpublic static c_modSecondaryChannelHueScale: number = 0;\n\tpublic static c_modSecondaryChannelSat: number = 0;\n\tpublic static c_modSecondaryChannelSatScale: number = 0;\n\tpublic static c_modSecondaryChannelLum: number = 0;\n\tpublic static c_modSecondaryChannelLumScale: number = 0;\n\tpublic static c_modPrimaryChannelHue: number = 0;\n\tpublic static c_modPrimaryChannelHueScale: number = 0;\n\tpublic static c_modPrimaryChannelSat: number = 0;\n\tpublic static c_modPrimaryChannelSatScale: number = 0;\n\tpublic static c_modPrimaryChannelLum: number = 0;\n\tpublic static c_modPrimaryChannelLumScale: number = 0;\n\tpublic static c_modSecondaryNoteHue: number = 0;\n\tpublic static c_modSecondaryNoteHueScale: number = 0;\n\tpublic static c_modSecondaryNoteSat: number = 0;\n\tpublic static c_modSecondaryNoteSatScale: number = 0;\n\tpublic static c_modSecondaryNoteLum: number = 0;\n\tpublic static c_modSecondaryNoteLumScale: number = 0;\n\tpublic static c_modPrimaryNoteHue: number = 0;\n\tpublic static c_modPrimaryNoteHueScale: number = 0;\n\tpublic static c_modPrimaryNoteSat: number = 0;\n\tpublic static c_modPrimaryNoteSatScale: number = 0;\n\tpublic static c_modPrimaryNoteLum: number = 0;\n\tpublic static c_modPrimaryNoteLumScale: number = 0;\n\tpublic static c_noiseSecondaryChannelHue: number = 0;\n\tpublic static c_noiseSecondaryChannelHueScale: number = 0;\n\tpublic static c_noiseSecondaryChannelSat: number = 0;\n\tpublic static c_noiseSecondaryChannelSatScale: number = 0;\n\tpublic static c_noiseSecondaryChannelLum: number = 0;\n\tpublic static c_noiseSecondaryChannelLumScale: number = 0;\n\tpublic static c_noisePrimaryChannelHue: number = 0;\n\tpublic static c_noisePrimaryChannelHueScale: number = 0;\n\tpublic static c_noisePrimaryChannelSat: number = 0;\n\tpublic static c_noisePrimaryChannelSatScale: number = 0;\n\tpublic static c_noisePrimaryChannelLum: number = 0;\n\tpublic static c_noisePrimaryChannelLumScale: number = 0;\n\tpublic static c_noiseSecondaryNoteHue: number = 0;\n\tpublic static c_noiseSecondaryNoteHueScale: number = 0;\n\tpublic static c_noiseSecondaryNoteSat: number = 0;\n\tpublic static c_noiseSecondaryNoteSatScale: number = 0;\n\tpublic static c_noiseSecondaryNoteLum: number = 0;\n\tpublic static c_noiseSecondaryNoteLumScale: number = 0;\n\tpublic static c_noisePrimaryNoteHue: number = 0;\n\tpublic static c_noisePrimaryNoteHueScale: number = 0;\n\tpublic static c_noisePrimaryNoteSat: number = 0;\n\tpublic static c_noisePrimaryNoteSatScale: number = 0;\n\tpublic static c_noisePrimaryNoteLum: number = 0;\n\tpublic static c_noisePrimaryNoteLumScale: number = 0;\n\n\tpublic static c_invertedText: string = \"\";\n\tpublic static c_trackEditorBgNoiseDim: string = \"\";\n\tpublic static c_trackEditorBgNoise: string = \"\";\n\tpublic static c_trackEditorBgModDim: string = \"\";\n\tpublic static c_trackEditorBgMod: string = \"\";\n\tpublic static c_trackEditorBgPitchDim: string = \"\";\n\tpublic static c_trackEditorBgPitch: string = \"\";\n\n\n    public static readonly pitchChannels: DictionaryArray<ChannelColors> = toNameMap([\n        {\n            name: \"pitch1\", // cyan\n            secondaryChannel: \"var(--pitch1-secondary-channel)\",\n            primaryChannel: \"var(--pitch1-primary-channel)\",\n            secondaryNote: \"var(--pitch1-secondary-note)\",\n            primaryNote: \"var(--pitch1-primary-note)\",\n        }, {\n            name: \"pitch2\", // yellow\n            secondaryChannel: \"var(--pitch2-secondary-channel)\",\n            primaryChannel: \"var(--pitch2-primary-channel)\",\n            secondaryNote: \"var(--pitch2-secondary-note)\",\n            primaryNote: \"var(--pitch2-primary-note)\",\n        }, {\n            name: \"pitch3\", // orange\n            secondaryChannel: \"var(--pitch3-secondary-channel)\",\n            primaryChannel: \"var(--pitch3-primary-channel)\",\n            secondaryNote: \"var(--pitch3-secondary-note)\",\n            primaryNote: \"var(--pitch3-primary-note)\",\n        }, {\n            name: \"pitch4\", // green\n            secondaryChannel: \"var(--pitch4-secondary-channel)\",\n            primaryChannel: \"var(--pitch4-primary-channel)\",\n            secondaryNote: \"var(--pitch4-secondary-note)\",\n            primaryNote: \"var(--pitch4-primary-note)\",\n        }, {\n            name: \"pitch5\", // magenta\n            secondaryChannel: \"var(--pitch5-secondary-channel)\",\n            primaryChannel: \"var(--pitch5-primary-channel)\",\n            secondaryNote: \"var(--pitch5-secondary-note)\",\n            primaryNote: \"var(--pitch5-primary-note)\",\n        }, {\n            name: \"pitch6\", // blue\n            secondaryChannel: \"var(--pitch6-secondary-channel)\",\n            primaryChannel: \"var(--pitch6-primary-channel)\",\n            secondaryNote: \"var(--pitch6-secondary-note)\",\n            primaryNote: \"var(--pitch6-primary-note)\",\n        }, {\n            name: \"pitch7\", // olive\n            secondaryChannel: \"var(--pitch7-secondary-channel)\",\n            primaryChannel: \"var(--pitch7-primary-channel)\",\n            secondaryNote: \"var(--pitch7-secondary-note)\",\n            primaryNote: \"var(--pitch7-primary-note)\",\n        }, {\n            name: \"pitch8\", // red\n            secondaryChannel: \"var(--pitch8-secondary-channel)\",\n            primaryChannel: \"var(--pitch8-primary-channel)\",\n            secondaryNote: \"var(--pitch8-secondary-note)\",\n            primaryNote: \"var(--pitch8-primary-note)\",\n        }, {\n            name: \"pitch9\", // teal\n            secondaryChannel: \"var(--pitch9-secondary-channel)\",\n            primaryChannel: \"var(--pitch9-primary-channel)\",\n            secondaryNote: \"var(--pitch9-secondary-note)\",\n            primaryNote: \"var(--pitch9-primary-note)\",\n        }, {\n            name: \"pitch10\", // purple\n            secondaryChannel: \"var(--pitch10-secondary-channel)\",\n            primaryChannel: \"var(--pitch10-primary-channel)\",\n            secondaryNote: \"var(--pitch10-secondary-note)\",\n            primaryNote: \"var(--pitch10-primary-note)\",\n        },\n    ]);\n    public static readonly noiseChannels: DictionaryArray<ChannelColors> = toNameMap([\n        {\n            name: \"noise1\", // gray\n            secondaryChannel: \"var(--noise1-secondary-channel)\",\n            primaryChannel: \"var(--noise1-primary-channel)\",\n            secondaryNote: \"var(--noise1-secondary-note)\",\n            primaryNote: \"var(--noise1-primary-note)\",\n        }, {\n            name: \"noise2\", // brown\n            secondaryChannel: \"var(--noise2-secondary-channel)\",\n            primaryChannel: \"var(--noise2-primary-channel)\",\n            secondaryNote: \"var(--noise2-secondary-note)\",\n            primaryNote: \"var(--noise2-primary-note)\",\n        }, {\n            name: \"noise3\", // azure\n            secondaryChannel: \"var(--noise3-secondary-channel)\",\n            primaryChannel: \"var(--noise3-primary-channel)\",\n            secondaryNote: \"var(--noise3-secondary-note)\",\n            primaryNote: \"var(--noise3-primary-note)\",\n        }, {\n            name: \"noise4\", // purple\n            secondaryChannel: \"var(--noise4-secondary-channel)\",\n            primaryChannel: \"var(--noise4-primary-channel)\",\n            secondaryNote: \"var(--noise4-secondary-note)\",\n            primaryNote: \"var(--noise4-primary-note)\",\n        }, {\n            name: \"noise5\", // sage\n            secondaryChannel: \"var(--noise5-secondary-channel)\",\n            primaryChannel: \"var(--noise5-primary-channel)\",\n            secondaryNote: \"var(--noise5-secondary-note)\",\n            primaryNote: \"var(--noise5-primary-note)\",\n        },\n    ]);\n    public static readonly modChannels: DictionaryArray<ChannelColors> = toNameMap([\n        {\n            name: \"mod1\",\n            secondaryChannel: \"var(--mod1-secondary-channel)\",\n            primaryChannel: \"var(--mod1-primary-channel)\",\n            secondaryNote: \"var(--mod1-secondary-note)\",\n            primaryNote: \"var(--mod1-primary-note)\",\n        }, {\n            name: \"mod2\",\n            secondaryChannel: \"var(--mod2-secondary-channel)\",\n            primaryChannel: \"var(--mod2-primary-channel)\",\n            secondaryNote: \"var(--mod2-secondary-note)\",\n            primaryNote: \"var(--mod2-primary-note)\",\n        }, {\n            name: \"mod3\",\n            secondaryChannel: \"var(--mod3-secondary-channel)\",\n            primaryChannel: \"var(--mod3-primary-channel)\",\n            secondaryNote: \"var(--mod3-secondary-note)\",\n            primaryNote: \"var(--mod3-primary-note)\",\n        }, {\n            name: \"mod4\",\n            secondaryChannel: \"var(--mod4-secondary-channel)\",\n            primaryChannel: \"var(--mod4-primary-channel)\",\n            secondaryNote: \"var(--mod4-secondary-note)\",\n            primaryNote: \"var(--mod4-primary-note)\",\n        },\n    ]);\n\n    public static resetColors() {\n        this.colorLookup.clear();\n    }\n\n    // Same as below, but won't return var colors\n    public static getComputedChannelColor(song: Song, channel: number): ChannelColors {\n        if (!this.usesColorFormula) {\n            let base: ChannelColors = ColorConfig.getChannelColor(song, channel);\n            // Trim away \"var(...)\"\n            var regex = /\\(([^)]+)\\)/;\n            let newChannelSecondary: string = ColorConfig.getComputed((regex.exec(base.secondaryChannel) as RegExpExecArray)[1] as string);\n            let newChannelPrimary: string = ColorConfig.getComputed((regex.exec(base.primaryChannel) as RegExpExecArray)[1] as string);\n            let newNoteSecondary: string = ColorConfig.getComputed((regex.exec(base.secondaryNote) as RegExpExecArray)[1] as string);\n            let newNotePrimary: string = ColorConfig.getComputed((regex.exec(base.primaryNote) as RegExpExecArray)[1] as string);\n            return <ChannelColors>{ secondaryChannel: newChannelSecondary, primaryChannel: newChannelPrimary, secondaryNote: newNoteSecondary, primaryNote: newNotePrimary };\n        }\n        else {\n            return ColorConfig.getChannelColor(song, channel);\n        }\n    };\n\n    public static getChannelColor(song: Song, channel: number): ChannelColors {\n        if (!this.usesColorFormula) {\n            // Set colors, not defined by formula\n            if (channel < song.pitchChannelCount) {\n                return ColorConfig.pitchChannels[channel % ColorConfig.pitchChannels.length];\n            } else if (channel < song.pitchChannelCount + song.noiseChannelCount) {\n                return ColorConfig.noiseChannels[(channel - song.pitchChannelCount) % ColorConfig.noiseChannels.length];\n            } else {\n                return ColorConfig.modChannels[(channel - song.pitchChannelCount - song.noiseChannelCount) % ColorConfig.modChannels.length];\n            }\n        }\n        else {\n            // Determine if color is cached\n            if (ColorConfig.colorLookup.has(channel)) {\n                return ColorConfig.colorLookup.get(channel) as ChannelColors;\n            }\n            else {\n                // Formulaic color definition\n                if (channel < song.pitchChannelCount) {\n                    // Pitch formula\n\n                    let newChannelSecondary: string = \"hsl(\" + ((this.c_pitchSecondaryChannelHue + (channel * this.c_pitchSecondaryChannelHueScale / Config.pitchChannelCountMax) * 256) % 360) + \",\"\n\t\t\t\t\t\t+ (this.c_pitchSecondaryChannelSat * (1 - (this.c_pitchSecondaryChannelSatScale * Math.floor(channel / 9)))) + \"%,\"\n\t\t\t\t\t\t+ (this.c_pitchSecondaryChannelLum * (1 - (this.c_pitchSecondaryChannelLumScale * Math.floor(channel / 9)))) + \"%)\";\n\t\t\t\t\tlet newChannelPrimary: string = \"hsl(\" + ((this.c_pitchPrimaryChannelHue + (channel * this.c_pitchPrimaryChannelHueScale / Config.pitchChannelCountMax) * 256) % 360) + \",\"\n\t\t\t\t\t\t+ (this.c_pitchPrimaryChannelSat * (1 - (this.c_pitchPrimaryChannelSatScale * Math.floor(channel / 9)))) + \"%,\"\n\t\t\t\t\t\t+ (this.c_pitchPrimaryChannelLum * (1 - (this.c_pitchPrimaryChannelLumScale * Math.floor(channel / 9)))) + \"%)\";\n\t\t\t\t\tlet newNoteSecondary: string = \"hsl(\" + ((this.c_pitchSecondaryNoteHue + (channel * this.c_pitchSecondaryNoteHueScale / Config.pitchChannelCountMax) * 256) % 360) + \",\"\n\t\t\t\t\t\t+ (this.c_pitchSecondaryNoteSat * (1 - (this.c_pitchSecondaryNoteSatScale * Math.floor(channel / 9)))) + \"%,\"\n\t\t\t\t\t\t+ (this.c_pitchSecondaryNoteLum * (1 - (this.c_pitchSecondaryNoteLumScale * Math.floor(channel / 9)))) + \"%)\";\n\t\t\t\t\tlet newNotePrimary: string = \"hsl(\" + ((this.c_pitchPrimaryNoteHue + (channel * this.c_pitchPrimaryNoteHueScale / Config.pitchChannelCountMax) * 256) % 360) + \",\"\n\t\t\t\t\t\t+ (this.c_pitchPrimaryNoteSat * (1 - (this.c_pitchPrimaryNoteSatScale * Math.floor(channel / 9)))) + \"%,\"\n\t\t\t\t\t\t+ (this.c_pitchPrimaryNoteLum * (1 - (this.c_pitchPrimaryNoteLumScale * Math.floor(channel / 9)))) + \"%)\";\n\n                    let newChannelColors = <ChannelColors>{ secondaryChannel: newChannelSecondary, primaryChannel: newChannelPrimary, secondaryNote: newNoteSecondary, primaryNote: newNotePrimary };\n                    ColorConfig.colorLookup.set(channel, newChannelColors);\n                    return newChannelColors;\n\n                }\n                else if (channel < song.pitchChannelCount + song.noiseChannelCount) {\n                    // Noise formula\n                    \n\t\t\t\t\tlet newChannelSecondary: string = \"hsl(\" + ((this.c_noiseSecondaryChannelHue + (((channel - song.pitchChannelCount) * this.c_noiseSecondaryChannelHueScale) / Config.noiseChannelCountMax) * 256) % 360) + \",\"\n\t\t\t\t\t\t+ (this.c_noiseSecondaryChannelSat + channel * this.c_noiseSecondaryChannelSatScale) + \"%,\"\n\t\t\t\t\t\t+ (this.c_noiseSecondaryChannelLum + channel * this.c_noiseSecondaryChannelLumScale) + \"%)\";\n\t\t\t\t\tlet newChannelPrimary: string = \"hsl(\" + ((this.c_noisePrimaryChannelHue + (((channel - song.pitchChannelCount) * this.c_noisePrimaryChannelHueScale) / Config.noiseChannelCountMax) * 256) % 360) + \",\"\n\t\t\t\t\t\t+ (this.c_noisePrimaryChannelSat + channel * this.c_noisePrimaryChannelSatScale) + \"%,\"\n\t\t\t\t\t\t+ (this.c_noisePrimaryChannelLum + channel * this.c_noisePrimaryChannelLumScale) + \"%)\";\n\t\t\t\t\tlet newNoteSecondary: string = \"hsl(\" + ((this.c_noiseSecondaryNoteHue + (((channel - song.pitchChannelCount) * this.c_noiseSecondaryNoteHueScale) / Config.noiseChannelCountMax) * 256) % 360) + \",\"\n\t\t\t\t\t\t+ (this.c_noiseSecondaryNoteSat + channel * this.c_noiseSecondaryNoteSatScale) + \"%,\"\n\t\t\t\t\t\t+ (this.c_noiseSecondaryNoteLum + channel * this.c_noiseSecondaryNoteLumScale) + \"%)\";\n\t\t\t\t\tlet newNotePrimary: string = \"hsl(\" + ((this.c_noisePrimaryNoteHue + (((channel - song.pitchChannelCount) * this.c_noisePrimaryNoteHueScale) / Config.noiseChannelCountMax) * 256) % 360) + \",\"\n\t\t\t\t\t\t+ (this.c_noisePrimaryNoteSat + channel * this.c_noisePrimaryNoteSatScale) + \"%,\"\n\t\t\t\t\t\t+ (this.c_noisePrimaryNoteLum + channel * this.c_noisePrimaryNoteLumScale) + \"%)\";\n\n                    let newChannelColors = <ChannelColors>{ secondaryChannel: newChannelSecondary, primaryChannel: newChannelPrimary, secondaryNote: newNoteSecondary, primaryNote: newNotePrimary };\n                    ColorConfig.colorLookup.set(channel, newChannelColors);\n                    return newChannelColors;\n                }\n                else {\n                    // Mod formula\n                    \n\t\t\t\t\tlet newChannelSecondary: string = \"hsl(\" + ((this.c_modSecondaryChannelHue + (((channel - song.pitchChannelCount - song.noiseChannelCount) * this.c_modSecondaryChannelHueScale) / Config.modChannelCountMax) * 256) % 360) + \",\"\n\t\t\t\t\t\t+ (this.c_modSecondaryChannelSat + channel * this.c_modSecondaryChannelSatScale) + \"%,\"\n\t\t\t\t\t\t+ (this.c_modSecondaryChannelLum + channel * this.c_modSecondaryChannelLumScale) + \"%)\";\n\t\t\t\t\tlet newChannelPrimary: string = \"hsl(\" + ((this.c_modPrimaryChannelHue + (((channel - song.pitchChannelCount - song.noiseChannelCount) * this.c_modPrimaryChannelHueScale) / Config.modChannelCountMax) * 256) % 360) + \",\"\n\t\t\t\t\t\t+ (this.c_modPrimaryChannelSat + channel * this.c_modPrimaryChannelSatScale) + \"%,\"\n\t\t\t\t\t\t+ (this.c_modPrimaryChannelLum + channel * this.c_modPrimaryChannelLumScale) + \"%)\";\n\t\t\t\t\tlet newNoteSecondary: string = \"hsl(\" + ((this.c_modSecondaryNoteHue + (((channel - song.pitchChannelCount - song.noiseChannelCount) * this.c_modSecondaryNoteHueScale) / Config.modChannelCountMax) * 256) % 360) + \",\"\n\t\t\t\t\t\t+ (this.c_modSecondaryNoteSat + channel * this.c_modSecondaryNoteSatScale) + \"%,\"\n\t\t\t\t\t\t+ (this.c_modSecondaryNoteLum + channel * this.c_modSecondaryNoteLumScale) + \"%)\";\n\t\t\t\t\tlet newNotePrimary: string = \"hsl(\" + ((this.c_modPrimaryNoteHue + (((channel - song.pitchChannelCount - song.noiseChannelCount) * this.c_modPrimaryNoteHueScale) / Config.modChannelCountMax) * 256) % 360) + \",\"\n\t\t\t\t\t\t+ (this.c_modPrimaryNoteSat + channel * this.c_modPrimaryNoteSatScale) + \"%,\"\n\t\t\t\t\t\t+ (this.c_modPrimaryNoteLum + channel * this.c_modPrimaryNoteLumScale) + \"%)\";\n\n                    let newChannelColors = <ChannelColors>{ secondaryChannel: newChannelSecondary, primaryChannel: newChannelPrimary, secondaryNote: newNoteSecondary, primaryNote: newNotePrimary };\n                    ColorConfig.colorLookup.set(channel, newChannelColors);\n                    return newChannelColors;\n                }\n            }\n        }\n    }\n\n    private static readonly _styleElement: HTMLStyleElement = document.head.appendChild(HTML.style({ type: \"text/css\" }));\n\n    public static setTheme(name: string): void {\n\t\tlet theme: string = this.themes[name];\n\t\tif (theme == undefined) theme = this.themes[\"jummbox classic\"];\n\t\tthis._styleElement.textContent = theme;\n\n        const themeColor = <HTMLMetaElement>document.querySelector(\"meta[name='theme-color']\");\n        if (themeColor != null) {\n            themeColor.setAttribute(\"content\", getComputedStyle(document.documentElement).getPropertyValue('--ui-widget-background'));\n        }\n\n\t\tthis.resetColors();\n\n\t\tthis.usesColorFormula = (getComputedStyle(this._styleElement).getPropertyValue(\"--use-color-formula\").trim() == \"true\");\n\n\t\tthis.c_invertedText = getComputedStyle(this._styleElement).getPropertyValue(\"--inverted-text\");\n\t\tthis.c_trackEditorBgNoiseDim = getComputedStyle(this._styleElement).getPropertyValue(\"--track-editor-bg-noise-dim\");\n\t\tthis.c_trackEditorBgNoise = getComputedStyle(this._styleElement).getPropertyValue(\"--track-editor-bg-noise\");\n\t\tthis.c_trackEditorBgModDim = getComputedStyle(this._styleElement).getPropertyValue(\"--track-editor-bg-mod-dim\");\n\t\tthis.c_trackEditorBgMod = getComputedStyle(this._styleElement).getPropertyValue(\"--track-editor-bg-mod\");\n\t\tthis.c_trackEditorBgPitchDim = getComputedStyle(this._styleElement).getPropertyValue(\"--track-editor-bg-pitch-dim\");\n\t\tthis.c_trackEditorBgPitch = getComputedStyle(this._styleElement).getPropertyValue(\"--track-editor-bg-pitch\");\n\n\t\tif (this.usesColorFormula) {\n\t\t\tthis.c_pitchSecondaryChannelHue = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-hue\");\n\t\t\tthis.c_pitchSecondaryChannelHueScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-hue-scale\");\n\t\t\tthis.c_pitchSecondaryChannelSat = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-sat\");\n\t\t\tthis.c_pitchSecondaryChannelSatScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-sat-scale\");\n\t\t\tthis.c_pitchSecondaryChannelLum = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-lum\");\n\t\t\tthis.c_pitchSecondaryChannelLumScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-lum-scale\");\n\t\t\tthis.c_pitchPrimaryChannelHue = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-hue\");\n\t\t\tthis.c_pitchPrimaryChannelHueScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-hue-scale\");\n\t\t\tthis.c_pitchPrimaryChannelSat = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-sat\");\n\t\t\tthis.c_pitchPrimaryChannelSatScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-sat-scale\");\n\t\t\tthis.c_pitchPrimaryChannelLum = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-lum\");\n\t\t\tthis.c_pitchPrimaryChannelLumScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-lum-scale\");\n\t\t\tthis.c_pitchSecondaryNoteHue = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-hue\");\n\t\t\tthis.c_pitchSecondaryNoteHueScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-hue-scale\");\n\t\t\tthis.c_pitchSecondaryNoteSat = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-sat\");\n\t\t\tthis.c_pitchSecondaryNoteSatScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-sat-scale\");\n\t\t\tthis.c_pitchSecondaryNoteLum = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-lum\");\n\t\t\tthis.c_pitchSecondaryNoteLumScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-lum-scale\");\n\t\t\tthis.c_pitchPrimaryNoteHue = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-hue\");\n\t\t\tthis.c_pitchPrimaryNoteHueScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-hue-scale\");\n\t\t\tthis.c_pitchPrimaryNoteSat = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-sat\");\n\t\t\tthis.c_pitchPrimaryNoteSatScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-sat-scale\");\n\t\t\tthis.c_pitchPrimaryNoteLum = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-lum\");\n\t\t\tthis.c_pitchPrimaryNoteLumScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-lum-scale\");\n\n\t\t\tthis.c_noiseSecondaryChannelHue = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-hue\");\n\t\t\tthis.c_noiseSecondaryChannelHueScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-hue-scale\");\n\t\t\tthis.c_noiseSecondaryChannelSat = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-sat\");\n\t\t\tthis.c_noiseSecondaryChannelSatScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-sat-scale\");\n\t\t\tthis.c_noiseSecondaryChannelLum = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-lum\");\n\t\t\tthis.c_noiseSecondaryChannelLumScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-lum-scale\");\n\t\t\tthis.c_noisePrimaryChannelHue = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-hue\");\n\t\t\tthis.c_noisePrimaryChannelHueScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-hue-scale\");\n\t\t\tthis.c_noisePrimaryChannelSat = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-sat\");\n\t\t\tthis.c_noisePrimaryChannelSatScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-sat-scale\");\n\t\t\tthis.c_noisePrimaryChannelLum = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-lum\");\n\t\t\tthis.c_noisePrimaryChannelLumScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-lum-scale\");\n\t\t\tthis.c_noiseSecondaryNoteHue = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-hue\");\n\t\t\tthis.c_noiseSecondaryNoteHueScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-hue-scale\");\n\t\t\tthis.c_noiseSecondaryNoteSat = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-sat\");\n\t\t\tthis.c_noiseSecondaryNoteSatScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-sat-scale\");\n\t\t\tthis.c_noiseSecondaryNoteLum = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-lum\");\n\t\t\tthis.c_noiseSecondaryNoteLumScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-lum-scale\");\n\t\t\tthis.c_noisePrimaryNoteHue = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-hue\");\n\t\t\tthis.c_noisePrimaryNoteHueScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-hue-scale\");\n\t\t\tthis.c_noisePrimaryNoteSat = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-sat\");\n\t\t\tthis.c_noisePrimaryNoteSatScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-sat-scale\");\n\t\t\tthis.c_noisePrimaryNoteLum = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-lum\");\n\t\t\tthis.c_noisePrimaryNoteLumScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-lum-scale\");\n\n\t\t\tthis.c_modSecondaryChannelHue = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-hue\");\n\t\t\tthis.c_modSecondaryChannelHueScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-hue-scale\");\n\t\t\tthis.c_modSecondaryChannelSat = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-sat\");\n\t\t\tthis.c_modSecondaryChannelSatScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-sat-scale\");\n\t\t\tthis.c_modSecondaryChannelLum = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-lum\");\n\t\t\tthis.c_modSecondaryChannelLumScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-lum-scale\");\n\t\t\tthis.c_modPrimaryChannelHue = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-hue\");\n\t\t\tthis.c_modPrimaryChannelHueScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-hue-scale\");\n\t\t\tthis.c_modPrimaryChannelSat = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-sat\");\n\t\t\tthis.c_modPrimaryChannelSatScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-sat-scale\");\n\t\t\tthis.c_modPrimaryChannelLum = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-lum\");\n\t\t\tthis.c_modPrimaryChannelLumScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-lum-scale\");\n\t\t\tthis.c_modSecondaryNoteHue = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-hue\");\n\t\t\tthis.c_modSecondaryNoteHueScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-hue-scale\");\n\t\t\tthis.c_modSecondaryNoteSat = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-sat\");\n\t\t\tthis.c_modSecondaryNoteSatScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-sat-scale\");\n\t\t\tthis.c_modSecondaryNoteLum = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-lum\");\n\t\t\tthis.c_modSecondaryNoteLumScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-lum-scale\");\n\t\t\tthis.c_modPrimaryNoteHue = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-hue\");\n\t\t\tthis.c_modPrimaryNoteHueScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-hue-scale\");\n\t\t\tthis.c_modPrimaryNoteSat = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-sat\");\n\t\t\tthis.c_modPrimaryNoteSatScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-sat-scale\");\n\t\t\tthis.c_modPrimaryNoteLum = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-lum\");\n\t\t\tthis.c_modPrimaryNoteLumScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-lum-scale\");\n\n        }\n\n    }\n\n    public static getComputed(name: string): string {\n        return getComputedStyle(this._styleElement).getPropertyValue(name);\n    }\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nimport {ColorConfig} from \"./ColorConfig\";\nimport {HTML} from \"imperative-html/dist/esm/elements-strict\";\n\n\n// Determine if the user's browser/OS adds scrollbars that occupy space.\n// See: https://www.filamentgroup.com/lab/scrollbars/\nconst scrollBarTest: HTMLDivElement = document.body.appendChild(HTML.div({ style: \"width:30px; height:30px; overflow: auto;\" },\n\tHTML.div({ style: \"width:100%;height:40px\" }),\n));\nif ((<any>scrollBarTest).firstChild.clientWidth < 30) {\n\tdocument.documentElement.classList.add(\"obtrusive-scrollbars\");\n}\ndocument.body.removeChild(scrollBarTest);\n\n\ndocument.head.appendChild(HTML.style({ type: \"text/css\" }, `\n\n/* Note: \"#\" symbols need to be encoded as \"%23\" in SVG data urls, otherwise they are interpreted as fragment identifiers! */\n:root {\n\t--button-size: 26px;\n\t--settings-area-width: 192px;\n\t--play-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><path d=\"M -5 -8 L -5 8 L 8 0 z\" fill=\"gray\"/></svg>');\n\t--pause-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><rect x=\"-5\" y=\"-7\" width=\"4\" height=\"14\" fill=\"gray\"/><rect x=\"3\" y=\"-7\" width=\"4\" height=\"14\" fill=\"gray\"/></svg>');\n\t--record-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><circle cx=\"0\" cy=\"0\" r=\"6\" fill=\"gray\"/></svg>');\n\t--stop-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><rect x=\"-6\" y=\"-6\" width=\"12\" height=\"12\" fill=\"gray\"/></svg>');\n\t--prev-bar-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><rect x=\"-6\" y=\"-6\" width=\"2\" height=\"12\" fill=\"gray\"/><path d=\"M 6 -6 L 6 6 L -3 0 z\" fill=\"gray\"/></svg>');\n\t--next-bar-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><rect x=\"4\" y=\"-6\" width=\"2\" height=\"12\" fill=\"gray\"/><path d=\"M -6 -6 L -6 6 L 3 0 z\" fill=\"gray\"/></svg>');\n\t--volume-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"0 0 26 26\"><path d=\"M 4 16 L 4 10 L 8 10 L 13 5 L 13 21 L 8 16 z M 15 11 L 16 10 A 7.2 7.2 0 0 1 16 16 L 15 15 A 5.8 5.8 0 0 0 15 12 z M 18 8 L 19 7 A 11.5 11.5 0 0 1 19 19 L 18 18 A 10.1 10.1 0 0 0 18 8 z\" fill=\"gray\"/></svg>');\n\t--unmuted-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"3 3 20 20\"><path d=\"M 4 16 L 4 10 L 8 10 L 13 5 L 13 21 L 8 16 z M 15 11 L 16 10 A 7.2 7.2 0 0 1 16 16 L 15 15 A 5.8 5.8 0 0 0 15 12 z M 18 8 L 19 7 A 11.5 11.5 0 0 1 19 19 L 18 18 A 10.1 10.1 0 0 0 18 8 z\" fill=\"gray\"/></svg>');\n\t--muted-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"3 3 20 20\"><path d=\"M 4 16 L 4 10 L 8 10 L 13 5 L 13 21 L 8 16 z\" fill=\"gray\"/></svg>');\n\t--menu-down-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><path d=\"M -4 -2 L 4 -2 L 0 3 z\" fill=\"gray\"/></svg>');\n\t--select-arrows-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><path d=\"M -4 -3 L 4 -3 L 0 -8 z M -4 3 L 4 3 L 0 8 z\" fill=\"gray\"/></svg>');\n\t--file-page-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-5 -21 26 26\"><path d=\"M 2 0 L 2 -16 L 10 -16 L 14 -12 L 14 0 z M 3 -1 L 13 -1 L 13 -11 L 9 -11 L 9 -15 L 3 -15 z\" fill=\"gray\"/></svg>');\n\t--edit-pencil-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-5 -21 26 26\"><path d=\"M 0 0 L 1 -4 L 4 -1 z M 2 -5 L 10 -13 L 13 -10 L 5 -2 zM 11 -14 L 13 -16 L 14 -16 L 16 -14 L 16 -13 L 14 -11 z\" fill=\"gray\"/></svg>');\n\t--preferences-gear-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><path d=\"M 5.78 -1.6 L 7.93 -0.94 L 7.93 0.94 L 5.78 1.6 L 4.85 3.53 L 5.68 5.61 L 4.21 6.78 L 2.36 5.52 L 0.27 5.99 L -0.85 7.94 L -2.68 7.52 L -2.84 5.28 L -4.52 3.95 L -6.73 4.28 L -7.55 2.59 L -5.9 1.07 L -5.9 -1.07 L -7.55 -2.59 L -6.73 -4.28 L -4.52 -3.95 L -2.84 -5.28 L -2.68 -7.52 L -0.85 -7.94 L 0.27 -5.99 L 2.36 -5.52 L 4.21 -6.78 L 5.68 -5.61 L 4.85 -3.53 M 2.92 0.67 L 2.92 -0.67 L 2.35 -1.87 L 1.3 -2.7 L 0 -3 L -1.3 -2.7 L -2.35 -1.87 L -2.92 -0.67 L -2.92 0.67 L -2.35 1.87 L -1.3 2.7 L -0 3 L 1.3 2.7 L 2.35 1.87 z\" fill=\"gray\"/></svg>');\n\t--customize-dial-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"> \\\n\t\t\t<g transform=\"translate(0,1)\" fill=\"gray\"> \\\n\t\t\t\t<circle cx=\"0\" cy=\"0\" r=\"6.5\" stroke=\"gray\" stroke-width=\"1\" fill=\"none\"/> \\\n\t\t\t\t<rect x=\"-1\" y=\"-5\" width=\"2\" height=\"4\" transform=\"rotate(30)\"/> \\\n\t\t\t\t<circle cx=\"-7.79\" cy=\"4.5\" r=\"0.75\"/> \\\n\t\t\t\t<circle cx=\"-9\" cy=\"0\" r=\"0.75\"/> \\\n\t\t\t\t<circle cx=\"-7.79\" cy=\"-4.5\" r=\"0.75\"/> \\\n\t\t\t\t<circle cx=\"-4.5\" cy=\"-7.79\" r=\"0.75\"/> \\\n\t\t\t\t<circle cx=\"0\" cy=\"-9\" r=\"0.75\"/> \\\n\t\t\t\t<circle cx=\"4.5\" cy=\"-7.79\" r=\"0.75\"/> \\\n\t\t\t\t<circle cx=\"7.79\" cy=\"-4.5\" r=\"0.75\"/> \\\n\t\t\t\t<circle cx=\"9\" cy=\"0\" r=\"0.75\"/> \\\n\t\t\t\t<circle cx=\"7.79\" cy=\"4.5\" r=\"0.75\"/> \\\n\t\t\t</g> \\\n\t\t</svg>');\n\t--instrument-copy-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-5 -21 26 26\"><path d=\"M 0 -15 L 1 -15 L 1 0 L 13 0 L 13 1 L 0 1 L 0 -15 z M 2 -1 L 2 -17 L 10 -17 L 14 -13 L 14 -1 z M 3 -2 L 13 -2 L 13 -12 L 9 -12 L 9 -16 L 3 -16 z\" fill=\"currentColor\"></path></svg>');\n\t--instrument-paste-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"0 0 26 26\"><path d=\"M 8 18 L 6 18 L 6 5 L 17 5 L 17 7 M 9 8 L 16 8 L 20 12 L 20 22 L 9 22 z\" stroke=\"currentColor\" fill=\"none\"></path><path d=\"M 9 3 L 14 3 L 14 6 L 9 6 L 9 3 z M 16 8 L 20 12 L 16 12 L 16 8 z\" fill=\"currentColor\"></path></svg>');\n\t--export-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><path fill=\"gray\" d=\"M -8 3 L -8 8 L 8 8 L 8 3 L 6 3 L 6 6 L -6 6 L -6 3 z M 0 2 L -4 -2 L -1 -2 L -1 -8 L 1 -8 L 1 -2 L 4 -2 z\"/></svg>');\n\t--close-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><path fill=\"gray\" d=\"M -7.07 -5.66 L -5.66 -7.07 L 0 -1.4 L 5.66 -7.07 L 7.07 -5.66 L 1.4 0 L 7.07 5.66 L 5.66 7.07 L 0 1.4 L -5.66 7.07 L -7.07 5.66 L -1.4 0 z\"/></svg>');\n\t--add-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><path fill=\"gray\" d=\"M -8 -1 L -1 -1 L -1 -8  L 1 -8 L 1 -1 L 8 -1 L 8 1 L 1 1 L 1 8 L -1 8 L -1 1 L -8 1 z\"/></svg>');\n\t--zoom-in-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"-10 -10 20 20\"><circle cx=\"-1\" cy=\"-1\" r=\"6\" stroke-width=\"2\" stroke=\"gray\" fill=\"none\"></circle><path stroke=\"gray\" stroke-width=\"2\" d=\"M 3 3 L 7 7 M -1 -4 L -1 2 M -4 -1 L 2 -1\" fill=\"none\"></path></svg>');\n\t--zoom-out-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"-10 -10 20 20\"><circle cx=\"-1\" cy=\"-1\" r=\"6\" stroke-width=\"2\" stroke=\"gray\" fill=\"none\"></circle><path stroke=\"gray\" stroke-width=\"2\" d=\"M 3 3 L 7 7 M -4 -1 L 2 -1\" fill=\"none\"></path></svg>');\n\t--checkmark-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><path fill=\"gray\" d=\"M -9 -2 L -8 -3 L -3 2 L 9 -8 L 10 -7 L -3 8 z\"/></svg>');\n\t--drum-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"40\" viewBox=\"0 0 32 40\"> \\\n\t\t\t<defs> \\\n\t\t\t\t<linearGradient id=\"gold1\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\"> \\\n\t\t\t\t\t<stop offset=\"0%\" stop-color=\"%237e3302\"/> \\\n\t\t\t\t\t<stop offset=\"40%\" stop-color=\"%23ffec6b\"/> \\\n\t\t\t\t\t<stop offset=\"100%\" stop-color=\"%237e3302\"/> \\\n\t\t\t\t</linearGradient> \\\n\t\t\t\t<linearGradient id=\"gold2\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\"> \\\n\t\t\t\t\t<stop offset=\"0%\" stop-color=\"%23faaf7d\"/> \\\n\t\t\t\t\t<stop offset=\"15%\" stop-color=\"%23fffba9\"/> \\\n\t\t\t\t\t<stop offset=\"40%\" stop-color=\"%23ffffe3\"/> \\\n\t\t\t\t\t<stop offset=\"65%\" stop-color=\"%23fffba9\"/> \\\n\t\t\t\t\t<stop offset=\"100%\" stop-color=\"%23faaf7d\"/> \\\n\t\t\t\t</linearGradient> \\\n\t\t\t\t<radialGradient id=\"gold3\" cx=\"0%\" cy=\"0%\" r=\"100%\"> \\\n\t\t\t\t\t<stop offset=\"0%\" stop-color=\"%23ffffe3\"/> \\\n\t\t\t\t\t<stop offset=\"50%\" stop-color=\"%23ffec6b\"/> \\\n\t\t\t\t\t<stop offset=\"100%\" stop-color=\"%237e3302\"/> \\\n\t\t\t\t</radialGradient> \\\n\t\t\t\t<linearGradient id=\"red\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\"> \\\n\t\t\t\t\t<stop offset=\"0%\" stop-color=\"%23641919\"/> \\\n\t\t\t\t\t<stop offset=\"40%\" stop-color=\"%23cd2c2c\"/> \\\n\t\t\t\t\t<stop offset=\"100%\" stop-color=\"%23641919\"/> \\\n\t\t\t\t</linearGradient> \\\n\t\t\t\t<radialGradient id=\"membrane\"> \\\n\t\t\t\t\t<stop offset=\"10%\" stop-color=\"%23cccccc\" /> \\\n\t\t\t\t\t<stop offset=\"90%\" stop-color=\"%23f6f6f7\" /> \\\n\t\t\t\t\t<stop offset=\"100%\" stop-color=\"%23999\" /> \\\n\t\t\t\t</radialGradient> \\\n\t\t\t</defs> \\\n\t\t\t<ellipse cx=\"16\" cy=\"26\" rx=\"16\" ry=\"14\" fill=\"rgba(0,0,0,0.5)\"/> \\\n\t\t\t<ellipse cx=\"16\" cy=\"25\" rx=\"16\" ry=\"14\" fill=\"url(%23gold1)\"/> \\\n\t\t\t<rect x=\"0\" y=\"23\" width=\"32\" height=\"2\" fill=\"url(%23gold1)\"/> \\\n\t\t\t<ellipse cx=\"16\" cy=\"23\" rx=\"16\" ry=\"14\" fill=\"url(%23gold2)\"/> \\\n\t\t\t<ellipse cx=\"16\" cy=\"23\" rx=\"15\" ry=\"13\" fill=\"url(%23red)\"/> \\\n\t\t\t<rect x=\"1\" y=\"17\" width=\"30\" height=\"6\" fill=\"url(%23red)\"/> \\\n\t\t\t<rect x=\"5\" y=\"27\" width=\"1\" height=\"5\" rx=\"0.5\" fill=\"rgba(0,0,0,0.5)\"/> \\\n\t\t\t<rect x=\"15\" y=\"31\" width=\"2\" height=\"5\" rx=\"1\" fill=\"rgba(0,0,0,0.5)\"/> \\\n\t\t\t<rect x=\"26\" y=\"27\" width=\"1\" height=\"5\" rx=\"0.5\" fill=\"rgba(0,0,0,0.5)\"/> \\\n\t\t\t<rect x=\"5\" y=\"26\" width=\"1\" height=\"5\" rx=\"0.5\" fill=\"url(%23gold3)\"/> \\\n\t\t\t<rect x=\"15\" y=\"30\" width=\"2\" height=\"5\" rx=\"1\" fill=\"url(%23gold3)\"/> \\\n\t\t\t<rect x=\"26\" y=\"26\" width=\"1\" height=\"5\" rx=\"0.5\" fill=\"url(%23gold3)\"/> \\\n\t\t\t<ellipse cx=\"16\" cy=\"18\" rx=\"15\" ry=\"13\" fill=\"rgba(0,0,0,0.5)\"/> \\\n\t\t\t<ellipse cx=\"16\" cy=\"16\" rx=\"16\" ry=\"14\" fill=\"url(%23gold1)\"/> \\\n\t\t\t<rect x=\"0\" y=\"14\" width=\"32\" height=\"2\" fill=\"url(%23gold1)\"/> \\\n\t\t\t<ellipse cx=\"16\" cy=\"14\" rx=\"16\" ry=\"14\" fill=\"url(%23gold2)\"/> \\\n\t\t\t<ellipse cx=\"16\" cy=\"14\" rx=\"15\" ry=\"13\" fill=\"url(%23membrane)\"/> \\\n\t\t</svg>');\n\t--piano-key-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"15\" preserveAspectRatio=\"none\" viewBox=\"0 -1 32 15\"> \\\n\t\t\t<defs> \\\n\t\t\t\t<linearGradient id=\"shadow\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\"> \\\n\t\t\t\t\t<stop offset=\"0%\" stop-color=\"rgba(0,0,0,0.5)\"/> \\\n\t\t\t\t\t<stop offset=\"100%\" stop-color=\"transparent\"/> \\\n\t\t\t\t</linearGradient> \\\n\t\t\t</defs> \\\n\t\t\t<rect x=\"-1\" y=\"1\" width=\"31\" height=\"1\" rx=\"0.6\" fill=\"rgba(255,255,255,0.4)\"/> \\\n\t\t\t<path d=\"M -1 11 L 30 11 L 30 2 L 33 -1 L 33 14 L -1 14 z\" fill=\"rgba(0,0,0,0.7)\"/> \\\n\t\t\t<rect x=\"-1\" y=\"-1\" width=\"19\" height=\"15\" fill=\"url(%23shadow)\"/> \\\n\t\t</svg>');\n  --mod-key-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"80\" preserveAspectRatio=\"none\" viewBox=\"0 -1 32 80\"> \\\n\t\t\t<defs> \\\n\t\t\t\t<linearGradient id=\"shadow\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\"> \\\n\t\t\t\t\t<stop offset=\"0%\" stop-color=\"rgba(0,0,0,0.4)\"/> \\\n\t\t\t\t\t<stop offset=\"100%\" stop-color=\"transparent\"/> \\\n\t\t\t\t</linearGradient> \\\n\t\t\t</defs> \\\n\t\t\t<rect x=\"-1\" y=\"1\" width=\"31\" height=\"1\" rx=\"0.6\" fill=\"rgba(255,255,255,0.2)\"/> \\\n\t\t\t<path d=\"M -1 76 L 30 76 L 30 1 L 33 -1 L 33 80 L -1 80 z\" fill=\"rgba(0,0,0,0.7)\"/> \\\n\t\t\t<rect x=\"-1\" y=\"-1\" width=\"19\" height=\"80\" fill=\"url(%23shadow)\"/> \\\n\t\t</svg>');\n}\n\n\n.obtrusive-scrollbars, .obtrusive-scrollbars * {\n\tscrollbar-width: thin;\n\tscrollbar-color: ${ColorConfig.uiWidgetBackground} ${ColorConfig.editorBackground};\n}\n.obtrusive-scrollbars::-webkit-scrollbar, .obtrusive-scrollbars *::-webkit-scrollbar {\n\twidth: 12px;\n}\n.obtrusive-scrollbars::-webkit-scrollbar-track, .obtrusive-scrollbars *::-webkit-scrollbar-track {\n\tbackground: ${ColorConfig.editorBackground};\n}\n.obtrusive-scrollbars::-webkit-scrollbar-thumb, .obtrusive-scrollbars *::-webkit-scrollbar-thumb {\n\tbackground-color: ${ColorConfig.uiWidgetBackground};\n\tborder: 3px solid ${ColorConfig.editorBackground};\n}\n\n.beepboxEditor {\n\tdisplay: grid;\n    grid-template-columns: minmax(0, 1fr) max-content;\n    grid-template-rows: max-content 1fr; /* max-content minmax(0, 1fr); Chrome 80 grid layout regression. https://bugs.chromium.org/p/chromium/issues/detail?id=1050307 */\n    grid-template-areas: \"pattern-area settings-area\" \"track-area settings-area\";\n\tgrid-column-gap: 6px;\n\tgrid-row-gap: 6px;\n\tposition: relative;\n\ttouch-action: manipulation;\n\tcursor: default;\n\tfont-size: 13px;\n\toverflow: hidden;\n\tcolor: ${ColorConfig.primaryText};\n\tbackground: ${ColorConfig.editorBackground};\n    opacity: 0;\n    -webkit-transition: opacity 0.2s ease-in;\n    -moz-transition: opacity 0.2s ease-in;\n    -o-transition: opacity 0.2s ease-in;\n    -ms-transition: opacity 0.2s ease-in;\n    transition: opacity 0.2s ease-in;\n    transition-delay: 0s;\n}\n\n.beepboxEditor .operatorRow {\n\tmargin: 2px 0;\n\theight: 2em;\n\tdisplay: flex;\n\tflex-direction: row;\n\talign-items: center;\n}\n\n.beepboxEditor .operatorRow > * {\n\tflex-grow: 1;\n\tflex-shrink: 1;\n}\n\n.pattern-area {\n     opacity: 0;\n    -webkit-transition: opacity 0.5s ease-in;\n    -moz-transition: opacity 0.5s ease-in;\n    -o-transition: opacity 0.5s ease-in;\n    -ms-transition: opacity 0.5s ease-in;\n    transition: opacity 0.5s ease-in;\n    transition-delay: 0s;\n}\n\n.settings-area {\n    opacity: 0;\n    -webkit-transition: opacity 0.5s ease-in;\n    -moz-transition: opacity 0.5s ease-in;\n    -o-transition: opacity 0.5s ease-in;\n    -ms-transition: opacity 0.5s ease-in;\n    transition: opacity 0.5s ease-in;\n    transition-delay: 0.15s;\n}\n\n.editor-song-settings {\n    opacity: 0;\n    -webkit-transition: opacity 0.5s ease-in;\n    -moz-transition: opacity 0.5s ease-in;\n    -o-transition: opacity 0.5s ease-in;\n    -ms-transition: opacity 0.5s ease-in;\n    transition: opacity 0.5s ease-in;\n    transition-delay: 0.35s;\n}\n\n.instrument-settings-area {\n    opacity: 0;\n    -webkit-transition: opacity 0.5s ease-in;\n    -moz-transition: opacity 0.5s ease-in;\n    -o-transition: opacity 0.5s ease-in;\n    -ms-transition: opacity 0.5s ease-in;\n    transition: opacity 0.5s ease-in;\n    transition-delay: 0.45s;\n}\n\n.trackAndMuteContainer {\n    opacity: 0;\n    -webkit-transition: opacity 0.5s ease-in;\n    -moz-transition: opacity 0.5s ease-in;\n    -o-transition: opacity 0.5s ease-in;\n    -ms-transition: opacity 0.5s ease-in;\n    transition: opacity 0.5s ease-in;\n    transition-delay: 0.4s;\n}\n\n.barScrollBar {\n    opacity: 0;\n    -webkit-transition: opacity 0.5s ease-in;\n    -moz-transition: opacity 0.5s ease-in;\n    -o-transition: opacity 0.5s ease-in;\n    -ms-transition: opacity 0.5s ease-in;\n    transition: opacity 0.5s ease-in;\n    transition-delay: 0.5s;\n}\n\n\n\n.load {\n    opacity: 1;\n}\n\n.beepboxEditor .noSelection {\n\t-webkit-touch-callout: none;\n\t-webkit-user-select: none;\n\t-moz-user-select: none;\n\t-ms-user-select: none;\n\tuser-select: none;\n}\n\n.beepboxEditor div {\n\tmargin: 0;\n\tpadding: 0;\n}\n\n.beepboxEditor .pattern-area {\n\tgrid-area: pattern-area;\n\theight: 481px;\n\tdisplay: flex;\n\tflex-direction: row;\n\tposition: relative;\n}\n\n.beepboxEditor .track-area {\n\tgrid-area: track-area;\n}\n\n.beepboxEditor .loopEditor {\n\theight: 20px;\n\tposition: sticky;\n\tbottom: 0;\n\tpadding: 5px 0;\n\tbackground-color: ${ColorConfig.editorBackground};\n}\n\n.beepboxEditor .settings-area {\n\tgrid-area: settings-area;\n\tdisplay: grid;\n    grid-template-columns: auto;\n    grid-template-rows: min-content min-content min-content min-content min-content;\n    grid-template-areas: \"version-area\" \"play-pause-area\" \"menu-area\" \"song-settings-area\" \"instrument-settings-area\";\n\tgrid-column-gap: 6px;\n}\n\n.beepboxEditor .version-area{ grid-area: version-area; }\n.beepboxEditor .play-pause-area{ grid-area: play-pause-area; }\n.beepboxEditor .menu-area{ grid-area: menu-area; }\n.beepboxEditor .song-settings-area{ grid-area: song-settings-area; }\n.beepboxEditor .instrument-settings-area{ grid-area: instrument-settings-area; }\n\n.beepboxEditor .tip {\n\tcursor: help;\n\tcolor: ${ColorConfig.secondaryText};\n\ttext-decoration: none;\n}\n\n.beepboxEditor .tip:hover {\n\tcolor: ${ColorConfig.linkAccent};\n\ttext-decoration: underline;\n}\n.beepboxEditor .tip:active {\n\tcolor: ${ColorConfig.primaryText};\n}\n\n.beepboxEditor .volume-speaker {\n\tflex-shrink: 0;\n\twidth: var(--button-size);\n\theight: var(--button-size);\n\tbackground: ${ColorConfig.secondaryText};\n\t-webkit-mask-image: var(--volume-symbol);\n\t-webkit-mask-repeat: no-repeat;\n\t-webkit-mask-position: center;\n\tmask-image: var(--volume-symbol);\n\tmask-repeat: no-repeat;\n\tmask-position: center;\n}\n\n.beepboxEditor .drum-button {\n\tflex: 1;\n\tbackground-color: transparent;\n\tbackground-image: var(--drum-symbol);\n\tbackground-repeat: no-repeat;\n\tbackground-position: center;\n}\n\n.beepboxEditor .modulator-button {\n\tflex: 1;\n\tposition: relative;\n\tdisplay: flex;\n\talign-items: center;\n}\n.beepboxEditor .modulator-button::before {\n\tcontent: \"\";\n\tposition: absolute;\n\tleft: 0;\n\ttop: 0;\n\twidth: 100%;\n\theight: 100%;\n\tpointer-events: none;\n\tbackground-image: var(--mod-key-symbol);\n\tbackground-repeat: no-repeat;\n\tbackground-position: center;\n\tbackground-size: 100% 102%;\n}\n\n.beepboxEditor .piano-button {\n\tflex: 1;\n\tposition: relative;\n\tdisplay: flex;\n\talign-items: center;\n}\n.beepboxEditor .piano-button::before {\n\tcontent: \"\";\n\tposition: absolute;\n\tleft: 0;\n\ttop: 0;\n\twidth: 100%;\n\theight: 100%;\n\tpointer-events: none;\n\tbackground-image: var(--piano-key-symbol);\n\tbackground-repeat: no-repeat;\n\tbackground-position: center;\n\tbackground-size: 100% 115.38%;\n}\n.beepboxEditor .piano-button.disabled::after {\n\tcontent: \"\";\n\tposition: absolute;\n\tright: 0;\n\ttop: 0;\n\twidth: 70%;\n\theight: 100%;\n\tpointer-events: none;\n\tbackground: ${ColorConfig.editorBackground};\n\t-webkit-mask-image: linear-gradient(90deg, transparent 0%, gray 70%, gray 100%);\n\t-webkit-mask-repeat: no-repeat;\n\t-webkit-mask-position: center;\n\tmask-image: linear-gradient(90deg, transparent 0%, gray 70%, gray 100%);\n\tmask-repeat: no-repeat;\n\tmask-position: center;\n}\n\n.beepboxEditor .piano-button.pressed, .beepboxEditor .drum-button.pressed {\n\tfilter: brightness(0.5);\n}\n\n.beepboxEditor .customize-instrument {\n\tmargin: 2px 0;\n}\n.beepboxEditor .customize-instrument::before {\n\tcontent: \"\";\n\tflex-shrink: 0;\n\tposition: absolute;\n\tleft: 0;\n\ttop: 50%;\n\ttransform: translateY(-50%);\n\tpointer-events: none;\n\twidth: var(--button-size);\n\theight: var(--button-size);\n\tbackground: currentColor;\n\t-webkit-mask-image: var(--customize-dial-symbol);\n\t-webkit-mask-repeat: no-repeat;\n\t-webkit-mask-position: center;\n\tmask-image: var(--customize-dial-symbol);\n\tmask-repeat: no-repeat;\n\tmask-position: center;\n}\n\n.beepboxEditor .instrumentCopyPasteRow {\n\tgap: 2px;\n}\n\n.beepboxEditor .copy-instrument {\n\tmargin: 2px 0;\n\tflex-grow: 1;\n}\n.beepboxEditor .copy-instrument::before {\n\tcontent: \"\";\n\tflex-shrink: 0;\n\tposition: absolute;\n\tleft: 0;\n\ttop: 50%;\n\ttransform: translateY(-50%);\n\tpointer-events: none;\n\twidth: var(--button-size);\n\theight: var(--button-size);\n\tbackground: currentColor;\n\t-webkit-mask-image: var(--instrument-copy-symbol);\n\t-webkit-mask-repeat: no-repeat;\n\t-webkit-mask-position: center;\n\tmask-image: var(--instrument-copy-symbol);\n\tmask-repeat: no-repeat;\n\tmask-position: center;\n}\n\n.beepboxEditor .paste-instrument {\n\tmargin: 2px 0;\n\tflex-grow: 1;\n}\n.beepboxEditor .paste-instrument::before {\n\tcontent: \"\";\n\tflex-shrink: 0;\n\tposition: absolute;\n\tleft: 0;\n\ttop: 50%;\n\ttransform: translateY(-50%);\n\tpointer-events: none;\n\twidth: var(--button-size);\n\theight: var(--button-size);\n\tbackground: currentColor;\n\t-webkit-mask-image: var(--instrument-paste-symbol);\n\t-webkit-mask-repeat: no-repeat;\n\t-webkit-mask-position: center;\n\tmask-image: var(--instrument-paste-symbol);\n\tmask-repeat: no-repeat;\n\tmask-position: center;\n}\n\n.beepboxEditor .envelopeEditor {\n\tdisplay: flex;\n\tflex-direction: column;\n}\n\n.beepboxEditor .envelope-row {\n\tdisplay: flex;\n\tmargin: 2px 0;\n\tgap: 2px;\n}\n\n.beepboxEditor .add-envelope {\n\twidth: var(--button-size);\n}\n.beepboxEditor .add-envelope::before {\n\tcontent: \"\";\n\tposition: absolute;\n\twidth: var(--button-size);\n\theight: var(--button-size);\n\tleft: 0;\n\ttop: 0;\n\tpointer-events: none;\n\tbackground: currentColor;\n\tmask-image: var(--add-symbol);\n\tmask-repeat: no-repeat;\n\tmask-position: center;\n\t-webkit-mask-image: var(--add-symbol);\n\t-webkit-mask-repeat: no-repeat;\n\t-webkit-mask-position: center;\n}\n.beepboxEditor .add-envelope:disabled {\n\tvisibility: hidden;\n}\n\n.beepboxEditor .effects-menu {\n\twidth: var(--button-size);\n\tposition: relative;\n}\n.beepboxEditor .effects-menu::before {\n\tcontent: \"\";\n\tposition: absolute;\n\twidth: var(--button-size);\n\theight: var(--button-size);\n\tleft: 0;\n\ttop: 0;\n\tpointer-events: none;\n\tbackground: currentColor;\n\tmask-image: var(--menu-down-symbol);\n\tmask-repeat: no-repeat;\n\tmask-position: center;\n\t-webkit-mask-image: var(--menu-down-symbol);\n\t-webkit-mask-repeat: no-repeat;\n\t-webkit-mask-position: center;\n}\n\n.beepboxEditor .zoomInButton, .beepboxEditor .zoomOutButton {\n\twidth: var(--button-size);\n\tposition: absolute;\n\tright: 10px;\n}\n.beepboxEditor .zoomInButton {\n\ttop: 10px;\n}\n.beepboxEditor .zoomOutButton {\n\ttop: 50px;\n}\n.beepboxEditor .zoomInButton::before {\n\tcontent: \"\";\n\tposition: absolute;\n\twidth: var(--button-size);\n\theight: var(--button-size);\n\tleft: 0;\n\ttop: 0;\n\tpointer-events: none;\n\tbackground: currentColor;\n\tmask-image: var(--zoom-in-symbol);\n\tmask-repeat: no-repeat;\n\tmask-position: center;\n\t-webkit-mask-image: var(--zoom-in-symbol);\n\t-webkit-mask-repeat: no-repeat;\n\t-webkit-mask-position: center;\n}\n.beepboxEditor .zoomOutButton::before {\n\tcontent: \"\";\n\tposition: absolute;\n\twidth: var(--button-size);\n\theight: var(--button-size);\n\tleft: 0;\n\ttop: 0;\n\tpointer-events: none;\n\tbackground: currentColor;\n\tmask-image: var(--zoom-out-symbol);\n\tmask-repeat: no-repeat;\n\tmask-position: center;\n\t-webkit-mask-image: var(--zoom-out-symbol);\n\t-webkit-mask-repeat: no-repeat;\n\t-webkit-mask-position: center;\n}\n\n.beepboxEditor .delete-envelope {\n\twidth: var(--button-size);\n\tflex-shrink: 0;\n\tflex-grow: 0;\n}\n.beepboxEditor .delete-envelope::before {\n\tcontent: \"\";\n\tposition: absolute;\n\twidth: var(--button-size);\n\theight: var(--button-size);\n\tleft: 0;\n\ttop: 0;\n\tpointer-events: none;\n\tbackground: currentColor;\n\tmask-image: var(--close-symbol);\n\tmask-repeat: no-repeat;\n\tmask-position: center;\n\t-webkit-mask-image: var(--close-symbol);\n\t-webkit-mask-repeat: no-repeat;\n\t-webkit-mask-position: center;\n}\n.beepboxEditor .delete-envelope:disabled {\n\tvisibility: hidden;\n}\n\n.beepboxEditor .menu.file::before {\n\tcontent: \"\";\n\tflex-shrink: 0;\n\tposition: absolute;\n\tleft: 0;\n\ttop: 50%;\n\ttransform: translateY(-50%);\n\tpointer-events: none;\n\twidth: var(--button-size);\n\theight: var(--button-size);\n\tbackground: currentColor;\n\t-webkit-mask-image: var(--file-page-symbol);\n\t-webkit-mask-repeat: no-repeat;\n\t-webkit-mask-position: center;\n\tmask-image: var(--file-page-symbol);\n\tmask-repeat: no-repeat;\n\tmask-position: center;\n}\n\n.beepboxEditor .menu.edit::before {\n\tcontent: \"\";\n\tflex-shrink: 0;\n\tposition: absolute;\n\tleft: 0;\n\ttop: 50%;\n\ttransform: translateY(-50%);\n\tpointer-events: none;\n\twidth: var(--button-size);\n\theight: var(--button-size);\n\tbackground: currentColor;\n\t-webkit-mask-image: var(--edit-pencil-symbol);\n\t-webkit-mask-repeat: no-repeat;\n\t-webkit-mask-position: center;\n\tmask-image: var(--edit-pencil-symbol);\n\tmask-repeat: no-repeat;\n\tmask-position: center;\n}\n\n.beepboxEditor .menu.preferences::before {\n\tcontent: \"\";\n\tflex-shrink: 0;\n\tposition: absolute;\n\tleft: 0;\n\ttop: 50%;\n\ttransform: translateY(-50%);\n\tpointer-events: none;\n\twidth: var(--button-size);\n\theight: var(--button-size);\n\tbackground: currentColor;\n\t-webkit-mask-image: var(--preferences-gear-symbol);\n\t-webkit-mask-repeat: no-repeat;\n\t-webkit-mask-position: center;\n\tmask-image: var(--preferences-gear-symbol);\n\tmask-repeat: no-repeat;\n\tmask-position: center;\n}\n\n.beepboxEditor .mute-button {\n\tbackground: transparent;\n\tborder: none;\n  padding-right: 0px;\n  padding-left: 0px;\n  box-shadow: none;\n}\n\n.beepboxEditor .mute-button:focus {\n  background: transparent;\n\tborder: none;\n}\n\n.beepboxEditor .mute-button::before {\n\tcontent: \"\";\n\tpointer-events: none;\n\twidth: 100%;\n\theight: 100%;\n\tdisplay: inline-block;\n  background: var(--mute-button-normal);\n\t-webkit-mask-image: var(--unmuted-symbol);\n\t-webkit-mask-repeat: no-repeat;\n\t-webkit-mask-position: center;\n\t-webkit-mask-size: cover;\n  mask-repeat: no-repeat;\n\tmask-position: center;\n\tmask-size: cover;\n  mask-image: var(--unmuted-symbol);\n}\n\n.beepboxEditor .mute-button.muted::before {\n  background: var(--ui-widget-background);\n\t-webkit-mask-image: var(--muted-symbol);\n  mask-image: var(--muted-symbol);\n}\n\n.beepboxEditor .mute-button.modMute.muted::before {\n  background: var(--ui-widget-background);\n\t-webkit-mask-image: var(--muted-symbol);\n  mask-image: var(--muted-symbol);\n}\n\n.beepboxEditor .mute-button.modMute::before {\n  background: var(--mute-button-mod);\n}\n\n\n.beepboxEditor .promptContainer {\n\tposition: absolute;\n\ttop: 0;\n\tleft: 0;\n\twidth: 100%;\n\theight: 100%;\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tz-index: 100;\n}\n\n.beepboxEditor .promptContainer::before {\n\tcontent: \"\";\n\tposition: absolute;\n\ttop: 0;\n\tleft: 0;\n\twidth: 100%;\n\theight: 100%;\n\tbackground: ${ColorConfig.editorBackground};\n\topacity: 0.5;\n\tdisplay: flex;\n}\n\n.beepboxEditor .prompt {\n\tmargin: auto;\n\ttext-align: center;\n\tbackground: ${ColorConfig.editorBackground};\n\tborder-radius: 15px;\n\tborder: 4px solid ${ColorConfig.uiWidgetBackground};\n\tcolor: ${ColorConfig.primaryText};\n\tpadding: 20px;\n\tdisplay: flex;\n\tflex-direction: column;\n\tposition: relative;\n\tbox-shadow: 5px 5px 20px 10px rgba(0,0,0,0.5);\n}\n\n.beepboxEditor .prompt > *:not(:first-child):not(.cancelButton) {\n\tmargin-top: 1.5em;\n}\n\n.beepboxEditor .prompt h2 {\n\tfont-size: 2em;\n\tmargin: 0 16px;\n\tfont-weight: normal;\n}\n\n.beepboxEditor .prompt p {\n\ttext-align: left;\n\tmargin: 1em 0;\n}\n\n.beepboxEditor .prompt label {\n\tcursor: pointer;\n}\n\n.beepboxEditor .prompt.recordingSetupPrompt p {\n\tmargin-top: 0.75em;\n\tmargin-bottom: 0;\n}\n\n.beepboxEditor .prompt.recordingSetupPrompt > label:not(:first-child):not(.cancelButton) {\n\tmargin: 2px 0;\n}\n\n.beepboxEditor .layout-option {\n\tdisplay: flex;\n\tflex-direction: column;\n\tflex: 1;\n\tcursor: pointer;\n\tcolor: ${ColorConfig.secondaryText};\n}\n\n.beepboxEditor .layout-option input {\n\tdisplay: none;\n}\n\n.beepboxEditor .layout-option input:checked ~ * {\n\tcolor: ${ColorConfig.primaryText};\n}\n.beepboxEditor select.invalidSetting {\n\tborder: solid 1px red;\n}\n.beepboxEditor .selectContainer {\n\tposition: relative;\n}\n.beepboxEditor .selectContainer:not(.menu)::after {\n\tcontent: \"\";\n\tflex-shrink: 0;\n\tposition: absolute;\n\tright: 0;\n\ttop: 50%;\n\ttransform: translateY(-50%);\n\tpointer-events: none;\n\twidth: 14px;\n\theight: var(--button-size);\n\tbackground: currentColor;\n\t-webkit-mask-image: var(--select-arrows-symbol);\n\t-webkit-mask-repeat: no-repeat;\n\t-webkit-mask-position: center;\n\tmask-image: var(--select-arrows-symbol);\n\tmask-repeat: no-repeat;\n\tmask-position: center;\n}\n.beepboxEditor .selectContainer.menu::after {\n\tcontent: \"\";\n\tflex-shrink: 0;\n\tposition: absolute;\n\tright: 0;\n\ttop: 50%;\n\ttransform: translateY(-50%);\n\tpointer-events: none;\n\twidth: var(--button-size);\n\theight: var(--button-size);\n\tbackground: currentColor;\n\t-webkit-mask-image: var(--menu-down-symbol);\n\t-webkit-mask-repeat: no-repeat;\n\t-webkit-mask-position: center;\n\tmask-image: var(--menu-down-symbol);\n\tmask-repeat: no-repeat;\n\tmask-position: center;\n}\n.beepboxEditor select {\n\tmargin: 0;\n\tpadding: 0 4px;\n\tdisplay: block;\n\theight: var(--button-size);\n\tborder: none;\n\tborder-radius: 5px;\n\tbackground: ${ColorConfig.uiWidgetBackground};\n\tcolor: inherit;\n\tfont-size: inherit;\n\tcursor: pointer;\n\tfont-family: inherit;\n\tfont-weight: inherit;\n\n\t-webkit-appearance:none;\n\t-moz-appearance: none;\n\tappearance: none;\n}\n.beepboxEditor select option:disabled {\n\tcolor: ${ColorConfig.linkAccent};\n\tfont-weight: bold;\n}\n\n.select2-container .select2-selection--single {\n  height: auto;\n}\n\n.select2-container {\n  width: -moz-available !important;\n  width: -webkit-fill-available !important;\n}\n\n.select2-container--default .select2-selection--single{\n  border-radius: 0px;\n  border: 0px;\n  background-color: transparent;\n  outline: none;\n}\n\n.select2-selection__rendered:not(.menu)::before {\n\tcontent: \"\";\n\tposition: absolute;\n\tright: 0.3em;\n\ttop: 0.4em;\n\tborder-bottom: 0.4em solid currentColor;\n\tborder-left: 0.3em solid transparent;\n\tborder-right: 0.3em solid transparent;\n\tpointer-events: none;\n}\n.select2-selection__rendered:not(.menu)::after {\n\tcontent: \"\";\n\tposition: absolute;\n\tright: 0.3em;\n\tbottom: 0.4em;\n\tborder-top: 0.4em solid currentColor;\n\tborder-left: 0.3em solid transparent;\n\tborder-right: 0.3em solid transparent;\n\tpointer-events: none;\n}\n.select2-selection__rendered {\n\tmargin: 0;\n\tpadding: 0 0.3em;\n\tdisplay: block;\n\theight: 2em;\n\tborder: none;\n\tborder-radius: 0.4em;\n\tbackground: ${ColorConfig.uiWidgetBackground};\n\tcolor: inherit !important;\n\tfont-size: inherit;\n\tcursor: pointer;\n\tfont-family: inherit;\n\t-webkit-appearance:none;\n\t-moz-appearance: none;\n\tappearance: none;\n}\n.select2-selection__arrow b{\n    display:none !important;\n}\n\n.select2-selection__rendered--focus {\n\tbackground: ${ColorConfig.uiWidgetFocus};\n\toutline: none;\n}\n.select2-search__field {\n    background: ${ColorConfig.uiWidgetBackground};\n    color: inherit !important;\n    font-size: small;\n    font-family: inherit;\n    border: 0px !important;\n    padding: 1px !important;\n}\n.select2-dropdown {\n    box-sizing: border-box;\n    display: inline-block;\n    margin: 0;\n    font-size: small;\n    position: relative;\n    vertical-align: middle;\n    background-color: ${ColorConfig.uiWidgetFocus};\n}\n\n.select2-container--default .select2-results>.select2-results__options {\n    max-height: 430px;\n    overflow-x: hidden;\n}\n.select2-container--default .select2-results__group {\n    cursor: default;\n    display: block;\n    padding: 1px;\n    background: ${ColorConfig.select2OptGroup};\n}\n.select2-results__option {\n    padding: 2px;\n    user-select: none;\n    -webkit-user-select: none;\n}\n.select2-container--default .select2-results__option .select2-results__option {\n    padding-left: 0.1em;\n}\n.select2-container--default .select2-results__option[aria-selected=true] {\n  background-color: transparent !important;\n}\n\n.select2-results__option--highlighted[aria-selected] {\n\tcolor: white !important;\n}\n\n.beepboxEditor .menu select {\n\tpadding: 0 var(--button-size);\n}\n.beepboxEditor select:focus {\n\tbackground: ${ColorConfig.uiWidgetFocus};\n\toutline: none;\n}\n.beepboxEditor .menu select {\n\ttext-align: center;\n\ttext-align-last: center;\n}\n.beepboxEditor .settings-area select {\n       width: 100%;\n}\n\n/* This makes it look better in firefox on my computer... What about others?\n@-moz-document url-prefix() {\n\t.beepboxEditor select { padding: 0 2px; }\n}\n*/\n.beepboxEditor button {\n\tmargin: 0;\n\tposition: relative;\n\theight: var(--button-size);\n\tborder: none;\n\tborder-radius: 5px;\n\tbackground: ${ColorConfig.uiWidgetBackground};\n\tcolor: inherit;\n\tfont-size: inherit;\n\tfont-family: inherit;\n\tfont-weight: inherit;\n\tcursor: pointer;\n}\n.beepboxEditor button:focus {\n\tbackground: ${ColorConfig.uiWidgetFocus};\n\toutline: none;\n}\n\n.beepboxEditor button.cancelButton {\n\tfloat: right;\n\twidth: var(--button-size);\n\tposition: absolute;\n\ttop: 8px;\n\tright: 8px;\n}\n\n.beepboxEditor .playback-bar-controls {\n\tdisplay: grid;\n\tgrid-template-columns: minmax(0, 1fr) minmax(0, 1fr) minmax(0, 1fr) minmax(0, 1fr);\n\tgrid-template-rows: min-content;\n\tgrid-column-gap: 4px;\n}\n\n.beepboxEditor button.playButton::before {\n\tcontent: \"\";\n\tflex-shrink: 0;\n\tposition: absolute;\n\tleft: 0;\n\ttop: 50%;\n\ttransform: translateY(-50%);\n\tpointer-events: none;\n\twidth: var(--button-size);\n\theight: var(--button-size);\n\tbackground: currentColor;\n\t-webkit-mask-image: var(--play-symbol);\n\t-webkit-mask-repeat: no-repeat;\n\t-webkit-mask-position: center;\n\tmask-image: var(--play-symbol);\n\tmask-repeat: no-repeat;\n\tmask-position: center;\n}\n.beepboxEditor button.pauseButton::before {\n\tcontent: \"\";\n\tflex-shrink: 0;\n\tposition: absolute;\n\tleft: 0;\n\ttop: 50%;\n\ttransform: translateY(-50%);\n\tpointer-events: none;\n\twidth: var(--button-size);\n\theight: var(--button-size);\n\tbackground: currentColor;\n\t-webkit-mask-image: var(--pause-symbol);\n\t-webkit-mask-repeat: no-repeat;\n\t-webkit-mask-position: center;\n\tmask-image: var(--pause-symbol);\n\tmask-repeat: no-repeat;\n\tmask-position: center;\n}\n.beepboxEditor button.recordButton::before {\n\tcontent: \"\";\n\tflex-shrink: 0;\n\tposition: absolute;\n\tleft: 0;\n\ttop: 50%;\n\ttransform: translateY(-50%);\n\tpointer-events: none;\n\twidth: var(--button-size);\n\theight: var(--button-size);\n\tbackground: currentColor;\n\t-webkit-mask-image: var(--record-symbol);\n\t-webkit-mask-repeat: no-repeat;\n\t-webkit-mask-position: center;\n\tmask-image: var(--record-symbol);\n\tmask-repeat: no-repeat;\n\tmask-position: center;\n}\n.beepboxEditor button.stopButton::before {\n\tcontent: \"\";\n\tflex-shrink: 0;\n\tposition: absolute;\n\tleft: 0;\n\ttop: 50%;\n\ttransform: translateY(-50%);\n\tpointer-events: none;\n\twidth: var(--button-size);\n\theight: var(--button-size);\n\tbackground: currentColor;\n\t-webkit-mask-image: var(--stop-symbol);\n\t-webkit-mask-repeat: no-repeat;\n\t-webkit-mask-position: center;\n\tmask-image: var(--stop-symbol);\n\tmask-repeat: no-repeat;\n\tmask-position: center;\n}\n\n.beepboxEditor button.prevBarButton::before {\n\tcontent: \"\";\n\tflex-shrink: 0;\n\tposition: absolute;\n\tleft: 50%;\n\ttop: 50%;\n\ttransform: translate(-50%, -50%);\n\tpointer-events: none;\n\twidth: var(--button-size);\n\theight: var(--button-size);\n\tbackground: currentColor;\n\t-webkit-mask-image: var(--prev-bar-symbol);\n\t-webkit-mask-repeat: no-repeat;\n\t-webkit-mask-position: center;\n\tmask-image: var(--prev-bar-symbol);\n\tmask-repeat: no-repeat;\n\tmask-position: center;\n}\n\n.beepboxEditor button.nextBarButton::before {\n\tcontent: \"\";\n\tflex-shrink: 0;\n\tposition: absolute;\n\tleft: 50%;\n\ttop: 50%;\n\ttransform: translate(-50%, -50%);\n\tpointer-events: none;\n\twidth: var(--button-size);\n\theight: var(--button-size);\n\tbackground: currentColor;\n\t-webkit-mask-image: var(--next-bar-symbol);\n\t-webkit-mask-repeat: no-repeat;\n\t-webkit-mask-position: center;\n\tmask-image: var(--next-bar-symbol);\n\tmask-repeat: no-repeat;\n\tmask-position: center;\n}\n\n.beepboxEditor button.playButton, .beepboxEditor button.pauseButton, .beepboxEditor button.recordButton, .beepboxEditor button.stopButton, .beepboxEditor button.okayButton, .beepboxEditor button.exportButton {\n\tpadding-left: var(--button-size);\n}\n.beepboxEditor button.playButton, .beepboxEditor button.pauseButton, .beepboxEditor button.recordButton {\n\tgrid-column-start: 1;\n\tgrid-column-end: 3;\n}\n.beepboxEditor button.stopButton {\n\tgrid-column-start: 1;\n\tgrid-column-end: 5;\n}\n.beepboxEditor button.prevBarButton {\n\tgrid-column-start: 3;\n\tgrid-column-end: 4;\n}\n.beepboxEditor button.nextBarButton {\n\tgrid-column-start: 4;\n\tgrid-column-end: 5;\n}\n\n.beepboxEditor button.playButton.shrunk, .beepboxEditor button.recordButton.shrunk {\n\tpadding: 0;\n}\n.beepboxEditor button.playButton.shrunk::before, .beepboxEditor button.recordButton.shrunk::before {\n\tleft: 50%;\n\ttop: 50%;\n\ttransform: translate(-50%, -50%);\n}\n.beepboxEditor button.playButton.shrunk span, .beepboxEditor button.recordButton.shrunk span {\n\tdisplay: none;\n}\n.beepboxEditor button.playButton.shrunk {\n\tgrid-column-start: 1;\n\tgrid-column-end: 2;\n}\n.beepboxEditor button.recordButton.shrunk {\n\tgrid-column-start: 2;\n\tgrid-column-end: 3;\n}\n\n.beepboxEditor button.cancelButton::before {\n\tcontent: \"\";\n\tposition: absolute;\n\twidth: var(--button-size);\n\theight: var(--button-size);\n\tleft: 0;\n\ttop: 0;\n\tpointer-events: none;\n\tbackground: currentColor;\n\tmask-image: var(--close-symbol);\n\tmask-repeat: no-repeat;\n\tmask-position: center;\n\t-webkit-mask-image: var(--close-symbol);\n\t-webkit-mask-repeat: no-repeat;\n\t-webkit-mask-position: center;\n}\n\n.beepboxEditor button.okayButton::before {\n\tcontent: \"\";\n\tposition: absolute;\n\twidth: var(--button-size);\n\theight: var(--button-size);\n\tleft: 0;\n\ttop: 0;\n\tpointer-events: none;\n\tbackground: currentColor;\n\t-webkit-mask-image: var(--checkmark-symbol);\n\t-webkit-mask-repeat: no-repeat;\n\t-webkit-mask-position: center;\n\tmask-image: var(--checkmark-symbol);\n\tmask-repeat: no-repeat;\n\tmask-position: center;\n}\n\n.beepboxEditor button.exportButton::before {\n\tcontent: \"\";\n\tposition: absolute;\n\twidth: var(--button-size);\n\theight: var(--button-size);\n\tleft: 0;\n\ttop: 0;\n\tpointer-events: none;\n\tbackground: currentColor;\n\tmask-image: var(--export-symbol);\n\tmask-repeat: no-repeat;\n\tmask-position: center;\n\t-webkit-mask-image: var(--export-symbol);\n\t-webkit-mask-repeat: no-repeat;\n\t-webkit-mask-position: center;\n}\n\n.beepboxEditor .instrument-bar {\n\tdisplay: flex;\n\tgap: 2px;\n}\n\n.beepboxEditor .instrument-bar button {\n\tflex-grow: 1;\n\tmin-width: 0;\n\tpadding: 0;\n\tflex-basis: 0;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\tcolor: var(--text-color-lit);\n}\n\n.beepboxEditor .instrument-bar .remove-instrument, .beepboxEditor .instrument-bar .add-instrument {\n\tmax-width: var(--button-size);\n}\n\n.beepboxEditor .instrument-bar > :not(:first-child) {\n\tborder-top-left-radius: 0;\n\tborder-bottom-left-radius: 0;\n}\n\n.beepboxEditor .instrument-bar > :not(.last-button) {\n\tborder-top-right-radius: 0;\n\tborder-bottom-right-radius: 0;\n\tborder-bottom: inset;\n\tborder-color: var(--background-color-dim);\n}\n\n.beepboxEditor .instrument-bar .selected-instrument {\n\tbackground: var(--background-color-lit);\n\tcolor: ${ColorConfig.invertedText};\n}\n\n.beepboxEditor .instrument-bar .deactivated {\n\tbackground: ${ColorConfig.editorBackground};\n\tcolor: var(--text-color-dim);\n\tborder-bottom: unset;\n}\n\n.beepboxEditor .instrument-bar .deactivated.selected-instrument {\n\tbackground: var(--background-color-dim);\n\tcolor: ${ColorConfig.invertedText};\n}\n\n.beepboxEditor .instrument-bar .remove-instrument {\n\tborder-bottom: unset;\n}\n\n.beepboxEditor .instrument-bar .remove-instrument::before {\n\tcontent: \"\";\n\tposition: absolute;\n\twidth: 100%;\n\theight: var(--button-size);\n\tleft: 0;\n\ttop: 0;\n\tpointer-events: none;\n\tbackground: currentColor;\n\tmask-image: var(--close-symbol);\n\tmask-repeat: no-repeat;\n\tmask-position: center;\n\t-webkit-mask-image: var(--close-symbol);\n\t-webkit-mask-repeat: no-repeat;\n\t-webkit-mask-position: center;\n}\n\n.beepboxEditor .instrument-bar .add-instrument {\n\tborder-bottom: unset;\n}\n\n.beepboxEditor .instrument-bar .no-underline {\n\tborder-bottom: unset;\n}\n\n.beepboxEditor .instrument-bar .add-instrument::before {\n\tcontent: \"\";\n\tposition: absolute;\n\twidth: 100%;\n\theight: var(--button-size);\n\tleft: 0;\n\ttop: 0;\n\tpointer-events: none;\n\tbackground: currentColor;\n\tmask-image: var(--add-symbol);\n\tmask-repeat: no-repeat;\n\tmask-position: center;\n\t-webkit-mask-image: var(--add-symbol);\n\t-webkit-mask-repeat: no-repeat;\n\t-webkit-mask-position: center;\n}\n\n.beepboxEditor canvas {\n\toverflow: hidden;\n\tposition: absolute;\n\tdisplay: block;\n  cursor: crosshair;\n}\n\n@keyframes dash-animation {\n  to {\n    stroke-dashoffset: -100;\n  }\n}\n\n.beepboxEditor .dash-move {\n  animation: dash-animation 20s infinite linear;\n}\n\n.beepboxEditor .trackContainer {\n\tflex-grow: 1;\n}\n\n.beepboxEditor .trackAndMuteContainer {\n\tdisplay: flex;\n\talign-items: flex-start;\n\twidth: 100%;\n\tmin-height: 0;\n\tflex: 1;\n\toverflow-x: hidden;\n\tposition: relative;\n}\n\n.beepboxEditor .channelRow {\n\tdisplay: flex;\n}\n\n.beepboxEditor .channelBox {\n\tdisplay: flex;\n\ttext-align: center;\n\talign-items: center;\n\tjustify-content: center;\n\tbox-sizing: border-box;\n\tpadding-top: 1px;\n}\n\n.beepboxEditor .channelBoxLabel {\n\tfont-size: 20px;\n\tfont-family: sans-serif;\n\tfont-weight: bold;\n}\n\n.beepboxEditor .dropFader {\n\topacity: 0;\n\t-webkit-transition:opacity 0.17s linear;\n    -moz-transition:opacity 0.17s linear;\n    -o-transition:opacity 0.17s linear;\n    -ms-transition:opacity 0.17s linear; \n    transition:opacity 0.17s linear;\n}\n\n.beepboxEditor .muteEditor {\n\twidth: 32px;\n\tflex-shrink: 0;\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: stretch;\n\tposition: sticky;\n\tleft: 0;\n\tz-index: 1;\n\tbackground: ${ColorConfig.editorBackground};\n}\n\n.beepboxEditor .selectRow, .beepboxEditor .instrumentCopyPasteRow {\n\tmargin: 2px 0;\n\theight: var(--button-size);\n\tdisplay: flex;\n\tflex-direction: row;\n\talign-items: center;\n\tjustify-content: space-between;\n}\n\n.beepboxEditor .selectRow > :last-child {\n\twidth: 62.5%;\n\tflex-shrink: 0;\n}\n\n.beepboxEditor .menu-area {\n\tdisplay: flex;\n\tflex-direction: column;\n}\n.beepboxEditor .menu-area > * {\n\tmargin: 2px 0;\n}\n.beepboxEditor .menu-area > button {\n\tpadding: 0 var(--button-size);\n\twhite-space: nowrap;\n}\n\n.beepboxEditor .song-settings-area {\n\tdisplay: flex;\n\tflex-direction: column;\n}\n\n.beepboxEditor .editor-controls {\n\tflex-shrink: 0;\n\tdisplay: flex;\n\tflex-direction: column;\n}\n\n.beepboxEditor .instrument-settings-area {\n\tdisplay: flex;\n\tflex-direction: column;\n}\n\n.beepboxEditor .editor-right-side-top > *, .beepboxEditor .editor-right-side-bottom > * {\n\tflex-shrink: 0;\n}\n\n.beepboxEditor .pitchShiftMarkerContainer {\n\tbox-sizing: border-box;\n\tdisplay: flex;\n\theight: 100%;\n\tleft: 3px;\n\tright: 3px;\n\tposition: absolute;\n\talign-items: center;\n\tpointer-events: none;\n}\n\n.beepboxEditor .pitchShiftMarker {\n\twidth: 0;\n\theight: 0;\n\tposition: absolute;\n}\n\n.beepboxEditor .pitchShiftMarker::before {\n\tcontent: \"\";\n\twidth: 2px;\n\theight: 20px;\n\ttransform: translate(-50%, -50%);\n\tposition: absolute;\n\tbackground: currentColor;\n\tborder-radius: 3px;\n}\n\n.beepboxEditor input[type=text], .beepboxEditor input[type=number] {\n\tfont-size: inherit;\n\tfont-weight: inherit;\n\tfont-family: inherit;\n\tbackground: transparent;\n\ttext-align: center;\n\tborder: 1px solid ${ColorConfig.inputBoxOutline};\n\tcolor: ${ColorConfig.primaryText};\n}\n\n.beepboxEditor input[type=text]::selection, .beepboxEditor input[type=number]::selection {\n\tbackground-color: ${ColorConfig.textSelection};\n\tcolor: ${ColorConfig.primaryText};\n}\n\n.beepboxEditor input[type=checkbox] {\n  transform: scale(1.5);\n}\n\n.beepboxEditor input[type=range] {\n\t-webkit-appearance: none;\n\tcolor: inherit;\n\twidth: 100%;\n\theight: var(--button-size);\n\tfont-size: inherit;\n\tmargin: 0;\n\tcursor: pointer;\n\tbackground: none;\n\ttouch-action: pan-y;\n  position: relative;\n}\n.beepboxEditor input[type=range]:focus {\n\toutline: none;\n}\n.beepboxEditor input[type=range]::-webkit-slider-runnable-track {\n\twidth: 100%;\n\theight: 6px;\n\tcursor: pointer;\n\tbackground: ${ColorConfig.uiWidgetBackground};\n}\n\n.modTarget:hover {\n\tfill: ${ColorConfig.hoverPreview} !important;\n}\n\n.beepboxEditor span.midTick:after {\n    content: \"\";\n    display:inline-block;\n    position: absolute;\n    background: currentColor;\n    width: 2%;\n    left: 49%;\n    height: 0.5em;\n    top: 32%;\n    z-index: 1;\n\t\tpointer-events: none;\n}\n.beepboxEditor span.modSlider {\n\t--mod-position: 20%;\n\t--mod-color: ${ColorConfig.overwritingModSlider};\n  --mod-border-radius: 0%;\n}\n.beepboxEditor span.modSlider:before {\n\tcontent: \"\";\n    display:inline-block;\n    position: absolute;\n    background: var(--mod-color);\n    width: 4%;\n    left: var(--mod-position);\n    height: 0.8em;\n    top: 28%;\n    z-index: 2;\n\t\ttransform: translate(-50%, 0%);\n\t\tpointer-events: none;\n\t\tborder: 40%;\n\t\tborder-radius: var(--mod-border-radius);\n}\n.beepboxEditor input[type=range]::-webkit-slider-thumb {\n\theight: var(--button-size);\n\twidth: 6px;\n\tborder-radius: 3px;\n\tbackground: currentColor;\n\tcursor: pointer;\n\t-webkit-appearance: none;\n\tmargin-top: -10px;\n}\n.beepboxEditor input[type=range]:focus::-webkit-slider-runnable-track {\n\tbackground: ${ColorConfig.uiWidgetFocus};\n}\n.beepboxEditor input[type=range]::-moz-range-track {\n\twidth: 100%;\n\theight: 6px;\n\tcursor: pointer;\n\tbackground: ${ColorConfig.uiWidgetBackground};\n}\n.beepboxEditor input[type=range]:focus::-moz-range-track {\n\tbackground: ${ColorConfig.uiWidgetFocus};\n}\n.beepboxEditor input[type=range]::-moz-range-thumb {\n\theight: var(--button-size);\n\twidth: 6px;\n\tborder-radius: 3px;\n\tborder: none;\n\tbackground: currentColor;\n\tcursor: pointer;\n}\n.beepboxEditor input[type=range]::-ms-track {\n\twidth: 100%;\n\theight: 6px;\n\tcursor: pointer;\n\tbackground: ${ColorConfig.uiWidgetBackground};\n\tborder-color: transparent;\n}\n.beepboxEditor input[type=range]:focus::-ms-track {\n\tbackground: ${ColorConfig.uiWidgetFocus};\n}\n.beepboxEditor input[type=range]::-ms-thumb {\n\theight: var(--button-size);\n\twidth: 6px;\n\tborder-radius: 3px;\n\tbackground: currentColor;\n\tcursor: pointer;\n}\n\nli.select2-results__option[role=group] > strong:hover {\n  background-color: #516fbb;\n}\n\n/* wide screen */\n@media (min-width: 711px) {\n\t#beepboxEditorContainer {\n\t\tdisplay: table;\n\t}\n\t.beepboxEditor {\n\t\tflex-direction: row;\n\t}\n\t.beepboxEditor:focus-within {\n\t\toutline: 3px solid ${ColorConfig.uiWidgetBackground};\n\t}\n\t.beepboxEditor .trackAndMuteContainer {\n\t\twidth: 512px;\n\t}\n\t.beepboxEditor .trackSelectBox {\n\t\tdisplay: none;\n\t}\n    .beepboxEditor .muteButtonSelectBox {\n\t\tdisplay: none;\n\t}\n\t.beepboxEditor .play-pause-area {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t}\n\t.beepboxEditor .playback-bar-controls {\n\t\tmargin: 2px 0;\n\t}\n\t.beepboxEditor .playback-volume-controls {\n\t\tdisplay: flex;\n\t\tflex-direction: row;\n\t\tmargin: 2px 0;\n\t\talign-items: center;\n\t}\n\t.beepboxEditor .settings-area {\n\t\twidth: var(--settings-area-width);\n\t}\n}\n\n/* narrow screen */\n@media (max-width: 710px) {\n\t.beepboxEditor {\n\t\tgrid-template-columns: minmax(0, 1fr);\n\t\tgrid-template-rows: min-content 6px min-content min-content;\n\t\tgrid-template-areas: \"pattern-area\" \".\" \"track-area\" \"settings-area\";\n\t\tgrid-row-gap: 0;\n\t}\n\t.beepboxEditor .settings-area {\n\t\tgrid-template-columns: minmax(0, 1fr) minmax(0, 1fr);\n\t\tgrid-template-rows: min-content min-content 1fr min-content;\n\t\tgrid-template-areas:\n\t\t\t\"play-pause-area play-pause-area\"\n\t\t\t\"menu-area instrument-settings-area\"\n\t\t\t\"song-settings-area instrument-settings-area\"\n\t\t\t\"version-area version-area\";\n\t\tgrid-column-gap: 8px;\n\t\tmargin: 0 4px;\n\t}\n\t.beepboxEditor:focus-within {\n\t\toutline: none;\n\t}\n\t.beepboxEditor .pattern-area {\n\t\tmax-height: 75vh;\n\t}\n\t.beepboxEditor .trackAndMuteContainer {\n\t\toverflow-x: auto;\n\t}\n\t.beepboxEditor .barScrollBar {\n\t\tdisplay: none;\n\t}\n\t.beepboxEditor .play-pause-area {\n\t\tdisplay: grid;\n\t\tgrid-template-columns: minmax(0, 1fr) minmax(0, 1fr);\n\t\tgrid-column-gap: 8px;\n\t\tmargin: 2px 0;\n\t}\n\t.beepboxEditor .playback-bar-controls {\n\t\tflex-grow: 1;\n\t}\n\t.beepboxEditor .playback-volume-controls {\n\t\tdisplay: flex;\n\t\tflex-direction: row;\n\t\talign-items: center;\n\t\tflex-grow: 1;\n\t}\n\t\n\t.beepboxEditor .soundIcon {\n\t  background: ${ColorConfig.editorBackground};\n\t  display: inline-block;\n\t  height: 10px;\n\t  margin-left: 0px;\n\t  margin-top: 8px;\n\t\tposition: relative;\n\t\twidth: 10px;\n\t}\n\t.beepboxEditor .soundIcon:before {\n\t  border-bottom: 6px solid transparent;\n\t  border-top: 6px solid transparent;\n\t  border-right: 10px solid ${ColorConfig.editorBackground};\n\t  content: \"\";\n\t  height: 10px;\n\t  left: 6px;\n\t  position: absolute;\n\t  top: -6px;\n\t  width: 0;\n\t}\n}\n\n`));\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\n\nimport { SongDocument } from \"./SongDocument\";\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\nimport { ColorConfig } from \"./ColorConfig\";\n\nexport class BarScrollBar {\n\tprivate readonly _editorWidth: number = 512;\n\tprivate readonly _editorHeight: number = 20;\n\tprivate readonly _playhead: SVGRectElement = SVG.rect(\"rect\", { fill: ColorConfig.playhead, x: 0, y: 0, width: 2, height: this._editorHeight });\n\t\tprivate readonly _notches: SVGSVGElement = SVG.svg({\"pointer-events\": \"none\"});\n\t\tprivate readonly _handle: SVGRectElement = SVG.rect({fill: ColorConfig.uiWidgetBackground, x: 0, y: 2, width: 10, height: this._editorHeight - 4});\n\t\tprivate readonly _handleHighlight: SVGRectElement = SVG.rect({fill: \"none\", stroke: ColorConfig.hoverPreview, \"stroke-width\": 2, \"pointer-events\": \"none\", x: 0, y: 1, width: 10, height: this._editorHeight - 2});\n\t\tprivate readonly _leftHighlight: SVGPathElement = SVG.path({fill: ColorConfig.hoverPreview, \"pointer-events\": \"none\"});\n\t\tprivate readonly _rightHighlight: SVGPathElement = SVG.path({fill: ColorConfig.hoverPreview, \"pointer-events\": \"none\"});\n\tprivate _renderedPlayhead: number = -1;\n\t\t\n\t\tprivate readonly _svg: SVGSVGElement = SVG.svg({style: `background-color: ${ColorConfig.editorBackground}; touch-action: pan-y; position: absolute;`, width: this._editorWidth, height: this._editorHeight},\n\t\tthis._notches,\n\t\tthis._handle,\n\t\tthis._handleHighlight,\n\t\tthis._leftHighlight,\n\t\tthis._rightHighlight,\n\t\tthis._playhead,\n\t);\n\t\t\n\t\tpublic readonly container: HTMLElement = HTML.div({class: \"barScrollBar\", style: \"width: 512px; height: 20px; overflow: hidden; position: relative;\"}, this._svg);\n\t\t\n\tprivate _mouseX: number = 0;\n\tprivate _mouseDown: boolean = false;\n\tprivate _mouseOver: boolean = false;\n\tprivate _dragging: boolean = false;\n\tprivate _dragStart: number;\n\tprivate _notchSpace: number;\n\tprivate _renderedNotchCount: number = -1;\n\tprivate _renderedScrollBarPos: number = -1;\n\t\n\tconstructor(private _doc: SongDocument) {\n\t\tconst center: number = this._editorHeight * 0.5;\n\t\tconst base: number = 20;\n\t\tconst tip: number = 9;\n\t\tconst arrowHeight: number = 6;\n\t\tthis._leftHighlight.setAttribute(\"d\", `M ${tip} ${center} L ${base} ${center + arrowHeight} L ${base} ${center - arrowHeight} z`);\n\t\tthis._rightHighlight.setAttribute(\"d\", `M ${this._editorWidth - tip} ${center} L ${this._editorWidth - base} ${center + arrowHeight} L ${this._editorWidth - base} ${center - arrowHeight} z`);\n\t\t\t\n\t\tthis.container.addEventListener(\"mousedown\", this._whenMousePressed);\n\t\tdocument.addEventListener(\"mousemove\", this._whenMouseMoved);\n\t\tdocument.addEventListener(\"mouseup\", this._whenCursorReleased);\n\t\tthis.container.addEventListener(\"mouseover\", this._whenMouseOver);\n\t\tthis.container.addEventListener(\"mouseout\", this._whenMouseOut);\n\t\t\t\n\t\tthis.container.addEventListener(\"touchstart\", this._whenTouchPressed);\n\t\tthis.container.addEventListener(\"touchmove\", this._whenTouchMoved);\n\t\tthis.container.addEventListener(\"touchend\", this._whenCursorReleased);\n\t\tthis.container.addEventListener(\"touchcancel\", this._whenCursorReleased);\n\t}\n\n\tpublic animatePlayhead = (): void => {\n\t\tconst playhead = Math.min(512, Math.max(0, (this._notchSpace * this._doc.synth.playhead - 2)));\n\t\tif (this._renderedPlayhead != playhead) {\n\t\t\tthis._renderedPlayhead = playhead;\n\t\t\tthis._playhead.setAttribute(\"x\", \"\" + playhead);\n\t\t}\n\t}\n\t\t\n\tprivate _whenMouseOver = (event: MouseEvent): void => {\n\t\tif (this._mouseOver) return;\n\t\tthis._mouseOver = true;\n\t\tthis._updatePreview();\n\t}\n\t\t\n\tprivate _whenMouseOut = (event: MouseEvent): void => {\n\t\tif (!this._mouseOver) return;\n\t\tthis._mouseOver = false;\n\t\tthis._updatePreview();\n\t}\n\t\t\n\tprivate _whenMousePressed = (event: MouseEvent): void => {\n\t\tevent.preventDefault();\n\t\tthis._mouseDown = true;\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\n\t\tthis._mouseX = (event.clientX || event.pageX) - boundingRect.left;\n\t\t//this._mouseY = (event.clientY || event.pageY) - boundingRect.top;\n\t\tthis._updatePreview();\n\t\tif (this._mouseX >= this._doc.barScrollPos * this._notchSpace && this._mouseX <= (this._doc.barScrollPos + this._doc.trackVisibleBars) * this._notchSpace) {\n\t\t\tthis._dragging = true;\n\t\t\tthis._dragStart = this._mouseX;\n\t\t}\n\t}\n\t\t\n\tprivate _whenTouchPressed = (event: TouchEvent): void => {\n\t\tevent.preventDefault();\n\t\tthis._mouseDown = true;\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\n\t\tthis._mouseX = event.touches[0].clientX - boundingRect.left;\n\t\t//this._mouseY = event.touches[0].clientY - boundingRect.top;\n\t\tthis._updatePreview();\n\t\tif (this._mouseX >= this._doc.barScrollPos * this._notchSpace && this._mouseX <= (this._doc.barScrollPos + this._doc.trackVisibleBars) * this._notchSpace) {\n\t\t\tthis._dragging = true;\n\t\t\tthis._dragStart = this._mouseX;\n\t\t}\n\t}\n\t\t\n\tprivate _whenMouseMoved = (event: MouseEvent): void => {\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\n\t\tthis._mouseX = (event.clientX || event.pageX) - boundingRect.left;\n\t\t//this._mouseY = (event.clientY || event.pageY) - boundingRect.top;\n\t\tthis._whenCursorMoved();\n\t}\n\t\t\n\tprivate _whenTouchMoved = (event: TouchEvent): void => {\n\t\tif (!this._mouseDown) return;\n\t\tevent.preventDefault();\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\n\t\tthis._mouseX = event.touches[0].clientX - boundingRect.left;\n\t\t//this._mouseY = event.touches[0].clientY - boundingRect.top;\n\t\tthis._whenCursorMoved();\n\t}\n\t\t\n\tprivate _whenCursorMoved(): void {\n\t\tif (this._dragging) {\n\t\t\twhile (this._mouseX - this._dragStart < -this._notchSpace * 0.5) {\n\t\t\t\tif (this._doc.barScrollPos > 0) {\n\t\t\t\t\tthis._doc.barScrollPos--;\n\t\t\t\t\tthis._dragStart -= this._notchSpace;\n\t\t\t\t\tthis._doc.notifier.changed();\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\twhile (this._mouseX - this._dragStart > this._notchSpace * 0.5) {\n\t\t\t\tif (this._doc.barScrollPos < this._doc.song.barCount - this._doc.trackVisibleBars) {\n\t\t\t\t\tthis._doc.barScrollPos++;\n\t\t\t\t\tthis._dragStart += this._notchSpace;\n\t\t\t\t\tthis._doc.notifier.changed();\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (this._mouseOver) this._updatePreview();\n\t}\n\t\t\n\tpublic changePos(offset: number) {\n\t\twhile (Math.abs(offset) >= 1) {\n\n\t\t\tif (offset < 0) {\n\t\t\t\tif (this._doc.barScrollPos > 0) {\n\t\t\t\t\tthis._doc.barScrollPos--;\n\t\t\t\t\tthis._dragStart += this._notchSpace;\n\t\t\t\t\tthis._doc.notifier.changed();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (this._doc.barScrollPos < this._doc.song.barCount - this._doc.trackVisibleBars) {\n\t\t\t\t\tthis._doc.barScrollPos++;\n\t\t\t\t\tthis._dragStart += this._notchSpace;\n\t\t\t\t\tthis._doc.notifier.changed();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\toffset += (offset > 0) ? -1 : 1;\n\n\t\t}\n\t}\n\n\tprivate _whenCursorReleased = (event: Event): void => {\n\t\tif (!this._dragging && this._mouseDown) {\n\t\t\tif (this._mouseX < (this._doc.barScrollPos + 8) * this._notchSpace) {\n\t\t\t\tif (this._doc.barScrollPos > 0) this._doc.barScrollPos--;\n\t\t\t\tthis._doc.notifier.changed();\n\t\t\t} else {\n\t\t\t\tif (this._doc.barScrollPos < this._doc.song.barCount - this._doc.trackVisibleBars) this._doc.barScrollPos++;\n\t\t\t\tthis._doc.notifier.changed();\n\t\t\t}\n\t\t}\n\t\tthis._mouseDown = false;\n\t\tthis._dragging = false;\n\t\tthis._updatePreview();\n\t}\n\t\t\n\tprivate _updatePreview(): void {\n\t\tconst showHighlight: boolean = this._mouseOver && !this._mouseDown;\n\t\tlet showleftHighlight: boolean = false;\n\t\tlet showRightHighlight: boolean = false;\n\t\tlet showHandleHighlight: boolean = false;\n\t\t\t\n\t\tif (showHighlight) {\n\t\t\tif (this._mouseX < this._doc.barScrollPos * this._notchSpace) {\n\t\t\t\tshowleftHighlight = true;\n\t\t\t} else if (this._mouseX > (this._doc.barScrollPos + this._doc.trackVisibleBars) * this._notchSpace) {\n\t\t\t\tshowRightHighlight = true;\n\t\t\t} else {\n\t\t\t\tshowHandleHighlight = true;\n\t\t\t}\n\t\t}\n\t\t\t\n\t\tthis._leftHighlight.style.visibility = showleftHighlight ? \"visible\" : \"hidden\";\n\t\tthis._rightHighlight.style.visibility = showRightHighlight ? \"visible\" : \"hidden\";\n\t\tthis._handleHighlight.style.visibility = showHandleHighlight ? \"visible\" : \"hidden\";\n\t}\n\t\t\n\tpublic render(): void {\n\t\t\tthis._notchSpace = (this._editorWidth-1) / Math.max(this._doc.trackVisibleBars, this._doc.song.barCount);\n\t\t\t\n\t\tconst resized: boolean = this._renderedNotchCount != this._doc.song.barCount;\n\t\tif (resized) {\n\t\t\tthis._renderedNotchCount = this._doc.song.barCount;\n\t\t\t\t\n\t\t\twhile (this._notches.firstChild) this._notches.removeChild(this._notches.firstChild);\n\t\t\t\t\n\t\t\tfor (let i: number = 0; i <= this._doc.song.barCount; i++) {\n\t\t\t\tconst lineHeight: number = (i % 16 == 0) ? 0 : ((i % 4 == 0) ? this._editorHeight / 8 : this._editorHeight / 3);\n\t\t\t\t\tthis._notches.appendChild(SVG.rect({fill: ColorConfig.uiWidgetBackground, x: i * this._notchSpace - 1, y: lineHeight, width: 2, height: this._editorHeight - lineHeight * 2}));\n\t\t\t}\n\t\t}\n\t\t\n\t\t\n\t\tif (resized || this._renderedScrollBarPos != this._doc.barScrollPos) {\n\t\t\tthis._renderedScrollBarPos = this._doc.barScrollPos;\n\t\t\tthis._handle.setAttribute(\"x\", String(this._notchSpace * this._doc.barScrollPos));\n\t\t\tthis._handle.setAttribute(\"width\", String(this._notchSpace * this._doc.trackVisibleBars));\n\t\t\tthis._handleHighlight.setAttribute(\"x\", String(this._notchSpace * this._doc.barScrollPos));\n\t\t\tthis._handleHighlight.setAttribute(\"width\", String(this._notchSpace * this._doc.trackVisibleBars));\n\t\t}\n\t\t\t\n\t\tthis._updatePreview();\n\t}\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\n// interface shared by number[], Float32Array, and other typed arrays in JavaScript.\ninterface NumberArray {\n\tlength: number;\n\t[index: number]: number;\n}\n\n// A basic FFT operation scales the overall magnitude of elements by the\n// square root of the length of the array, √N. Performing a forward FFT and\n// then an inverse FFT results in the original array, but multiplied by N.\n// This helper function can be used to compensate for that. \nexport function scaleElementsByFactor(array: NumberArray, factor: number): void {\n\tfor (let i: number = 0; i < array.length; i++) {\n\t\tarray[i] *= factor;\n\t}\n}\n\nfunction isPowerOf2(n: number): boolean {\n\treturn !!n && !(n & (n - 1));\n}\n\nfunction countBits(n: number): number {\n\tif (!isPowerOf2(n)) throw new Error(\"FFT array length must be a power of 2.\");\n\treturn Math.round(Math.log(n) / Math.log(2));\n}\n\n// Rearranges the elements of the array, swapping the element at an index\n// with an element at an index that is the bitwise reverse of the first\n// index in base 2. Useful for computing the FFT.\nfunction reverseIndexBits(array: NumberArray, fullArrayLength: number): void {\n\tconst bitCount: number = countBits(fullArrayLength);\n\tif (bitCount > 16) throw new Error(\"FFT array length must not be greater than 2^16.\");\n\tconst finalShift: number = 16 - bitCount;\n\tfor (let i: number = 0; i < fullArrayLength; i++) {\n\t\t// Dear Javascript: Please support bit order reversal intrinsics. Thanks! :D\n\t\tlet j: number;\n\t\tj = ((i & 0xaaaa) >> 1) | ((i & 0x5555) << 1);\n\t\tj = ((j & 0xcccc) >> 2) | ((j & 0x3333) << 2);\n\t\tj = ((j & 0xf0f0) >> 4) | ((j & 0x0f0f) << 4);\n\t\t\tj = ((j           >> 8) | ((j &   0xff) << 8)) >> finalShift;\n\t\tif (j > i) {\n\t\t\tlet temp: number = array[i];\n\t\t\tarray[i] = array[j];\n\t\t\tarray[j] = temp;\n\t\t}\n\t}\n}\n\n// Provided for educational purposes. Easier to read than\n// fastFourierTransform(), but computes the same result.\n// Takes two parallel arrays representing the real and imaginary elements,\n// respectively, and returns an array containing two new arrays, which\n// contain the complex result of the transform.\nexport function discreteFourierTransform(realArray: NumberArray, imagArray: NumberArray): number[][] {\n\tconst fullArrayLength: number = realArray.length;\n\tif (fullArrayLength != imagArray.length) throw new Error(\"FFT arrays must be the same length.\");\n\tconst realOut: number[] = [];\n\tconst imagOut: number[] = [];\n\tfor (let i: number = 0; i < fullArrayLength; i++) {\n\t\trealOut[i] = 0.0;\n\t\timagOut[i] = 0.0;\n\t\tfor (let j: number = 0; j < fullArrayLength; j++) {\n\t\t\tconst radians: number = -6.2831853 * j * i / fullArrayLength;\n\t\t\tconst c: number = Math.cos(radians);\n\t\t\tconst s: number = Math.sin(radians);\n\t\t\trealOut[i] += realArray[j] * c - imagArray[j] * s;\n\t\t\timagOut[i] += realArray[j] * s + imagArray[j] * c;\n\t\t}\n\t}\n\treturn [realOut, imagOut];\n}\n\n// Performs a Fourier transform in O(N log(N)) operations. Overwrites the\n// input real and imaginary arrays. Can be used for both forward and inverse\n// transforms: swap the order of the arguments for the inverse.\nexport function fastFourierTransform(realArray: NumberArray, imagArray: NumberArray): void {\n\tconst fullArrayLength: number = realArray.length;\n\tif (!isPowerOf2(fullArrayLength)) throw new Error(\"FFT array length must be a power of 2.\");\n\tif (fullArrayLength < 4) throw new Error(\"FFT array length must be at least 4.\");\n\tif (fullArrayLength != imagArray.length) throw new Error(\"FFT arrays must be the same length.\");\n\t\t\n\treverseIndexBits(realArray, fullArrayLength);\n\treverseIndexBits(imagArray, fullArrayLength);\n\t\t\n\t// First two passes, with strides of 2 and 4, can be combined and optimized.\n\tfor (let startIndex: number = 0; startIndex < fullArrayLength; startIndex += 4) {\n\t\tconst startIndex1: number = startIndex + 1;\n\t\tconst startIndex2: number = startIndex + 2;\n\t\tconst startIndex3: number = startIndex + 3;\n\t\t\tconst real0: number = realArray[startIndex ];\n\t\tconst real1: number = realArray[startIndex1];\n\t\tconst real2: number = realArray[startIndex2];\n\t\tconst real3: number = realArray[startIndex3];\n\t\t\tconst imag0: number = imagArray[startIndex ];\n\t\tconst imag1: number = imagArray[startIndex1];\n\t\tconst imag2: number = imagArray[startIndex2];\n\t\tconst imag3: number = imagArray[startIndex3];\n\t\tconst realTemp0: number = real0 + real1;\n\t\tconst realTemp1: number = real0 - real1;\n\t\tconst realTemp2: number = real2 + real3;\n\t\tconst realTemp3: number = real2 - real3;\n\t\tconst imagTemp0: number = imag0 + imag1;\n\t\tconst imagTemp1: number = imag0 - imag1;\n\t\tconst imagTemp2: number = imag2 + imag3;\n\t\tconst imagTemp3: number = imag2 - imag3;\n\t\t\trealArray[startIndex ] = realTemp0 + realTemp2;\n\t\trealArray[startIndex1] = realTemp1 + imagTemp3;\n\t\trealArray[startIndex2] = realTemp0 - realTemp2;\n\t\trealArray[startIndex3] = realTemp1 - imagTemp3;\n\t\t\timagArray[startIndex ] = imagTemp0 + imagTemp2;\n\t\timagArray[startIndex1] = imagTemp1 - realTemp3;\n\t\timagArray[startIndex2] = imagTemp0 - imagTemp2;\n\t\timagArray[startIndex3] = imagTemp1 + realTemp3;\n\t}\n\t\t\n\tfor (let stride: number = 8; stride <= fullArrayLength; stride += stride) {\n\t\tconst halfLength: number = stride >>> 1;\n\t\tconst radiansIncrement: number = Math.PI * 2.0 / stride;\n\t\tconst cosIncrement: number = Math.cos(radiansIncrement);\n\t\tconst sinIncrement: number = Math.sin(radiansIncrement);\n\t\tconst oscillatorMultiplier: number = 2.0 * cosIncrement;\n\t\tfor (let startIndex: number = 0; startIndex < fullArrayLength; startIndex += stride) {\n\t\t\tlet c: number = 1.0;\n\t\t\tlet s: number = 0.0;\n\t\t\tlet cPrev: number = cosIncrement;\n\t\t\tlet sPrev: number = sinIncrement;\n\t\t\tconst secondHalf: number = startIndex + halfLength;\n\t\t\tfor (let i: number = startIndex; i < secondHalf; i++) {\n\t\t\t\tconst j: number = i + halfLength;\n\t\t\t\tconst real0: number = realArray[i];\n\t\t\t\tconst imag0: number = imagArray[i];\n\t\t\t\tconst real1: number = realArray[j] * c - imagArray[j] * s;\n\t\t\t\tconst imag1: number = realArray[j] * s + imagArray[j] * c;\n\t\t\t\trealArray[i] = real0 + real1;\n\t\t\t\timagArray[i] = imag0 + imag1;\n\t\t\t\trealArray[j] = real0 - real1;\n\t\t\t\timagArray[j] = imag0 - imag1;\n\t\t\t\tconst cTemp: number = oscillatorMultiplier * c - cPrev;\n\t\t\t\tconst sTemp: number = oscillatorMultiplier * s - sPrev;\n\t\t\t\tcPrev = c;\n\t\t\t\tsPrev = s;\n\t\t\t\tc = cTemp;\n\t\t\t\ts = sTemp;\n\t\t\t}\n\t\t}\n\t}\n}\n\n// Computes the Fourier transform from an array of real-valued time-domain\n// samples. The output is specially formatted for space efficieny: elements\n// 0 through N/2 represent cosine wave amplitudes in ascending frequency,\n// and elements N/2+1 through N-1 represent sine wave amplitudes in\n// descending frequency. Overwrites the input array.\nexport function forwardRealFourierTransform(array: NumberArray): void {\n\tconst fullArrayLength: number = array.length;\n\tconst totalPasses: number = countBits(fullArrayLength);\n\tif (fullArrayLength < 4) throw new Error(\"FFT array length must be at least 4.\");\n\t\t\n\treverseIndexBits(array, fullArrayLength);\n\t\t\n\t// First and second pass.\n\tfor (let index: number = 0; index < fullArrayLength; index += 4) {\n\t\tconst index1: number = index + 1;\n\t\tconst index2: number = index + 2;\n\t\tconst index3: number = index + 3;\n\t\t\tconst real0: number = array[index ];\n\t\tconst real1: number = array[index1];\n\t\tconst real2: number = array[index2];\n\t\tconst real3: number = array[index3];\n\t\t// no imaginary elements yet since the input is fully real.\n\t\tconst tempA: number = real0 + real1;\n\t\tconst tempB: number = real2 + real3;\n\t\t\tarray[index ] = tempA + tempB;\n\t\tarray[index1] = real0 - real1;\n\t\tarray[index2] = tempA - tempB;\n\t\tarray[index3] = real2 - real3;\n\t}\n\t\t\n\t// Third pass.\n\tconst sqrt2over2: number = Math.sqrt(2.0) / 2.0;\n\tfor (let index: number = 0; index < fullArrayLength; index += 8) {\n\t\tconst index1: number = index + 1;\n\t\tconst index3: number = index + 3;\n\t\tconst index4: number = index + 4;\n\t\tconst index5: number = index + 5;\n\t\tconst index7: number = index + 7;\n\t\t\tconst real0: number = array[index ];\n\t\tconst real1: number = array[index1];\n\t\tconst imag3: number = array[index3];\n\t\tconst real4: number = array[index4];\n\t\tconst real5: number = array[index5];\n\t\tconst imag7: number = array[index7];\n\t\tconst tempA: number = (real5 - imag7) * sqrt2over2;\n\t\tconst tempB: number = (real5 + imag7) * sqrt2over2;\n\t\t\tarray[index ] = real0 + real4;\n\t\tarray[index1] = real1 + tempA;\n\t\tarray[index3] = real1 - tempA;\n\t\tarray[index4] = real0 - real4;\n\t\tarray[index5] = tempB - imag3;\n\t\tarray[index7] = tempB + imag3;\n\t}\n\t\t\n\t// Handle remaining passes.\n\tfor (let pass: number = 3; pass < totalPasses; pass++) {\n\t\tconst subStride: number = 1 << pass;\n\t\tconst midSubStride: number = subStride >> 1;\n\t\tconst stride: number = subStride << 1;\n\t\tconst radiansIncrement: number = Math.PI * 2.0 / stride;\n\t\tconst cosIncrement: number = Math.cos(radiansIncrement);\n\t\tconst sinIncrement: number = Math.sin(radiansIncrement);\n\t\tconst oscillatorMultiplier: number = 2.0 * cosIncrement;\n\t\tfor (let startIndex: number = 0; startIndex < fullArrayLength; startIndex += stride) {\n\t\t\tconst startIndexA: number = startIndex;\n\t\t\tconst startIndexB: number = startIndexA + subStride;\n\t\t\tconst stopIndex: number = startIndexB + subStride;\n\t\t\tconst realStartA: number = array[startIndexA];\n\t\t\tconst realStartB: number = array[startIndexB];\n\t\t\tarray[startIndexA] = realStartA + realStartB;\n\t\t\tarray[startIndexB] = realStartA - realStartB;\n\t\t\tlet c: number = cosIncrement;\n\t\t\tlet s: number = -sinIncrement;\n\t\t\tlet cPrev: number = 1.0;\n\t\t\tlet sPrev: number = 0.0;\n\t\t\tfor (let index: number = 1; index < midSubStride; index++) {\n\t\t\t\tconst indexA0: number = startIndexA + index;\n\t\t\t\tconst indexA1: number = startIndexB - index;\n\t\t\t\tconst indexB0: number = startIndexB + index;\n\t\t\t\t\tconst indexB1: number = stopIndex   - index;\n\t\t\t\tconst real0: number = array[indexA0];\n\t\t\t\tconst imag0: number = array[indexA1];\n\t\t\t\tconst real1: number = array[indexB0];\n\t\t\t\tconst imag1: number = array[indexB1];\n\t\t\t\tconst tempA: number = real1 * c + imag1 * s;\n\t\t\t\tconst tempB: number = real1 * s - imag1 * c;\n\t\t\t\tarray[indexA0] = real0 + tempA;\n\t\t\t\tarray[indexA1] = real0 - tempA;\n\t\t\t\t\tarray[indexB0] =-imag0 - tempB;\n\t\t\t\tarray[indexB1] = imag0 - tempB;\n\t\t\t\tconst cTemp: number = oscillatorMultiplier * c - cPrev;\n\t\t\t\tconst sTemp: number = oscillatorMultiplier * s - sPrev;\n\t\t\t\tcPrev = c;\n\t\t\t\tsPrev = s;\n\t\t\t\tc = cTemp;\n\t\t\t\ts = sTemp;\n\t\t\t}\n\t\t}\n\t}\n}\n\n// Computes the inverse Fourier transform from a specially formatted array of\n// scalar values. Elements 0 through N/2 are expected to be the real values of\n// the corresponding complex elements, representing cosine wave amplitudes in\n// ascending frequency, and elements N/2+1 through N-1 correspond to the\n// imaginary values, representing sine wave amplitudes in descending frequency.\n// Generates real-valued time-domain samples. Overwrites the input array.\nexport function inverseRealFourierTransform(array: NumberArray, fullArrayLength: number): void {\n\tconst totalPasses: number = countBits(fullArrayLength);\n\tif (fullArrayLength < 4) throw new Error(\"FFT array length must be at least 4.\");\n\n\t// Perform all but the last few passes in reverse.\n\tfor (let pass: number = totalPasses - 1; pass >= 2; pass--) {\n\t\tconst subStride: number = 1 << pass;\n\t\tconst midSubStride: number = subStride >> 1;\n\t\tconst stride: number = subStride << 1;\n\t\tconst radiansIncrement: number = Math.PI * 2.0 / stride;\n\t\tconst cosIncrement: number = Math.cos(radiansIncrement);\n\t\tconst sinIncrement: number = Math.sin(radiansIncrement);\n\t\tconst oscillatorMultiplier: number = 2.0 * cosIncrement;\n\t\t\t\n\t\tfor (let startIndex: number = 0; startIndex < fullArrayLength; startIndex += stride) {\n\t\t\tconst startIndexA: number = startIndex;\n\t\t\tconst midIndexA: number = startIndexA + midSubStride;\n\t\t\tconst startIndexB: number = startIndexA + subStride;\n\t\t\tconst midIndexB: number = startIndexB + midSubStride;\n\t\t\tconst stopIndex: number = startIndexB + subStride;\n\t\t\tconst realStartA: number = array[startIndexA];\n\t\t\tconst imagStartB: number = array[startIndexB];\n\t\t\tarray[startIndexA] = realStartA + imagStartB;\n\t\t\tarray[midIndexA] *= 2;\n\t\t\tarray[startIndexB] = realStartA - imagStartB;\n\t\t\tarray[midIndexB] *= 2;\n\t\t\tlet c: number = cosIncrement;\n\t\t\tlet s: number = -sinIncrement;\n\t\t\tlet cPrev: number = 1.0;\n\t\t\tlet sPrev: number = 0.0;\n\t\t\tfor (let index: number = 1; index < midSubStride; index++) {\n\t\t\t\tconst indexA0: number = startIndexA + index;\n\t\t\t\tconst indexA1: number = startIndexB - index;\n\t\t\t\tconst indexB0: number = startIndexB + index;\n\t\t\t\t\tconst indexB1: number = stopIndex   - index;\n\t\t\t\tconst real0: number = array[indexA0];\n\t\t\t\tconst real1: number = array[indexA1];\n\t\t\t\tconst imag0: number = array[indexB0];\n\t\t\t\tconst imag1: number = array[indexB1];\n\t\t\t\tconst tempA: number = real0 - real1;\n\t\t\t\tconst tempB: number = imag0 + imag1;\n\t\t\t\tarray[indexA0] = real0 + real1;\n\t\t\t\tarray[indexA1] = imag1 - imag0;\n\t\t\t\tarray[indexB0] = tempA * c - tempB * s;\n\t\t\t\tarray[indexB1] = tempB * c + tempA * s;\n\t\t\t\tconst cTemp: number = oscillatorMultiplier * c - cPrev;\n\t\t\t\tconst sTemp: number = oscillatorMultiplier * s - sPrev;\n\t\t\t\tcPrev = c;\n\t\t\t\tsPrev = s;\n\t\t\t\tc = cTemp;\n\t\t\t\ts = sTemp;\n\t\t\t}\n\t\t}\n\t}\n\t/*\n\t// Commented out this block (and compensated with an extra pass above)\n\t// because it's slower in my testing so far.\n\t// Pass with stride 8.\n\tconst sqrt2over2: number = Math.sqrt(2.0) / 2.0;\n\tfor (let index: number = 0; index < fullArrayLength; index += 8) {\n\t\tconst index1: number = index + 1;\n\t\tconst index2: number = index + 2;\n\t\tconst index3: number = index + 3;\n\t\tconst index4: number = index + 4;\n\t\tconst index5: number = index + 5;\n\t\tconst index6: number = index + 6;\n\t\tconst index7: number = index + 7;\n\t\tconst real0: number = array[index ];\n\t\tconst real1: number = array[index1];\n\t\tconst real2: number = array[index2];\n\t\tconst real3: number = array[index3];\n\t\tconst imag4: number = array[index4];\n\t\tconst imag5: number = array[index5];\n\t\tconst imag6: number = array[index6];\n\t\tconst imag7: number = array[index7];\n\t\tconst tempA: number = real1 - real3;\n\t\tconst tempB: number = imag5 + imag7;\n\t\tarray[index ] = real0 + imag4;\n\t\tarray[index1] = real1 + real3;\n\t\tarray[index2] = real2 * 2;\n\t\tarray[index3] = imag7 - imag5;\n\t\tarray[index4] = real0 - imag4;\n\t\tarray[index5] = (tempA + tempB) * sqrt2over2;\n\t\tarray[index6] = imag6 * 2;\n\t\tarray[index7] = (tempB - tempA) * sqrt2over2;\n\t}\n\t*/\n\t// The final passes with strides 4 and 2, combined into one loop.\n\tfor (let index: number = 0; index < fullArrayLength; index += 4) {\n\t\tconst index1: number = index + 1;\n\t\tconst index2: number = index + 2;\n\t\tconst index3: number = index + 3;\n\t\t\tconst real0: number = array[index ];\n\t\tconst real1: number = array[index1] * 2;\n\t\tconst imag2: number = array[index2];\n\t\tconst imag3: number = array[index3] * 2;\n\t\tconst tempA: number = real0 + imag2;\n\t\tconst tempB: number = real0 - imag2;\n\t\t\tarray[index ] = tempA + real1;\n\t\tarray[index1] = tempA - real1;\n\t\tarray[index2] = tempB + imag3;\n\t\tarray[index3] = tempB - imag3;\n\t}\n\t\t\n\treverseIndexBits(array, fullArrayLength);\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nexport class Deque<T> {\n\tprivate _capacity: number = 1;\n\tprivate _buffer: Array<T | undefined> = [undefined];\n\tprivate _mask: number = 0;\n\tprivate _offset: number = 0;\n\tprivate _count: number = 0;\n\n\tpublic pushFront(element: T): void {\n\t\tif (this._count >= this._capacity) this._expandCapacity();\n\t\tthis._offset = (this._offset - 1) & this._mask;\n\t\tthis._buffer[this._offset] = element;\n\t\tthis._count++;\n\t}\n\tpublic pushBack(element: T): void {\n\t\tif (this._count >= this._capacity) this._expandCapacity();\n\t\tthis._buffer[(this._offset + this._count) & this._mask] = element;\n\t\tthis._count++;\n\t}\n\tpublic popFront(): T {\n\t\tif (this._count <= 0) throw new Error(\"No elements left to pop.\");\n\t\tconst element: T = <T>this._buffer[this._offset];\n\t\tthis._buffer[this._offset] = undefined;\n\t\tthis._offset = (this._offset + 1) & this._mask;\n\t\tthis._count--;\n\t\treturn element;\n\t}\n\tpublic popBack(): T {\n\t\tif (this._count <= 0) throw new Error(\"No elements left to pop.\");\n\t\tthis._count--;\n\t\tconst index: number = (this._offset + this._count) & this._mask;\n\t\tconst element: T = <T>this._buffer[index];\n\t\tthis._buffer[index] = undefined;\n\t\treturn element;\n\t}\n\tpublic peakFront(): T {\n\t\tif (this._count <= 0) throw new Error(\"No elements left to pop.\");\n\t\treturn <T>this._buffer[this._offset];\n\t}\n\tpublic peakBack(): T {\n\t\tif (this._count <= 0) throw new Error(\"No elements left to pop.\");\n\t\treturn <T>this._buffer[(this._offset + this._count - 1) & this._mask];\n\t}\n\tpublic count(): number {\n\t\treturn this._count;\n\t}\n\tpublic set(index: number, element: T): void {\n\t\tif (index < 0 || index >= this._count) throw new Error(\"Invalid index\");\n\t\tthis._buffer[(this._offset + index) & this._mask] = element;\n\t}\n\tpublic get(index: number): T {\n\t\tif (index < 0 || index >= this._count) throw new Error(\"Invalid index\");\n\t\treturn <T>this._buffer[(this._offset + index) & this._mask];\n\t}\n\tpublic remove(index: number): void {\n\t\tif (index < 0 || index >= this._count) throw new Error(\"Invalid index\");\n\t\tif (index <= (this._count >> 1)) {\n\t\t\twhile (index > 0) {\n\t\t\t\tthis.set(index, this.get(index - 1));\n\t\t\t\tindex--;\n\t\t\t}\n\t\t\tthis.popFront();\n\t\t} else {\n\t\t\tindex++;\n\t\t\twhile (index < this._count) {\n\t\t\t\tthis.set(index - 1, this.get(index));\n\t\t\t\tindex++;\n\t\t\t}\n\t\t\tthis.popBack();\n\t\t}\n\t}\n\tprivate _expandCapacity(): void {\n\t\tif (this._capacity >= 0x40000000) throw new Error(\"Capacity too big.\");\n\t\tthis._capacity = this._capacity << 1;\n\t\tconst oldBuffer: Array<T | undefined> = this._buffer;\n\t\tconst newBuffer: Array<T | undefined> = new Array(this._capacity);\n\t\tconst size: number = this._count | 0;\n\t\tconst offset: number = this._offset | 0;\n\t\tfor (let i = 0; i < size; i++) {\n\t\t\tnewBuffer[i] = oldBuffer[(offset + i) & this._mask];\n\t\t}\n\t\tfor (let i = size; i < this._capacity; i++) {\n\t\t\tnewBuffer[i] = undefined;\n\t\t}\n\t\tthis._offset = 0;\n\t\tthis._buffer = newBuffer;\n\t\tthis._mask = this._capacity - 1;\n\t}\n}","/*\nThis file contains code to compute digital audio filter coefficients based on\nthe desired type, cutoff frequency, and other parameters. You can use these\ncoefficients to apply the filter to audio samples. It also contains code to\nanalyze these filters, which is useful for graphically displaying their effects.\n\nAll of the filters in this file are known as \"Infinite Impulse Response\" or IIR\nfilters, because older output samples contribute feedback to newer output\nsamples and thus contribute to all future samples, although typically filters\nare design to reduce the contribution of older samples over time.\n\nLow-pass filters aka high-cut filters preserve audio signals below the cutoff\nfrequency, and attenuate audio signals above the cutoff frequency. High-pass\nfilters aka low-cut filters are the reverse. All-pass filters do not affect the\nvolume of the signal at all but induce phase changes above the cutoff frequency.\nPeak/Notch filters maintain the volume on either side of the cutoff frequency,\nbut raise or lower the volume at that frequency. \n\nThe number of old samples used in the filter determines the \"order\" of the\nfilter. First-order filters generally have shallower slopes, and second-order\nfilters generally have steeper slopes and can be configured to \"resonate\",\nmeaning they have a louder peak at the cutoff frequency. This file contains\nfirst-order filters and second-order filters, meaning one or two older samples\nare involved, as well as the current input sample.\n\nThe class FilterCoefficients is defined lower in this file. You can use it to\nset up a first order filter like this:\n\n\tconst cutoffRadiansPerSample: number = 2 * Math.PI * cutoffHz / sampleRate;\n\tconst filter: FilterCoefficients = new FilterCoefficients();\n\tfilter.lowPass1stOrderButterworth(cutoffRadiansPerSample);\n\t// output sample coefficients are conventionally called a0, a1, etc. Note\n\t// that a[0] is typically normalized to 1.0 and need not be used directly.\n\tconst a: number[] = filter.a;\n\t// input sample coefficients are conventionally called b0, b1, etc\n\tconst b: number[] = filter.b;\n\t// filter input samples, x[0] is the most recent, x[1] is the previous one, etc.\n\tconst x: number[] = [0, 0, 0];\n\t// filter output samples, y[0] will be computed by the filter based on input\n\t// samples and older output samples.\n\tconst y: number[] = [0, 0, 0];\n\nThen to apply the first-order filter to samples inside a loop, using the current\ninput sample (x[0]) as well as previous input and output samples, do this:\n\n\t// Compute the next output sample y[0]:\n\ty[0] = b[0] * x[0] + b[1] * x[1] - a[1] * y[1];\n\t// Remember the input and output samples for next time:\n\tx[1] = x[0];\n\ty[1] = y[0];\n\n2nd order filters are similar, but have more parameters and require more old\nsamples:\n\n\t// Compute the next output sample y[0]:\n\ty[0] = b[0] * x[0] + b[1] * x[1] + b[2] * x[2] - a[1] * y[1] - a[2] * y[2];\n\t// Remember the input and output samples for next time:\n\tx[2] = x[1];\n\tx[1] = x[0];\n\ty[2] = y[1];\n\ty[1] = y[0];\n\nYou can compose multiple filters into a higher order filter, although doing so\nreduces the numerical stability of the filter:\n\n\tfilter3.combination(filter1, filter2);\n\t// filter3.order will equal: filter1.order + filter2.order\n\t// The number of coefficients in filter3.a and filter3.b will be: order + 1\n\nThis file also contains a class called FrequencyResponse. You can use it to\ndetermine how much gain or attenuation a filter would apply to sounds at a\nspecific input frequency, as well as the phase offset:\n\n\tconst inputRadians: number = 2 * Math.PI * cutoffHz / sampleRate;\n\tconst response: FrequencyResponse = new FrequencyResponse();\n\tresponse.analyze(filter, inputRadians);\n\tconst gainResponse = response.magnitude();\n\tconst phaseResponse = response.angle();\n\nThat's basically all you need to know to use this code, but I'll also explain\nhow the analysis works.\n\nA first-order digital IIR filter is ordinarily implemented in a form like this:\n\n\toutput = inputCoeff * input + prevInputCoeff * prevInput - prevOutputCoeff * prevOutput;\n\nIf we adopt standard naming conventions for audio filters, this same code would\ninstead look like:\n\n\t// x0 = current input, x1 = prevInput, y0 = current output, y1 = prevOutput\n\ty0 = b0*x0 + b1*x1 - a1*y1;\n\nLeaving behind the world of code for a moment and entering the world of algebra,\nwe can rewrite this equation by moving all the output terms to the left side,\nand we can add a coefficient to the y0 term called a0 (which is typically\nnormalized to 1.0, which is why I didn't bother including it until now):\n\n\ta0*y0 + a1*y1 = b0*x0 + b1*x1\n\nThis is known as the symmetrical form of the filter, and it will help us analyze\nthe impact of the filter on an input audio signal. Here's a lesson that helped\nme understand the symmetrical form:\nhttps://web.archive.org/web/20200626183458/http://123.physics.ucdavis.edu/week_5_files/filters/digital_filter.pdf\n\nThe end of that lesson introduces a concept called the \"delay operator\" which\nlooks like \"z^-1\", which (magically) turns a sample into the previous sample\nwhen you multiply them. For example:\n\n\tx0 * z^-1 = x1\n\nThe lesson doesn't explain how it actually works. Audio signals aren't always\npredictable, which means that you generally can't do math on a single sample to\ncompute what the previous sample was. However, some audio signals ARE\npredictable, such as pure sine waves. Fortunately, all audio signals can be\nbroken down into a sum of independent sine waves. We can pick one sine wave at a\ntime, and use it to analyze the filter's impact on waves at that frequency. In\npractice, this tells us what the filter will do to unpredictable input samples\nthat contain a partial sine wave at that frequency.\n\nTechnically, you can't just use a single sine wave sample to determine the\nprevious sine wave sample, because each possible value is passed going upwards\nand downwards once per period and the direction is ambigous. This is where we\nneed to move into the complex number domain, where the real and imaginary\ncomponents can provide enough information to compute the previous position on\nthe input signal. So now instead of talking about sine waves, we're talking\nabout waves where the imaginary component is a sine wave and the real component\nis a cosine wave at the same frequency. Together, they trace around a unit\ncircle in the complex domain, and each sample is just a consistent rotation\napplied to the previous sample. The \"delay operator\" described above, z^-1, is\nthis same rotation applied in reverse, and it can be computed as:\n\n\tz^-1 = cos(radiansPerSample) - i * sin(radiansPerSample)\n\nMath nerds may be interested to know that \"Euler's formula\" was used here, but\nexplaining what that means is probably beyond the scope of this documentation\naside from noting that a complex number on the unit circle represents a 2D\nrotation that you can apply via multiplication.\n\nNow we can rewrite the symmetrical form using the delay operator and algebra:\n\n\ta0*y0 + a1*y0*z^-1 = b0*x0 + b1*x0*z^-1\n\ty0 * (a0 + a1*z^-1) = x0 * (b0 + b1*z^-1)\n\ty0 = x0 * (b0 + b1*z^-1) / (a0 + a1*z^-1)\n\ty0 / x0 = (b0 + b1*z^-1) / (a0 + a1*z^-1)\n\nThat last equation expresses the relationship between the input and output\nsignals (y0/x0) in terms of the filter coefficients and delay operator. At this\npoint, the specific values of the input and output samples don't even matter!\nThis is called the \"transfer function\", and it's conventionally named \"H(z)\":\n\n\tH(z) = (b0 + b1*z^-1) / (a0 + a1*z^-1)\n\nIf you plug in actual filter coefficients and express the delay operators as\ncomplex numbers with the appropriate trigonometry functions, the transfer\nfunction can be computed and produces a complex number that represents the\nrelationship between the input and output signals, whose magnitude represents\nthe volume gain (or attenuation) of signals at that frequency, and whose angle\nrepresents how much phase shift is applied by the filter to signals at that\nfrequency.\n\n(Note that in order to compute the transfer function, you'll need to do\nsomething about the complex number in the denominator. It turns out you can turn\nthe denominator into a real number by multiplying both the numerator and\ndenominator by the complex conjugate of the denominator, which is just the\ndenominator with the imaginary component negated.)\n\nFinally, I'll list some of the links that helped me understand filters and\nprovided some of the algorithms I that use here.\n\nHere's where I found accurate 2nd order low-pass, high-pass, and high-shelf\ndigital filters:\nhttps://web.archive.org/web/20120531011328/http://www.musicdsp.org/files/Audio-EQ-Cookbook.txt\n\nThis page is how I found a link to the cookbook article above. It claims these\nfilters are Butterworth filters:\nhttp://web.archive.org/web/20191213120120/https://crypto.stanford.edu/~blynn/sound/analog.html\n\nI found the first-order digital Butterworth filter coefficients at:\nhttps://www.researchgate.net/publication/338022014_Digital_Implementation_of_Butterworth_First-Order_Filter_Type_IIR\n\nThis meta-paper helped me understand how to make 2nd order peak/notch filters:\nhttps://web.archive.org/web/20170706085655/https://www.thesounddesign.com/MIO/EQ-Coefficients.pdf\n\nBeepBox originally used simpler low-pass filters that I adapted from SFXR:\nhttps://www.drpetter.se/project_sfxr.html\nFor low cutoff frequencies, the simpler filters and the Butterworth filters are\nnearly identical, but when closer to the nyquist frequency the simpler filters\ncreate extra resonance.\n*/\n\nexport class FilterCoefficients {\n\tpublic readonly a: number[] = [1.0]; // output coefficients (negated, keep a[0]=1)\n\tpublic readonly b: number[] = [1.0]; // input coefficients\n\tpublic order: number = 0;\n\t\n\tpublic linearGain0thOrder(linearGain: number): void {\n\t\t//a[0] = 1.0; // a0 should always be normalized to 1.0, no need to assign it directly.\n\t\tthis.b[0] = linearGain;\n\t\tthis.order = 0;\n\t}\n\t\n\tpublic lowPass1stOrderButterworth(cornerRadiansPerSample: number): void {\n\t\t// First-order Butterworth low-pass filter according to:\n\t\t// https://www.researchgate.net/publication/338022014_Digital_Implementation_of_Butterworth_First-Order_Filter_Type_IIR\n\t\t// A butterworth filter is one where the amplitude response is equal to:\n\t\t// 1 / √(1 + (freq / cutoffFreq)^(2 * order))\n\t\tconst g: number = 1.0 / Math.tan(cornerRadiansPerSample * 0.5);\n\t\tconst a0: number = 1.0 + g;\n\t\tthis.a[1] = (1.0 - g) / a0;\n\t\tthis.b[1] = this.b[0] = 1 / a0;\n\t\tthis.order = 1;\n\t}\n\t\n\tpublic lowPass1stOrderSimplified(cornerRadiansPerSample: number): void {\n\t\t// The output of this filter is nearly identical to the 1st order\n\t\t// Butterworth low-pass above, except if the cutoff is set to nyquist/3,\n\t\t// then the output is the same as the input, and if the cutoff is higher\n\t\t// than that, then the output actually resonates at high frequencies\n\t\t// instead of attenuating.\n\t\t// I'm guessing this filter was converted from analog to digital using\n\t\t// the \"matched z-transform\" method instead of the \"bilinear transform\"\n\t\t// method. The difference is that the bilinear transform warps\n\t\t// frequencies so that the lowpass response of zero at analogue ∞hz maps\n\t\t// to the digital nyquist frequency, whereas the matched z-transform\n\t\t// preserves the frequency of the filter response but also adds the\n\t\t// reflected response from above the nyquist frequency.\n\t\tconst g: number = 2.0 * Math.sin(cornerRadiansPerSample * 0.5);\n\t\tthis.a[1] = g - 1.0;\n\t\tthis.b[0] = g;\n\t\tthis.b[1] = 0.0;\n\t\t/*\n\t\t// Alternatively:\n\t\tconst g: number = 1.0 / (2.0 * Math.sin(cornerRadiansPerSample / 2));\n\t\tconst a0: number = g;\n\t\tthis.a[1] = (1.0 - g) / a0;\n\t\tthis.b[0] = 1.0 / a0;\n\t\tthis.b[1] = 0.0 / a0;\n\t\t*/\n\t\tthis.order = 1;\n\t}\n\t\n\tpublic highPass1stOrderButterworth(cornerRadiansPerSample: number): void {\n\t\t// First-order Butterworth high-pass filter according to:\n\t\t// https://www.researchgate.net/publication/338022014_Digital_Implementation_of_Butterworth_First-Order_Filter_Type_IIR\n\t\tconst g: number = 1.0 / Math.tan(cornerRadiansPerSample * 0.5);\n\t\tconst a0: number = 1.0 + g;\n\t\tthis.a[1] = (1.0 - g) / a0;\n\t\tthis.b[0] = g / a0;\n\t\tthis.b[1] = -g / a0;\n\t\tthis.order = 1;\n\t}\n\t/*\n\tpublic highPass1stOrderSimplified(cornerRadiansPerSample: number): void {\n\t\t// The output of this filter is nearly identical to the 1st order\n\t\t// Butterworth high-pass above, except it resonates when the cutoff\n\t\t// appoaches the nyquist.\n\t\tconst g: number = 2.0 * Math.sin(cornerRadiansPerSample * 0.5);\n\t\tthis.a[1] = g - 1.0;\n\t\tthis.b[0] = 1.0;\n\t\tthis.b[1] = -1.0;\n\t\tthis.order = 1;\n\t}\n\t*/\n\tpublic highShelf1stOrder(cornerRadiansPerSample: number, shelfLinearGain: number): void {\n\t\t// I had trouble figuring this one out because I couldn't find any\n\t\t// online algorithms that I understood. There are 3 degrees of freedom\n\t\t// and I could narrow down a couple of them based on the desired gain at\n\t\t// DC and nyquist, but getting the cutoff frequency correct took a\n\t\t// little bit of trial and error in my attempts to interpret page 53 of\n\t\t// this chapter: http://www.music.mcgill.ca/~ich/classes/FiltersChap2.pdf\n\t\t// Obviously I don't fully understand the bilinear transform yet!\n\t\tconst tan: number = Math.tan(cornerRadiansPerSample * 0.5);\n\t\tconst sqrtGain: number = Math.sqrt(shelfLinearGain);\n\t\tconst g: number = (tan * sqrtGain - 1) / (tan * sqrtGain + 1.0);\n\t\tconst a0: number = 1.0;\n\t\tthis.a[1] = g / a0;\n\t\tthis.b[0] = (1.0 + g + shelfLinearGain * (1.0 - g)) / (2.0 * a0);\n\t\tthis.b[1] = (1.0 + g - shelfLinearGain * (1.0 - g)) / (2.0 * a0);\n\t\tthis.order = 1;\n\t}\n\t\n\tpublic allPass1stOrderInvertPhaseAbove(cornerRadiansPerSample: number): void {\n\t\tconst g: number = (Math.sin(cornerRadiansPerSample) - 1.0) / Math.cos(cornerRadiansPerSample);\n\t\tthis.a[1] = g;\n\t\tthis.b[0] = g;\n\t\tthis.b[1] = 1.0;\n\t\tthis.order = 1;\n\t}\n\t\n\t/*\n\t// I haven't found a practical use for this version of the all pass filter.\n\t// It seems to create a weird subharmonic when used in a delay feedback loop.\n\tpublic allPass1stOrderInvertPhaseBelow(cornerRadiansPerSample: number): void {\n\t\tconst g: number = (Math.sin(cornerRadiansPerSample) - 1.0) / Math.cos(cornerRadiansPerSample);\n\t\tthis.a[1] = g;\n\t\tthis.b[0] = -g;\n\t\tthis.b[1] = -1.0;\n\t\tthis.order = 1;\n\t}\n\t*/\n\t\n\tpublic allPass1stOrderFractionalDelay(delay: number) {\n\t\t// Very similar to allPass1stOrderInvertPhaseAbove, but configured\n\t\t// differently and for a different purpose! Useful for interpolating\n\t\t// between samples in a delay line.\n\t\tconst g: number = (1.0 - delay) / (1.0 + delay);\n\t\tthis.a[1] = g;\n\t\tthis.b[0] = g;\n\t\tthis.b[1] = 1.0;\n\t\tthis.order = 1;\n\t}\n\t\n\tpublic lowPass2ndOrderButterworth(cornerRadiansPerSample: number, peakLinearGain: number): void {\n\t\t// This is Butterworth if peakLinearGain=1/√2 according to:\n\t\t// http://web.archive.org/web/20191213120120/https://crypto.stanford.edu/~blynn/sound/analog.html\n\t\t// An interesting property is that if peakLinearGain=1/16 then the\n\t\t// output resembles a first-order lowpass at a cutoff 4 octaves lower,\n\t\t// although it gets distorted near the nyquist.\n\t\tconst alpha: number = Math.sin(cornerRadiansPerSample) / (2.0 * peakLinearGain);\n\t\tconst cos: number = Math.cos(cornerRadiansPerSample);\n\t\tconst a0: number = 1.0 + alpha;\n\t\tthis.a[1] = -2.0*cos / a0;\n\t\tthis.a[2] = (1 - alpha) / a0;\n\t\tthis.b[2] = this.b[0] = (1 - cos) / (2.0*a0);\n\t\tthis.b[1] = (1 - cos) / a0;\n\t\tthis.order = 2;\n\t}\n\t\n\tpublic lowPass2ndOrderSimplified(cornerRadiansPerSample: number, peakLinearGain: number): void {\n\t\t// This filter is adapted from the one in the SFXR source code:\n\t\t// https://www.drpetter.se/project_sfxr.html\n\t\t// The output is nearly identical to the resonant Butterworth low-pass\n\t\t// above, except it resonates too much when the cutoff appoaches the\n\t\t// nyquist. If the resonance is set to zero and the cutoff is set to\n\t\t// nyquist/3, then the output is the same as the input.\n\t\tconst g: number = 2.0 * Math.sin(cornerRadiansPerSample / 2.0);\n\t\tconst filterResonance: number = 1.0 - 1.0 / (2.0 * peakLinearGain);\n\t\tconst feedback: number = filterResonance + filterResonance / (1.0 - g);\n\t\tthis.a[1] = 2.0*g + (g - 1.0) * g*feedback - 2.0;\n\t\tthis.a[2] = (g - 1.0) * (g - g*feedback - 1.0);\n\t\tthis.b[0] = g*g;\n\t\tthis.b[1] = 0;\n\t\tthis.b[2] = 0;\n\t\tthis.order = 2;\n\t}\n\t\n\tpublic highPass2ndOrderButterworth(cornerRadiansPerSample: number, peakLinearGain: number): void {\n\t\tconst alpha: number = Math.sin(cornerRadiansPerSample) / (2 * peakLinearGain);\n\t\tconst cos: number = Math.cos(cornerRadiansPerSample);\n\t\tconst a0: number = 1.0 + alpha;\n\t\tthis.a[1] = -2.0*cos / a0;\n\t\tthis.a[2] = (1.0 - alpha) / a0;\n\t\tthis.b[2] = this.b[0] = (1.0 + cos) / (2.0*a0);\n\t\tthis.b[1] = -(1.0 + cos) / a0;\n\t\tthis.order = 2;\n\t}\n\t/*\n\tpublic highPass2ndOrderSimplified(cornerRadiansPerSample: number, peakLinearGain: number): void {\n\t\tconst g: number = 2.0 * Math.sin(cornerRadiansPerSample * 0.5);\n\t\tconst filterResonance: number = 1.0 - 1.0 / (2.0 * peakLinearGain);\n\t\tconst feedback: number = filterResonance + filterResonance / (1.0 - g);\n\t\tthis.a[1] = 2.0*g + (g - 1.0) * g*feedback - 2.0;\n\t\tthis.a[2] = (g - 1.0) * (g - g*feedback - 1.0);\n\t\tthis.b[0] = 1.0;\n\t\tthis.b[1] = -2.0;\n\t\tthis.b[2] = 1.0;\n\t\tthis.order = 2;\n\t}\n\t*/\n\tpublic highShelf2ndOrder(cornerRadiansPerSample: number, shelfLinearGain: number, slope: number): void {\n\t\tconst A: number = Math.sqrt(shelfLinearGain);\n\t\tconst c: number = Math.cos(cornerRadiansPerSample);\n\t\tconst Aplus: number = A + 1.0;\n\t\tconst Aminus: number = A - 1.0;\n\t\tconst alpha: number = Math.sin(cornerRadiansPerSample) * 0.5 * Math.sqrt((Aplus / A) * (1.0 / slope - 1.0) + 2.0);\n\t\tconst sqrtA2Alpha: number = 2.0 * Math.sqrt(A) * alpha;\n\t\tconst a0: number =   (Aplus  - Aminus * c + sqrtA2Alpha);\n\t\tthis.a[1] =  2 *     (Aminus - Aplus  * c              ) / a0;\n\t\tthis.a[2] =          (Aplus  - Aminus * c - sqrtA2Alpha) / a0;\n\t\tthis.b[0] =      A * (Aplus  + Aminus * c + sqrtA2Alpha) / a0;\n\t\tthis.b[1] = -2 * A * (Aminus + Aplus  * c              ) / a0;\n\t\tthis.b[2] =      A * (Aplus  + Aminus * c - sqrtA2Alpha) / a0;\n\t\tthis.order = 2;\n\t}\n\n\tpublic peak2ndOrder(cornerRadiansPerSample: number, peakLinearGain: number, bandWidthScale: number): void {\n\t\tconst sqrtGain: number = Math.sqrt(peakLinearGain);\n\t\tconst bandWidth: number = bandWidthScale * cornerRadiansPerSample / (sqrtGain >= 1 ? sqrtGain : 1/sqrtGain);\n\t\t//const bandWidth: number = bandWidthScale * cornerRadiansPerSample / Math.max(sqrtGain, 1.0);\n\t\tconst alpha: number = Math.tan(bandWidth * 0.5);\n\t\tconst a0: number = 1.0 + alpha / sqrtGain;\n\t\tthis.b[0] = (1.0 + alpha * sqrtGain) / a0;\n\t\tthis.b[1] = this.a[1] = -2.0 * Math.cos(cornerRadiansPerSample) / a0;\n\t\tthis.b[2] = (1.0 - alpha * sqrtGain) / a0;\n\t\tthis.a[2] = (1.0 - alpha / sqrtGain) / a0;\n\t\tthis.order = 2;\n\t}\n\t/*\n\t// Create a higher order filter by combining two lower order filters.\n\t// However, making high order filters in this manner results in instability.\n\t// It is recommended to apply the 2nd order filters (biquads) in sequence instead.\n\tpublic combination(filter1: FilterCoefficients, filter2: FilterCoefficients): void {\n\t\tthis.order = filter1.order + filter2.order;\n\t\tfor (let i: number = 0; i <= this.order; i++) {\n\t\t\tthis.a[i] = 0.0;\n\t\t\tthis.b[i] = 0.0;\n\t\t}\n\t\tfor (let i: number = 0; i <= filter1.order; i++) {\n\t\t\tfor (let j: number = 0; j <= filter2.order; j++) {\n\t\t\t\tthis.a[i + j] += filter1.a[i] * filter2.a[j];\n\t\t\t\tthis.b[i + j] += filter1.b[i] * filter2.b[j];\n\t\t\t}\n\t\t}\n\t}\n\t\n\tpublic scaledDifference(other: FilterCoefficients, scale: number): void {\n\t\tif (other.order != this.order) throw new Error();\n\t\tfor (let i: number = 0; i <= this.order; i++) {\n\t\t\tthis.a[i] = (this.a[i] - other.a[i]) * scale;\n\t\t\tthis.b[i] = (this.b[i] - other.b[i]) * scale;\n\t\t}\n\t}\n\t\n\tpublic copy(other: FilterCoefficients): void {\n\t\tthis.order = other.order;\n\t\tfor (let i: number = 0; i <= this.order; i++) {\n\t\t\tthis.a[i] = other.a[i];\n\t\t\tthis.b[i] = other.b[i];\n\t\t}\n\t}\n\t*/\n}\n\nexport class FrequencyResponse {\n\tpublic real: number = 0.0;\n\tpublic imag: number = 0.0;\n\tpublic denom: number = 1.0;\n\t\n\tpublic analyze(filter: FilterCoefficients, radiansPerSample: number): void {\n\t\tthis.analyzeComplex(filter, Math.cos(radiansPerSample), Math.sin(radiansPerSample));\n\t}\n\t\n\tpublic analyzeComplex(filter: FilterCoefficients, real: number, imag: number): void {\n\t\tconst a: number[] = filter.a;\n\t\tconst b: number[] = filter.b;\n\t\tconst realZ1: number = real;\n\t\tconst imagZ1: number = -imag;\n\t\tlet realNum: number = b[0] + b[1] * realZ1;\n\t\tlet imagNum: number = b[1] * imagZ1;\n\t\tlet realDenom: number = 1.0 + a[1] * realZ1;\n\t\tlet imagDenom: number = a[1] * imagZ1;\n\t\tlet realZ: number = realZ1;\n\t\tlet imagZ: number = imagZ1;\n\t\tfor (let i: number = 2; i <= filter.order; i++) {\n\t\t\tconst realTemp: number = realZ * realZ1 - imagZ * imagZ1;\n\t\t\tconst imagTemp: number = realZ * imagZ1 + imagZ * realZ1;\n\t\t\trealZ = realTemp;\n\t\t\timagZ = imagTemp;\n\t\t\trealNum += b[i] * realZ;\n\t\t\timagNum += b[i] * imagZ;\n\t\t\trealDenom += a[i] * realZ;\n\t\t\timagDenom += a[i] * imagZ;\n\t\t}\n\t\tthis.denom = realDenom * realDenom + imagDenom * imagDenom;\n\t\tthis.real = realNum * realDenom + imagNum * imagDenom;\n\t\tthis.imag = imagNum * realDenom - realNum * imagDenom;\n\t}\n\t\n\tpublic magnitude(): number {\n\t\treturn Math.sqrt(this.real * this.real + this.imag * this.imag) / this.denom;\n\t}\n\t\n\tpublic angle(): number {\n\t\treturn Math.atan2(this.imag, this.real);\n\t}\n}\n\nexport class DynamicBiquadFilter {\n\tpublic a1: number = 0.0;\n\tpublic a2: number = 0.0;\n\tpublic b0: number = 1.0;\n\tpublic b1: number = 0.0;\n\tpublic b2: number = 0.0;\n\tpublic a1Delta: number = 0.0;\n\tpublic a2Delta: number = 0.0;\n\tpublic b0Delta: number = 0.0;\n\tpublic b1Delta: number = 0.0;\n\tpublic b2Delta: number = 0.0;\n\tpublic output1: number = 0.0;\n\tpublic output2: number = 0.0;\n\t\n\t// Some filter types are more stable when interpolating between coefficients\n\t// if the \"b\" coefficient interpolation is multiplicative. Don't enable this\n\t// for filter types where the \"b\" coefficients might change sign!\n\tpublic useMultiplicativeInputCoefficients: boolean = false;\n\t\n\tpublic resetOutput(): void {\n\t\tthis.output1 = 0.0;\n\t\tthis.output2 = 0.0;\n\t}\n\t\n\tpublic loadCoefficientsWithGradient(start: FilterCoefficients, end: FilterCoefficients, deltaRate: number, useMultiplicativeInputCoefficients: boolean): void {\n\t\tif (start.order != 2 || end.order != 2) throw new Error();\n\t\tthis.a1 = start.a[1];\n\t\tthis.a2 = start.a[2];\n\t\tthis.b0 = start.b[0];\n\t\tthis.b1 = start.b[1];\n\t\tthis.b2 = start.b[2];\n\t\tthis.a1Delta = (end.a[1] - start.a[1]) * deltaRate;\n\t\tthis.a2Delta = (end.a[2] - start.a[2]) * deltaRate;\n\t\tif (useMultiplicativeInputCoefficients) {\n\t\t\tthis.b0Delta = Math.pow(end.b[0] / start.b[0], deltaRate);\n\t\t\tthis.b1Delta = Math.pow(end.b[1] / start.b[1], deltaRate);\n\t\t\tthis.b2Delta = Math.pow(end.b[2] / start.b[2], deltaRate);\n\t\t} else {\n\t\t\tthis.b0Delta = (end.b[0] - start.b[0]) * deltaRate;\n\t\t\tthis.b1Delta = (end.b[1] - start.b[1]) * deltaRate;\n\t\t\tthis.b2Delta = (end.b[2] - start.b[2]) * deltaRate;\n\t\t}\n\t\tthis.useMultiplicativeInputCoefficients = useMultiplicativeInputCoefficients;\n\t}\n}\n\n// Filters are typically designed as analog filters first, then converted to\n// digital filters using one of two methods: the \"matched z-transform\" or the\n// \"bilinear transform\". The \"bilinear transform\" does a better job of\n// preserving the magnitudes of the frequency response, but warps the frequency\n// range such that the nyquist frequency of the digital filter (π) maps to the\n// infinity frequency of the analog filter. You can use the below functions to\n// manually perform this warping in either direction.\nexport function warpNyquistToInfinity(radians: number): number {\n\treturn 2.0 * Math.tan(radians * 0.5);\n}\nexport function warpInfinityToNyquist(radians: number): number {\n\treturn 2.0 * Math.atan(radians * 0.5);\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nimport { Dictionary, DictionaryArray, FilterType, SustainType, EnvelopeType, InstrumentType, EffectType, EnvelopeComputeIndex, Transition, Unison, Chord, Vibrato, Envelope, AutomationTarget, Config, getDrumWave, drawNoiseSpectrum, getArpeggioPitchIndex, performIntegralOld, getPulseWidthRatio, effectsIncludeTransition, effectsIncludeChord, effectsIncludePitchShift, effectsIncludeDetune, effectsIncludeVibrato, effectsIncludeNoteFilter, effectsIncludeDistortion, effectsIncludeBitcrusher, effectsIncludePanning, effectsIncludeChorus, effectsIncludeEcho, effectsIncludeReverb, OperatorWave } from \"./SynthConfig\";\nimport { EditorConfig } from \"../editor/EditorConfig\";\nimport { scaleElementsByFactor, inverseRealFourierTransform } from \"./FFT\";\nimport { Deque } from \"./Deque\";\nimport { FilterCoefficients, FrequencyResponse, DynamicBiquadFilter, warpInfinityToNyquist } from \"./filtering\";\n\ndeclare global {\n    interface Window {\n        AudioContext: any;\n        webkitAudioContext: any;\n    }\n}\n\nconst epsilon: number = (1.0e-24); // For detecting and avoiding float denormals, which have poor performance.\n\n// For performance debugging:\n//let samplesAccumulated: number = 0;\n//let samplePerformance: number = 0;\n\nexport function clamp(min: number, max: number, val: number): number {\n    max = max - 1;\n    if (val <= max) {\n        if (val >= min) return val;\n        else return min;\n    } else {\n        return max;\n    }\n}\n\nfunction validateRange(min: number, max: number, val: number): number {\n    if (min <= val && val <= max) return val;\n    throw new Error(`Value ${val} not in range [${min}, ${max}]`);\n}\n\nconst enum CharCode {\n    SPACE = 32,\n    HASH = 35,\n    PERCENT = 37,\n    AMPERSAND = 38,\n    PLUS = 43,\n    DASH = 45,\n    DOT = 46,\n    NUM_0 = 48,\n    NUM_1 = 49,\n    NUM_2 = 50,\n    NUM_3 = 51,\n    NUM_4 = 52,\n    NUM_5 = 53,\n    NUM_6 = 54,\n    NUM_7 = 55,\n    NUM_8 = 56,\n    NUM_9 = 57,\n    EQUALS = 61,\n    A = 65,\n    B = 66,\n    C = 67,\n    D = 68,\n    E = 69,\n    F = 70,\n    G = 71,\n    H = 72,\n    I = 73,\n    J = 74,\n    K = 75,\n    L = 76,\n    M = 77,\n    N = 78,\n    O = 79,\n    P = 80,\n    Q = 81,\n    R = 82,\n    S = 83,\n    T = 84,\n    U = 85,\n    V = 86,\n    W = 87,\n    X = 88,\n    Y = 89,\n    Z = 90,\n    UNDERSCORE = 95,\n    a = 97,\n    b = 98,\n    c = 99,\n    d = 100,\n    e = 101,\n    f = 102,\n    g = 103,\n    h = 104,\n    i = 105,\n    j = 106,\n    k = 107,\n    l = 108,\n    m = 109,\n    n = 110,\n    o = 111,\n    p = 112,\n    q = 113,\n    r = 114,\n    s = 115,\n    t = 116,\n    u = 117,\n    v = 118,\n    w = 119,\n    x = 120,\n    y = 121,\n    z = 122,\n    LEFT_CURLY_BRACE = 123,\n    RIGHT_CURLY_BRACE = 125,\n}\n\nconst enum SongTagCode {\n    beatCount           = CharCode.a, // added in BeepBox URL version 2\n\tbars                = CharCode.b, // added in BeepBox URL version 2\n\tvibrato             = CharCode.c, // added in BeepBox URL version 2, DEPRECATED\n\tfadeInOut           = CharCode.d, // added in BeepBox URL version 3 for transition, switched to fadeInOut in 9\n\tloopEnd             = CharCode.e, // added in BeepBox URL version 2\n\teqFilter            = CharCode.f, // added in BeepBox URL version 3\n\tbarCount            = CharCode.g, // added in BeepBox URL version 3\n\tunison              = CharCode.h, // added in BeepBox URL version 2\n\tinstrumentCount     = CharCode.i, // added in BeepBox URL version 3\n\tpatternCount        = CharCode.j, // added in BeepBox URL version 3\n\tkey                 = CharCode.k, // added in BeepBox URL version 2\n\tloopStart           = CharCode.l, // added in BeepBox URL version 2\n\treverb              = CharCode.m, // added in BeepBox URL version 5, DEPRECATED\n\tchannelCount        = CharCode.n, // added in BeepBox URL version 6\n\tchannelOctave       = CharCode.o, // added in BeepBox URL version 3\n\tpatterns            = CharCode.p, // added in BeepBox URL version 2\n\teffects             = CharCode.q, // added in BeepBox URL version 7\n\trhythm              = CharCode.r, // added in BeepBox URL version 2\n\tscale               = CharCode.s, // added in BeepBox URL version 2\n\ttempo               = CharCode.t, // added in BeepBox URL version 2\n\tpreset              = CharCode.u, // added in BeepBox URL version 7\n\tvolume              = CharCode.v, // added in BeepBox URL version 2\n\twave                = CharCode.w, // added in BeepBox URL version 2\n\tsupersaw            = CharCode.x, // added in BeepBox URL version 9\n\tfilterResonance     = CharCode.y, // added in BeepBox URL version 7, DEPRECATED\n\tdrumsetEnvelopes    = CharCode.z, // added in BeepBox URL version 7 for filter envelopes, still used for drumset envelopes\n\talgorithm           = CharCode.A, // added in BeepBox URL version 6\n\tfeedbackAmplitude   = CharCode.B, // added in BeepBox URL version 6\n\tchord               = CharCode.C, // added in BeepBox URL version 7, DEPRECATED\n\tdetune              = CharCode.D, // added in JummBox URL version 3(?) for detune, DEPRECATED\n\tenvelopes           = CharCode.E, // added in BeepBox URL version 6 for FM operator envelopes, repurposed in 9 for general envelopes.\n\tfeedbackType        = CharCode.F, // added in BeepBox URL version 6\n\tarpeggioSpeed       = CharCode.G, // added in JummBox URL version 3 for arpeggioSpeed, DEPRECATED\n\tharmonics           = CharCode.H, // added in BeepBox URL version 7\n\tstringSustain       = CharCode.I, // added in BeepBox URL version 9\n//\t                    = CharCode.J,\n//\t                    = CharCode.K,\n\tpan                 = CharCode.L, // added between 8 and 9, DEPRECATED\n\tcustomChipWave      = CharCode.M, // added in JummBox URL version 1(?) for customChipWave\n\tsongTitle           = CharCode.N, // added in JummBox URL version 1(?) for songTitle\n\tlimiterSettings     = CharCode.O, // added in JummBox URL version 3(?) for limiterSettings\n\toperatorAmplitudes  = CharCode.P, // added in BeepBox URL version 6\n\toperatorFrequencies = CharCode.Q, // added in BeepBox URL version 6\n\toperatorWaves       = CharCode.R, // added in JummBox URL version 4 for operatorWaves\n\tspectrum            = CharCode.S, // added in BeepBox URL version 7\n\tstartInstrument     = CharCode.T, // added in BeepBox URL version 6\n\tchannelNames        = CharCode.U, // added in JummBox URL version 4(?) for channelNames\n\tfeedbackEnvelope    = CharCode.V, // added in BeepBox URL version 6, DEPRECATED\n\tpulseWidth          = CharCode.W, // added in BeepBox URL version 7\n\taliases             = CharCode.X, // added in JummBox URL version 4 for aliases, DEPRECATED\n//\t                    = CharCode.Y,\n//\t                    = CharCode.Z,\n//\t                    = CharCode.NUM_0,\n//\t                    = CharCode.NUM_1,\n//\t                    = CharCode.NUM_2,\n//\t                    = CharCode.NUM_3,\n//\t                    = CharCode.NUM_4,\n//\t                    = CharCode.NUM_5,\n//\t                    = CharCode.NUM_6,\n//\t                    = CharCode.NUM_7,\n//\t                    = CharCode.NUM_8,\n//\t                    = CharCode.NUM_9,\n//\t                    = CharCode.DASH,\n//\t                    = CharCode.UNDERSCORE,\n\n}\n\nconst base64IntToCharCode: ReadonlyArray<number> = [48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 45, 95];\nconst base64CharCodeToInt: ReadonlyArray<number> = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 62, 62, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 0, 0, 0, 0, 0, 0, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 0, 0, 0, 0, 63, 0, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 0, 0, 0, 0, 0]; // 62 could be represented by either \"-\" or \".\" for historical reasons. New songs should use \"-\".\n\nclass BitFieldReader {\n    private _bits: number[] = [];\n    private _readIndex: number = 0;\n\n    constructor(source: string, startIndex: number, stopIndex: number) {\n        for (let i: number = startIndex; i < stopIndex; i++) {\n            const value: number = base64CharCodeToInt[source.charCodeAt(i)];\n            this._bits.push((value >> 5) & 0x1);\n            this._bits.push((value >> 4) & 0x1);\n            this._bits.push((value >> 3) & 0x1);\n            this._bits.push((value >> 2) & 0x1);\n            this._bits.push((value >> 1) & 0x1);\n            this._bits.push(value & 0x1);\n        }\n    }\n\n    public read(bitCount: number): number {\n        let result: number = 0;\n        while (bitCount > 0) {\n            result = result << 1;\n            result += this._bits[this._readIndex++];\n            bitCount--;\n        }\n        return result;\n    }\n\n    public readLongTail(minValue: number, minBits: number): number {\n        let result: number = minValue;\n        let numBits: number = minBits;\n        while (this._bits[this._readIndex++]) {\n            result += 1 << numBits;\n            numBits++;\n        }\n        while (numBits > 0) {\n            numBits--;\n            if (this._bits[this._readIndex++]) {\n                result += 1 << numBits;\n            }\n        }\n        return result;\n    }\n\n    public readPartDuration(): number {\n        return this.readLongTail(1, 3);\n    }\n\n    public readLegacyPartDuration(): number {\n        return this.readLongTail(1, 2);\n    }\n\n    public readPinCount(): number {\n        return this.readLongTail(1, 0);\n    }\n\n    public readPitchInterval(): number {\n        if (this.read(1)) {\n            return -this.readLongTail(1, 3);\n        } else {\n            return this.readLongTail(1, 3);\n        }\n    }\n}\n\nclass BitFieldWriter {\n    private _index: number = 0;\n    private _bits: number[] = [];\n\n    public clear() {\n        this._index = 0;\n    }\n\n    public write(bitCount: number, value: number): void {\n        bitCount--;\n        while (bitCount >= 0) {\n            this._bits[this._index++] = (value >>> bitCount) & 1;\n            bitCount--;\n        }\n    }\n\n    public writeLongTail(minValue: number, minBits: number, value: number): void {\n        if (value < minValue) throw new Error(\"value out of bounds\");\n        value -= minValue;\n        let numBits: number = minBits;\n        while (value >= (1 << numBits)) {\n            this._bits[this._index++] = 1;\n            value -= 1 << numBits;\n            numBits++;\n        }\n        this._bits[this._index++] = 0;\n        while (numBits > 0) {\n            numBits--;\n            this._bits[this._index++] = (value >>> numBits) & 1;\n        }\n    }\n\n    public writePartDuration(value: number): void {\n        this.writeLongTail(1, 3, value);\n    }\n\n    public writePinCount(value: number): void {\n        this.writeLongTail(1, 0, value);\n    }\n\n    public writePitchInterval(value: number): void {\n        if (value < 0) {\n            this.write(1, 1); // sign\n            this.writeLongTail(1, 3, -value);\n        } else {\n            this.write(1, 0); // sign\n            this.writeLongTail(1, 3, value);\n        }\n    }\n\n    public concat(other: BitFieldWriter): void {\n        for (let i: number = 0; i < other._index; i++) {\n            this._bits[this._index++] = other._bits[i];\n        }\n    }\n\n    public encodeBase64(buffer: number[]): number[] {\n\n        for (let i: number = 0; i < this._index; i += 6) {\n            const value: number = (this._bits[i] << 5) | (this._bits[i + 1] << 4) | (this._bits[i + 2] << 3) | (this._bits[i + 3] << 2) | (this._bits[i + 4] << 1) | this._bits[i + 5];\n            buffer.push(base64IntToCharCode[value]);\n        }\n        return buffer;\n    }\n\n    public lengthBase64(): number {\n        return Math.ceil(this._index / 6);\n    }\n}\n\nexport interface NotePin {\n    interval: number;\n    time: number;\n    size: number;\n}\n\nexport function makeNotePin(interval: number, time: number, size: number): NotePin {\n    return { interval: interval, time: time, size: size };\n}\n\nexport class Note {\n    public pitches: number[];\n    public pins: NotePin[];\n    public start: number;\n    public end: number;\n    public continuesLastPattern: boolean;\n\n    public constructor(pitch: number, start: number, end: number, size: number, fadeout: boolean = false) {\n        this.pitches = [pitch];\n        this.pins = [makeNotePin(0, 0, size), makeNotePin(0, end - start, fadeout ? 0 : size)];\n        this.start = start;\n        this.end = end;\n        this.continuesLastPattern = false;\n    }\n\n    public pickMainInterval(): number {\n        let longestFlatIntervalDuration: number = 0;\n        let mainInterval: number = 0;\n        for (let pinIndex: number = 1; pinIndex < this.pins.length; pinIndex++) {\n            const pinA: NotePin = this.pins[pinIndex - 1];\n            const pinB: NotePin = this.pins[pinIndex];\n            if (pinA.interval == pinB.interval) {\n                const duration: number = pinB.time - pinA.time;\n                if (longestFlatIntervalDuration < duration) {\n                    longestFlatIntervalDuration = duration;\n                    mainInterval = pinA.interval;\n                }\n            }\n        }\n        if (longestFlatIntervalDuration == 0) {\n            let loudestSize: number = 0;\n            for (let pinIndex: number = 0; pinIndex < this.pins.length; pinIndex++) {\n                const pin: NotePin = this.pins[pinIndex];\n                if (loudestSize < pin.size) {\n                    loudestSize = pin.size;\n                    mainInterval = pin.interval;\n                }\n            }\n        }\n        return mainInterval;\n    }\n\n    public clone(): Note {\n        const newNote: Note = new Note(-1, this.start, this.end, 3);\n        newNote.pitches = this.pitches.concat();\n        newNote.pins = [];\n        for (const pin of this.pins) {\n            newNote.pins.push(makeNotePin(pin.interval, pin.time, pin.size));\n        }\n        newNote.continuesLastPattern = this.continuesLastPattern;\n        return newNote;\n    }\n\n    public getEndPinIndex(part: number): number {\n        let endPinIndex: number;\n        for (endPinIndex = 1; endPinIndex < this.pins.length - 1; endPinIndex++) {\n            if (this.pins[endPinIndex].time + this.start > part) break;\n        }\n        return endPinIndex;\n    }\n}\n\nexport class Pattern {\n    public notes: Note[] = [];\n    public readonly instruments: number[] = [0];\n\n    public cloneNotes(): Note[] {\n        const result: Note[] = [];\n        for (const note of this.notes) {\n            result.push(note.clone());\n        }\n        return result;\n    }\n\n    public reset(): void {\n        this.notes.length = 0;\n        this.instruments[0] = 0;\n        this.instruments.length = 1;\n    }\n\n    public toJsonObject(song: Song, channel: Channel, isModChannel: boolean): any {\n        const noteArray: Object[] = [];\n        for (const note of this.notes) {\n            // Only one ins per pattern is enforced in mod channels.\n            let instrument: Instrument = channel.instruments[this.instruments[0]];\n            let mod: number = Math.max(0, Config.modCount - note.pitches[0] - 1);\n            let volumeCap: number = song.getVolumeCapForSetting(isModChannel, instrument.modulators[mod], instrument.modFilterTypes[mod]);\n            const pointArray: Object[] = [];\n            for (const pin of note.pins) {\n                let useVol: number = isModChannel ? Math.round(pin.size) : Math.round(pin.size * 100 / volumeCap);\n                pointArray.push({\n                    \"tick\": (pin.time + note.start) * Config.rhythms[song.rhythm].stepsPerBeat / Config.partsPerBeat,\n                    \"pitchBend\": pin.interval,\n                    \"volume\": useVol,\n                    \"forMod\": isModChannel,\n                });\n            }\n\n            const noteObject: any = {\n                \"pitches\": note.pitches,\n                \"points\": pointArray,\n            };\n            if (note.start == 0) {\n                noteObject[\"continuesLastPattern\"] = note.continuesLastPattern;\n            }\n            noteArray.push(noteObject);\n        }\n\n        const patternObject: any = { \"notes\": noteArray };\n        if (song.patternInstruments) {\n            patternObject[\"instruments\"] = this.instruments.map(i => i + 1);\n        }\n        return patternObject;\n    }\n\n    public fromJsonObject(patternObject: any, song: Song, channel: Channel, importedPartsPerBeat: number, isNoiseChannel: boolean, isModChannel: boolean): void {\n        if (song.patternInstruments) {\n            if (Array.isArray(patternObject[\"instruments\"])) {\n                const instruments: any[] = patternObject[\"instruments\"];\n                const instrumentCount: number = clamp(Config.instrumentCountMin, song.getMaxInstrumentsPerPatternForChannel(channel) + 1, instruments.length);\n                for (let j: number = 0; j < instrumentCount; j++) {\n                    this.instruments[j] = clamp(0, channel.instruments.length, (instruments[j] | 0) - 1);\n                }\n                this.instruments.length = instrumentCount;\n            } else {\n                this.instruments[0] = clamp(0, channel.instruments.length, (patternObject[\"instrument\"] | 0) - 1);\n                this.instruments.length = 1;\n            }\n        }\n\n        if (patternObject[\"notes\"] && patternObject[\"notes\"].length > 0) {\n            const maxNoteCount: number = Math.min(song.beatsPerBar * Config.partsPerBeat * (isModChannel ? Config.modCount : 1), patternObject[\"notes\"].length >>> 0);\n\n            // TODO: Consider supporting notes specified in any timing order, sorting them and truncating as necessary.\n            //let tickClock: number = 0;\n            for (let j: number = 0; j < patternObject[\"notes\"].length; j++) {\n                if (j >= maxNoteCount) break;\n\n                const noteObject = patternObject[\"notes\"][j];\n                if (!noteObject || !noteObject[\"pitches\"] || !(noteObject[\"pitches\"].length >= 1) || !noteObject[\"points\"] || !(noteObject[\"points\"].length >= 2)) {\n                    continue;\n                }\n\n                const note: Note = new Note(0, 0, 0, 0);\n                note.pitches = [];\n                note.pins = [];\n\n                for (let k: number = 0; k < noteObject[\"pitches\"].length; k++) {\n                    const pitch: number = noteObject[\"pitches\"][k] | 0;\n                    if (note.pitches.indexOf(pitch) != -1) continue;\n                    note.pitches.push(pitch);\n                    if (note.pitches.length >= Config.maxChordSize) break;\n                }\n                if (note.pitches.length < 1) continue;\n\n                //let noteClock: number = tickClock;\n                let startInterval: number = 0;\n                for (let k: number = 0; k < noteObject[\"points\"].length; k++) {\n                    const pointObject: any = noteObject[\"points\"][k];\n                    if (pointObject == undefined || pointObject[\"tick\"] == undefined) continue;\n                    const interval: number = (pointObject[\"pitchBend\"] == undefined) ? 0 : (pointObject[\"pitchBend\"] | 0);\n\n                    const time: number = Math.round((+pointObject[\"tick\"]) * Config.partsPerBeat / importedPartsPerBeat);\n\n                    let instrument: Instrument = channel.instruments[this.instruments[0]];\n                    let mod: number = Math.max(0, Config.modCount - note.pitches[0] - 1);\n\n                    // Only one instrument per pattern allowed in mod channels.\n                    let volumeCap: number = song.getVolumeCapForSetting(isModChannel, instrument.modulators[mod], instrument.modFilterTypes[mod]);\n\n                    // The strange volume formula used for notes is not needed for mods. Some rounding errors were possible.\n                    // A \"forMod\" signifier was added to new JSON export to detect when the higher precision export was used in a file.\n                    let size: number;\n                    if (pointObject[\"volume\"] == undefined) {\n                        size = volumeCap;\n                    } else if (pointObject[\"forMod\"] == undefined) {\n                        size = Math.max(0, Math.min(volumeCap, Math.round((pointObject[\"volume\"] | 0) * volumeCap / 100)));\n                    }\n                    else {\n                        size = ((pointObject[\"forMod\"] | 0) > 0) ? Math.round(pointObject[\"volume\"] | 0) : Math.max(0, Math.min(volumeCap, Math.round((pointObject[\"volume\"] | 0) * volumeCap / 100)));\n                    }\n\n                    if (time > song.beatsPerBar * Config.partsPerBeat) continue;\n                    if (note.pins.length == 0) {\n                        //if (time < noteClock) continue;\n                        note.start = time;\n                        startInterval = interval;\n                    } else {\n                        //if (time <= noteClock) continue;\n                    }\n                    //noteClock = time;\n\n                    note.pins.push(makeNotePin(interval - startInterval, time - note.start, size));\n                }\n                if (note.pins.length < 2) continue;\n\n                note.end = note.pins[note.pins.length - 1].time + note.start;\n\n                const maxPitch: number = isNoiseChannel ? Config.drumCount - 1 : Config.maxPitch;\n                let lowestPitch: number = maxPitch;\n                let highestPitch: number = 0;\n                for (let k: number = 0; k < note.pitches.length; k++) {\n                    note.pitches[k] += startInterval;\n                    if (note.pitches[k] < 0 || note.pitches[k] > maxPitch) {\n                        note.pitches.splice(k, 1);\n                        k--;\n                    }\n                    if (note.pitches[k] < lowestPitch) lowestPitch = note.pitches[k];\n                    if (note.pitches[k] > highestPitch) highestPitch = note.pitches[k];\n                }\n                if (note.pitches.length < 1) continue;\n\n                for (let k: number = 0; k < note.pins.length; k++) {\n                    const pin: NotePin = note.pins[k];\n                    if (pin.interval + lowestPitch < 0) pin.interval = -lowestPitch;\n                    if (pin.interval + highestPitch > maxPitch) pin.interval = maxPitch - highestPitch;\n                    if (k >= 2) {\n                        if (pin.interval == note.pins[k - 1].interval &&\n                            pin.interval == note.pins[k - 2].interval &&\n                            pin.size == note.pins[k - 1].size &&\n                            pin.size == note.pins[k - 2].size) {\n                            note.pins.splice(k - 1, 1);\n                            k--;\n                        }\n                    }\n                }\n\n                if (note.start == 0) {\n                    note.continuesLastPattern = (noteObject[\"continuesLastPattern\"] === true);\n                } else {\n                    note.continuesLastPattern = false;\n                }\n\n                this.notes.push(note);\n            }\n        }\n    }\n}\n\nexport class Operator {\n    public frequency: number = 0;\n    public amplitude: number = 0;\n    public waveform: number = 0;\n    public pulseWidth: number = 0.5;\n\n    constructor(index: number) {\n        this.reset(index);\n    }\n\n    public reset(index: number): void {\n        this.frequency = 0;\n        this.amplitude = (index <= 1) ? Config.operatorAmplitudeMax : 0;\n        this.waveform = 0;\n        this.pulseWidth = 5;\n    }\n\n    public copy(other: Operator): void {\n        this.frequency = other.frequency;\n        this.amplitude = other.amplitude;\n        this.waveform = other.waveform;\n        this.pulseWidth = other.pulseWidth;\n    }\n}\n\nexport class SpectrumWave {\n    public spectrum: number[] = [];\n    public hash: number = -1;\n\n    constructor(isNoiseChannel: boolean) {\n        this.reset(isNoiseChannel);\n    }\n\n    public reset(isNoiseChannel: boolean): void {\n        for (let i: number = 0; i < Config.spectrumControlPoints; i++) {\n            if (isNoiseChannel) {\n                this.spectrum[i] = Math.round(Config.spectrumMax * (1 / Math.sqrt(1 + i / 3)));\n            } else {\n                const isHarmonic: boolean = i == 0 || i == 7 || i == 11 || i == 14 || i == 16 || i == 18 || i == 21 || i == 23 || i >= 25;\n                this.spectrum[i] = isHarmonic ? Math.max(0, Math.round(Config.spectrumMax * (1 - i / 30))) : 0;\n            }\n        }\n        this.markCustomWaveDirty();\n    }\n\n    public markCustomWaveDirty(): void {\n        const hashMult: number = Synth.fittingPowerOfTwo(Config.spectrumMax + 2) - 1;\n        let hash: number = 0;\n        for (const point of this.spectrum) hash = ((hash * hashMult) + point) >>> 0;\n        this.hash = hash;\n    }\n}\n\nclass SpectrumWaveState {\n    public wave: Float32Array | null = null;\n    private _hash: number = -1;\n\n    public getCustomWave(settings: SpectrumWave, lowestOctave: number): Float32Array {\n        if (this._hash == settings.hash) return this.wave!;\n        this._hash = settings.hash;\n\n        const waveLength: number = Config.spectrumNoiseLength;\n        if (this.wave == null || this.wave.length != waveLength + 1) {\n            this.wave = new Float32Array(waveLength + 1);\n        }\n        const wave: Float32Array = this.wave;\n\n        for (let i: number = 0; i < waveLength; i++) {\n            wave[i] = 0;\n        }\n\n        const highestOctave: number = 14;\n        const falloffRatio: number = 0.25;\n        // Nudge the 2/7 and 4/7 control points so that they form harmonic intervals.\n        const pitchTweak: number[] = [0, 1 / 7, Math.log2(5 / 4), 3 / 7, Math.log2(3 / 2), 5 / 7, 6 / 7];\n        function controlPointToOctave(point: number): number {\n            return lowestOctave + Math.floor(point / Config.spectrumControlPointsPerOctave) + pitchTweak[(point + Config.spectrumControlPointsPerOctave) % Config.spectrumControlPointsPerOctave];\n        }\n\n        let combinedAmplitude: number = 1;\n        for (let i: number = 0; i < Config.spectrumControlPoints + 1; i++) {\n            const value1: number = (i <= 0) ? 0 : settings.spectrum[i - 1];\n            const value2: number = (i >= Config.spectrumControlPoints) ? settings.spectrum[Config.spectrumControlPoints - 1] : settings.spectrum[i];\n            const octave1: number = controlPointToOctave(i - 1);\n            let octave2: number = controlPointToOctave(i);\n            if (i >= Config.spectrumControlPoints) octave2 = highestOctave + (octave2 - highestOctave) * falloffRatio;\n            if (value1 == 0 && value2 == 0) continue;\n\n            combinedAmplitude += 0.02 * drawNoiseSpectrum(wave, waveLength, octave1, octave2, value1 / Config.spectrumMax, value2 / Config.spectrumMax, -0.5);\n        }\n        if (settings.spectrum[Config.spectrumControlPoints - 1] > 0) {\n            combinedAmplitude += 0.02 * drawNoiseSpectrum(wave, waveLength, highestOctave + (controlPointToOctave(Config.spectrumControlPoints) - highestOctave) * falloffRatio, highestOctave, settings.spectrum[Config.spectrumControlPoints - 1] / Config.spectrumMax, 0, -0.5);\n        }\n\n        inverseRealFourierTransform(wave, waveLength);\n        scaleElementsByFactor(wave, 5.0 / (Math.sqrt(waveLength) * Math.pow(combinedAmplitude, 0.75)));\n\n        // Duplicate the first sample at the end for easier wrap-around interpolation.\n        wave[waveLength] = wave[0];\n\n        return wave;\n    }\n}\n\nexport class HarmonicsWave {\n    public harmonics: number[] = [];\n    public hash: number = -1;\n\n    constructor() {\n        this.reset();\n    }\n\n    public reset(): void {\n        for (let i: number = 0; i < Config.harmonicsControlPoints; i++) {\n            this.harmonics[i] = 0;\n        }\n        this.harmonics[0] = Config.harmonicsMax;\n        this.harmonics[3] = Config.harmonicsMax;\n        this.harmonics[6] = Config.harmonicsMax;\n        this.markCustomWaveDirty();\n    }\n\n    public markCustomWaveDirty(): void {\n        const hashMult: number = Synth.fittingPowerOfTwo(Config.harmonicsMax + 2) - 1;\n        let hash: number = 0;\n        for (const point of this.harmonics) hash = ((hash * hashMult) + point) >>> 0;\n        this.hash = hash;\n    }\n}\n\nclass HarmonicsWaveState {\n    public wave: Float32Array | null = null;\n    private _hash: number = -1;\n    private _generatedForType: InstrumentType;\n\n    public getCustomWave(settings: HarmonicsWave, instrumentType: InstrumentType): Float32Array {\n        if (this._hash == settings.hash && this._generatedForType == instrumentType) return this.wave!;\n        this._hash = settings.hash;\n        this._generatedForType = instrumentType;\n\n        const harmonicsRendered: number = (instrumentType == InstrumentType.pickedString) ? Config.harmonicsRenderedForPickedString : Config.harmonicsRendered;\n\n        const waveLength: number = Config.harmonicsWavelength;\n        const retroWave: Float32Array = getDrumWave(0, null, null);\n\n        if (this.wave == null || this.wave.length != waveLength + 1) {\n            this.wave = new Float32Array(waveLength + 1);\n        }\n        const wave: Float32Array = this.wave;\n\n        for (let i: number = 0; i < waveLength; i++) {\n            wave[i] = 0;\n        }\n\n        const overallSlope: number = -0.25;\n        let combinedControlPointAmplitude: number = 1;\n\n        for (let harmonicIndex: number = 0; harmonicIndex < harmonicsRendered; harmonicIndex++) {\n            const harmonicFreq: number = harmonicIndex + 1;\n            let controlValue: number = harmonicIndex < Config.harmonicsControlPoints ? settings.harmonics[harmonicIndex] : settings.harmonics[Config.harmonicsControlPoints - 1];\n            if (harmonicIndex >= Config.harmonicsControlPoints) {\n                controlValue *= 1 - (harmonicIndex - Config.harmonicsControlPoints) / (harmonicsRendered - Config.harmonicsControlPoints);\n            }\n            const normalizedValue: number = controlValue / Config.harmonicsMax;\n            let amplitude: number = Math.pow(2, controlValue - Config.harmonicsMax + 1) * Math.sqrt(normalizedValue);\n            if (harmonicIndex < Config.harmonicsControlPoints) {\n                combinedControlPointAmplitude += amplitude;\n            }\n            amplitude *= Math.pow(harmonicFreq, overallSlope);\n\n            // Multiply all the sine wave amplitudes by 1 or -1 based on the LFSR\n            // retro wave (effectively random) to avoid egregiously tall spikes.\n            amplitude *= retroWave[harmonicIndex + 589];\n\n            wave[waveLength - harmonicFreq] = amplitude;\n        }\n\n        inverseRealFourierTransform(wave, waveLength);\n\n        // Limit the maximum wave amplitude.\n        const mult: number = 1 / Math.pow(combinedControlPointAmplitude, 0.7);\n        for (let i: number = 0; i < wave.length; i++) wave[i] *= mult;\n\n        performIntegralOld(wave);\n\n        // The first sample should be zero, and we'll duplicate it at the end for easier interpolation.\n        wave[waveLength] = wave[0];\n\n        return wave;\n    }\n}\n\nexport class FilterControlPoint {\n    public freq: number = 0;\n    public gain: number = Config.filterGainCenter;\n    public type: FilterType = FilterType.peak;\n\n    public set(freqSetting: number, gainSetting: number): void {\n        this.freq = freqSetting;\n        this.gain = gainSetting;\n    }\n\n    public getHz(): number {\n        return FilterControlPoint.getHzFromSettingValue(this.freq);\n    }\n\n    public static getHzFromSettingValue(value: number): number {\n        return Config.filterFreqReferenceHz * Math.pow(2.0, (value - Config.filterFreqReferenceSetting) * Config.filterFreqStep);\n    }\n    public static getSettingValueFromHz(hz: number): number {\n        return Math.log2(hz / Config.filterFreqReferenceHz) / Config.filterFreqStep + Config.filterFreqReferenceSetting;\n    }\n    public static getRoundedSettingValueFromHz(hz: number): number {\n        return Math.max(0, Math.min(Config.filterFreqRange - 1, Math.round(FilterControlPoint.getSettingValueFromHz(hz))));\n    }\n\n    public getLinearGain(peakMult: number = 1.0): number {\n        const power: number = (this.gain - Config.filterGainCenter) * Config.filterGainStep;\n        const neutral: number = (this.type == FilterType.peak) ? 0.0 : -0.5;\n        const interpolatedPower: number = neutral + (power - neutral) * peakMult;\n        return Math.pow(2.0, interpolatedPower);\n    }\n    public static getRoundedSettingValueFromLinearGain(linearGain: number): number {\n        return Math.max(0, Math.min(Config.filterGainRange - 1, Math.round(Math.log2(linearGain) / Config.filterGainStep + Config.filterGainCenter)));\n    }\n\n    public toCoefficients(filter: FilterCoefficients, sampleRate: number, freqMult: number = 1.0, peakMult: number = 1.0): void {\n        const cornerRadiansPerSample: number = 2.0 * Math.PI * Math.max(Config.filterFreqMinHz, Math.min(Config.filterFreqMaxHz, freqMult * this.getHz())) / sampleRate;\n        const linearGain: number = this.getLinearGain(peakMult);\n        switch (this.type) {\n            case FilterType.lowPass:\n                filter.lowPass2ndOrderButterworth(cornerRadiansPerSample, linearGain);\n                break;\n            case FilterType.highPass:\n                filter.highPass2ndOrderButterworth(cornerRadiansPerSample, linearGain);\n                break;\n            case FilterType.peak:\n                filter.peak2ndOrder(cornerRadiansPerSample, linearGain, 1.0);\n                break;\n            default:\n                throw new Error();\n        }\n    }\n\n    public getVolumeCompensationMult(): number {\n        const octave: number = (this.freq - Config.filterFreqReferenceSetting) * Config.filterFreqStep;\n        const gainPow: number = (this.gain - Config.filterGainCenter) * Config.filterGainStep;\n        switch (this.type) {\n            case FilterType.lowPass:\n                const freqRelativeTo8khz: number = Math.pow(2.0, octave) * Config.filterFreqReferenceHz / 8000.0;\n                // Reverse the frequency warping from importing legacy simplified filters to imitate how the legacy filter cutoff setting affected volume.\n                const warpedFreq: number = (Math.sqrt(1.0 + 4.0 * freqRelativeTo8khz) - 1.0) / 2.0;\n                const warpedOctave: number = Math.log2(warpedFreq);\n                return Math.pow(0.5, 0.2 * Math.max(0.0, gainPow + 1.0) + Math.min(0.0, Math.max(-3.0, 0.595 * warpedOctave + 0.35 * Math.min(0.0, gainPow + 1.0))));\n            case FilterType.highPass:\n                return Math.pow(0.5, 0.125 * Math.max(0.0, gainPow + 1.0) + Math.min(0.0, 0.3 * (-octave - Math.log2(Config.filterFreqReferenceHz / 125.0)) + 0.2 * Math.min(0.0, gainPow + 1.0)));\n            case FilterType.peak:\n                const distanceFromCenter: number = octave + Math.log2(Config.filterFreqReferenceHz / 2000.0);\n                const freqLoudness: number = Math.pow(1.0 / (1.0 + Math.pow(distanceFromCenter / 3.0, 2.0)), 2.0);\n                return Math.pow(0.5, 0.125 * Math.max(0.0, gainPow) + 0.1 * freqLoudness * Math.min(0.0, gainPow));\n            default:\n                throw new Error();\n        }\n    }\n}\n\nexport class FilterSettings {\n    public readonly controlPoints: FilterControlPoint[] = [];\n    public controlPointCount: number = 0;\n\n    constructor() {\n        this.reset();\n    }\n\n    reset(): void {\n        this.controlPointCount = 0;\n    }\n\n    addPoint(type: FilterType, freqSetting: number, gainSetting: number): void {\n        let controlPoint: FilterControlPoint;\n        if (this.controlPoints.length <= this.controlPointCount) {\n            controlPoint = new FilterControlPoint();\n            this.controlPoints[this.controlPointCount] = controlPoint;\n        } else {\n            controlPoint = this.controlPoints[this.controlPointCount];\n        }\n        this.controlPointCount++;\n        controlPoint.type = type;\n        controlPoint.set(freqSetting, gainSetting);\n    }\n\n    public toJsonObject(): Object {\n        const filterArray: any[] = [];\n        for (let i: number = 0; i < this.controlPointCount; i++) {\n            const point: FilterControlPoint = this.controlPoints[i];\n            filterArray.push({\n                \"type\": Config.filterTypeNames[point.type],\n                \"cutoffHz\": Math.round(point.getHz() * 100) / 100,\n                \"linearGain\": Math.round(point.getLinearGain() * 10000) / 10000,\n            });\n        }\n        return filterArray;\n    }\n\n    public fromJsonObject(filterObject: any): void {\n        this.controlPoints.length = 0;\n        if (filterObject) {\n            for (const pointObject of filterObject) {\n                const point: FilterControlPoint = new FilterControlPoint();\n                point.type = Config.filterTypeNames.indexOf(pointObject[\"type\"]);\n                if (<any>point.type == -1) point.type = FilterType.peak;\n                if (pointObject[\"cutoffHz\"] != undefined) {\n                    point.freq = FilterControlPoint.getRoundedSettingValueFromHz(pointObject[\"cutoffHz\"]);\n                } else {\n                    point.freq = 0;\n                }\n                if (pointObject[\"linearGain\"] != undefined) {\n                    point.gain = FilterControlPoint.getRoundedSettingValueFromLinearGain(pointObject[\"linearGain\"]);\n                } else {\n                    point.gain = Config.filterGainCenter;\n                }\n                this.controlPoints.push(point);\n            }\n        }\n        this.controlPointCount = this.controlPoints.length;\n    }\n\n    // Returns true if all filter control points match in number and type (but not freq/gain)\n    public static filtersCanMorph(filterA: FilterSettings, filterB: FilterSettings): boolean {\n        if (filterA.controlPointCount != filterB.controlPointCount)\n            return false;\n        for (let i: number = 0; i < filterA.controlPointCount; i++) {\n            if (filterA.controlPoints[i].type != filterB.controlPoints[i].type)\n                return false;\n        }\n        return true;\n    }\n\n    // Interpolate two FilterSettings, where pos=0 is filterA and pos=1 is filterB\n    public static lerpFilters(filterA: FilterSettings, filterB: FilterSettings, pos: number): FilterSettings {\n\n        let lerpedFilter: FilterSettings = new FilterSettings();\n\n        // One setting or another is null, return the other.\n        if (filterA == null) {\n            return filterA;\n        }\n        if (filterB == null) {\n            return filterB;\n        }\n\n        pos = Math.max(0, Math.min(1, pos));\n\n        // Filter control points match in number and type\n        if (this.filtersCanMorph(filterA, filterB)) {\n            for (let i: number = 0; i < filterA.controlPointCount; i++) {\n                lerpedFilter.controlPoints[i] = new FilterControlPoint();\n                lerpedFilter.controlPoints[i].type = filterA.controlPoints[i].type;\n                lerpedFilter.controlPoints[i].freq = filterA.controlPoints[i].freq + (filterB.controlPoints[i].freq - filterA.controlPoints[i].freq) * pos;\n                lerpedFilter.controlPoints[i].gain = filterA.controlPoints[i].gain + (filterB.controlPoints[i].gain - filterA.controlPoints[i].gain) * pos;\n            }\n\n            lerpedFilter.controlPointCount = filterA.controlPointCount;\n\n            return lerpedFilter;\n        }\n        else {\n            // Not allowing morph of unmatching filters for now. It's a hornet's nest of problems, and I had it implemented and mostly working and it didn't sound very interesting since the shape becomes \"mushy\" in between\n            return (pos >= 1) ? filterB : filterA;\n        }\n    }\n\n    public convertLegacySettings(legacyCutoffSetting: number, legacyResonanceSetting: number, legacyEnv: Envelope): void {\n        this.reset();\n\n        const legacyFilterCutoffMaxHz: number = 8000; // This was carefully calculated to correspond to no change in response when filtering at 48000 samples per second... when using the legacy simplified low-pass filter.\n        const legacyFilterMax: number = 0.95;\n        const legacyFilterMaxRadians: number = Math.asin(legacyFilterMax / 2.0) * 2.0;\n        const legacyFilterMaxResonance: number = 0.95;\n        const legacyFilterCutoffRange: number = 11;\n        const legacyFilterResonanceRange: number = 8;\n\n        const resonant: boolean = (legacyResonanceSetting > 1);\n        const firstOrder: boolean = (legacyResonanceSetting == 0);\n        const cutoffAtMax: boolean = (legacyCutoffSetting == legacyFilterCutoffRange - 1);\n        const envDecays: boolean = (legacyEnv.type == EnvelopeType.flare || legacyEnv.type == EnvelopeType.twang || legacyEnv.type == EnvelopeType.decay || legacyEnv.type == EnvelopeType.noteSize);\n\n        const standardSampleRate: number = 48000;\n        const legacyHz: number = legacyFilterCutoffMaxHz * Math.pow(2.0, (legacyCutoffSetting - (legacyFilterCutoffRange - 1)) * 0.5);\n        const legacyRadians: number = Math.min(legacyFilterMaxRadians, 2 * Math.PI * legacyHz / standardSampleRate);\n\n        if (legacyEnv.type == EnvelopeType.none && !resonant && cutoffAtMax) {\n            // The response is flat and there's no envelopes, so don't even bother adding any control points.\n        } else if (firstOrder) {\n            // In general, a 1st order lowpass can be approximated by a 2nd order lowpass\n            // with a cutoff ~4 octaves higher (*16) and a gain of 1/16.\n            // However, BeepBox's original lowpass filters behaved oddly as they\n            // approach the nyquist frequency, so I've devised this curved conversion\n            // to guess at a perceptually appropriate new cutoff frequency and gain.\n            const extraOctaves: number = 3.5;\n            const targetRadians: number = legacyRadians * Math.pow(2.0, extraOctaves);\n            const curvedRadians: number = targetRadians / (1.0 + targetRadians / Math.PI);\n            const curvedHz: number = standardSampleRate * curvedRadians / (2.0 * Math.PI)\n            const freqSetting: number = FilterControlPoint.getRoundedSettingValueFromHz(curvedHz);\n            const finalHz: number = FilterControlPoint.getHzFromSettingValue(freqSetting);\n            const finalRadians: number = 2.0 * Math.PI * finalHz / standardSampleRate;\n\n            const legacyFilter: FilterCoefficients = new FilterCoefficients();\n            legacyFilter.lowPass1stOrderSimplified(legacyRadians);\n            const response: FrequencyResponse = new FrequencyResponse();\n            response.analyze(legacyFilter, finalRadians);\n            const legacyFilterGainAtNewRadians: number = response.magnitude();\n\n            let logGain: number = Math.log2(legacyFilterGainAtNewRadians);\n            // Bias slightly toward 2^(-extraOctaves):\n            logGain = -extraOctaves + (logGain + extraOctaves) * 0.82;\n            // Decaying envelopes move the cutoff frequency back into an area where the best approximation of the first order slope requires a lower gain setting.\n            if (envDecays) logGain = Math.min(logGain, -1.0);\n            const convertedGain: number = Math.pow(2.0, logGain);\n            const gainSetting: number = FilterControlPoint.getRoundedSettingValueFromLinearGain(convertedGain);\n\n            this.addPoint(FilterType.lowPass, freqSetting, gainSetting);\n        } else {\n            const intendedGain: number = 0.5 / (1.0 - legacyFilterMaxResonance * Math.sqrt(Math.max(0.0, legacyResonanceSetting - 1.0) / (legacyFilterResonanceRange - 2.0)));\n            const invertedGain: number = 0.5 / intendedGain;\n            const maxRadians: number = 2.0 * Math.PI * legacyFilterCutoffMaxHz / standardSampleRate;\n            const freqRatio: number = legacyRadians / maxRadians;\n            const targetRadians: number = legacyRadians * (freqRatio * Math.pow(invertedGain, 0.9) + 1.0);\n            const curvedRadians: number = legacyRadians + (targetRadians - legacyRadians) * invertedGain;\n            let curvedHz: number;\n            if (envDecays) {\n                curvedHz = standardSampleRate * Math.min(curvedRadians, legacyRadians * Math.pow(2, 0.25)) / (2.0 * Math.PI);\n            } else {\n                curvedHz = standardSampleRate * curvedRadians / (2.0 * Math.PI);\n            }\n            const freqSetting: number = FilterControlPoint.getRoundedSettingValueFromHz(curvedHz);\n\n            let legacyFilterGain: number;\n            if (envDecays) {\n                legacyFilterGain = intendedGain;\n            } else {\n                const legacyFilter: FilterCoefficients = new FilterCoefficients();\n                legacyFilter.lowPass2ndOrderSimplified(legacyRadians, intendedGain);\n                const response: FrequencyResponse = new FrequencyResponse();\n                response.analyze(legacyFilter, curvedRadians);\n                legacyFilterGain = response.magnitude();\n            }\n            if (!resonant) legacyFilterGain = Math.min(legacyFilterGain, Math.sqrt(0.5));\n            const gainSetting: number = FilterControlPoint.getRoundedSettingValueFromLinearGain(legacyFilterGain);\n\n            this.addPoint(FilterType.lowPass, freqSetting, gainSetting);\n        }\n\n        // Added for JummBox - making a 0 point filter does not truncate control points!\n        this.controlPoints.length = this.controlPointCount;\n    }\n\n    // Similar to above, but purpose-fit for quick conversions in synth calls.\n    public convertLegacySettingsForSynth(legacyCutoffSetting: number, legacyResonanceSetting: number, allowFirstOrder: boolean = false): void {\n        this.reset();\n\n        const legacyFilterCutoffMaxHz: number = 8000; // This was carefully calculated to correspond to no change in response when filtering at 48000 samples per second... when using the legacy simplified low-pass filter.\n        const legacyFilterMax: number = 0.95;\n        const legacyFilterMaxRadians: number = Math.asin(legacyFilterMax / 2.0) * 2.0;\n        const legacyFilterMaxResonance: number = 0.95;\n        const legacyFilterCutoffRange: number = 11;\n        const legacyFilterResonanceRange: number = 8;\n\n        const firstOrder: boolean = (legacyResonanceSetting == 0 && allowFirstOrder);\n        const standardSampleRate: number = 48000;\n        const legacyHz: number = legacyFilterCutoffMaxHz * Math.pow(2.0, (legacyCutoffSetting - (legacyFilterCutoffRange - 1)) * 0.5);\n        const legacyRadians: number = Math.min(legacyFilterMaxRadians, 2 * Math.PI * legacyHz / standardSampleRate);\n\n        if (firstOrder) {\n            // In general, a 1st order lowpass can be approximated by a 2nd order lowpass\n            // with a cutoff ~4 octaves higher (*16) and a gain of 1/16.\n            // However, BeepBox's original lowpass filters behaved oddly as they\n            // approach the nyquist frequency, so I've devised this curved conversion\n            // to guess at a perceptually appropriate new cutoff frequency and gain.\n            const extraOctaves: number = 3.5;\n            const targetRadians: number = legacyRadians * Math.pow(2.0, extraOctaves);\n            const curvedRadians: number = targetRadians / (1.0 + targetRadians / Math.PI);\n            const curvedHz: number = standardSampleRate * curvedRadians / (2.0 * Math.PI)\n            const freqSetting: number = FilterControlPoint.getRoundedSettingValueFromHz(curvedHz);\n            const finalHz: number = FilterControlPoint.getHzFromSettingValue(freqSetting);\n            const finalRadians: number = 2.0 * Math.PI * finalHz / standardSampleRate;\n\n            const legacyFilter: FilterCoefficients = new FilterCoefficients();\n            legacyFilter.lowPass1stOrderSimplified(legacyRadians);\n            const response: FrequencyResponse = new FrequencyResponse();\n            response.analyze(legacyFilter, finalRadians);\n            const legacyFilterGainAtNewRadians: number = response.magnitude();\n\n            let logGain: number = Math.log2(legacyFilterGainAtNewRadians);\n            // Bias slightly toward 2^(-extraOctaves):\n            logGain = -extraOctaves + (logGain + extraOctaves) * 0.82;\n            const convertedGain: number = Math.pow(2.0, logGain);\n            const gainSetting: number = FilterControlPoint.getRoundedSettingValueFromLinearGain(convertedGain);\n\n            this.addPoint(FilterType.lowPass, freqSetting, gainSetting);\n        } else {\n            const intendedGain: number = 0.5 / (1.0 - legacyFilterMaxResonance * Math.sqrt(Math.max(0.0, legacyResonanceSetting - 1.0) / (legacyFilterResonanceRange - 2.0)));\n            const invertedGain: number = 0.5 / intendedGain;\n            const maxRadians: number = 2.0 * Math.PI * legacyFilterCutoffMaxHz / standardSampleRate;\n            const freqRatio: number = legacyRadians / maxRadians;\n            const targetRadians: number = legacyRadians * (freqRatio * Math.pow(invertedGain, 0.9) + 1.0);\n            const curvedRadians: number = legacyRadians + (targetRadians - legacyRadians) * invertedGain;\n            let curvedHz: number;\n\n            curvedHz = standardSampleRate * curvedRadians / (2.0 * Math.PI);\n            const freqSetting: number = FilterControlPoint.getSettingValueFromHz(curvedHz);\n\n            let legacyFilterGain: number;\n\n            const legacyFilter: FilterCoefficients = new FilterCoefficients();\n            legacyFilter.lowPass2ndOrderSimplified(legacyRadians, intendedGain);\n            const response: FrequencyResponse = new FrequencyResponse();\n            response.analyze(legacyFilter, curvedRadians);\n            legacyFilterGain = response.magnitude();\n            const gainSetting: number = FilterControlPoint.getRoundedSettingValueFromLinearGain(legacyFilterGain);\n\n            this.addPoint(FilterType.lowPass, freqSetting, gainSetting);\n        }\n\n    }\n}\n\nexport class EnvelopeSettings {\n    public target: number = 0;\n    public index: number = 0;\n    public envelope: number = 0;\n\n    constructor() {\n        this.reset();\n    }\n\n    reset(): void {\n        this.target = 0;\n        this.index = 0;\n        this.envelope = 0;\n    }\n\n    public toJsonObject(): Object {\n        const envelopeObject: any = {\n            \"target\": Config.instrumentAutomationTargets[this.target].name,\n            \"envelope\": Config.envelopes[this.envelope].name,\n        };\n        if (Config.instrumentAutomationTargets[this.target].maxCount > 1) {\n            envelopeObject[\"index\"] = this.index;\n        }\n        return envelopeObject;\n    }\n\n    public fromJsonObject(envelopeObject: any): void {\n        this.reset();\n\n        let target: AutomationTarget = Config.instrumentAutomationTargets.dictionary[envelopeObject[\"target\"]];\n        if (target == null) target = Config.instrumentAutomationTargets.dictionary[\"noteVolume\"];\n        this.target = target.index;\n\n        let envelope: Envelope = Config.envelopes.dictionary[envelopeObject[\"envelope\"]];\n        if (envelope == null) envelope = Config.envelopes.dictionary[\"none\"];\n        this.envelope = envelope.index;\n\n        if (envelopeObject[\"index\"] != undefined) {\n            this.index = clamp(0, Config.instrumentAutomationTargets[this.target].maxCount, envelopeObject[\"index\"] | 0);\n        } else {\n            this.index = 0;\n        }\n    }\n}\n\n// Settings that were available to old versions of BeepBox but are no longer available in the\n// current version that need to be reinterpreted as a group to determine the best way to\n// represent them in the current version.\ninterface LegacySettings {\n    filterCutoff?: number;\n    filterResonance?: number;\n    filterEnvelope?: Envelope;\n    pulseEnvelope?: Envelope;\n    operatorEnvelopes?: Envelope[];\n    feedbackEnvelope?: Envelope;\n}\n\ninterface HeldMod {\n    volume: number;\n    channelIndex: number;\n    instrumentIndex: number;\n    setting: number;\n    holdFor: number;\n}\n\nexport class Instrument {\n    public type: InstrumentType = InstrumentType.chip;\n    public preset: number = 0;\n    public chipWave: number = 2;\n    public chipNoise: number = 1;\n    public eqFilter: FilterSettings = new FilterSettings();\n    public eqFilterType: boolean = false;\n    public eqFilterSimpleCut: number = Config.filterSimpleCutRange - 1;\n    public eqFilterSimplePeak: number = 0;\n    public noteFilter: FilterSettings = new FilterSettings();\n    public noteFilterType: boolean = false;\n    public noteFilterSimpleCut: number = Config.filterSimpleCutRange - 1;\n    public noteFilterSimplePeak: number = 0;\n    public eqSubFilters: (FilterSettings | null)[] = [];\n    public noteSubFilters: (FilterSettings | null)[] = [];\n    public tmpEqFilterStart: FilterSettings | null;\n    public tmpEqFilterEnd: FilterSettings | null;\n    public tmpNoteFilterStart: FilterSettings | null;\n    public tmpNoteFilterEnd: FilterSettings | null;\n    public envelopes: EnvelopeSettings[] = [];\n    public fadeIn: number = 0;\n    public fadeOut: number = Config.fadeOutNeutral;\n    public envelopeCount: number = 0;\n    public transition: number = Config.transitions.dictionary[\"normal\"].index;\n    public pitchShift: number = 0;\n    public detune: number = 0;\n    public vibrato: number = 0;\n    public interval: number = 0;\n    public vibratoDepth: number = 0;\n    public vibratoSpeed: number = 10;\n    public vibratoDelay: number = 0;\n    public vibratoType: number = 0;\n    public envelopeSpeed: number = 12;\n    public discreteEnvelope: boolean = false;\n    public unison: number = 0;\n    public effects: number = 0;\n    public chord: number = 1;\n    public volume: number = 0;\n    public pan: number = Config.panCenter;\n    public panDelay: number = 10;\n    public arpeggioSpeed: number = 12;\n    public fastTwoNoteArp: boolean = false;\n    public legacyTieOver: boolean = false;\n    public clicklessTransition: boolean = false;\n    public aliases: boolean = false;\n    public pulseWidth: number = Config.pulseWidthRange;\n    public supersawDynamism: number = Config.supersawDynamismMax;\n\tpublic supersawSpread: number = Math.ceil(Config.supersawSpreadMax / 2.0);\n\tpublic supersawShape: number = 0;\n\tpublic stringSustain: number = 10;\n\tpublic stringSustainType: SustainType = SustainType.acoustic;\n    public distortion: number = 0;\n    public bitcrusherFreq: number = 0;\n    public bitcrusherQuantization: number = 0;\n    public chorus: number = 0;\n    public reverb: number = 0;\n    public echoSustain: number = 0;\n    public echoDelay: number = 0;\n    public algorithm: number = 0;\n    public feedbackType: number = 0;\n    public feedbackAmplitude: number = 0;\n    public customChipWave: Float32Array = new Float32Array(64);\n    public customChipWaveIntegral: Float32Array = new Float32Array(65); // One extra element for wrap-around in chipSynth.\n    public readonly operators: Operator[] = [];\n    public readonly spectrumWave: SpectrumWave;\n    public readonly harmonicsWave: HarmonicsWave = new HarmonicsWave();\n    public readonly drumsetEnvelopes: number[] = [];\n    public readonly drumsetSpectrumWaves: SpectrumWave[] = [];\n    public modChannels: number[] = [];\n    public modInstruments: number[] = [];\n    public modulators: number[] = [];\n    public modFilterTypes: number[] = [];\n    public invalidModulators: boolean[] = [];\n    constructor(isNoiseChannel: boolean, isModChannel: boolean) {\n\n        // @jummbus - My screed on how modulator arrays for instruments work, for the benefit of myself in the future, or whoever else.\n        //\n        // modulators[mod] is the index in Config.modulators to use, with \"none\" being the first entry.\n        //\n        // modChannels[mod] gives the index of a channel set for this mod. Two special values:\n        //   -2 \"none\"\n        //   -1 \"song\"\n        //   0+ actual channel index\n        //\n        // modInstruments[mod] gives the index of an instrument within the channel set for this mod. Again, two special values:\n        //   [0 ~ channel.instruments.length-1]     channel's instrument index\n        //   channel.instruments.length             \"all\"\n        //   channel.instruments.length+1           \"active\"\n        //\n        // modFilterTypes[mod] gives some info about the filter type: 0 is morph, 1+ is index in the dot selection array (dot 1 x, dot 1 y, dot 2 x...)\n        //   0  filter morph\n        //   1+ filter dot target, starting from dot 1 x and then dot 1 y, then repeating x, y for all dots in order. Note: odd values are always \"x\" targets, even are \"y\".\n\n        if (isModChannel) {\n            for (let mod: number = 0; mod < Config.modCount; mod++) {\n                this.modChannels.push(-2);\n                this.modInstruments.push(0);\n                this.modulators.push(Config.modulators.dictionary[\"none\"].index);\n            }\n        }\n\n        this.spectrumWave = new SpectrumWave(isNoiseChannel);\n        for (let i: number = 0; i < Config.operatorCount; i++) {\n            this.operators[i] = new Operator(i);\n        }\n        for (let i: number = 0; i < Config.drumCount; i++) {\n            this.drumsetEnvelopes[i] = Config.envelopes.dictionary[\"twang 2\"].index;\n            this.drumsetSpectrumWaves[i] = new SpectrumWave(true);\n        }\n\n        for (let i = 0; i < 64; i++) {\n            this.customChipWave[i] = 24 - Math.floor(i * (48 / 64));\n        }\n\n        let sum: number = 0.0;\n        for (let i: number = 0; i < this.customChipWave.length; i++) {\n            sum += this.customChipWave[i];\n        }\n        const average: number = sum / this.customChipWave.length;\n\n        // Perform the integral on the wave. The chipSynth will perform the derivative to get the original wave back but with antialiasing.\n        let cumulative: number = 0;\n        let wavePrev: number = 0;\n        for (let i: number = 0; i < this.customChipWave.length; i++) {\n            cumulative += wavePrev;\n            wavePrev = this.customChipWave[i] - average;\n            this.customChipWaveIntegral[i] = cumulative;\n        }\n\n        // 65th, last sample is for anti-aliasing\n        this.customChipWaveIntegral[64] = 0.0;\n\n    }\n\n    public setTypeAndReset(type: InstrumentType, isNoiseChannel: boolean, isModChannel: boolean): void {\n        // Mod channels are forced to one type.\n        if (isModChannel) type = InstrumentType.mod;\n        this.type = type;\n        this.preset = type;\n        this.volume = 0;\n        this.effects = (1 << EffectType.panning); // Panning enabled by default in JB.\n        this.chorus = Config.chorusRange - 1;\n        this.reverb = 0;\n        this.echoSustain = Math.floor((Config.echoSustainRange - 1) * 0.5);\n        this.echoDelay = Math.floor((Config.echoDelayRange - 1) * 0.5);\n        this.eqFilter.reset();\n        this.eqFilterType = false;\n        this.eqFilterSimpleCut = Config.filterSimpleCutRange - 1;\n        this.eqFilterSimplePeak = 0;\n        for (let i: number = 0; i < Config.filterMorphCount; i++) {\n            this.eqSubFilters[i] = null;\n            this.noteSubFilters[i] = null;\n        }\n        this.noteFilter.reset();\n        this.noteFilterType = false;\n        this.noteFilterSimpleCut = Config.filterSimpleCutRange - 1;\n        this.noteFilterSimplePeak = 0;\n        this.distortion = Math.floor((Config.distortionRange - 1) * 0.75);\n        this.bitcrusherFreq = Math.floor((Config.bitcrusherFreqRange - 1) * 0.5)\n        this.bitcrusherQuantization = Math.floor((Config.bitcrusherQuantizationRange - 1) * 0.5);\n        this.pan = Config.panCenter;\n        this.panDelay = 10;\n        this.pitchShift = Config.pitchShiftCenter;\n        this.detune = Config.detuneCenter;\n        this.vibrato = 0;\n        this.unison = 0;\n        this.stringSustain = 10;\n        this.stringSustainType = Config.enableAcousticSustain ? SustainType.acoustic : SustainType.bright;\n        this.clicklessTransition = false;\n        this.arpeggioSpeed = 12;\n        this.envelopeSpeed = 12;\n        this.discreteEnvelope = false;\n        this.legacyTieOver = false;\n        this.aliases = false;\n        this.fadeIn = 0;\n        this.fadeOut = Config.fadeOutNeutral;\n        this.transition = Config.transitions.dictionary[\"normal\"].index;\n        this.envelopeCount = 0;\n        switch (type) {\n            case InstrumentType.chip:\n                this.chipWave = 2;\n                // TODO: enable the chord effect?\n                this.chord = Config.chords.dictionary[\"arpeggio\"].index;\n                break;\n            case InstrumentType.customChipWave:\n                this.chipWave = 2;\n                this.chord = Config.chords.dictionary[\"arpeggio\"].index;\n                for (let i: number = 0; i < 64; i++) {\n                    this.customChipWave[i] = 24 - (Math.floor(i * (48 / 64)));\n                }\n\n                let sum: number = 0.0;\n                for (let i: number = 0; i < this.customChipWave.length; i++) {\n                    sum += this.customChipWave[i];\n                }\n                const average: number = sum / this.customChipWave.length;\n\n                // Perform the integral on the wave. The chipSynth will perform the derivative to get the original wave back but with antialiasing.\n                let cumulative: number = 0;\n                let wavePrev: number = 0;\n                for (let i: number = 0; i < this.customChipWave.length; i++) {\n                    cumulative += wavePrev;\n                    wavePrev = this.customChipWave[i] - average;\n                    this.customChipWaveIntegral[i] = cumulative;\n                }\n\n                this.customChipWaveIntegral[64] = 0.0;\n                break;\n            case InstrumentType.fm:\n                this.chord = Config.chords.dictionary[\"custom interval\"].index;\n                this.algorithm = 0;\n                this.feedbackType = 0;\n                this.feedbackAmplitude = 0;\n                for (let i: number = 0; i < this.operators.length; i++) {\n                    this.operators[i].reset(i);\n                }\n                break;\n            case InstrumentType.noise:\n                this.chipNoise = 1;\n                this.chord = Config.chords.dictionary[\"arpeggio\"].index;\n                break;\n            case InstrumentType.spectrum:\n                this.chord = Config.chords.dictionary[\"simultaneous\"].index;\n                this.spectrumWave.reset(isNoiseChannel);\n                break;\n            case InstrumentType.drumset:\n                this.chord = Config.chords.dictionary[\"simultaneous\"].index;\n                for (let i: number = 0; i < Config.drumCount; i++) {\n                    this.drumsetEnvelopes[i] = Config.envelopes.dictionary[\"twang 2\"].index;\n                    if (this.drumsetSpectrumWaves[i] == undefined) {\n                        this.drumsetSpectrumWaves[i] = new SpectrumWave(true);\n                    }\n                    this.drumsetSpectrumWaves[i].reset(isNoiseChannel);\n                }\n                break;\n            case InstrumentType.harmonics:\n                this.chord = Config.chords.dictionary[\"simultaneous\"].index;\n                this.harmonicsWave.reset();\n                break;\n            case InstrumentType.pwm:\n                this.chord = Config.chords.dictionary[\"arpeggio\"].index;\n                this.pulseWidth = Config.pulseWidthRange;\n                break;\n            case InstrumentType.pickedString:\n                this.chord = Config.chords.dictionary[\"strum\"].index;\n                this.harmonicsWave.reset();\n                break;\n            case InstrumentType.mod:\n                this.transition = 0;\n                this.vibrato = 0;\n                this.interval = 0;\n                this.effects = 0;\n                this.chord = 0;\n                this.modChannels = [];\n                this.modInstruments = [];\n                this.modulators = [];\n                for (let mod: number = 0; mod < Config.modCount; mod++) {\n                    this.modChannels.push(-2);\n                    this.modInstruments.push(0);\n                    this.modulators.push(Config.modulators.dictionary[\"none\"].index);\n                    this.invalidModulators[mod] = false;\n                    this.modFilterTypes[mod] = 0;\n                }\n                break;\n\t\t\tcase InstrumentType.supersaw:\n\t\t\t\tthis.chord = Config.chords.dictionary[\"arpeggio\"].index;\n\t\t\t\tthis.supersawDynamism = Config.supersawDynamismMax;\n\t\t\t\tthis.supersawSpread = Math.ceil(Config.supersawSpreadMax / 2.0);\n\t\t\t\tthis.supersawShape = 0;\n\t\t\t\tthis.pulseWidth = Config.pulseWidthRange - 1;\n\t\t\t\tbreak;\n            default:\n                throw new Error(\"Unrecognized instrument type: \" + type);\n        }\n        // Chip/noise instruments had arpeggio and FM had custom interval but neither\n        // explicitly saved the chorus setting beforeSeven so enable it here. The effects\n        // will otherwise get overridden when reading SongTagCode.startInstrument.\n        if (this.chord != Config.chords.dictionary[\"simultaneous\"].index) {\n            // Enable chord if it was used.\n            this.effects = (this.effects | (1 << EffectType.chord));\n        }\n    }\n\n    // (only) difference for JummBox: Returns whether or not the note filter was chosen for filter conversion.\n    public convertLegacySettings(legacySettings: LegacySettings, forceSimpleFilter: boolean): void {\n        let legacyCutoffSetting: number | undefined = legacySettings.filterCutoff;\n        let legacyResonanceSetting: number | undefined = legacySettings.filterResonance;\n        let legacyFilterEnv: Envelope | undefined = legacySettings.filterEnvelope;\n        let legacyPulseEnv: Envelope | undefined = legacySettings.pulseEnvelope;\n        let legacyOperatorEnvelopes: Envelope[] | undefined = legacySettings.operatorEnvelopes;\n        let legacyFeedbackEnv: Envelope | undefined = legacySettings.feedbackEnvelope;\n\n        // legacy defaults:\n        if (legacyCutoffSetting == undefined) legacyCutoffSetting = (this.type == InstrumentType.chip) ? 6 : 10;\n        if (legacyResonanceSetting == undefined) legacyResonanceSetting = 0;\n        if (legacyFilterEnv == undefined) legacyFilterEnv = Config.envelopes.dictionary[\"none\"];\n        if (legacyPulseEnv == undefined) legacyPulseEnv = Config.envelopes.dictionary[(this.type == InstrumentType.pwm) ? \"twang 2\" : \"none\"];\n        if (legacyOperatorEnvelopes == undefined) legacyOperatorEnvelopes = [Config.envelopes.dictionary[(this.type == InstrumentType.fm) ? \"note size\" : \"none\"], Config.envelopes.dictionary[\"none\"], Config.envelopes.dictionary[\"none\"], Config.envelopes.dictionary[\"none\"]];\n        if (legacyFeedbackEnv == undefined) legacyFeedbackEnv = Config.envelopes.dictionary[\"none\"];\n\n        // The \"punch\" envelope is special: it goes *above* the chosen cutoff. But if the cutoff was already at the max, it couldn't go any higher... except in the current version of BeepBox I raised the max cutoff so it *can* but then it sounds different, so to preserve the original sound let's just remove the punch envelope.\n        const legacyFilterCutoffRange: number = 11;\n        const cutoffAtMax: boolean = (legacyCutoffSetting == legacyFilterCutoffRange - 1);\n        if (cutoffAtMax && legacyFilterEnv.type == EnvelopeType.punch) legacyFilterEnv = Config.envelopes.dictionary[\"none\"];\n\n        const carrierCount: number = Config.algorithms[this.algorithm].carrierCount;\n        let noCarriersControlledByNoteSize: boolean = true;\n        let allCarriersControlledByNoteSize: boolean = true;\n        let noteSizeControlsSomethingElse: boolean = (legacyFilterEnv.type == EnvelopeType.noteSize) || (legacyPulseEnv.type == EnvelopeType.noteSize);\n        if (this.type == InstrumentType.fm) {\n            noteSizeControlsSomethingElse = noteSizeControlsSomethingElse || (legacyFeedbackEnv.type == EnvelopeType.noteSize);\n            for (let i: number = 0; i < legacyOperatorEnvelopes.length; i++) {\n                if (i < carrierCount) {\n                    if (legacyOperatorEnvelopes[i].type != EnvelopeType.noteSize) {\n                        allCarriersControlledByNoteSize = false;\n                    } else {\n                        noCarriersControlledByNoteSize = false;\n                    }\n                } else {\n                    noteSizeControlsSomethingElse = noteSizeControlsSomethingElse || (legacyOperatorEnvelopes[i].type == EnvelopeType.noteSize);\n                }\n            }\n        }\n\n        this.envelopeCount = 0;\n\n        if (this.type == InstrumentType.fm) {\n            if (allCarriersControlledByNoteSize && noteSizeControlsSomethingElse) {\n                this.addEnvelope(Config.instrumentAutomationTargets.dictionary[\"noteVolume\"].index, 0, Config.envelopes.dictionary[\"note size\"].index);\n            } else if (noCarriersControlledByNoteSize && !noteSizeControlsSomethingElse) {\n                this.addEnvelope(Config.instrumentAutomationTargets.dictionary[\"none\"].index, 0, Config.envelopes.dictionary[\"note size\"].index);\n            }\n        }\n\n        if (legacyFilterEnv.type == EnvelopeType.none) {\n            this.noteFilter.reset();\n            this.noteFilterType = false;\n            this.eqFilter.convertLegacySettings(legacyCutoffSetting, legacyResonanceSetting, legacyFilterEnv);\n            this.effects &= ~(1 << EffectType.noteFilter);\n            if (forceSimpleFilter || this.eqFilterType) {\n                this.eqFilterType = true;\n                this.eqFilterSimpleCut = legacyCutoffSetting;\n                this.eqFilterSimplePeak = legacyResonanceSetting;\n            }\n        } else {\n            this.eqFilter.reset();\n\n            this.eqFilterType = false;\n            this.noteFilterType = false;\n            this.noteFilter.convertLegacySettings(legacyCutoffSetting, legacyResonanceSetting, legacyFilterEnv);\n            this.effects |= 1 << EffectType.noteFilter;\n            this.addEnvelope(Config.instrumentAutomationTargets.dictionary[\"noteFilterAllFreqs\"].index, 0, legacyFilterEnv.index);\n            if (forceSimpleFilter || this.noteFilterType) {\n                this.noteFilterType = true;\n                this.noteFilterSimpleCut = legacyCutoffSetting;\n                this.noteFilterSimplePeak = legacyResonanceSetting;\n            }\n        }\n\n        if (legacyPulseEnv.type != EnvelopeType.none) {\n            this.addEnvelope(Config.instrumentAutomationTargets.dictionary[\"pulseWidth\"].index, 0, legacyPulseEnv.index);\n        }\n\n        for (let i: number = 0; i < legacyOperatorEnvelopes.length; i++) {\n            if (i < carrierCount && allCarriersControlledByNoteSize) continue;\n            if (legacyOperatorEnvelopes[i].type != EnvelopeType.none) {\n                this.addEnvelope(Config.instrumentAutomationTargets.dictionary[\"operatorAmplitude\"].index, i, legacyOperatorEnvelopes[i].index);\n            }\n        }\n\n        if (legacyFeedbackEnv.type != EnvelopeType.none) {\n            this.addEnvelope(Config.instrumentAutomationTargets.dictionary[\"feedbackAmplitude\"].index, 0, legacyFeedbackEnv.index);\n        }\n    }\n\n    public toJsonObject(): Object {\n        const instrumentObject: any = {\n            \"type\": Config.instrumentTypeNames[this.type],\n            \"volume\": this.volume,\n            \"eqFilter\": this.eqFilter.toJsonObject(),\n            \"eqFilterType\": this.eqFilterType,\n            \"eqSimpleCut\": this.eqFilterSimpleCut,\n            \"eqSimplePeak\": this.eqFilterSimplePeak,\n            \"envelopeSpeed\": this.envelopeSpeed,\n            \"discreteEnvelope\": this.discreteEnvelope\n        };\n\n        if (this.preset != this.type) {\n            instrumentObject[\"preset\"] = this.preset;\n        }\n\n        for (let i: number = 0; i < Config.filterMorphCount; i++) {\n            if (this.eqSubFilters[i] != null)\n                instrumentObject[\"eqSubFilters\" + i] = this.eqSubFilters[i]!.toJsonObject();\n        }\n\n        const effects: string[] = [];\n        for (const effect of Config.effectOrder) {\n            if (this.effects & (1 << effect)) {\n                effects.push(Config.effectNames[effect]);\n            }\n        }\n        instrumentObject[\"effects\"] = effects;\n\n\n        if (effectsIncludeTransition(this.effects)) {\n            instrumentObject[\"transition\"] = Config.transitions[this.transition].name;\n            instrumentObject[\"clicklessTransition\"] = this.clicklessTransition;\n        }\n        if (effectsIncludeChord(this.effects)) {\n            instrumentObject[\"chord\"] = this.getChord().name;\n            instrumentObject[\"fastTwoNoteArp\"] = this.fastTwoNoteArp;\n            instrumentObject[\"arpeggioSpeed\"] = this.arpeggioSpeed;\n        }\n        if (effectsIncludePitchShift(this.effects)) {\n            instrumentObject[\"pitchShiftSemitones\"] = this.pitchShift;\n        }\n        if (effectsIncludeDetune(this.effects)) {\n            instrumentObject[\"detuneCents\"] = Synth.detuneToCents(this.detune);\n        }\n        if (effectsIncludeVibrato(this.effects)) {\n            if (this.vibrato == -1) {\n                this.vibrato = 5;\n            }\n            if (this.vibrato != 5) {\n                instrumentObject[\"vibrato\"] = Config.vibratos[this.vibrato].name;\n            } else {\n                instrumentObject[\"vibrato\"] = \"custom\";\n            }\n            instrumentObject[\"vibratoDepth\"] = this.vibratoDepth;\n            instrumentObject[\"vibratoDelay\"] = this.vibratoDelay;\n            instrumentObject[\"vibratoSpeed\"] = this.vibratoSpeed;\n            instrumentObject[\"vibratoType\"] = this.vibratoType;\n        }\n        if (effectsIncludeNoteFilter(this.effects)) {\n            instrumentObject[\"noteFilterType\"] = this.noteFilterType;\n            instrumentObject[\"noteSimpleCut\"] = this.noteFilterSimpleCut;\n            instrumentObject[\"noteSimplePeak\"] = this.noteFilterSimplePeak;\n            instrumentObject[\"noteFilter\"] = this.noteFilter.toJsonObject();\n\n            for (let i: number = 0; i < Config.filterMorphCount; i++) {\n                if (this.noteSubFilters[i] != null)\n                    instrumentObject[\"noteSubFilters\" + i] = this.noteSubFilters[i]!.toJsonObject();\n            }\n        }\n        if (effectsIncludeDistortion(this.effects)) {\n            instrumentObject[\"distortion\"] = Math.round(100 * this.distortion / (Config.distortionRange - 1));\n            instrumentObject[\"aliases\"] = this.aliases;\n        }\n        if (effectsIncludeBitcrusher(this.effects)) {\n            instrumentObject[\"bitcrusherOctave\"] = (Config.bitcrusherFreqRange - 1 - this.bitcrusherFreq) * Config.bitcrusherOctaveStep;\n            instrumentObject[\"bitcrusherQuantization\"] = Math.round(100 * this.bitcrusherQuantization / (Config.bitcrusherQuantizationRange - 1));\n        }\n        if (effectsIncludePanning(this.effects)) {\n            instrumentObject[\"pan\"] = Math.round(100 * (this.pan - Config.panCenter) / Config.panCenter);\n            instrumentObject[\"panDelay\"] = this.panDelay;\n        }\n        if (effectsIncludeChorus(this.effects)) {\n            instrumentObject[\"chorus\"] = Math.round(100 * this.chorus / (Config.chorusRange - 1));\n        }\n        if (effectsIncludeEcho(this.effects)) {\n            instrumentObject[\"echoSustain\"] = Math.round(100 * this.echoSustain / (Config.echoSustainRange - 1));\n            instrumentObject[\"echoDelayBeats\"] = Math.round(1000 * (this.echoDelay + 1) * Config.echoDelayStepTicks / (Config.ticksPerPart * Config.partsPerBeat)) / 1000;\n        }\n        if (effectsIncludeReverb(this.effects)) {\n            instrumentObject[\"reverb\"] = Math.round(100 * this.reverb / (Config.reverbRange - 1));\n        }\n\n        if (this.type != InstrumentType.drumset) {\n            instrumentObject[\"fadeInSeconds\"] = Math.round(10000 * Synth.fadeInSettingToSeconds(this.fadeIn)) / 10000;\n            instrumentObject[\"fadeOutTicks\"] = Synth.fadeOutSettingToTicks(this.fadeOut);\n        }\n\n        if (this.type == InstrumentType.harmonics || this.type == InstrumentType.pickedString) {\n            instrumentObject[\"harmonics\"] = [];\n            for (let i: number = 0; i < Config.harmonicsControlPoints; i++) {\n                instrumentObject[\"harmonics\"][i] = Math.round(100 * this.harmonicsWave.harmonics[i] / Config.harmonicsMax);\n            }\n        }\n\n        if (this.type == InstrumentType.noise) {\n            instrumentObject[\"wave\"] = Config.chipNoises[this.chipNoise].name;\n        } else if (this.type == InstrumentType.spectrum) {\n            instrumentObject[\"spectrum\"] = [];\n            for (let i: number = 0; i < Config.spectrumControlPoints; i++) {\n                instrumentObject[\"spectrum\"][i] = Math.round(100 * this.spectrumWave.spectrum[i] / Config.spectrumMax);\n            }\n        } else if (this.type == InstrumentType.drumset) {\n            instrumentObject[\"drums\"] = [];\n            for (let j: number = 0; j < Config.drumCount; j++) {\n                const spectrum: number[] = [];\n                for (let i: number = 0; i < Config.spectrumControlPoints; i++) {\n                    spectrum[i] = Math.round(100 * this.drumsetSpectrumWaves[j].spectrum[i] / Config.spectrumMax);\n                }\n                instrumentObject[\"drums\"][j] = {\n                    \"filterEnvelope\": this.getDrumsetEnvelope(j).name,\n                    \"spectrum\": spectrum,\n                };\n            }\n        } else if (this.type == InstrumentType.chip) {\n            instrumentObject[\"wave\"] = Config.chipWaves[this.chipWave].name;\n            instrumentObject[\"unison\"] = Config.unisons[this.unison].name;\n        } else if (this.type == InstrumentType.pwm) {\n            instrumentObject[\"pulseWidth\"] = this.pulseWidth;\n        } else if (this.type == InstrumentType.supersaw) {\n\t\t\tinstrumentObject[\"pulseWidth\"] = this.pulseWidth;\n\t\t\tinstrumentObject[\"dynamism\"] = Math.round(100 * this.supersawDynamism / Config.supersawDynamismMax);\n\t\t\tinstrumentObject[\"spread\"] = Math.round(100 * this.supersawSpread / Config.supersawSpreadMax);\n\t\t\tinstrumentObject[\"shape\"] = Math.round(100 * this.supersawShape / Config.supersawShapeMax);\n\t\t} else if (this.type == InstrumentType.pickedString) {\n            instrumentObject[\"unison\"] = Config.unisons[this.unison].name;\n            instrumentObject[\"stringSustain\"] = Math.round(100 * this.stringSustain / (Config.stringSustainRange - 1));\n            if (Config.enableAcousticSustain) {\n\t\t\t\tinstrumentObject[\"stringSustainType\"] = Config.sustainTypeNames[this.stringSustainType];\n\t\t\t}\n        } else if (this.type == InstrumentType.harmonics) {\n            instrumentObject[\"unison\"] = Config.unisons[this.unison].name;\n        } else if (this.type == InstrumentType.fm) {\n            const operatorArray: Object[] = [];\n            for (const operator of this.operators) {\n                operatorArray.push({\n                    \"frequency\": Config.operatorFrequencies[operator.frequency].name,\n                    \"amplitude\": operator.amplitude,\n                    \"waveform\": Config.operatorWaves[operator.waveform].name,\n                    \"pulseWidth\": operator.pulseWidth,\n                });\n            }\n            instrumentObject[\"algorithm\"] = Config.algorithms[this.algorithm].name;\n            instrumentObject[\"feedbackType\"] = Config.feedbacks[this.feedbackType].name;\n            instrumentObject[\"feedbackAmplitude\"] = this.feedbackAmplitude;\n            instrumentObject[\"operators\"] = operatorArray;\n        } else if (this.type == InstrumentType.customChipWave) {\n            instrumentObject[\"wave\"] = Config.chipWaves[this.chipWave].name;\n            instrumentObject[\"unison\"] = Config.unisons[this.unison].name;\n            instrumentObject[\"customChipWave\"] = new Float64Array(64);\n            instrumentObject[\"customChipWaveIntegral\"] = new Float64Array(65);\n            for (let i: number = 0; i < this.customChipWave.length; i++) {\n                instrumentObject[\"customChipWave\"][i] = this.customChipWave[i];\n                // Meh, waste of space and can be inaccurate. It will be recalc'ed when instrument loads.\n                //instrumentObject[\"customChipWaveIntegral\"][i] = this.customChipWaveIntegral[i];\n            }\n        } else if (this.type == InstrumentType.mod) {\n            instrumentObject[\"modChannels\"] = [];\n            instrumentObject[\"modInstruments\"] = [];\n            instrumentObject[\"modSettings\"] = [];\n            instrumentObject[\"modFilterTypes\"] = [];\n            for (let mod: number = 0; mod < Config.modCount; mod++) {\n                instrumentObject[\"modChannels\"][mod] = this.modChannels[mod];\n                instrumentObject[\"modInstruments\"][mod] = this.modInstruments[mod];\n                instrumentObject[\"modSettings\"][mod] = this.modulators[mod];\n                instrumentObject[\"modFilterTypes\"][mod] = this.modFilterTypes[mod];\n            }\n        } else {\n            throw new Error(\"Unrecognized instrument type\");\n        }\n\n        const envelopes: any[] = [];\n        for (let i = 0; i < this.envelopeCount; i++) {\n            envelopes.push(this.envelopes[i].toJsonObject());\n        }\n        instrumentObject[\"envelopes\"] = envelopes;\n\n        return instrumentObject;\n    }\n\n\n    public fromJsonObject(instrumentObject: any, isNoiseChannel: boolean, isModChannel: boolean, useSlowerRhythm: boolean, useFastTwoNoteArp: boolean, legacyGlobalReverb: number = 0): void {\n        if (instrumentObject == undefined) instrumentObject = {};\n\n        let type: InstrumentType = Config.instrumentTypeNames.indexOf(instrumentObject[\"type\"]);\n        if (<any>type == -1) type = isModChannel ? InstrumentType.mod : (isNoiseChannel ? InstrumentType.noise : InstrumentType.chip);\n        this.setTypeAndReset(type, isNoiseChannel, isModChannel);\n\n        this.effects &= ~(1 << EffectType.panning);\n\n        if (instrumentObject[\"preset\"] != undefined) {\n            this.preset = instrumentObject[\"preset\"] >>> 0;\n        }\n\n        if (instrumentObject[\"volume\"] != undefined) {\n            this.volume = clamp(-Config.volumeRange / 2, (Config.volumeRange / 2) + 1, instrumentObject[\"volume\"] | 0);\n        } else {\n            this.volume = 0;\n        }\n\n        if (instrumentObject[\"envelopeSpeed\"] != undefined) {\n            this.envelopeSpeed = clamp(0, Config.modulators.dictionary[\"envelope speed\"].maxRawVol + 1, instrumentObject[\"envelopeSpeed\"] | 0);\n        } else {\n            this.envelopeSpeed = 12;\n        }\n\n        if (instrumentObject[\"discreteEnvelope\"] != undefined) {\n            this.discreteEnvelope = instrumentObject[\"discreteEnvelope\"];\n        }\n        else {\n            this.discreteEnvelope = false;\n        }\n\n        if (Array.isArray(instrumentObject[\"effects\"])) {\n            let effects: number = 0;\n            for (let i: number = 0; i < instrumentObject[\"effects\"].length; i++) {\n                effects = effects | (1 << Config.effectNames.indexOf(instrumentObject[\"effects\"][i]));\n            }\n            this.effects = (effects & ((1 << EffectType.length) - 1));\n        } else {\n            // The index of these names is reinterpreted as a bitfield, which relies on reverb and chorus being the first effects!\n            const legacyEffectsNames: string[] = [\"none\", \"reverb\", \"chorus\", \"chorus & reverb\"];\n            this.effects = legacyEffectsNames.indexOf(instrumentObject[\"effects\"]);\n            if (this.effects == -1) this.effects = (this.type == InstrumentType.noise) ? 0 : 1;\n        }\n\n        this.transition = Config.transitions.dictionary[\"normal\"].index; // default value.\n        const transitionProperty: any = instrumentObject[\"transition\"] || instrumentObject[\"envelope\"]; // the transition property used to be called envelope, so check that too.\n        if (transitionProperty != undefined) {\n            let transition: Transition | undefined = Config.transitions.dictionary[transitionProperty];\n            if (instrumentObject[\"fadeInSeconds\"] == undefined || instrumentObject[\"fadeOutTicks\"] == undefined) {\n                const legacySettings = (<any>{\n                    \"binary\": { transition: \"interrupt\", fadeInSeconds: 0.0, fadeOutTicks: -1 },\n                    \"seamless\": { transition: \"interrupt\", fadeInSeconds: 0.0, fadeOutTicks: -1 },\n                    \"sudden\": { transition: \"normal\", fadeInSeconds: 0.0, fadeOutTicks: -3 },\n                    \"hard\": { transition: \"normal\", fadeInSeconds: 0.0, fadeOutTicks: -3 },\n                    \"smooth\": { transition: \"normal\", fadeInSeconds: 0.025, fadeOutTicks: -3 },\n                    \"soft\": { transition: \"normal\", fadeInSeconds: 0.025, fadeOutTicks: -3 },\n                    // Note that the old slide transition has the same name as a new slide transition that is different.\n                    // Only apply legacy settings if the instrument JSON was created before, based on the presence\n                    // of the fade in/out fields.\n                    \"slide\": { transition: \"slide in pattern\", fadeInSeconds: 0.025, fadeOutTicks: -3 },\n                    \"cross fade\": { transition: \"normal\", fadeInSeconds: 0.04, fadeOutTicks: 6 },\n                    \"hard fade\": { transition: \"normal\", fadeInSeconds: 0.0, fadeOutTicks: 48 },\n                    \"medium fade\": { transition: \"normal\", fadeInSeconds: 0.0125, fadeOutTicks: 72 },\n                    \"soft fade\": { transition: \"normal\", fadeInSeconds: 0.06, fadeOutTicks: 96 },\n                })[transitionProperty];\n                if (legacySettings != undefined) {\n                    transition = Config.transitions.dictionary[legacySettings.transition];\n                    // These may be overridden below.\n                    this.fadeIn = Synth.secondsToFadeInSetting(legacySettings.fadeInSeconds);\n                    this.fadeOut = Synth.ticksToFadeOutSetting(legacySettings.fadeOutTicks);\n                }\n            }\n            if (transition != undefined) this.transition = transition.index;\n\n            if (this.transition != Config.transitions.dictionary[\"normal\"].index) {\n                // Enable transition if it was used.\n                this.effects = (this.effects | (1 << EffectType.transition));\n            }\n        }\n\n        // Overrides legacy settings in transition above.\n        if (instrumentObject[\"fadeInSeconds\"] != undefined) {\n            this.fadeIn = Synth.secondsToFadeInSetting(+instrumentObject[\"fadeInSeconds\"]);\n        }\n        if (instrumentObject[\"fadeOutTicks\"] != undefined) {\n            this.fadeOut = Synth.ticksToFadeOutSetting(+instrumentObject[\"fadeOutTicks\"]);\n        }\n\n        {\n            // Note that the chord setting may be overridden by instrumentObject[\"chorus\"] below.\n            const chordProperty: any = instrumentObject[\"chord\"];\n            const legacyChordNames: Dictionary<string> = { \"harmony\": \"simultaneous\" };\n            const chord: Chord | undefined = Config.chords.dictionary[legacyChordNames[chordProperty]] || Config.chords.dictionary[chordProperty];\n            if (chord != undefined) {\n                this.chord = chord.index;\n            } else {\n                // Different instruments have different default chord types based on historical behaviour.\n                if (this.type == InstrumentType.noise) {\n                    this.chord = Config.chords.dictionary[\"arpeggio\"].index;\n                } else if (this.type == InstrumentType.pickedString) {\n                    this.chord = Config.chords.dictionary[\"strum\"].index;\n                } else if (this.type == InstrumentType.chip) {\n                    this.chord = Config.chords.dictionary[\"arpeggio\"].index;\n                } else if (this.type == InstrumentType.fm) {\n                    this.chord = Config.chords.dictionary[\"custom interval\"].index;\n                } else {\n                    this.chord = Config.chords.dictionary[\"simultaneous\"].index;\n                }\n            }\n        }\n\n        this.unison = Config.unisons.dictionary[\"none\"].index; // default value.\n        const unisonProperty: any = instrumentObject[\"unison\"] || instrumentObject[\"interval\"] || instrumentObject[\"chorus\"]; // The unison property has gone by various names in the past.\n        if (unisonProperty != undefined) {\n            const legacyChorusNames: Dictionary<string> = { \"union\": \"none\", \"fifths\": \"fifth\", \"octaves\": \"octave\" };\n            const unison: Unison | undefined = Config.unisons.dictionary[legacyChorusNames[unisonProperty]] || Config.unisons.dictionary[unisonProperty];\n            if (unison != undefined) this.unison = unison.index;\n        }\n        if (instrumentObject[\"chorus\"] == \"custom harmony\") {\n            // The original chorus setting had an option that now maps to two different settings. Override those if necessary.\n            this.unison = Config.unisons.dictionary[\"hum\"].index;\n            this.chord = Config.chords.dictionary[\"custom interval\"].index;\n        }\n        if (this.chord != Config.chords.dictionary[\"simultaneous\"].index && !Array.isArray(instrumentObject[\"effects\"])) {\n            // Enable chord if it was used.\n            this.effects = (this.effects | (1 << EffectType.chord));\n        }\n\n        if (instrumentObject[\"pitchShiftSemitones\"] != undefined) {\n            this.pitchShift = clamp(0, Config.pitchShiftRange, Math.round(+instrumentObject[\"pitchShiftSemitones\"]));\n        }\n        if (instrumentObject[\"detuneCents\"] != undefined) {\n            this.detune = clamp(Config.detuneMin, Config.detuneMax + 1, Math.round(Synth.centsToDetune(+instrumentObject[\"detuneCents\"])));\n        }\n\n        this.vibrato = Config.vibratos.dictionary[\"none\"].index; // default value.\n        const vibratoProperty: any = instrumentObject[\"vibrato\"] || instrumentObject[\"effect\"]; // The vibrato property was previously called \"effect\", not to be confused with the current \"effects\".\n        if (vibratoProperty != undefined) {\n\n            const legacyVibratoNames: Dictionary<string> = { \"vibrato light\": \"light\", \"vibrato delayed\": \"delayed\", \"vibrato heavy\": \"heavy\" };\n            const vibrato: Vibrato | undefined = Config.vibratos.dictionary[legacyVibratoNames[unisonProperty]] || Config.vibratos.dictionary[vibratoProperty];\n            if (vibrato != undefined)\n                this.vibrato = vibrato.index;\n            else if (vibratoProperty == \"custom\")\n                this.vibrato = Config.vibratos.length; // custom\n\n            if (this.vibrato == Config.vibratos.length) {\n                this.vibratoDepth = instrumentObject[\"vibratoDepth\"];\n                this.vibratoSpeed = instrumentObject[\"vibratoSpeed\"];\n                this.vibratoDelay = instrumentObject[\"vibratoDelay\"];\n                this.vibratoType = instrumentObject[\"vibratoType\"];\n            }\n            else { // Set defaults for the vibrato profile\n                this.vibratoDepth = Config.vibratos[this.vibrato].amplitude;\n                this.vibratoDelay = Config.vibratos[this.vibrato].delayTicks / 2;\n                this.vibratoSpeed = 10; // default;\n                this.vibratoType = Config.vibratos[this.vibrato].type;\n            }\n\n            // Old songs may have a vibrato effect without explicitly enabling it.\n            if (vibrato != Config.vibratos.dictionary[\"none\"]) {\n                this.effects = (this.effects | (1 << EffectType.vibrato));\n            }\n        }\n\n        if (instrumentObject[\"pan\"] != undefined) {\n            this.pan = clamp(0, Config.panMax + 1, Math.round(Config.panCenter + (instrumentObject[\"pan\"] | 0) * Config.panCenter / 100));\n\n            // Old songs may have a panning effect without explicitly enabling it.\n            if (this.pan != Config.panCenter) {\n                this.effects = (this.effects | (1 << EffectType.panning));\n            }\n        } else {\n            this.pan = Config.panCenter;\n        }\n\n        if (instrumentObject[\"panDelay\"] != undefined) {\n            this.panDelay = (instrumentObject[\"panDelay\"] | 0);\n        } else {\n            this.panDelay = 10;\n        }\n\n        if (instrumentObject[\"detune\"] != undefined) {\n            this.detune = clamp(Config.detuneMin, Config.detuneMax + 1, (instrumentObject[\"detune\"] | 0));\n        }\n        else if (instrumentObject[\"detuneCents\"] == undefined) {\n            this.detune = Config.detuneCenter;\n        }\n\n        if (instrumentObject[\"distortion\"] != undefined) {\n            this.distortion = clamp(0, Config.distortionRange, Math.round((Config.distortionRange - 1) * (instrumentObject[\"distortion\"] | 0) / 100));\n        }\n\n        if (instrumentObject[\"bitcrusherOctave\"] != undefined) {\n            this.bitcrusherFreq = Config.bitcrusherFreqRange - 1 - (+instrumentObject[\"bitcrusherOctave\"]) / Config.bitcrusherOctaveStep;\n        }\n        if (instrumentObject[\"bitcrusherQuantization\"] != undefined) {\n            this.bitcrusherQuantization = clamp(0, Config.bitcrusherQuantizationRange, Math.round((Config.bitcrusherQuantizationRange - 1) * (instrumentObject[\"bitcrusherQuantization\"] | 0) / 100));\n        }\n\n        if (instrumentObject[\"echoSustain\"] != undefined) {\n            this.echoSustain = clamp(0, Config.echoSustainRange, Math.round((Config.echoSustainRange - 1) * (instrumentObject[\"echoSustain\"] | 0) / 100));\n        }\n        if (instrumentObject[\"echoDelayBeats\"] != undefined) {\n            this.echoDelay = clamp(0, Config.echoDelayRange, Math.round((+instrumentObject[\"echoDelayBeats\"]) * (Config.ticksPerPart * Config.partsPerBeat) / Config.echoDelayStepTicks - 1.0));\n        }\n\n        if (!isNaN(instrumentObject[\"chorus\"])) {\n            this.chorus = clamp(0, Config.chorusRange, Math.round((Config.chorusRange - 1) * (instrumentObject[\"chorus\"] | 0) / 100));\n        }\n\n        if (instrumentObject[\"reverb\"] != undefined) {\n            this.reverb = clamp(0, Config.reverbRange, Math.round((Config.reverbRange - 1) * (instrumentObject[\"reverb\"] | 0) / 100));\n        } else {\n            this.reverb = legacyGlobalReverb;\n        }\n\n        if (instrumentObject[\"pulseWidth\"] != undefined) {\n            this.pulseWidth = clamp(1, Config.pulseWidthRange + 1, Math.round(instrumentObject[\"pulseWidth\"]));\n        } else {\n            this.pulseWidth = Config.pulseWidthRange;\n        }\n\n        if (instrumentObject[\"dynamism\"] != undefined) {\n\t\t\tthis.supersawDynamism = clamp(0, Config.supersawDynamismMax + 1, Math.round(Config.supersawDynamismMax * (instrumentObject[\"dynamism\"] | 0) / 100));\n\t\t} else {\n\t\t\tthis.supersawDynamism = Config.supersawDynamismMax;\n\t\t}\n\t\tif (instrumentObject[\"spread\"] != undefined) {\n\t\t\tthis.supersawSpread = clamp(0, Config.supersawSpreadMax + 1, Math.round(Config.supersawSpreadMax * (instrumentObject[\"spread\"] | 0) / 100));\n\t\t} else {\n\t\t\tthis.supersawSpread = Math.ceil(Config.supersawSpreadMax / 2.0);\n\t\t}\n\t\tif (instrumentObject[\"shape\"] != undefined) {\n\t\t\tthis.supersawShape = clamp(0, Config.supersawShapeMax + 1, Math.round(Config.supersawShapeMax * (instrumentObject[\"shape\"] | 0) / 100));\n\t\t} else {\n\t\t\tthis.supersawShape = 0;\n\t\t}\n\n        if (instrumentObject[\"harmonics\"] != undefined) {\n            for (let i: number = 0; i < Config.harmonicsControlPoints; i++) {\n                this.harmonicsWave.harmonics[i] = Math.max(0, Math.min(Config.harmonicsMax, Math.round(Config.harmonicsMax * (+instrumentObject[\"harmonics\"][i]) / 100)));\n            }\n            this.harmonicsWave.markCustomWaveDirty();\n        } else {\n            this.harmonicsWave.reset();\n        }\n\n        if (instrumentObject[\"spectrum\"] != undefined) {\n            for (let i: number = 0; i < Config.spectrumControlPoints; i++) {\n                this.spectrumWave.spectrum[i] = Math.max(0, Math.min(Config.spectrumMax, Math.round(Config.spectrumMax * (+instrumentObject[\"spectrum\"][i]) / 100)));\n                this.spectrumWave.markCustomWaveDirty();\n            }\n        } else {\n            this.spectrumWave.reset(isNoiseChannel);\n        }\n\n        if (instrumentObject[\"stringSustain\"] != undefined) {\n            this.stringSustain = clamp(0, Config.stringSustainRange, Math.round((Config.stringSustainRange - 1) * (instrumentObject[\"stringSustain\"] | 0) / 100));\n        } else {\n            this.stringSustain = 10;\n        }\n        this.stringSustainType = Config.enableAcousticSustain ? Config.sustainTypeNames.indexOf(instrumentObject[\"stringSustainType\"]) : SustainType.bright;\n\t\tif (<any>this.stringSustainType == -1) this.stringSustainType = SustainType.bright;\n\n        if (this.type == InstrumentType.noise) {\n            this.chipNoise = Config.chipNoises.findIndex(wave => wave.name == instrumentObject[\"wave\"]);\n            if (this.chipNoise == -1) this.chipNoise = 1;\n        }\n\n        const legacyEnvelopeNames: Dictionary<string> = { \"custom\": \"note size\", \"steady\": \"none\", \"pluck 1\": \"twang 1\", \"pluck 2\": \"twang 2\", \"pluck 3\": \"twang 3\" };\n        const getEnvelope = (name: any): Envelope | undefined => (legacyEnvelopeNames[name] != undefined) ? Config.envelopes.dictionary[legacyEnvelopeNames[name]] : Config.envelopes.dictionary[name];\n\n        if (this.type == InstrumentType.drumset) {\n            if (instrumentObject[\"drums\"] != undefined) {\n                for (let j: number = 0; j < Config.drumCount; j++) {\n                    const drum: any = instrumentObject[\"drums\"][j];\n                    if (drum == undefined) continue;\n\n                    this.drumsetEnvelopes[j] = Config.envelopes.dictionary[\"twang 2\"].index; // default value.\n                    if (drum[\"filterEnvelope\"] != undefined) {\n                        const envelope: Envelope | undefined = getEnvelope(drum[\"filterEnvelope\"]);\n                        if (envelope != undefined) this.drumsetEnvelopes[j] = envelope.index;\n                    }\n                    if (drum[\"spectrum\"] != undefined) {\n                        for (let i: number = 0; i < Config.spectrumControlPoints; i++) {\n                            this.drumsetSpectrumWaves[j].spectrum[i] = Math.max(0, Math.min(Config.spectrumMax, Math.round(Config.spectrumMax * (+drum[\"spectrum\"][i]) / 100)));\n                        }\n                    }\n                    this.drumsetSpectrumWaves[j].markCustomWaveDirty();\n                }\n            }\n        }\n\n        if (this.type == InstrumentType.chip) {\n            const legacyWaveNames: Dictionary<number> = { \"triangle\": 1, \"square\": 2, \"pulse wide\": 3, \"pulse narrow\": 4, \"sawtooth\": 5, \"double saw\": 6, \"double pulse\": 7, \"spiky\": 8, \"plateau\": 0 };\n            this.chipWave = legacyWaveNames[instrumentObject[\"wave\"]] != undefined ? legacyWaveNames[instrumentObject[\"wave\"]] : Config.chipWaves.findIndex(wave => wave.name == instrumentObject[\"wave\"]);\n            if (this.chipWave == -1) this.chipWave = 1;\n        }\n\n        if (this.type == InstrumentType.fm) {\n            this.algorithm = Config.algorithms.findIndex(algorithm => algorithm.name == instrumentObject[\"algorithm\"]);\n            if (this.algorithm == -1) this.algorithm = 0;\n            this.feedbackType = Config.feedbacks.findIndex(feedback => feedback.name == instrumentObject[\"feedbackType\"]);\n            if (this.feedbackType == -1) this.feedbackType = 0;\n            if (instrumentObject[\"feedbackAmplitude\"] != undefined) {\n                this.feedbackAmplitude = clamp(0, Config.operatorAmplitudeMax + 1, instrumentObject[\"feedbackAmplitude\"] | 0);\n            } else {\n                this.feedbackAmplitude = 0;\n            }\n\n            for (let j: number = 0; j < Config.operatorCount; j++) {\n                const operator: Operator = this.operators[j];\n                let operatorObject: any = undefined;\n                if (instrumentObject[\"operators\"] != undefined) operatorObject = instrumentObject[\"operators\"][j];\n                if (operatorObject == undefined) operatorObject = {};\n\n                operator.frequency = Config.operatorFrequencies.findIndex(freq => freq.name == operatorObject[\"frequency\"]);\n                if (operator.frequency == -1) operator.frequency = 0;\n                if (operatorObject[\"amplitude\"] != undefined) {\n                    operator.amplitude = clamp(0, Config.operatorAmplitudeMax + 1, operatorObject[\"amplitude\"] | 0);\n                } else {\n                    operator.amplitude = 0;\n                }\n                if (operatorObject[\"waveform\"] != undefined) {\n                    operator.waveform = Config.operatorWaves.findIndex(wave => wave.name == operatorObject[\"waveform\"]);\n                    if (operator.waveform == -1) {\n                        // GoldBox compatibility\n                        if (operatorObject[\"waveform\"] == \"square\") {\n                            operator.waveform = Config.operatorWaves.dictionary[\"pulse width\"].index;\n                            operator.pulseWidth = 5;\n                        } else {\n                            operator.waveform = 0;\n                        }\n\n                    }\n                } else {\n                    operator.waveform = 0;\n                }\n                if (operatorObject[\"pulseWidth\"] != undefined) {\n                    operator.pulseWidth = operatorObject[\"pulseWidth\"] | 0;\n                } else {\n                    operator.pulseWidth = 5;\n                }\n            }\n        }\n        else if (this.type == InstrumentType.customChipWave) {\n            if (instrumentObject[\"customChipWave\"]) {\n\n                for (let i: number = 0; i < 64; i++) {\n                    this.customChipWave[i] = instrumentObject[\"customChipWave\"][i];\n                }\n\n\n                let sum: number = 0.0;\n                for (let i: number = 0; i < this.customChipWave.length; i++) {\n                    sum += this.customChipWave[i];\n                }\n                const average: number = sum / this.customChipWave.length;\n\n                // Perform the integral on the wave. The chipSynth will perform the derivative to get the original wave back but with antialiasing.\n                let cumulative: number = 0;\n                let wavePrev: number = 0;\n                for (let i: number = 0; i < this.customChipWave.length; i++) {\n                    cumulative += wavePrev;\n                    wavePrev = this.customChipWave[i] - average;\n                    this.customChipWaveIntegral[i] = cumulative;\n                }\n\n                // 65th, last sample is for anti-aliasing\n                this.customChipWaveIntegral[64] = 0.0;\n            }\n        } else if (this.type == InstrumentType.mod) {\n            if (instrumentObject[\"modChannels\"] != undefined) {\n                for (let mod: number = 0; mod < Config.modCount; mod++) {\n                    this.modChannels[mod] = instrumentObject[\"modChannels\"][mod];\n                    this.modInstruments[mod] = instrumentObject[\"modInstruments\"][mod];\n                    this.modulators[mod] = instrumentObject[\"modSettings\"][mod];\n                    // Due to an oversight, this isn't included in JSONs prior to JB 2.6.\n                    if (instrumentObject[\"modFilterTypes\"] != undefined)\n                        this.modFilterTypes[mod] = instrumentObject[\"modFilterTypes\"][mod];\n                }\n            }\n        }\n\n        if (this.type != InstrumentType.mod) {\n            // Arpeggio speed\n            if (this.chord == Config.chords.dictionary[\"arpeggio\"].index && instrumentObject[\"arpeggioSpeed\"] != undefined) {\n                this.arpeggioSpeed = instrumentObject[\"arpeggioSpeed\"];\n            }\n            else {\n                this.arpeggioSpeed = (useSlowerRhythm) ? 9 : 12; // Decide whether to import arps as x3/4 speed\n            }\n\n            if (instrumentObject[\"fastTwoNoteArp\"] != undefined) {\n                this.fastTwoNoteArp = instrumentObject[\"fastTwoNoteArp\"];\n            }\n            else {\n                this.fastTwoNoteArp = useFastTwoNoteArp;\n            }\n\n            if (instrumentObject[\"clicklessTransition\"] != undefined) {\n                this.clicklessTransition = instrumentObject[\"clicklessTransition\"];\n            }\n            else {\n                this.clicklessTransition = false;\n            }\n\n            if (instrumentObject[\"aliases\"] != undefined) {\n                this.aliases = instrumentObject[\"aliases\"];\n            }\n            else {\n                this.aliases = false;\n            }\n\n            if (instrumentObject[\"noteFilterType\"] != undefined) {\n                this.noteFilterType = instrumentObject[\"noteFilterType\"];\n            }\n            if (instrumentObject[\"noteSimpleCut\"] != undefined) {\n                this.noteFilterSimpleCut = instrumentObject[\"noteSimpleCut\"];\n            }\n            if (instrumentObject[\"noteSimplePeak\"] != undefined) {\n                this.noteFilterSimplePeak = instrumentObject[\"noteSimplePeak\"];\n            }\n            if (instrumentObject[\"noteFilter\"] != undefined) {\n                this.noteFilter.fromJsonObject(instrumentObject[\"noteFilter\"]);\n            } else {\n                this.noteFilter.reset();\n            }\n            for (let i: number = 0; i < Config.filterMorphCount; i++) {\n                if (Array.isArray(instrumentObject[\"noteSubFilters\" + i])) {\n                    this.noteSubFilters[i] = new FilterSettings();\n                    this.noteSubFilters[i]!.fromJsonObject(instrumentObject[\"noteSubFilters\" + i]);\n                }\n            }\n            if (instrumentObject[\"eqFilterType\"] != undefined) {\n                this.eqFilterType = instrumentObject[\"eqFilterType\"];\n            }\n            if (instrumentObject[\"eqSimpleCut\"] != undefined) {\n                this.eqFilterSimpleCut = instrumentObject[\"eqSimpleCut\"];\n            }\n            if (instrumentObject[\"eqSimplePeak\"] != undefined) {\n                this.eqFilterSimplePeak = instrumentObject[\"eqSimplePeak\"];\n            }\n            if (Array.isArray(instrumentObject[\"eqFilter\"])) {\n                this.eqFilter.fromJsonObject(instrumentObject[\"eqFilter\"]);\n            } else {\n                this.eqFilter.reset();\n\n                const legacySettings: LegacySettings = {};\n\n                // Try converting from legacy filter settings.\n                const filterCutoffMaxHz: number = 8000;\n                const filterCutoffRange: number = 11;\n                const filterResonanceRange: number = 8;\n                if (instrumentObject[\"filterCutoffHz\"] != undefined) {\n                    legacySettings.filterCutoff = clamp(0, filterCutoffRange, Math.round((filterCutoffRange - 1) + 2.0 * Math.log((instrumentObject[\"filterCutoffHz\"] | 0) / filterCutoffMaxHz) / Math.LN2));\n                } else {\n                    legacySettings.filterCutoff = (this.type == InstrumentType.chip) ? 6 : 10;\n                }\n                if (instrumentObject[\"filterResonance\"] != undefined) {\n                    legacySettings.filterResonance = clamp(0, filterResonanceRange, Math.round((filterResonanceRange - 1) * (instrumentObject[\"filterResonance\"] | 0) / 100));\n                } else {\n                    legacySettings.filterResonance = 0;\n                }\n\n                legacySettings.filterEnvelope = getEnvelope(instrumentObject[\"filterEnvelope\"]);\n                legacySettings.pulseEnvelope = getEnvelope(instrumentObject[\"pulseEnvelope\"]);\n                legacySettings.feedbackEnvelope = getEnvelope(instrumentObject[\"feedbackEnvelope\"]);\n                if (Array.isArray(instrumentObject[\"operators\"])) {\n                    legacySettings.operatorEnvelopes = [];\n                    for (let j: number = 0; j < Config.operatorCount; j++) {\n                        let envelope: Envelope | undefined;\n                        if (instrumentObject[\"operators\"][j] != undefined) {\n                            envelope = getEnvelope(instrumentObject[\"operators\"][j][\"envelope\"]);\n                        }\n                        legacySettings.operatorEnvelopes[j] = (envelope != undefined) ? envelope : Config.envelopes.dictionary[\"none\"];\n                    }\n                }\n\n                // Try converting from even older legacy filter settings.\n                if (instrumentObject[\"filter\"] != undefined) {\n                    const legacyToCutoff: number[] = [10, 6, 3, 0, 8, 5, 2];\n                    const legacyToEnvelope: string[] = [\"none\", \"none\", \"none\", \"none\", \"decay 1\", \"decay 2\", \"decay 3\"];\n                    const filterNames: string[] = [\"none\", \"bright\", \"medium\", \"soft\", \"decay bright\", \"decay medium\", \"decay soft\"];\n                    const oldFilterNames: Dictionary<number> = { \"sustain sharp\": 1, \"sustain medium\": 2, \"sustain soft\": 3, \"decay sharp\": 4 };\n                    let legacyFilter: number = oldFilterNames[instrumentObject[\"filter\"]] != undefined ? oldFilterNames[instrumentObject[\"filter\"]] : filterNames.indexOf(instrumentObject[\"filter\"]);\n                    if (legacyFilter == -1) legacyFilter = 0;\n                    legacySettings.filterCutoff = legacyToCutoff[legacyFilter];\n                    legacySettings.filterEnvelope = getEnvelope(legacyToEnvelope[legacyFilter]);\n                    legacySettings.filterResonance = 0;\n                }\n\n                this.convertLegacySettings(legacySettings, true);\n            }\n\n            for (let i: number = 0; i < Config.filterMorphCount; i++) {\n                if (Array.isArray(instrumentObject[\"eqSubFilters\" + i])) {\n                    this.eqSubFilters[i] = new FilterSettings();\n                    this.eqSubFilters[i]!.fromJsonObject(instrumentObject[\"eqSubFilters\" + i]);\n                }\n            }\n\n            if (Array.isArray(instrumentObject[\"envelopes\"])) {\n                const envelopeArray: any[] = instrumentObject[\"envelopes\"];\n                for (let i = 0; i < envelopeArray.length; i++) {\n                    if (this.envelopeCount >= Config.maxEnvelopeCount) break;\n                    const tempEnvelope: EnvelopeSettings = new EnvelopeSettings();\n                    tempEnvelope.fromJsonObject(envelopeArray[i]);\n                    this.addEnvelope(tempEnvelope.target, tempEnvelope.index, tempEnvelope.envelope);\n                }\n            }\n        }\n    }\n\n    public getLargestControlPointCount(forNoteFilter: boolean) {\n        let largest: number;\n        if (forNoteFilter) {\n            largest = this.noteFilter.controlPointCount;\n            for (let i: number = 0; i < Config.filterMorphCount; i++) {\n                if (this.noteSubFilters[i] != null && this.noteSubFilters[i]!.controlPointCount > largest)\n                    largest = this.noteSubFilters[i]!.controlPointCount;\n            }\n        }\n        else {\n            largest = this.eqFilter.controlPointCount;\n            for (let i: number = 0; i < Config.filterMorphCount; i++) {\n                if (this.eqSubFilters[i] != null && this.eqSubFilters[i]!.controlPointCount > largest)\n                    largest = this.eqSubFilters[i]!.controlPointCount;\n            }\n        }\n        return largest;\n    }\n\n    public static frequencyFromPitch(pitch: number): number {\n        return 440.0 * Math.pow(2.0, (pitch - 69.0) / 12.0);\n    }\n\n    public addEnvelope(target: number, index: number, envelope: number): void {\n        let makeEmpty: boolean = false;\n        if (!this.supportsEnvelopeTarget(target, index)) makeEmpty = true;\n        if (this.envelopeCount >= Config.maxEnvelopeCount) throw new Error();\n        while (this.envelopes.length <= this.envelopeCount) this.envelopes[this.envelopes.length] = new EnvelopeSettings();\n        const envelopeSettings: EnvelopeSettings = this.envelopes[this.envelopeCount];\n        envelopeSettings.target = makeEmpty ? Config.instrumentAutomationTargets.dictionary[\"none\"].index : target;\n        envelopeSettings.index = makeEmpty ? 0 : index;\n        envelopeSettings.envelope = envelope;\n        this.envelopeCount++;\n    }\n\n    public supportsEnvelopeTarget(target: number, index: number): boolean {\n        const automationTarget: AutomationTarget = Config.instrumentAutomationTargets[target];\n        if (automationTarget.computeIndex == null && automationTarget.name != \"none\") {\n\t\t\treturn false;\n\t\t}\n        if (index >= automationTarget.maxCount) {\n            return false;\n        }\n        if (automationTarget.compatibleInstruments != null && automationTarget.compatibleInstruments.indexOf(this.type) == -1) {\n            return false;\n        }\n        if (automationTarget.effect != null && (this.effects & (1 << automationTarget.effect)) == 0) {\n            return false;\n        }\n        if (automationTarget.isFilter) {\n            //if (automationTarget.perNote) {\n            let useControlPointCount: number = this.noteFilter.controlPointCount;\n            if (this.noteFilterType)\n                useControlPointCount = 1;\n            if (index >= useControlPointCount) return false;\n            //} else {\n            //\tif (index >= this.eqFilter.controlPointCount)   return false;\n            //}\n        }\n        return true;\n    }\n\n    public clearInvalidEnvelopeTargets(): void {\n        for (let envelopeIndex: number = 0; envelopeIndex < this.envelopeCount; envelopeIndex++) {\n            const target: number = this.envelopes[envelopeIndex].target;\n            const index: number = this.envelopes[envelopeIndex].index;\n            if (!this.supportsEnvelopeTarget(target, index)) {\n                this.envelopes[envelopeIndex].target = Config.instrumentAutomationTargets.dictionary[\"none\"].index;\n                this.envelopes[envelopeIndex].index = 0;\n            }\n        }\n    }\n\n    public getTransition(): Transition {\n        return effectsIncludeTransition(this.effects) ? Config.transitions[this.transition] :\n            (this.type == InstrumentType.mod ? Config.transitions.dictionary[\"interrupt\"] : Config.transitions.dictionary[\"normal\"]);\n    }\n\n    public getFadeInSeconds(): number {\n        return (this.type == InstrumentType.drumset) ? 0.0 : Synth.fadeInSettingToSeconds(this.fadeIn);\n    }\n\n    public getFadeOutTicks(): number {\n        return (this.type == InstrumentType.drumset) ? Config.drumsetFadeOutTicks : Synth.fadeOutSettingToTicks(this.fadeOut)\n    }\n\n    public getChord(): Chord {\n        return effectsIncludeChord(this.effects) ? Config.chords[this.chord] : Config.chords.dictionary[\"simultaneous\"];\n    }\n\n    public getDrumsetEnvelope(pitch: number): Envelope {\n        if (this.type != InstrumentType.drumset) throw new Error(\"Can't getDrumsetEnvelope() for non-drumset.\");\n        return Config.envelopes[this.drumsetEnvelopes[pitch]];\n    }\n}\n\nexport class Channel {\n    public octave: number = 0;\n    public readonly instruments: Instrument[] = [];\n    public readonly patterns: Pattern[] = [];\n    public readonly bars: number[] = [];\n    public muted: boolean = false;\n    public name: string = \"\";\n}\n\nexport class Song {\n    private static readonly _format: string = \"JummBox\";\n    private static readonly _oldestBeepboxVersion: number = 2;\n    private static readonly _latestBeepboxVersion: number = 9;\n    private static readonly _oldestJummBoxVersion: number = 1;\n    private static readonly _latestJummBoxVersion: number = 6;\n    // One-character variant detection at the start of URL to distinguish variants such as JummBox.\n    private static readonly _variant = 0x6A; //\"j\" ~ jummbox\n\n    public title: string;\n    public scale: number;\n    public key: number;\n    public tempo: number;\n    public reverb: number;\n    public beatsPerBar: number;\n    public barCount: number;\n    public patternsPerChannel: number;\n    public rhythm: number;\n    public layeredInstruments: boolean;\n    public patternInstruments: boolean;\n    public loopStart: number;\n    public loopLength: number;\n    public pitchChannelCount: number;\n    public noiseChannelCount: number;\n    public modChannelCount: number;\n    public readonly channels: Channel[] = [];\n    public limitDecay: number = 4.0;\n    public limitRise: number = 4000.0;\n    public compressionThreshold: number = 1.0;\n    public limitThreshold: number = 1.0;\n    public compressionRatio: number = 1.0;\n    public limitRatio: number = 1.0;\n    public masterGain: number = 1.0;\n    public inVolumeCap: number = 0.0;\n    public outVolumeCap: number = 0.0;\n\n    constructor(string?: string) {\n        if (string != undefined) {\n            this.fromBase64String(string);\n        } else {\n            this.initToDefault(true);\n        }\n    }\n\n    // Returns the ideal new note volume when dragging (max volume for a normal note, a \"neutral\" value for mod notes based on how they work)\n    public getNewNoteVolume = (isMod: boolean, modChannel?: number, modInstrument?: number, modCount?: number): number => {\n        if (!isMod || modChannel == undefined || modInstrument == undefined || modCount == undefined)\n            return 6;\n        else {\n            // Sigh, the way pitches count up and the visual ordering in the UI are flipped.\n            modCount = Config.modCount - modCount - 1;\n\n            let vol: number | undefined = Config.modulators[this.channels[modChannel].instruments[modInstrument].modulators[modCount]].newNoteVol;\n\n            // For tempo, actually use user defined tempo\n            let tempoIndex: number = Config.modulators.dictionary[\"tempo\"].index;\n            if (this.channels[modChannel].instruments[modInstrument].modulators[modCount] == tempoIndex) {\n                vol = this.tempo - Config.modulators[tempoIndex].convertRealFactor;\n            }\n\n            if (vol != undefined)\n                return vol;\n            else\n                return 6;\n        }\n    }\n\n\n    public getVolumeCap = (isMod: boolean, modChannel?: number, modInstrument?: number, modCount?: number): number => {\n        if (!isMod || modChannel == undefined || modInstrument == undefined || modCount == undefined)\n            return 6;\n        else {\n            // Sigh, the way pitches count up and the visual ordering in the UI are flipped.\n            modCount = Config.modCount - modCount - 1;\n\n            let instrument: Instrument = this.channels[modChannel].instruments[modInstrument];\n            let modulator = Config.modulators[instrument.modulators[modCount]];\n            let cap: number | undefined = modulator.maxRawVol;\n\n            if (cap != undefined) {\n                // For filters, cap is dependent on which filter setting is targeted\n                if (modulator.name == \"eq filter\" || modulator.name == \"note filter\") {\n                    // type 0: number of filter morphs\n                    // type 1/odd: number of filter x positions\n                    // type 2/even: number of filter y positions\n                    cap = Config.filterMorphCount - 1;\n                    if (instrument.modFilterTypes[modCount] > 0 && instrument.modFilterTypes[modCount] % 2) {\n                        cap = Config.filterFreqRange;\n                    } else if (instrument.modFilterTypes[modCount] > 0) {\n                        cap = Config.filterGainRange;\n                    }\n                }\n                return cap;\n            }\n            else\n                return 6;\n        }\n    }\n\n    public getVolumeCapForSetting = (isMod: boolean, modSetting: number, filterType?: number): number => {\n        if (!isMod)\n            return Config.noteSizeMax;\n        else {\n            let cap: number | undefined = Config.modulators[modSetting].maxRawVol;\n            if (cap != undefined) {\n\n                // For filters, cap is dependent on which filter setting is targeted\n                if (filterType != undefined && (Config.modulators[modSetting].name == \"eq filter\" || Config.modulators[modSetting].name == \"note filter\")) {\n                    // type 0: number of filter morphs\n                    // type 1/odd: number of filter x positions\n                    // type 2/even: number of filter y positions\n                    cap = Config.filterMorphCount - 1;\n                    if (filterType > 0 && filterType % 2) {\n                        cap = Config.filterFreqRange;\n                    } else if (filterType > 0) {\n                        cap = Config.filterGainRange;\n                    }\n                }\n\n                return cap;\n            }\n            else\n                return Config.noteSizeMax;\n        }\n    }\n\n    public getChannelCount(): number {\n        return this.pitchChannelCount + this.noiseChannelCount + this.modChannelCount;\n    }\n\n    public getMaxInstrumentsPerChannel(): number {\n        return Math.max(\n            this.layeredInstruments ? Config.layeredInstrumentCountMax : Config.instrumentCountMin,\n            this.patternInstruments ? Config.patternInstrumentCountMax : Config.instrumentCountMin);\n    }\n\n    public getMaxInstrumentsPerPattern(channelIndex: number): number {\n        return this.getMaxInstrumentsPerPatternForChannel(this.channels[channelIndex]);\n    }\n\n    public getMaxInstrumentsPerPatternForChannel(channel: Channel): number {\n        return this.layeredInstruments\n            ? Math.min(Config.layeredInstrumentCountMax, channel.instruments.length)\n            : 1;\n    }\n\n    public getChannelIsNoise(channelIndex: number): boolean {\n        return (channelIndex >= this.pitchChannelCount && channelIndex < this.pitchChannelCount + this.noiseChannelCount);\n    }\n\n    public getChannelIsMod(channelIndex: number): boolean {\n        return (channelIndex >= this.pitchChannelCount + this.noiseChannelCount);\n    }\n\n    public initToDefault(andResetChannels: boolean = true): void {\n        this.scale = 0;\n        this.key = 0;\n        this.loopStart = 0;\n        this.loopLength = 4;\n        this.tempo = 150;\n        this.reverb = 0;\n        this.beatsPerBar = 8;\n        this.barCount = 16;\n        this.patternsPerChannel = 8;\n        this.rhythm = 1;\n        this.layeredInstruments = false;\n        this.patternInstruments = false;\n\n        this.title = \"Unnamed\";\n        document.title = this.title + \" - \" + EditorConfig.versionDisplayName;\n\n        if (andResetChannels) {\n            this.pitchChannelCount = 3;\n            this.noiseChannelCount = 1;\n            this.modChannelCount = 0;\n            for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n                const isNoiseChannel: boolean = channelIndex >= this.pitchChannelCount && channelIndex < this.pitchChannelCount + this.noiseChannelCount;\n                const isModChannel: boolean = channelIndex >= this.pitchChannelCount + this.noiseChannelCount;\n                if (this.channels.length <= channelIndex) {\n                    this.channels[channelIndex] = new Channel();\n                }\n                const channel: Channel = this.channels[channelIndex];\n                channel.octave = Math.max(3 - channelIndex, 0); // [3, 2, 1, 0]; Descending octaves with drums at zero in last channel.\n\n                for (let pattern: number = 0; pattern < this.patternsPerChannel; pattern++) {\n                    if (channel.patterns.length <= pattern) {\n                        channel.patterns[pattern] = new Pattern();\n                    } else {\n                        channel.patterns[pattern].reset();\n                    }\n                }\n                channel.patterns.length = this.patternsPerChannel;\n\n                for (let instrument: number = 0; instrument < Config.instrumentCountMin; instrument++) {\n                    if (channel.instruments.length <= instrument) {\n                        channel.instruments[instrument] = new Instrument(isNoiseChannel, isModChannel);\n                    }\n                    channel.instruments[instrument].setTypeAndReset(isModChannel ? InstrumentType.mod : (isNoiseChannel ? InstrumentType.noise : InstrumentType.chip), isNoiseChannel, isModChannel);\n                }\n                channel.instruments.length = Config.instrumentCountMin;\n\n                for (let bar: number = 0; bar < this.barCount; bar++) {\n                    channel.bars[bar] = bar < 4 ? 1 : 0;\n                }\n                channel.bars.length = this.barCount;\n            }\n            this.channels.length = this.getChannelCount();\n        }\n    }\n\n    public toBase64String(): string {\n        let bits: BitFieldWriter;\n        let buffer: number[] = [];\n\n        buffer.push(Song._variant);\n        buffer.push(base64IntToCharCode[Song._latestJummBoxVersion]);\n\n        // Length of the song name string\n        buffer.push(SongTagCode.songTitle);\n        var encodedSongTitle: string = encodeURIComponent(this.title);\n        buffer.push(base64IntToCharCode[encodedSongTitle.length >> 6], base64IntToCharCode[encodedSongTitle.length & 0x3f]);\n\n        // Actual encoded string follows\n        for (let i: number = 0; i < encodedSongTitle.length; i++) {\n            buffer.push(encodedSongTitle.charCodeAt(i));\n        }\n\n        buffer.push(SongTagCode.channelCount, base64IntToCharCode[this.pitchChannelCount], base64IntToCharCode[this.noiseChannelCount], base64IntToCharCode[this.modChannelCount]);\n        buffer.push(SongTagCode.scale, base64IntToCharCode[this.scale]);\n        buffer.push(SongTagCode.key, base64IntToCharCode[this.key]);\n        buffer.push(SongTagCode.loopStart, base64IntToCharCode[this.loopStart >> 6], base64IntToCharCode[this.loopStart & 0x3f]);\n        buffer.push(SongTagCode.loopEnd, base64IntToCharCode[(this.loopLength - 1) >> 6], base64IntToCharCode[(this.loopLength - 1) & 0x3f]);\n        buffer.push(SongTagCode.tempo, base64IntToCharCode[this.tempo >> 6], base64IntToCharCode[this.tempo & 0x3F]);\n        buffer.push(SongTagCode.beatCount, base64IntToCharCode[this.beatsPerBar - 1]);\n        buffer.push(SongTagCode.barCount, base64IntToCharCode[(this.barCount - 1) >> 6], base64IntToCharCode[(this.barCount - 1) & 0x3f]);\n        buffer.push(SongTagCode.patternCount, base64IntToCharCode[(this.patternsPerChannel - 1) >> 6], base64IntToCharCode[(this.patternsPerChannel - 1) & 0x3f]);\n        buffer.push(SongTagCode.rhythm, base64IntToCharCode[this.rhythm]);\n\n        // Push limiter settings, but only if they aren't the default!\n        buffer.push(SongTagCode.limiterSettings);\n        if (this.compressionRatio != 1.0 || this.limitRatio != 1.0 || this.limitRise != 4000.0 || this.limitDecay != 4.0 || this.limitThreshold != 1.0 || this.compressionThreshold != 1.0 || this.masterGain != 1.0) {\n            buffer.push(base64IntToCharCode[Math.round(this.compressionRatio < 1 ? this.compressionRatio * 10 : 10 + (this.compressionRatio - 1) * 60)]); // 0 ~ 1.15 uneven, mapped to 0 ~ 20\n            buffer.push(base64IntToCharCode[Math.round(this.limitRatio < 1 ? this.limitRatio * 10 : 9 + this.limitRatio)]); // 0 ~ 10 uneven, mapped to 0 ~ 20\n            buffer.push(base64IntToCharCode[this.limitDecay]); // directly 1 ~ 30\n            buffer.push(base64IntToCharCode[Math.round((this.limitRise - 2000.0) / 250.0)]); // 2000 ~ 10000 by 250, mapped to 0 ~ 32\n            buffer.push(base64IntToCharCode[Math.round(this.compressionThreshold * 20)]); // 0 ~ 1.1 by 0.05, mapped to 0 ~ 22\n            buffer.push(base64IntToCharCode[Math.round(this.limitThreshold * 20)]); // 0 ~ 2 by 0.05, mapped to 0 ~ 40\n            buffer.push(base64IntToCharCode[Math.round(this.masterGain * 50) >> 6], base64IntToCharCode[Math.round(this.masterGain * 50) & 0x3f]); // 0 ~ 5 by 0.02, mapped to 0 ~ 250\n        }\n        else {\n            buffer.push(base64IntToCharCode[0x3f]); // Not using limiter\n        }\n\n        buffer.push(SongTagCode.channelNames);\n        for (let channel: number = 0; channel < this.getChannelCount(); channel++) {\n            // Length of the channel name string\n            var encodedChannelName: string = encodeURIComponent(this.channels[channel].name);\n            buffer.push(base64IntToCharCode[encodedChannelName.length >> 6], base64IntToCharCode[encodedChannelName.length & 0x3f]);\n\n            // Actual encoded string follows\n            for (let i: number = 0; i < encodedChannelName.length; i++) {\n                buffer.push(encodedChannelName.charCodeAt(i));\n            }\n        }\n\n        buffer.push(SongTagCode.instrumentCount, base64IntToCharCode[(<any>this.layeredInstruments << 1) | <any>this.patternInstruments]);\n        if (this.layeredInstruments || this.patternInstruments) {\n            for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n                buffer.push(base64IntToCharCode[this.channels[channelIndex].instruments.length - Config.instrumentCountMin]);\n            }\n        }\n\n        buffer.push(SongTagCode.channelOctave);\n        for (let channelIndex: number = 0; channelIndex < this.pitchChannelCount; channelIndex++) {\n            buffer.push(base64IntToCharCode[this.channels[channelIndex].octave]);\n        }\n\n        for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n            for (let i: number = 0; i < this.channels[channelIndex].instruments.length; i++) {\n                const instrument: Instrument = this.channels[channelIndex].instruments[i];\n                buffer.push(SongTagCode.startInstrument, base64IntToCharCode[instrument.type]);\n                buffer.push(SongTagCode.volume, base64IntToCharCode[(instrument.volume + Config.volumeRange / 2) >> 6], base64IntToCharCode[(instrument.volume + Config.volumeRange / 2) & 0x3f]);\n                buffer.push(SongTagCode.preset, base64IntToCharCode[instrument.preset >> 6], base64IntToCharCode[instrument.preset & 63]);\n\n                buffer.push(SongTagCode.eqFilter);\n                buffer.push(base64IntToCharCode[+instrument.eqFilterType]);\n                if (instrument.eqFilterType) {\n                    buffer.push(base64IntToCharCode[instrument.eqFilterSimpleCut]);\n                    buffer.push(base64IntToCharCode[instrument.eqFilterSimplePeak]);\n                }\n                else {\n                    if (instrument.eqFilter == null) {\n                        // Push null filter settings\n                        buffer.push(base64IntToCharCode[0]);\n                        console.log(\"Null EQ filter settings detected in toBase64String for channelIndex \" + channelIndex + \", instrumentIndex \" + i);\n                    } else {\n                        buffer.push(base64IntToCharCode[instrument.eqFilter.controlPointCount]);\n                        for (let j: number = 0; j < instrument.eqFilter.controlPointCount; j++) {\n                            const point: FilterControlPoint = instrument.eqFilter.controlPoints[j];\n                            buffer.push(base64IntToCharCode[point.type], base64IntToCharCode[Math.round(point.freq)], base64IntToCharCode[Math.round(point.gain)]);\n                        }\n                    }\n\n                    // Push subfilters as well. Skip Index 0, is a copy of the base filter.\n                    let usingSubFilterBitfield: number = 0;\n                    for (let j: number = 0; j < Config.filterMorphCount - 1; j++) {\n                        usingSubFilterBitfield |= (+(instrument.eqSubFilters[j + 1] != null) << j);\n                    }\n                    // Put subfilter usage into 2 chars (12 bits)\n                    buffer.push(base64IntToCharCode[usingSubFilterBitfield >> 6], base64IntToCharCode[usingSubFilterBitfield & 63]);\n                    // Put subfilter info in for all used subfilters\n                    for (let j: number = 0; j < Config.filterMorphCount - 1; j++) {\n                        if (usingSubFilterBitfield & (1 << j)) {\n                            buffer.push(base64IntToCharCode[instrument.eqSubFilters[j + 1]!.controlPointCount]);\n                            for (let k: number = 0; k < instrument.eqSubFilters[j + 1]!.controlPointCount; k++) {\n                                const point: FilterControlPoint = instrument.eqSubFilters[j + 1]!.controlPoints[k];\n                                buffer.push(base64IntToCharCode[point.type], base64IntToCharCode[Math.round(point.freq)], base64IntToCharCode[Math.round(point.gain)]);\n                            }\n                        }\n                    }\n                }\n\n                // The list of enabled effects is represented as a 12-bit bitfield using two six-bit characters.\n                buffer.push(SongTagCode.effects, base64IntToCharCode[instrument.effects >> 6], base64IntToCharCode[instrument.effects & 63]);\n                if (effectsIncludeNoteFilter(instrument.effects)) {\n                    buffer.push(base64IntToCharCode[+instrument.noteFilterType]);\n                    if (instrument.noteFilterType) {\n                        buffer.push(base64IntToCharCode[instrument.noteFilterSimpleCut]);\n                        buffer.push(base64IntToCharCode[instrument.noteFilterSimplePeak]);\n                    }\n                    else {\n                        if (instrument.noteFilter == null) {\n                            // Push null filter settings\n                            buffer.push(base64IntToCharCode[0]);\n                            console.log(\"Null note filter settings detected in toBase64String for channelIndex \" + channelIndex + \", instrumentIndex \" + i);\n                        }\n                        else {\n                            buffer.push(base64IntToCharCode[instrument.noteFilter.controlPointCount]);\n                            for (let j: number = 0; j < instrument.noteFilter.controlPointCount; j++) {\n                                const point: FilterControlPoint = instrument.noteFilter.controlPoints[j];\n                                buffer.push(base64IntToCharCode[point.type], base64IntToCharCode[Math.round(point.freq)], base64IntToCharCode[Math.round(point.gain)]);\n                            }\n                        }\n\n                        // Push subfilters as well. Skip Index 0, is a copy of the base filter.\n                        let usingSubFilterBitfield: number = 0;\n                        for (let j: number = 0; j < Config.filterMorphCount - 1; j++) {\n                            usingSubFilterBitfield |= (+(instrument.noteSubFilters[j + 1] != null) << j);\n                        }\n                        // Put subfilter usage into 2 chars (12 bits)\n                        buffer.push(base64IntToCharCode[usingSubFilterBitfield >> 6], base64IntToCharCode[usingSubFilterBitfield & 63]);\n                        // Put subfilter info in for all used subfilters\n                        for (let j: number = 0; j < Config.filterMorphCount - 1; j++) {\n                            if (usingSubFilterBitfield & (1 << j)) {\n                                buffer.push(base64IntToCharCode[instrument.noteSubFilters[j + 1]!.controlPointCount]);\n                                for (let k: number = 0; k < instrument.noteSubFilters[j + 1]!.controlPointCount; k++) {\n                                    const point: FilterControlPoint = instrument.noteSubFilters[j + 1]!.controlPoints[k];\n                                    buffer.push(base64IntToCharCode[point.type], base64IntToCharCode[Math.round(point.freq)], base64IntToCharCode[Math.round(point.gain)]);\n                                }\n                            }\n                        }\n                    }\n                }\n                if (effectsIncludeTransition(instrument.effects)) {\n                    buffer.push(base64IntToCharCode[instrument.transition]);\n                }\n                if (effectsIncludeChord(instrument.effects)) {\n                    buffer.push(base64IntToCharCode[instrument.chord]);\n                    // Custom arpeggio speed... only if the instrument arpeggiates.\n                    if (instrument.chord == Config.chords.dictionary[\"arpeggio\"].index) {\n                        buffer.push(base64IntToCharCode[instrument.arpeggioSpeed]);\n                        buffer.push(base64IntToCharCode[+instrument.fastTwoNoteArp]); // Two note arp setting piggybacks on this\n                    }\n                }\n                if (effectsIncludePitchShift(instrument.effects)) {\n                    buffer.push(base64IntToCharCode[instrument.pitchShift]);\n                }\n                if (effectsIncludeDetune(instrument.effects)) {\n                    buffer.push(base64IntToCharCode[(instrument.detune - Config.detuneMin) >> 6], base64IntToCharCode[(instrument.detune - Config.detuneMin) & 0x3F]);\n                }\n                if (effectsIncludeVibrato(instrument.effects)) {\n                    buffer.push(base64IntToCharCode[instrument.vibrato]);\n                    // Custom vibrato settings\n                    if (instrument.vibrato == Config.vibratos.length) {\n                        buffer.push(base64IntToCharCode[Math.round(instrument.vibratoDepth * 25)]);\n                        buffer.push(base64IntToCharCode[instrument.vibratoSpeed]);\n                        buffer.push(base64IntToCharCode[Math.round(instrument.vibratoDelay)]);\n                        buffer.push(base64IntToCharCode[instrument.vibratoType]);\n                    }\n                }\n                if (effectsIncludeDistortion(instrument.effects)) {\n                    buffer.push(base64IntToCharCode[instrument.distortion]);\n                    // Aliasing is tied into distortion for now\n                    buffer.push(base64IntToCharCode[+instrument.aliases]);\n                }\n                if (effectsIncludeBitcrusher(instrument.effects)) {\n                    buffer.push(base64IntToCharCode[instrument.bitcrusherFreq], base64IntToCharCode[instrument.bitcrusherQuantization]);\n                }\n                if (effectsIncludePanning(instrument.effects)) {\n                    buffer.push(base64IntToCharCode[instrument.pan >> 6], base64IntToCharCode[instrument.pan & 0x3f]);\n                    buffer.push(base64IntToCharCode[instrument.panDelay]);\n                }\n                if (effectsIncludeChorus(instrument.effects)) {\n                    buffer.push(base64IntToCharCode[instrument.chorus]);\n                }\n                if (effectsIncludeEcho(instrument.effects)) {\n                    buffer.push(base64IntToCharCode[instrument.echoSustain], base64IntToCharCode[instrument.echoDelay]);\n                }\n                if (effectsIncludeReverb(instrument.effects)) {\n                    buffer.push(base64IntToCharCode[instrument.reverb]);\n                }\n\n                if (instrument.type != InstrumentType.drumset) {\n                    buffer.push(SongTagCode.fadeInOut, base64IntToCharCode[instrument.fadeIn], base64IntToCharCode[instrument.fadeOut]);\n                    // Transition info follows transition song tag\n                    buffer.push(base64IntToCharCode[+instrument.clicklessTransition]);\n                }\n\n                if (instrument.type == InstrumentType.harmonics || instrument.type == InstrumentType.pickedString) {\n                    buffer.push(SongTagCode.harmonics);\n                    const harmonicsBits: BitFieldWriter = new BitFieldWriter();\n                    for (let i: number = 0; i < Config.harmonicsControlPoints; i++) {\n                        harmonicsBits.write(Config.harmonicsControlPointBits, instrument.harmonicsWave.harmonics[i]);\n                    }\n                    harmonicsBits.encodeBase64(buffer);\n                }\n\n                if (instrument.type == InstrumentType.chip) {\n                    buffer.push(SongTagCode.wave, base64IntToCharCode[instrument.chipWave]);\n                    buffer.push(SongTagCode.unison, base64IntToCharCode[instrument.unison]);\n                } else if (instrument.type == InstrumentType.fm) {\n                    buffer.push(SongTagCode.algorithm, base64IntToCharCode[instrument.algorithm]);\n                    buffer.push(SongTagCode.feedbackType, base64IntToCharCode[instrument.feedbackType]);\n                    buffer.push(SongTagCode.feedbackAmplitude, base64IntToCharCode[instrument.feedbackAmplitude]);\n\n                    buffer.push(SongTagCode.operatorFrequencies);\n                    for (let o: number = 0; o < Config.operatorCount; o++) {\n                        buffer.push(base64IntToCharCode[instrument.operators[o].frequency]);\n                    }\n                    buffer.push(SongTagCode.operatorAmplitudes);\n                    for (let o: number = 0; o < Config.operatorCount; o++) {\n                        buffer.push(base64IntToCharCode[instrument.operators[o].amplitude]);\n                    }\n\n                    buffer.push(SongTagCode.operatorWaves);\n                    for (let o: number = 0; o < Config.operatorCount; o++) {\n                        buffer.push(base64IntToCharCode[instrument.operators[o].waveform]);\n                        // Push pulse width if that type is used\n                        if (instrument.operators[o].waveform == 3) {\n                            buffer.push(base64IntToCharCode[instrument.operators[o].pulseWidth]);\n                        }\n                    }\n                } else if (instrument.type == InstrumentType.customChipWave) {\n                    buffer.push(SongTagCode.wave, base64IntToCharCode[instrument.chipWave]);\n                    buffer.push(SongTagCode.unison, base64IntToCharCode[instrument.unison]);\n                    buffer.push(SongTagCode.customChipWave);\n                    // Push custom wave values\n                    for (let j: number = 0; j < 64; j++) {\n                        buffer.push(base64IntToCharCode[(instrument.customChipWave[j] + 24) as number]);\n                    }\n                } else if (instrument.type == InstrumentType.noise) {\n                    buffer.push(SongTagCode.wave, base64IntToCharCode[instrument.chipNoise]);\n                } else if (instrument.type == InstrumentType.spectrum) {\n                    buffer.push(SongTagCode.spectrum);\n                    const spectrumBits: BitFieldWriter = new BitFieldWriter();\n                    for (let i: number = 0; i < Config.spectrumControlPoints; i++) {\n                        spectrumBits.write(Config.spectrumControlPointBits, instrument.spectrumWave.spectrum[i]);\n                    }\n                    spectrumBits.encodeBase64(buffer);\n                } else if (instrument.type == InstrumentType.drumset) {\n                    buffer.push(SongTagCode.drumsetEnvelopes);\n                    for (let j: number = 0; j < Config.drumCount; j++) {\n                        buffer.push(base64IntToCharCode[instrument.drumsetEnvelopes[j]]);\n                    }\n\n                    buffer.push(SongTagCode.spectrum);\n                    const spectrumBits: BitFieldWriter = new BitFieldWriter();\n                    for (let j: number = 0; j < Config.drumCount; j++) {\n                        for (let i: number = 0; i < Config.spectrumControlPoints; i++) {\n                            spectrumBits.write(Config.spectrumControlPointBits, instrument.drumsetSpectrumWaves[j].spectrum[i]);\n                        }\n                    }\n                    spectrumBits.encodeBase64(buffer);\n                } else if (instrument.type == InstrumentType.harmonics) {\n                    buffer.push(SongTagCode.unison, base64IntToCharCode[instrument.unison]);\n                } else if (instrument.type == InstrumentType.pwm) {\n                    buffer.push(SongTagCode.pulseWidth, base64IntToCharCode[instrument.pulseWidth]);\n                } else if (instrument.type == InstrumentType.supersaw) {\n\t\t\t\t\tbuffer.push(SongTagCode.supersaw, base64IntToCharCode[instrument.supersawDynamism], base64IntToCharCode[instrument.supersawSpread], base64IntToCharCode[instrument.supersawShape]);\n\t\t\t\t\tbuffer.push(SongTagCode.pulseWidth, base64IntToCharCode[instrument.pulseWidth]);\n\t\t\t\t} else if (instrument.type == InstrumentType.pickedString) {\n                    if (Config.stringSustainRange > 0x20 || SustainType.length > 2) {\n\t\t\t\t\t\tthrow new Error(\"Not enough bits to represent sustain value and type in same base64 character.\");\n\t\t\t\t\t}\n                    buffer.push(SongTagCode.unison, base64IntToCharCode[instrument.unison]);\n                    buffer.push(SongTagCode.stringSustain, base64IntToCharCode[instrument.stringSustain | (instrument.stringSustainType << 5)]);\n                } else if (instrument.type == InstrumentType.mod) {\n                    // Handled down below. Could be moved, but meh.\n                } else {\n                    throw new Error(\"Unknown instrument type.\");\n                }\n\n                buffer.push(SongTagCode.envelopes, base64IntToCharCode[instrument.envelopeCount]);\n                // Added in JB v6: Options for envelopes come next.\n                buffer.push(base64IntToCharCode[instrument.envelopeSpeed]);\n                buffer.push(base64IntToCharCode[+instrument.discreteEnvelope]);\n                for (let envelopeIndex: number = 0; envelopeIndex < instrument.envelopeCount; envelopeIndex++) {\n                    buffer.push(base64IntToCharCode[instrument.envelopes[envelopeIndex].target]);\n                    if (Config.instrumentAutomationTargets[instrument.envelopes[envelopeIndex].target].maxCount > 1) {\n                        buffer.push(base64IntToCharCode[instrument.envelopes[envelopeIndex].index]);\n                    }\n                    buffer.push(base64IntToCharCode[instrument.envelopes[envelopeIndex].envelope]);\n                }\n            }\n        }\n\n        buffer.push(SongTagCode.bars);\n        bits = new BitFieldWriter();\n        let neededBits: number = 0;\n        while ((1 << neededBits) < this.patternsPerChannel + 1) neededBits++;\n        for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) for (let i: number = 0; i < this.barCount; i++) {\n            bits.write(neededBits, this.channels[channelIndex].bars[i]);\n        }\n        bits.encodeBase64(buffer);\n\n        buffer.push(SongTagCode.patterns);\n        bits = new BitFieldWriter();\n        const shapeBits: BitFieldWriter = new BitFieldWriter();\n        const bitsPerNoteSize: number = Song.getNeededBits(Config.noteSizeMax);\n        for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n            const channel: Channel = this.channels[channelIndex];\n            const maxInstrumentsPerPattern: number = this.getMaxInstrumentsPerPattern(channelIndex);\n            const isNoiseChannel: boolean = this.getChannelIsNoise(channelIndex);\n            const isModChannel: boolean = this.getChannelIsMod(channelIndex);\n            const neededInstrumentCountBits: number = Song.getNeededBits(maxInstrumentsPerPattern - Config.instrumentCountMin);\n            const neededInstrumentIndexBits: number = Song.getNeededBits(channel.instruments.length - 1);\n\n            // Some info about modulator settings immediately follows in mod channels.\n            if (isModChannel) {\n                const neededModInstrumentIndexBits: number = Song.getNeededBits(this.getMaxInstrumentsPerChannel() + 2);\n                for (let instrumentIndex: number = 0; instrumentIndex < channel.instruments.length; instrumentIndex++) {\n\n                    let instrument: Instrument = this.channels[channelIndex].instruments[instrumentIndex];\n\n                    for (let mod: number = 0; mod < Config.modCount; mod++) {\n                        const modChannel: number = instrument.modChannels[mod];\n                        const modInstrument: number = instrument.modInstruments[mod];\n                        const modSetting: number = instrument.modulators[mod];\n                        const modFilter: number = instrument.modFilterTypes[mod];\n\n                        // Still using legacy \"mod status\" format, but doing it manually as it's only used in the URL now.\n                        // 0 - For pitch/noise\n                        // 1 - (used to be For noise, not needed)\n                        // 2 - For song\n                        // 3 - None\n\n                        let status: number = Config.modulators[modSetting].forSong ? 2 : 0;\n                        if (modSetting == Config.modulators.dictionary[\"none\"].index)\n                            status = 3;\n\n                        bits.write(2, status);\n\n                        // Channel/Instrument is only used if the status isn't \"song\" or \"none\".\n                        if (status == 0 || status == 1) {\n                            bits.write(8, modChannel);\n                            bits.write(neededModInstrumentIndexBits, modInstrument);\n                        }\n\n                        // Only used if setting isn't \"none\".\n                        if (status != 3) {\n                            bits.write(6, modSetting);\n                        }\n\n                        // Write mod filter info, only if this is a filter mod\n                        if (Config.modulators[instrument.modulators[mod]].name == \"eq filter\" || Config.modulators[instrument.modulators[mod]].name == \"note filter\") {\n                            bits.write(6, modFilter);\n                        }\n                    }\n                }\n            }\n            const octaveOffset: number = (isNoiseChannel || isModChannel) ? 0 : channel.octave * Config.pitchesPerOctave;\n            let lastPitch: number = (isNoiseChannel ? 4 : octaveOffset);\n            const recentPitches: number[] = isModChannel ? [0, 1, 2, 3, 4, 5] : (isNoiseChannel ? [4, 6, 7, 2, 3, 8, 0, 10] : [0, 7, 12, 19, 24, -5, -12]);\n            const recentShapes: string[] = [];\n            for (let i: number = 0; i < recentPitches.length; i++) {\n                recentPitches[i] += octaveOffset;\n            }\n            for (const pattern of channel.patterns) {\n                if (this.patternInstruments) {\n                    const instrumentCount: number = validateRange(Config.instrumentCountMin, maxInstrumentsPerPattern, pattern.instruments.length);\n                    bits.write(neededInstrumentCountBits, instrumentCount - Config.instrumentCountMin);\n                    for (let i: number = 0; i < instrumentCount; i++) {\n                        bits.write(neededInstrumentIndexBits, pattern.instruments[i]);\n                    }\n                }\n\n                if (pattern.notes.length > 0) {\n                    bits.write(1, 1);\n\n                    let curPart: number = 0;\n                    for (const note of pattern.notes) {\n\n                        // For mod channels, a negative offset may be necessary.\n                        if (note.start < curPart && isModChannel) {\n                            bits.write(2, 0); // rest, then...\n                            bits.write(1, 1); // negative offset\n                            bits.writePartDuration(curPart - note.start);\n                        }\n\n                        if (note.start > curPart) {\n                            bits.write(2, 0); // rest\n                            if (isModChannel) bits.write(1, 0); // positive offset, only needed for mod channels\n                            bits.writePartDuration(note.start - curPart);\n                        }\n\n                        shapeBits.clear();\n\n                        // Old format was:\n                        // 0: 1 pitch, 10: 2 pitches, 110: 3 pitches, 111: 4 pitches\n                        // New format is:\n                        //      0: 1 pitch\n                        // 1[XXX]: 3 bits of binary signifying 2+ pitches\n                        if (note.pitches.length == 1) {\n                            shapeBits.write(1, 0);\n                        } else {\n                            shapeBits.write(1, 1);\n                            shapeBits.write(3, note.pitches.length - 2);\n                        }\n\n                        shapeBits.writePinCount(note.pins.length - 1);\n\n                        if (!isModChannel) {\n                            shapeBits.write(bitsPerNoteSize, note.pins[0].size); // volume\n                        }\n                        else {\n                            shapeBits.write(9, note.pins[0].size); // Modulator value. 9 bits for now = 512 max mod value?\n                        }\n\n                        let shapePart: number = 0;\n                        let startPitch: number = note.pitches[0];\n                        let currentPitch: number = startPitch;\n                        const pitchBends: number[] = [];\n                        for (let i: number = 1; i < note.pins.length; i++) {\n                            const pin: NotePin = note.pins[i];\n                            const nextPitch: number = startPitch + pin.interval;\n                            if (currentPitch != nextPitch) {\n                                shapeBits.write(1, 1);\n                                pitchBends.push(nextPitch);\n                                currentPitch = nextPitch;\n                            } else {\n                                shapeBits.write(1, 0);\n                            }\n                            shapeBits.writePartDuration(pin.time - shapePart);\n                            shapePart = pin.time;\n                            if (!isModChannel) {\n                                shapeBits.write(bitsPerNoteSize, pin.size);\n                            } else {\n                                shapeBits.write(9, pin.size);\n                            }\n                        }\n\n                        const shapeString: string = String.fromCharCode.apply(null, shapeBits.encodeBase64([]));\n                        const shapeIndex: number = recentShapes.indexOf(shapeString);\n                        if (shapeIndex == -1) {\n                            bits.write(2, 1); // new shape\n                            bits.concat(shapeBits);\n                        } else {\n                            bits.write(1, 1); // old shape\n                            bits.writeLongTail(0, 0, shapeIndex);\n                            recentShapes.splice(shapeIndex, 1);\n                        }\n                        recentShapes.unshift(shapeString);\n                        if (recentShapes.length > 10) recentShapes.pop();\n\n                        const allPitches: number[] = note.pitches.concat(pitchBends);\n                        for (let i: number = 0; i < allPitches.length; i++) {\n                            const pitch: number = allPitches[i];\n                            const pitchIndex: number = recentPitches.indexOf(pitch);\n                            if (pitchIndex == -1) {\n                                let interval: number = 0;\n                                let pitchIter: number = lastPitch;\n                                if (pitchIter < pitch) {\n                                    while (pitchIter != pitch) {\n                                        pitchIter++;\n                                        if (recentPitches.indexOf(pitchIter) == -1) interval++;\n                                    }\n                                } else {\n                                    while (pitchIter != pitch) {\n                                        pitchIter--;\n                                        if (recentPitches.indexOf(pitchIter) == -1) interval--;\n                                    }\n                                }\n                                bits.write(1, 0);\n                                bits.writePitchInterval(interval);\n                            } else {\n                                bits.write(1, 1);\n                                bits.write(4, pitchIndex);\n                                recentPitches.splice(pitchIndex, 1);\n                            }\n                            recentPitches.unshift(pitch);\n                            if (recentPitches.length > 16) recentPitches.pop();\n\n                            if (i == note.pitches.length - 1) {\n                                lastPitch = note.pitches[0];\n                            } else {\n                                lastPitch = pitch;\n                            }\n                        }\n\n                        if (note.start == 0) {\n                            bits.write(1, note.continuesLastPattern ? 1 : 0);\n                        }\n\n                        curPart = note.end;\n                    }\n\n                    if (curPart < this.beatsPerBar * Config.partsPerBeat + (+isModChannel)) {\n                        bits.write(2, 0); // rest\n                        if (isModChannel) bits.write(1, 0); // positive offset\n                        bits.writePartDuration(this.beatsPerBar * Config.partsPerBeat + (+isModChannel) - curPart);\n                    }\n                } else {\n                    bits.write(1, 0);\n                }\n            }\n        }\n        let stringLength: number = bits.lengthBase64();\n        let digits: number[] = [];\n        while (stringLength > 0) {\n            digits.unshift(base64IntToCharCode[stringLength & 0x3f]);\n            stringLength = stringLength >> 6;\n        }\n        buffer.push(base64IntToCharCode[digits.length]);\n        Array.prototype.push.apply(buffer, digits); // append digits to buffer.\n        bits.encodeBase64(buffer);\n\n        const maxApplyArgs: number = 64000;\n        if (buffer.length < maxApplyArgs) {\n            // Note: Function.apply may break for long argument lists. \n            return String.fromCharCode.apply(null, buffer);\n        } else {\n            let result: string = \"\";\n            for (let i: number = 0; i < buffer.length; i += maxApplyArgs) {\n                result += String.fromCharCode.apply(null, buffer.slice(i, i + maxApplyArgs));\n            }\n            return result;\n        }\n    }\n\n    private static _envelopeFromLegacyIndex(legacyIndex: number): Envelope {\n        // I swapped the order of \"custom\"/\"steady\", now \"none\"/\"note size\".\n        if (legacyIndex == 0) legacyIndex = 1; else if (legacyIndex == 1) legacyIndex = 0;\n        return Config.envelopes[clamp(0, Config.envelopes.length, legacyIndex)];\n    }\n\n    public fromBase64String(compressed: string): void {\n        if (compressed == null || compressed == \"\") {\n            this.initToDefault(true);\n            return;\n        }\n        let charIndex: number = 0;\n        // skip whitespace.\n        while (compressed.charCodeAt(charIndex) <= CharCode.SPACE) charIndex++;\n        // skip hash mark.\n        if (compressed.charCodeAt(charIndex) == CharCode.HASH) charIndex++;\n        // if it starts with curly brace, treat it as JSON.\n        if (compressed.charCodeAt(charIndex) == CharCode.LEFT_CURLY_BRACE) {\n            this.fromJsonObject(JSON.parse(charIndex == 0 ? compressed : compressed.substring(charIndex)));\n            return;\n        }\n\n        const variantTest: number = compressed.charCodeAt(charIndex);\n        let fromBeepBox: boolean;\n        let fromJummBox: boolean;\n\n        // Detect variant here. If version doesn't match known variant, assume it is a vanilla string which does not report variant.\n        if (variantTest == 0x6A) { //\"j\"\n            fromBeepBox = false;\n            fromJummBox = true;\n            charIndex++;\n        } else {\n            fromBeepBox = true;\n            fromJummBox = false;\n        }\n\n        const version: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n        if (fromBeepBox && (version == -1 || version > Song._latestBeepboxVersion || version < Song._oldestBeepboxVersion)) return;\n        if (fromJummBox && (version == -1 || version > Song._latestJummBoxVersion || version < Song._oldestJummBoxVersion)) return;\n        const beforeTwo: boolean = version < 2;\n        const beforeThree: boolean = version < 3;\n        const beforeFour: boolean = version < 4;\n        const beforeFive: boolean = version < 5;\n        const beforeSix: boolean = version < 6;\n        const beforeSeven: boolean = version < 7;\n        const beforeEight: boolean = version < 8;\n        const beforeNine: boolean = version < 9;\n        this.initToDefault((fromBeepBox && beforeNine) || (fromJummBox && beforeFive));\n        const forceSimpleFilter: boolean = (fromBeepBox && beforeNine || fromJummBox && beforeFive);\n\n        if (beforeThree && fromBeepBox) {\n            // Originally, the only instrument transition was \"instant\" and the only drum wave was \"retro\".\n            for (const channel of this.channels) {\n                channel.instruments[0].transition = Config.transitions.dictionary[\"interrupt\"].index;\n                channel.instruments[0].effects |= 1 << EffectType.transition;\n            }\n            this.channels[3].instruments[0].chipNoise = 0;\n        }\n\n        let legacySettingsCache: LegacySettings[][] | null = null;\n        if ((fromBeepBox && beforeNine) || (fromJummBox && beforeFive)) {\n            // Unfortunately, old versions of BeepBox had a variety of different ways of saving\n            // filter-and-envelope-related parameters in the URL, and none of them directly\n            // correspond to the new way of saving these parameters. We can approximate the old\n            // settings by collecting all the old settings for an instrument and passing them to\n            // convertLegacySettings(), so I use this data structure to collect the settings\n            // for each instrument if necessary.\n            legacySettingsCache = [];\n            for (let i: number = legacySettingsCache.length; i < this.getChannelCount(); i++) {\n                legacySettingsCache[i] = [];\n                for (let j: number = 0; j < Config.instrumentCountMin; j++) legacySettingsCache[i][j] = {};\n            }\n        }\n\n        let legacyGlobalReverb: number = 0; // beforeNine reverb was song-global, record that reverb here and adapt it to instruments as needed.\n\n        let instrumentChannelIterator: number = 0;\n        let instrumentIndexIterator: number = -1;\n        let command: number;\n        let useSlowerArpSpeed: boolean = false;\n        let useFastTwoNoteArp: boolean = false;\n        while (charIndex < compressed.length) switch (command = compressed.charCodeAt(charIndex++)) {\n            case SongTagCode.songTitle: {\n                // Length of song name string\n                var songNameLength = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                this.title = decodeURIComponent(compressed.substring(charIndex, charIndex + songNameLength));\n                document.title = this.title + \" - \" + EditorConfig.versionDisplayName;\n\n                charIndex += songNameLength;\n            } break;\n            case SongTagCode.channelCount: {\n                this.pitchChannelCount = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                this.noiseChannelCount = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                if (fromBeepBox || beforeTwo) {\n                    // No mod channel support before jummbox v2\n                    this.modChannelCount = 0;\n                } else {\n                    this.modChannelCount = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                }\n                this.pitchChannelCount = validateRange(Config.pitchChannelCountMin, Config.pitchChannelCountMax, this.pitchChannelCount);\n                this.noiseChannelCount = validateRange(Config.noiseChannelCountMin, Config.noiseChannelCountMax, this.noiseChannelCount);\n                this.modChannelCount = validateRange(Config.modChannelCountMin, Config.modChannelCountMax, this.modChannelCount);\n\n                for (let channelIndex = this.channels.length; channelIndex < this.getChannelCount(); channelIndex++) {\n                    this.channels[channelIndex] = new Channel();\n                }\n                this.channels.length = this.getChannelCount();\n                if ((fromBeepBox && beforeNine) || (fromJummBox && beforeFive)) {\n                    for (let i: number = legacySettingsCache!.length; i < this.getChannelCount(); i++) {\n                        legacySettingsCache![i] = [];\n                        for (let j: number = 0; j < Config.instrumentCountMin; j++) legacySettingsCache![i][j] = {};\n                    }\n                }\n            } break;\n            case SongTagCode.scale: {\n                this.scale = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                // All the scales were jumbled around by Jummbox. Just convert to free.\n                if (fromBeepBox) this.scale = 0;\n            } break;\n            case SongTagCode.key: {\n                if (beforeSeven && fromBeepBox) {\n                    this.key = clamp(0, Config.keys.length, 11 - base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                } else {\n                    this.key = clamp(0, Config.keys.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                }\n            } break;\n            case SongTagCode.loopStart: {\n                if (beforeFive && fromBeepBox) {\n                    this.loopStart = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                } else {\n                    this.loopStart = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                }\n            } break;\n            case SongTagCode.loopEnd: {\n                if (beforeFive && fromBeepBox) {\n                    this.loopLength = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                } else {\n                    this.loopLength = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1;\n                }\n            } break;\n            case SongTagCode.tempo: {\n                if (beforeFour && fromBeepBox) {\n                    this.tempo = [95, 120, 151, 190][base64CharCodeToInt[compressed.charCodeAt(charIndex++)]];\n                } else if (beforeSeven && fromBeepBox) {\n                    this.tempo = [88, 95, 103, 111, 120, 130, 140, 151, 163, 176, 190, 206, 222, 240, 259][base64CharCodeToInt[compressed.charCodeAt(charIndex++)]];\n                } else {\n                    this.tempo = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) | (base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                }\n                this.tempo = clamp(Config.tempoMin, Config.tempoMax + 1, this.tempo);\n            } break;\n            case SongTagCode.reverb: {\n                if (beforeNine && fromBeepBox) {\n                    legacyGlobalReverb = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 12;\n                    legacyGlobalReverb = clamp(0, Config.reverbRange, legacyGlobalReverb);\n                } else if (beforeFive && fromJummBox) {\n                    legacyGlobalReverb = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                    legacyGlobalReverb = clamp(0, Config.reverbRange, legacyGlobalReverb);\n                } else {\n                    // Do nothing, BeepBox v9+ do not support song-wide reverb - JummBox still does via modulator.\n                }\n            } break;\n            case SongTagCode.beatCount: {\n                if (beforeThree && fromBeepBox) {\n                    this.beatsPerBar = [6, 7, 8, 9, 10][base64CharCodeToInt[compressed.charCodeAt(charIndex++)]];\n                } else {\n                    this.beatsPerBar = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1;\n                }\n                this.beatsPerBar = Math.max(Config.beatsPerBarMin, Math.min(Config.beatsPerBarMax, this.beatsPerBar));\n            } break;\n            case SongTagCode.barCount: {\n                const barCount: number = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1;\n                this.barCount = validateRange(Config.barCountMin, Config.barCountMax, barCount);\n                for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n                    for (let bar = this.channels[channelIndex].bars.length; bar < this.barCount; bar++) {\n                        this.channels[channelIndex].bars[bar] = (bar < 4) ? 1 : 0;\n                    }\n                    this.channels[channelIndex].bars.length = this.barCount;\n                }\n            } break;\n            case SongTagCode.patternCount: {\n                let patternsPerChannel: number;\n                if (beforeEight && fromBeepBox) {\n                    patternsPerChannel = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1;\n                } else {\n                    patternsPerChannel = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1;\n                }\n                this.patternsPerChannel = validateRange(1, Config.barCountMax, patternsPerChannel);\n                const channelCount: number = this.getChannelCount();\n                for (let channelIndex: number = 0; channelIndex < channelCount; channelIndex++) {\n                    const patterns: Pattern[] = this.channels[channelIndex].patterns;\n                    for (let pattern = patterns.length; pattern < this.patternsPerChannel; pattern++) {\n                        patterns[pattern] = new Pattern();\n                    }\n                    patterns.length = this.patternsPerChannel;\n                }\n            } break;\n            case SongTagCode.instrumentCount: {\n                if ((beforeNine && fromBeepBox) || (beforeFive && fromJummBox)) {\n                    const instrumentsPerChannel: number = validateRange(Config.instrumentCountMin, Config.patternInstrumentCountMax, base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + Config.instrumentCountMin);\n                    this.layeredInstruments = false;\n                    this.patternInstruments = (instrumentsPerChannel > 1);\n\n                    for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n                        const isNoiseChannel: boolean = channelIndex >= this.pitchChannelCount && channelIndex < this.pitchChannelCount + this.noiseChannelCount;\n                        const isModChannel: boolean = channelIndex >= this.pitchChannelCount + this.noiseChannelCount;\n\n                        for (let instrumentIndex: number = this.channels[channelIndex].instruments.length; instrumentIndex < instrumentsPerChannel; instrumentIndex++) {\n                            this.channels[channelIndex].instruments[instrumentIndex] = new Instrument(isNoiseChannel, isModChannel);\n                        }\n                        this.channels[channelIndex].instruments.length = instrumentsPerChannel;\n                        if (beforeSix && fromBeepBox) {\n                            for (let instrumentIndex: number = 0; instrumentIndex < instrumentsPerChannel; instrumentIndex++) {\n                                this.channels[channelIndex].instruments[instrumentIndex].setTypeAndReset(isNoiseChannel ? InstrumentType.noise : InstrumentType.chip, isNoiseChannel, isModChannel);\n                            }\n                        }\n\n                        for (let j: number = legacySettingsCache![channelIndex].length; j < instrumentsPerChannel; j++) {\n                            legacySettingsCache![channelIndex][j] = {};\n                        }\n                    }\n                } else {\n                    const instrumentsFlagBits: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                    this.layeredInstruments = (instrumentsFlagBits & (1 << 1)) != 0;\n                    this.patternInstruments = (instrumentsFlagBits & (1 << 0)) != 0;\n                    for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n                        let instrumentCount: number = 1;\n                        if (this.layeredInstruments || this.patternInstruments) {\n                            instrumentCount = validateRange(Config.instrumentCountMin, this.getMaxInstrumentsPerChannel(), base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + Config.instrumentCountMin);\n                        }\n                        const channel: Channel = this.channels[channelIndex];\n                        const isNoiseChannel: boolean = this.getChannelIsNoise(channelIndex);\n                        const isModChannel: boolean = this.getChannelIsMod(channelIndex);\n                        for (let i: number = channel.instruments.length; i < instrumentCount; i++) {\n                            channel.instruments[i] = new Instrument(isNoiseChannel, isModChannel);\n                        }\n                        channel.instruments.length = instrumentCount;\n                    }\n                }\n            } break;\n            case SongTagCode.rhythm: {\n                this.rhythm = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                // Port all arpeggio speeds over to match what they were, before arpeggio speed was decoupled from rhythm.\n                if (fromJummBox && beforeThree || fromBeepBox) {\n                    // These are all the rhythms that had 4 ticks/arpeggio instead of 3.\n                    if (this.rhythm == Config.rhythms.dictionary[\"÷3 (triplets)\"].index || this.rhythm == Config.rhythms.dictionary[\"÷6\"].index) {\n                        useSlowerArpSpeed = true;\n                    }\n                    // Use faster two note arp on these rhythms\n                    if (this.rhythm >= Config.rhythms.dictionary[\"÷6\"].index) {\n                        useFastTwoNoteArp = true;\n                    }\n                }\n            } break;\n            case SongTagCode.channelOctave: {\n                if (beforeThree && fromBeepBox) {\n                    const channelIndex: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                    this.channels[channelIndex].octave = clamp(0, Config.pitchOctaves, base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1);\n                    if (channelIndex >= this.pitchChannelCount) this.channels[channelIndex].octave = 0;\n                } else if ((beforeNine && fromBeepBox) || (beforeFive && fromJummBox)) {\n                    for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n                        this.channels[channelIndex].octave = clamp(0, Config.pitchOctaves, base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1);\n                        if (channelIndex >= this.pitchChannelCount) this.channels[channelIndex].octave = 0;\n                    }\n                } else {\n                    for (let channelIndex: number = 0; channelIndex < this.pitchChannelCount; channelIndex++) {\n                        this.channels[channelIndex].octave = clamp(0, Config.pitchOctaves, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                    }\n                    for (let channelIndex: number = this.pitchChannelCount; channelIndex < this.getChannelCount(); channelIndex++) {\n                        this.channels[channelIndex].octave = 0;\n                    }\n                }\n            } break;\n            case SongTagCode.startInstrument: {\n                instrumentIndexIterator++;\n                if (instrumentIndexIterator >= this.channels[instrumentChannelIterator].instruments.length) {\n                    instrumentChannelIterator++;\n                    instrumentIndexIterator = 0;\n                }\n                validateRange(0, this.channels.length - 1, instrumentChannelIterator);\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                // JB before v5 had custom chip and mod before pickedString and supersaw were added. Index +2.\n                let instrumentType: number = validateRange(0, InstrumentType.length - 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                if (fromJummBox && beforeFive) {\n                    if (instrumentType == InstrumentType.pickedString || instrumentType == InstrumentType.supersaw) {\n                        instrumentType += 2;\n                    }\n                }\n                // Similar story here, JB before v5 had custom chip and mod before supersaw was added. Index +1.\n                else if (fromJummBox && beforeSix) {\n                    if (instrumentType == InstrumentType.supersaw || instrumentType == InstrumentType.customChipWave) {\n                        instrumentType += 1;\n                    }\n                }\n                instrument.setTypeAndReset(instrumentType, instrumentChannelIterator >= this.pitchChannelCount && instrumentChannelIterator < this.pitchChannelCount + this.noiseChannelCount, instrumentChannelIterator >= this.pitchChannelCount + this.noiseChannelCount);\n\n                // Anti-aliasing was added in BeepBox 3.0 (v6->v7) and JummBox 1.3 (v1->v2 roughly but some leakage possible)\n                if (((beforeSeven && fromBeepBox) || (beforeTwo && fromJummBox)) && (instrumentType == InstrumentType.chip || instrumentType == InstrumentType.customChipWave || instrumentType == InstrumentType.pwm)) {\n                    instrument.aliases = true;\n                    instrument.distortion = 0;\n                    instrument.effects |= 1 << EffectType.distortion;\n                }\n                if (useSlowerArpSpeed) {\n                    instrument.arpeggioSpeed = 9; // x3/4 speed. This used to be tied to rhythm, but now it is decoupled to each instrument's arp speed slider. This flag gets set when importing older songs to keep things consistent.\n                }\n                if (useFastTwoNoteArp) {\n                    instrument.fastTwoNoteArp = true;\n                }\n\n                if (beforeSeven && fromBeepBox) {\n                    instrument.effects = 0;\n                    // Chip/noise instruments had arpeggio and FM had custom interval but neither\n                    // explicitly saved the chorus setting beforeSeven so enable it here.\n                    if (instrument.chord != Config.chords.dictionary[\"simultaneous\"].index) {\n                        // Enable chord if it was used.\n                        instrument.effects |= 1 << EffectType.chord;\n                    }\n                }\n            } break;\n            case SongTagCode.preset: {\n                const presetValue: number = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) | (base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].preset = presetValue;\n                // Picked string was inserted before custom chip in JB v5, so bump up preset index.\n                if (fromJummBox && beforeFive) {\n                    if (this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].preset == InstrumentType.pickedString) {\n                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].preset = InstrumentType.customChipWave;\n                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].type = InstrumentType.customChipWave;\n                    }\n                }\n                // Similar story, supersaw is also before custom chip (and mod, but mods can't have presets).\n                else if (fromJummBox && beforeSix) {\n                    if (this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].preset == InstrumentType.supersaw) {\n                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].preset = InstrumentType.customChipWave;\n                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].type = InstrumentType.customChipWave;\n                    }\n                }\n                // BeepBox directly tweaked \"grand piano\", but JB kept it the same. The most up to date version is now \"grand piano 3\"\n                if ( fromBeepBox && presetValue == EditorConfig.nameToPresetValue(\"grand piano 1\") ) {\n                    this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].preset =  EditorConfig.nameToPresetValue(\"grand piano 3\")!;\n                }\n            } break;\n            case SongTagCode.wave: {\n                if (beforeThree && fromBeepBox) {\n                    const legacyWaves: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 0];\n                    const channelIndex: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                    const instrument: Instrument = this.channels[channelIndex].instruments[0];\n                    instrument.chipWave = clamp(0, Config.chipWaves.length, legacyWaves[base64CharCodeToInt[compressed.charCodeAt(charIndex++)]] | 0);\n\n                    // Version 2 didn't save any settings for settings for filters, or envelopes,\n                    // just waves, so initialize them here I guess.\n                    instrument.convertLegacySettings(legacySettingsCache![channelIndex][0], forceSimpleFilter);\n\n                } else if (beforeSix && fromBeepBox) {\n                    const legacyWaves: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 0];\n                    for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n                        for (const instrument of this.channels[channelIndex].instruments) {\n                            if (channelIndex >= this.pitchChannelCount) {\n                                instrument.chipNoise = clamp(0, Config.chipNoises.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            } else {\n                                instrument.chipWave = clamp(0, Config.chipWaves.length, legacyWaves[base64CharCodeToInt[compressed.charCodeAt(charIndex++)]] | 0);\n                            }\n                        }\n                    }\n                } else if (beforeSeven && fromBeepBox) {\n                    const legacyWaves: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 0];\n                    if (instrumentChannelIterator >= this.pitchChannelCount) {\n                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipNoise = clamp(0, Config.chipNoises.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                    } else {\n                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipWave = clamp(0, Config.chipWaves.length, legacyWaves[base64CharCodeToInt[compressed.charCodeAt(charIndex++)]] | 0);\n                    }\n                } else {\n                    if (instrumentChannelIterator >= this.pitchChannelCount) {\n                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipNoise = clamp(0, Config.chipNoises.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                    } else {\n                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipWave = clamp(0, Config.chipWaves.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                    }\n                }\n            } break;\n            case SongTagCode.eqFilter: {\n                if ((beforeNine && fromBeepBox) || (beforeFive && fromJummBox)) {\n                    if (beforeSeven && fromBeepBox) {\n                        const legacyToCutoff: number[] = [10, 6, 3, 0, 8, 5, 2];\n                        const legacyToEnvelope: string[] = [\"none\", \"none\", \"none\", \"none\", \"decay 1\", \"decay 2\", \"decay 3\"];\n\n                        if (beforeThree && fromBeepBox) {\n                            const channelIndex: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                            const instrument: Instrument = this.channels[channelIndex].instruments[0];\n                            const legacySettings: LegacySettings = legacySettingsCache![channelIndex][0];\n                            const legacyFilter: number = [1, 3, 4, 5][clamp(0, legacyToCutoff.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)])];\n                            legacySettings.filterCutoff = legacyToCutoff[legacyFilter];\n                            legacySettings.filterResonance = 0;\n                            legacySettings.filterEnvelope = Config.envelopes.dictionary[legacyToEnvelope[legacyFilter]];\n                            instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\n                        } else if (beforeSix && fromBeepBox) {\n                            for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n                                for (let i: number = 0; i < this.channels[channelIndex].instruments.length; i++) {\n                                    const instrument: Instrument = this.channels[channelIndex].instruments[i];\n                                    const legacySettings: LegacySettings = legacySettingsCache![channelIndex][i];\n                                    const legacyFilter: number = clamp(0, legacyToCutoff.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1);\n                                    if (channelIndex < this.pitchChannelCount) {\n                                        legacySettings.filterCutoff = legacyToCutoff[legacyFilter];\n                                        legacySettings.filterResonance = 0;\n                                        legacySettings.filterEnvelope = Config.envelopes.dictionary[legacyToEnvelope[legacyFilter]];\n                                    } else {\n                                        legacySettings.filterCutoff = 10;\n                                        legacySettings.filterResonance = 0;\n                                        legacySettings.filterEnvelope = Config.envelopes.dictionary[\"none\"];\n                                    }\n                                    instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\n                                }\n                            }\n                        } else {\n                            const legacyFilter: number = clamp(0, legacyToCutoff.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                            const legacySettings: LegacySettings = legacySettingsCache![instrumentChannelIterator][instrumentIndexIterator];\n                            legacySettings.filterCutoff = legacyToCutoff[legacyFilter];\n                            legacySettings.filterResonance = 0;\n                            legacySettings.filterEnvelope = Config.envelopes.dictionary[legacyToEnvelope[legacyFilter]];\n                            instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\n                        }\n                    } else {\n                        const filterCutoffRange: number = 11;\n                        const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                        const legacySettings: LegacySettings = legacySettingsCache![instrumentChannelIterator][instrumentIndexIterator];\n                        legacySettings.filterCutoff = clamp(0, filterCutoffRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                        instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\n                    }\n                } else {\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                    let typeCheck: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n\n                    if (fromBeepBox || typeCheck == 0) {\n                        instrument.eqFilterType = false;\n                        if (fromJummBox)\n                            typeCheck = base64CharCodeToInt[compressed.charCodeAt(charIndex++)]; // Skip to next to get control point count\n                        const originalControlPointCount: number = typeCheck;\n                        instrument.eqFilter.controlPointCount = clamp(0, Config.filterMaxPoints + 1, originalControlPointCount);\n                        for (let i: number = instrument.eqFilter.controlPoints.length; i < instrument.eqFilter.controlPointCount; i++) {\n                            instrument.eqFilter.controlPoints[i] = new FilterControlPoint();\n                        }\n                        for (let i: number = 0; i < instrument.eqFilter.controlPointCount; i++) {\n                            const point: FilterControlPoint = instrument.eqFilter.controlPoints[i];\n                            point.type = clamp(0, FilterType.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            point.freq = clamp(0, Config.filterFreqRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            point.gain = clamp(0, Config.filterGainRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                        }\n                        for (let i: number = instrument.eqFilter.controlPointCount; i < originalControlPointCount; i++) {\n                            charIndex += 3;\n                        }\n\n                        // Get subfilters as well. Skip Index 0, is a copy of the base filter.\n                        instrument.eqSubFilters[0] = instrument.eqFilter;\n                        if (fromJummBox && !beforeFive) {\n                            let usingSubFilterBitfield: number = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) | (base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            for (let j: number = 0; j < Config.filterMorphCount - 1; j++) {\n                                if (usingSubFilterBitfield & (1 << j)) {\n                                    // Number of control points\n                                    const originalSubfilterControlPointCount: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                    if (instrument.eqSubFilters[j + 1] == null)\n                                        instrument.eqSubFilters[j + 1] = new FilterSettings();\n                                    instrument.eqSubFilters[j + 1]!.controlPointCount = clamp(0, Config.filterMaxPoints + 1, originalSubfilterControlPointCount);\n                                    for (let i: number = instrument.eqSubFilters[j + 1]!.controlPoints.length; i < instrument.eqSubFilters[j + 1]!.controlPointCount; i++) {\n                                        instrument.eqSubFilters[j + 1]!.controlPoints[i] = new FilterControlPoint();\n                                    }\n                                    for (let i: number = 0; i < instrument.eqSubFilters[j + 1]!.controlPointCount; i++) {\n                                        const point: FilterControlPoint = instrument.eqSubFilters[j + 1]!.controlPoints[i];\n                                        point.type = clamp(0, FilterType.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                        point.freq = clamp(0, Config.filterFreqRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                        point.gain = clamp(0, Config.filterGainRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                    }\n                                    for (let i: number = instrument.eqSubFilters[j + 1]!.controlPointCount; i < originalSubfilterControlPointCount; i++) {\n                                        charIndex += 3;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        instrument.eqFilterType = true;\n                        instrument.eqFilterSimpleCut = clamp(0, Config.filterSimpleCutRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                        instrument.eqFilterSimplePeak = clamp(0, Config.filterSimplePeakRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                    }\n                }\n            } break;\n            case SongTagCode.filterResonance: {\n                if ((beforeNine && fromBeepBox) || (beforeFive && fromJummBox)) {\n                    const filterResonanceRange: number = 8;\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                    const legacySettings: LegacySettings = legacySettingsCache![instrumentChannelIterator][instrumentIndexIterator];\n                    legacySettings.filterResonance = clamp(0, filterResonanceRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                    instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\n\n                } else {\n                    // Do nothing? This song tag code is deprecated for now.\n                }\n            } break;\n            case SongTagCode.drumsetEnvelopes: {\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                if ((beforeNine && fromBeepBox) || (beforeFive && fromJummBox)) {\n                    if (instrument.type == InstrumentType.drumset) {\n                        for (let i: number = 0; i < Config.drumCount; i++) {\n                            instrument.drumsetEnvelopes[i] = Song._envelopeFromLegacyIndex(base64CharCodeToInt[compressed.charCodeAt(charIndex++)]).index;\n                        }\n                    } else {\n                        // This used to be used for general filter envelopes.\n                        // The presence of an envelope affects how convertLegacySettings\n                        // decides the closest possible approximation, so update it.\n                        const legacySettings: LegacySettings = legacySettingsCache![instrumentChannelIterator][instrumentIndexIterator];\n                        legacySettings.filterEnvelope = Song._envelopeFromLegacyIndex(base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                        instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\n                    }\n                } else {\n                    // This tag is now only used for drumset filter envelopes.\n                    for (let i: number = 0; i < Config.drumCount; i++) {\n                        instrument.drumsetEnvelopes[i] = clamp(0, Config.envelopes.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                    }\n                }\n            } break;\n            case SongTagCode.pulseWidth: {\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                instrument.pulseWidth = clamp(0, Config.pulseWidthRange + (+(fromJummBox)), base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                if (fromBeepBox) {\n                    // BeepBox formula\n                    instrument.pulseWidth = Math.round(Math.pow(0.5, (7 - instrument.pulseWidth) * Config.pulseWidthStepPower) * Config.pulseWidthRange);\n\n                }\n\n                if ((beforeNine && fromBeepBox) || (beforeFive && fromJummBox)) {\n                    const legacySettings: LegacySettings = legacySettingsCache![instrumentChannelIterator][instrumentIndexIterator];\n                    legacySettings.pulseEnvelope = Song._envelopeFromLegacyIndex(base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                    instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\n                }\n            } break;\n\t\t\tcase SongTagCode.supersaw: {\n\t\t\t\tconst instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n\t\t\t\tinstrument.supersawDynamism = clamp(0, Config.supersawDynamismMax + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n\t\t\t\tinstrument.supersawSpread = clamp(0, Config.supersawSpreadMax + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n\t\t\t\tinstrument.supersawShape = clamp(0, Config.supersawShapeMax + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n\t\t\t} break;\n            case SongTagCode.stringSustain: {\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n\t\t\t\tconst sustainValue: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n\t\t\t\tinstrument.stringSustain = clamp(0, Config.stringSustainRange, sustainValue & 0x1F);\n\t\t\t\tinstrument.stringSustainType = Config.enableAcousticSustain ? clamp(0, SustainType.length, sustainValue >> 5) : SustainType.bright;\n            } break;\n            case SongTagCode.fadeInOut: {\n                if ((beforeNine && fromBeepBox) || (beforeFive && fromJummBox)) {\n                    // this tag was used for a combination of transition and fade in/out.\n                    const legacySettings = [\n                        { transition: \"interrupt\", fadeInSeconds: 0.0, fadeOutTicks: -1 },\n                        { transition: \"normal\", fadeInSeconds: 0.0, fadeOutTicks: -3 },\n                        { transition: \"normal\", fadeInSeconds: 0.025, fadeOutTicks: -3 },\n                        { transition: \"slide in pattern\", fadeInSeconds: 0.025, fadeOutTicks: -3 },\n                        { transition: \"normal\", fadeInSeconds: 0.04, fadeOutTicks: 6 },\n                        { transition: \"normal\", fadeInSeconds: 0.0, fadeOutTicks: 48 },\n                        { transition: \"normal\", fadeInSeconds: 0.0125, fadeOutTicks: 72 },\n                        { transition: \"normal\", fadeInSeconds: 0.06, fadeOutTicks: 96 },\n                    ];\n                    if (beforeThree && fromBeepBox) {\n                        const channelIndex: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                        const settings = legacySettings[clamp(0, legacySettings.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)])];\n                        const instrument: Instrument = this.channels[channelIndex].instruments[0];\n                        instrument.fadeIn = Synth.secondsToFadeInSetting(settings.fadeInSeconds);\n                        instrument.fadeOut = Synth.ticksToFadeOutSetting(settings.fadeOutTicks);\n                        instrument.transition = Config.transitions.dictionary[settings.transition].index;\n                        if (instrument.transition != Config.transitions.dictionary[\"normal\"].index) {\n                            // Enable transition if it was used.\n                            instrument.effects |= 1 << EffectType.transition;\n                        }\n                    } else if (beforeSix && fromBeepBox) {\n                        for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n                            for (const instrument of this.channels[channelIndex].instruments) {\n                                const settings = legacySettings[clamp(0, legacySettings.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)])];\n                                instrument.fadeIn = Synth.secondsToFadeInSetting(settings.fadeInSeconds);\n                                instrument.fadeOut = Synth.ticksToFadeOutSetting(settings.fadeOutTicks);\n                                instrument.transition = Config.transitions.dictionary[settings.transition].index;\n                                if (instrument.transition != Config.transitions.dictionary[\"normal\"].index) {\n                                    // Enable transition if it was used.\n                                    instrument.effects |= 1 << EffectType.transition;\n                                }\n                            }\n                        }\n                    } else if (beforeFour || fromBeepBox) {\n                        const settings = legacySettings[clamp(0, legacySettings.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)])];\n                        const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                        instrument.fadeIn = Synth.secondsToFadeInSetting(settings.fadeInSeconds);\n                        instrument.fadeOut = Synth.ticksToFadeOutSetting(settings.fadeOutTicks);\n                        instrument.transition = Config.transitions.dictionary[settings.transition].index;\n                        if (instrument.transition != Config.transitions.dictionary[\"normal\"].index) {\n                            // Enable transition if it was used.\n                            instrument.effects |= 1 << EffectType.transition;\n                        }\n                    } else {\n                        const settings = legacySettings[clamp(0, legacySettings.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)])];\n                        const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                        instrument.fadeIn = Synth.secondsToFadeInSetting(settings.fadeInSeconds);\n                        instrument.fadeOut = Synth.ticksToFadeOutSetting(settings.fadeOutTicks);\n                        instrument.transition = Config.transitions.dictionary[settings.transition].index;\n\n                        // Read tie-note \n                        if (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] > 0) {\n                            // Set legacy tie over flag, which is only used to port notes in patterns using this instrument as tying.\n                            instrument.legacyTieOver = true;\n\n                        }\n                        instrument.clicklessTransition = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] ? true : false;\n\n                        if (instrument.transition != Config.transitions.dictionary[\"normal\"].index || instrument.clicklessTransition) {\n                            // Enable transition if it was used.\n                            instrument.effects |= 1 << EffectType.transition;\n                        }\n                    }\n                } else {\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                    instrument.fadeIn = clamp(0, Config.fadeInRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                    instrument.fadeOut = clamp(0, Config.fadeOutTicks.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                    if (fromJummBox)\n                        instrument.clicklessTransition = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] ? true : false;\n                }\n            } break;\n            case SongTagCode.vibrato: {\n                if ((beforeNine && fromBeepBox) || (beforeFive && fromJummBox)) {\n                    if (beforeSeven && fromBeepBox) {\n                        if (beforeThree && fromBeepBox) {\n                            const legacyEffects: number[] = [0, 3, 2, 0];\n                            const legacyEnvelopes: string[] = [\"none\", \"none\", \"none\", \"tremolo2\"];\n                            const channelIndex: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                            const effect: number = clamp(0, legacyEffects.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            const instrument: Instrument = this.channels[channelIndex].instruments[0];\n                            const legacySettings: LegacySettings = legacySettingsCache![channelIndex][0];\n                            instrument.vibrato = legacyEffects[effect];\n                            if (legacySettings.filterEnvelope == undefined || legacySettings.filterEnvelope.type == EnvelopeType.none) {\n                                // Imitate the legacy tremolo with a filter envelope.\n                                legacySettings.filterEnvelope = Config.envelopes.dictionary[legacyEnvelopes[effect]];\n                                instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\n                            }\n                            if (instrument.vibrato != Config.vibratos.dictionary[\"none\"].index) {\n                                // Enable vibrato if it was used.\n                                instrument.effects |= 1 << EffectType.vibrato;\n                            }\n                        } else if (beforeSix && fromBeepBox) {\n                            const legacyEffects: number[] = [0, 1, 2, 3, 0, 0];\n                            const legacyEnvelopes: string[] = [\"none\", \"none\", \"none\", \"none\", \"tremolo5\", \"tremolo2\"];\n                            for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n                                for (let i: number = 0; i < this.channels[channelIndex].instruments.length; i++) {\n                                    const effect: number = clamp(0, legacyEffects.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                    const instrument: Instrument = this.channels[channelIndex].instruments[i];\n                                    const legacySettings: LegacySettings = legacySettingsCache![channelIndex][i];\n                                    instrument.vibrato = legacyEffects[effect];\n                                    if (legacySettings.filterEnvelope == undefined || legacySettings.filterEnvelope.type == EnvelopeType.none) {\n                                        // Imitate the legacy tremolo with a filter envelope.\n                                        legacySettings.filterEnvelope = Config.envelopes.dictionary[legacyEnvelopes[effect]];\n                                        instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\n                                    }\n                                    if (instrument.vibrato != Config.vibratos.dictionary[\"none\"].index) {\n                                        // Enable vibrato if it was used.\n                                        instrument.effects |= 1 << EffectType.vibrato;\n                                    }\n                                    if ((legacyGlobalReverb != 0 || (fromJummBox && beforeFive)) && !this.getChannelIsNoise(channelIndex)) {\n                                        // Enable reverb if it was used globaly before. (Global reverb was added before the effects option so I need to pick somewhere else to initialize instrument reverb, and I picked the vibrato command.)\n                                        instrument.effects |= 1 << EffectType.reverb;\n                                        instrument.reverb = legacyGlobalReverb;\n                                    }\n                                }\n                            }\n                        } else {\n                            const legacyEffects: number[] = [0, 1, 2, 3, 0, 0];\n                            const legacyEnvelopes: string[] = [\"none\", \"none\", \"none\", \"none\", \"tremolo5\", \"tremolo2\"];\n                            const effect: number = clamp(0, legacyEffects.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                            const legacySettings: LegacySettings = legacySettingsCache![instrumentChannelIterator][instrumentIndexIterator];\n                            instrument.vibrato = legacyEffects[effect];\n                            if (legacySettings.filterEnvelope == undefined || legacySettings.filterEnvelope.type == EnvelopeType.none) {\n                                // Imitate the legacy tremolo with a filter envelope.\n                                legacySettings.filterEnvelope = Config.envelopes.dictionary[legacyEnvelopes[effect]];\n                                instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\n                            }\n                            if (instrument.vibrato != Config.vibratos.dictionary[\"none\"].index) {\n                                // Enable vibrato if it was used.\n                                instrument.effects |= 1 << EffectType.vibrato;\n                            }\n                            if (legacyGlobalReverb != 0 || (fromJummBox && beforeFive)) {\n                                // Enable reverb if it was used globaly before. (Global reverb was added before the effects option so I need to pick somewhere else to initialize instrument reverb, and I picked the vibrato command.)\n                                instrument.effects |= 1 << EffectType.reverb;\n                                instrument.reverb = legacyGlobalReverb;\n                            }\n                        }\n                    } else {\n                        const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                        const vibrato: number = clamp(0, Config.vibratos.length + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                        instrument.vibrato = vibrato;\n                        if (instrument.vibrato != Config.vibratos.dictionary[\"none\"].index) {\n                            // Enable vibrato if it was used.\n                            instrument.effects |= 1 << EffectType.vibrato;\n                        }\n                        // Custom vibrato\n                        if (vibrato == Config.vibratos.length) {\n                            instrument.vibratoDepth = clamp(0, Config.modulators.dictionary[\"vibrato depth\"].maxRawVol + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) / 50;\n                            instrument.vibratoSpeed = clamp(0, Config.modulators.dictionary[\"vibrato speed\"].maxRawVol + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            instrument.vibratoDelay = clamp(0, Config.modulators.dictionary[\"vibrato delay\"].maxRawVol + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) / 2;\n                            instrument.vibratoType = clamp(0, Config.vibratoTypes.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            instrument.effects |= 1 << EffectType.vibrato;\n                        }\n                        // Enforce standard vibrato settings\n                        else {\n                            instrument.vibratoDepth = Config.vibratos[instrument.vibrato].amplitude;\n                            instrument.vibratoSpeed = 10; // Normal speed\n                            instrument.vibratoDelay = Config.vibratos[instrument.vibrato].delayTicks / 2;\n                            instrument.vibratoType = Config.vibratos[instrument.vibrato].type;\n                        }\n                    }\n                } else {\n                    // Do nothing? This song tag code is deprecated for now.\n                }\n            } break;\n            case SongTagCode.arpeggioSpeed: {\n                // Deprecated, but supported for legacy purposes\n                if (fromJummBox && beforeFive) {\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                    instrument.arpeggioSpeed = clamp(0, Config.modulators.dictionary[\"arp speed\"].maxRawVol + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                    instrument.fastTwoNoteArp = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] ? true : false; // Two note arp setting piggybacks on this\n                }\n                else {\n                    // Do nothing, deprecated for now\n                }\n            } break;\n            case SongTagCode.unison: {\n                if (beforeThree && fromBeepBox) {\n                    const channelIndex: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                    this.channels[channelIndex].instruments[0].unison = clamp(0, Config.unisons.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                } else if (beforeSix && fromBeepBox) {\n                    for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n                        for (const instrument of this.channels[channelIndex].instruments) {\n                            const originalValue: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                            let unison: number = clamp(0, Config.unisons.length, originalValue);\n                            if (originalValue == 8) {\n                                // original \"custom harmony\" now maps to \"hum\" and \"custom interval\".\n                                unison = 2;\n                                instrument.chord = 3;\n                            }\n                            instrument.unison = unison;\n                        }\n                    }\n                } else if (beforeSeven && fromBeepBox) {\n                    const originalValue: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                    let unison: number = clamp(0, Config.unisons.length, originalValue);\n                    if (originalValue == 8) {\n                        // original \"custom harmony\" now maps to \"hum\" and \"custom interval\".\n                        unison = 2;\n                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chord = 3;\n                    }\n                    this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].unison = unison;\n                } else {\n                    this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].unison = clamp(0, Config.unisons.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                }\n            } break;\n            case SongTagCode.chord: {\n                if ((beforeNine && fromBeepBox) || (beforeFive && fromJummBox)) {\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                    instrument.chord = clamp(0, Config.chords.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                    if (instrument.chord != Config.chords.dictionary[\"simultaneous\"].index) {\n                        // Enable chord if it was used.\n                        instrument.effects |= 1 << EffectType.chord;\n                    }\n                } else {\n                    // Do nothing? This song tag code is deprecated for now.\n                }\n            } break;\n            case SongTagCode.effects: {\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                if ((beforeNine && fromBeepBox) || (beforeFive && fromJummBox)) {\n                    instrument.effects = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] & ((1 << EffectType.length) - 1));\n                    if (legacyGlobalReverb == 0 && !(fromJummBox && beforeFive)) {\n                        // Disable reverb if legacy song reverb was zero.\n                        instrument.effects &= ~(1 << EffectType.reverb);\n                    } else if (effectsIncludeReverb(instrument.effects)) {\n                        instrument.reverb = legacyGlobalReverb;\n                    }\n                    // @jummbus - Enabling pan effect on song import no matter what to make it a default.\n                    //if (instrument.pan != Config.panCenter) {\n                    instrument.effects |= 1 << EffectType.panning;\n                    //}\n                    if (instrument.vibrato != Config.vibratos.dictionary[\"none\"].index) {\n                        // Enable vibrato if it was used.\n                        instrument.effects |= 1 << EffectType.vibrato;\n                    }\n                    if (instrument.detune != Config.detuneCenter) {\n                        // Enable detune if it was used.\n                        instrument.effects |= 1 << EffectType.detune;\n                    }\n                    if (instrument.aliases)\n                        instrument.effects |= 1 << EffectType.distortion;\n                    else\n                        instrument.effects &= ~(1 << EffectType.distortion);\n\n                    // convertLegacySettings may need to force-enable note filter, call\n                    // it again here to make sure that this override takes precedence.\n                    const legacySettings: LegacySettings = legacySettingsCache![instrumentChannelIterator][instrumentIndexIterator];\n                    instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\n                } else {\n                    // BeepBox currently uses two base64 characters at 6 bits each for a bitfield representing all the enabled effects.\n                    if (EffectType.length > 12) throw new Error();\n                    instrument.effects = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) | (base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n\n                    if (effectsIncludeNoteFilter(instrument.effects)) {\n                        let typeCheck: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                        if (fromBeepBox || typeCheck == 0) {\n                            instrument.noteFilterType = false;\n                            if (fromJummBox)\n                                typeCheck = base64CharCodeToInt[compressed.charCodeAt(charIndex++)]; // Skip to next index in jummbox to get actual count\n                            instrument.noteFilter.controlPointCount = clamp(0, Config.filterMaxPoints + 1, typeCheck);\n                            for (let i: number = instrument.noteFilter.controlPoints.length; i < instrument.noteFilter.controlPointCount; i++) {\n                                instrument.noteFilter.controlPoints[i] = new FilterControlPoint();\n                            }\n                            for (let i: number = 0; i < instrument.noteFilter.controlPointCount; i++) {\n                                const point: FilterControlPoint = instrument.noteFilter.controlPoints[i];\n                                point.type = clamp(0, FilterType.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                point.freq = clamp(0, Config.filterFreqRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                point.gain = clamp(0, Config.filterGainRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            }\n                            for (let i: number = instrument.noteFilter.controlPointCount; i < typeCheck; i++) {\n                                charIndex += 3;\n                            }\n\n                            // Get subfilters as well. Skip Index 0, is a copy of the base filter.\n                            instrument.noteSubFilters[0] = instrument.noteFilter;\n                            if (fromJummBox && !beforeFive) {\n                                let usingSubFilterBitfield: number = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) | (base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                for (let j: number = 0; j < Config.filterMorphCount - 1; j++) {\n                                    if (usingSubFilterBitfield & (1 << j)) {\n                                        // Number of control points\n                                        const originalSubfilterControlPointCount: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                                        if (instrument.noteSubFilters[j + 1] == null)\n                                            instrument.noteSubFilters[j + 1] = new FilterSettings();\n                                        instrument.noteSubFilters[j + 1]!.controlPointCount = clamp(0, Config.filterMaxPoints + 1, originalSubfilterControlPointCount);\n                                        for (let i: number = instrument.noteSubFilters[j + 1]!.controlPoints.length; i < instrument.noteSubFilters[j + 1]!.controlPointCount; i++) {\n                                            instrument.noteSubFilters[j + 1]!.controlPoints[i] = new FilterControlPoint();\n                                        }\n                                        for (let i: number = 0; i < instrument.noteSubFilters[j + 1]!.controlPointCount; i++) {\n                                            const point: FilterControlPoint = instrument.noteSubFilters[j + 1]!.controlPoints[i];\n                                            point.type = clamp(0, FilterType.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                            point.freq = clamp(0, Config.filterFreqRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                            point.gain = clamp(0, Config.filterGainRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                                        }\n                                        for (let i: number = instrument.noteSubFilters[j + 1]!.controlPointCount; i < originalSubfilterControlPointCount; i++) {\n                                            charIndex += 3;\n                                        }\n                                    }\n                                }\n                            }\n                        } else {\n                            instrument.noteFilterType = true;\n                            instrument.noteFilter.reset();\n                            instrument.noteFilterSimpleCut = clamp(0, Config.filterSimpleCutRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            instrument.noteFilterSimplePeak = clamp(0, Config.filterSimplePeakRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n\n                        }\n                    }\n                    if (effectsIncludeTransition(instrument.effects)) {\n                        instrument.transition = clamp(0, Config.transitions.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                    }\n                    if (effectsIncludeChord(instrument.effects)) {\n                        instrument.chord = clamp(0, Config.chords.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                        // Custom arpeggio speed... only in JB, and only if the instrument arpeggiates.\n                        if (instrument.chord == Config.chords.dictionary[\"arpeggio\"].index && fromJummBox) {\n                            instrument.arpeggioSpeed = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                            instrument.fastTwoNoteArp = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) ? true : false;\n                        }\n                    }\n                    if (effectsIncludePitchShift(instrument.effects)) {\n                        instrument.pitchShift = clamp(0, Config.pitchShiftRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                    }\n                    if (effectsIncludeDetune(instrument.effects)) {\n                        if (fromBeepBox) {\n                            // Convert from BeepBox's formula\n                            instrument.detune = clamp(Config.detuneMin, Config.detuneMax + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            instrument.detune = Math.round((instrument.detune - 9) * (Math.abs(instrument.detune - 9) + 1) / 2 + Config.detuneCenter);\n                        } else {\n                            instrument.detune = clamp(Config.detuneMin, Config.detuneMax + 1, (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                        }\n                    }\n                    if (effectsIncludeVibrato(instrument.effects)) {\n                        instrument.vibrato = clamp(0, Config.vibratos.length + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n\n                        // Custom vibrato\n                        if (instrument.vibrato == Config.vibratos.length && fromJummBox) {\n                            instrument.vibratoDepth = clamp(0, Config.modulators.dictionary[\"vibrato depth\"].maxRawVol + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) / 25;\n                            instrument.vibratoSpeed = clamp(0, Config.modulators.dictionary[\"vibrato speed\"].maxRawVol + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            instrument.vibratoDelay = clamp(0, Config.modulators.dictionary[\"vibrato delay\"].maxRawVol + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                            instrument.vibratoType = clamp(0, Config.vibratoTypes.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                        }\n                        // Enforce standard vibrato settings\n                        else {\n                            instrument.vibratoDepth = Config.vibratos[instrument.vibrato].amplitude;\n                            instrument.vibratoSpeed = 10; // Normal speed\n                            instrument.vibratoDelay = Config.vibratos[instrument.vibrato].delayTicks / 2;\n                            instrument.vibratoType = Config.vibratos[instrument.vibrato].type;\n                        }\n                    }\n                    if (effectsIncludeDistortion(instrument.effects)) {\n                        instrument.distortion = clamp(0, Config.distortionRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                        if (fromJummBox && !beforeFive)\n                            instrument.aliases = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] ? true : false;\n                    }\n                    if (effectsIncludeBitcrusher(instrument.effects)) {\n                        instrument.bitcrusherFreq = clamp(0, Config.bitcrusherFreqRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                        instrument.bitcrusherQuantization = clamp(0, Config.bitcrusherQuantizationRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                    }\n                    if (effectsIncludePanning(instrument.effects)) {\n                        if (fromBeepBox) {\n                            // Beepbox has a panMax of 8 (9 total positions), Jummbox has a panMax of 100 (101 total positions)\n                            instrument.pan = clamp(0, Config.panMax + 1, Math.round(base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * ((Config.panMax) / 8.0)));\n                        }\n                        else {\n                            instrument.pan = clamp(0, Config.panMax + 1, (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                        }\n\n                        // Now, pan delay follows on new versions of jummbox.\n                        if (fromJummBox && !beforeTwo)\n                            instrument.panDelay = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                    }\n                    if (effectsIncludeChorus(instrument.effects)) {\n                        if (fromBeepBox) {\n                            // BeepBox has 4 chorus values vs. JB's 8\n                            instrument.chorus = clamp(0, (Config.chorusRange / 2) + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) * 2;\n                        }\n                        else {\n                            instrument.chorus = clamp(0, Config.chorusRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                        }\n                    }\n                    if (effectsIncludeEcho(instrument.effects)) {\n                        instrument.echoSustain = clamp(0, Config.echoSustainRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                        instrument.echoDelay = clamp(0, Config.echoDelayRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                    }\n                    if (effectsIncludeReverb(instrument.effects)) {\n                        if (fromBeepBox) {\n                            instrument.reverb = clamp(0, Config.reverbRange, Math.round(base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * Config.reverbRange / 3.0));\n                        } else {\n                            instrument.reverb = clamp(0, Config.reverbRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                        }\n                    }\n                }\n                // Clamp the range.\n                instrument.effects &= (1 << EffectType.length) - 1;\n            } break;\n            case SongTagCode.volume: {\n                if (beforeThree && fromBeepBox) {\n                    const channelIndex: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                    const instrument: Instrument = this.channels[channelIndex].instruments[0];\n                    instrument.volume = Math.round(clamp(-Config.volumeRange / 2, 1, -base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 5.0));\n                } else if (beforeSix && fromBeepBox) {\n                    for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n                        for (const instrument of this.channels[channelIndex].instruments) {\n                            instrument.volume = Math.round(clamp(-Config.volumeRange / 2, 1, -base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 5.0));\n                        }\n                    }\n                } else if (beforeSeven && fromBeepBox) {\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                    instrument.volume = Math.round(clamp(-Config.volumeRange / 2, 1, -base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 5.0));\n                } else if (fromBeepBox) {\n                    // Beepbox v9's volume range is 0-7 (0 is max, 7 is mute)\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                    instrument.volume = Math.round(clamp(-Config.volumeRange / 2, 1, -base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 25.0 / 7.0));\n                } else {\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                    // Volume is stored in two bytes in jummbox just in case range ever exceeds one byte, e.g. through later waffling on the subject.\n                    instrument.volume = Math.round(clamp(-Config.volumeRange / 2, Config.volumeRange / 2 + 1, ((base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) | (base64CharCodeToInt[compressed.charCodeAt(charIndex++)])) - Config.volumeRange / 2));\n                }\n            } break;\n            case SongTagCode.pan: {\n                if (beforeNine && fromBeepBox) {\n                    // Beepbox has a panMax of 8 (9 total positions), Jummbox has a panMax of 100 (101 total positions)\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                    instrument.pan = clamp(0, Config.panMax + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * ((Config.panMax) / 8.0));\n                } else if (beforeFive && fromJummBox) {\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                    instrument.pan = clamp(0, Config.panMax + 1, (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                    // Pan delay follows on v3 + v4\n                    if (fromJummBox && !beforeThree) {\n                        instrument.panDelay = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                    }\n                } else {\n                    // Do nothing? This song tag code is deprecated for now.\n                }\n            } break;\n            case SongTagCode.detune: {\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n\n                if (fromJummBox && beforeFive) {\n                    // Before jummbox v5, detune was -50 to 50. Now it is 0 to 400\n                    instrument.detune = clamp(Config.detuneMin, Config.detuneMax + 1, ((base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) * 4);\n                    instrument.effects |= 1 << EffectType.detune;\n                } else {\n                    // Now in v5, tag code is deprecated and handled thru detune effects.\n                }\n            } break;\n            case SongTagCode.customChipWave: {\n                let instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                // Pop custom wave values\n                for (let j: number = 0; j < 64; j++) {\n                    instrument.customChipWave[j]\n                        = clamp(-24, 25, base64CharCodeToInt[compressed.charCodeAt(charIndex++)] - 24);\n                }\n\n                let sum: number = 0.0;\n                for (let i: number = 0; i < instrument.customChipWave.length; i++) {\n                    sum += instrument.customChipWave[i];\n                }\n                const average: number = sum / instrument.customChipWave.length;\n\n                // Perform the integral on the wave. The chipSynth will perform the derivative to get the original wave back but with antialiasing.\n                let cumulative: number = 0;\n                let wavePrev: number = 0;\n                for (let i: number = 0; i < instrument.customChipWave.length; i++) {\n                    cumulative += wavePrev;\n                    wavePrev = instrument.customChipWave[i] - average;\n                    instrument.customChipWaveIntegral[i] = cumulative;\n                }\n\n                // 65th, last sample is for anti-aliasing\n                instrument.customChipWaveIntegral[64] = 0.0;\n\n            } break;\n            case SongTagCode.limiterSettings: {\n                let nextValue: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n\n                // Check if limiter settings are used... if not, restore to default\n                if (nextValue == 0x3f) {\n                    this.restoreLimiterDefaults();\n                }\n                else {\n                    // Limiter is used, grab values\n                    this.compressionRatio = (nextValue < 10 ? nextValue / 10 : (1 + (nextValue - 10) / 60));\n                    nextValue = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                    this.limitRatio = (nextValue < 10 ? nextValue / 10 : (nextValue - 9));\n                    this.limitDecay = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                    this.limitRise = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 250.0) + 2000.0;\n                    this.compressionThreshold = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] / 20.0;\n                    this.limitThreshold = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] / 20.0;\n                    this.masterGain = ((base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) / 50.0;\n                }\n            } break;\n            case SongTagCode.channelNames: {\n                for (let channel: number = 0; channel < this.getChannelCount(); channel++) {\n                    // Length of channel name string. Due to some crazy Unicode characters this needs to be 2 bytes...\n                    var channelNameLength;\n                    if (beforeFour)\n                        channelNameLength = base64CharCodeToInt[compressed.charCodeAt(charIndex++)]\n                    else\n                        channelNameLength = ((base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                    this.channels[channel].name = decodeURIComponent(compressed.substring(charIndex, charIndex + channelNameLength));\n\n                    charIndex += channelNameLength;\n                }\n            } break;\n            case SongTagCode.algorithm: {\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                instrument.algorithm = clamp(0, Config.algorithms.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                if ((beforeNine && fromBeepBox) || (beforeFive && fromJummBox)) {\n                    // The algorithm determines the carrier count, which affects how legacy settings are imported.\n                    const legacySettings: LegacySettings = legacySettingsCache![instrumentChannelIterator][instrumentIndexIterator];\n                    instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\n                }\n            } break;\n            case SongTagCode.feedbackType: {\n                this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].feedbackType = clamp(0, Config.feedbacks.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n            } break;\n            case SongTagCode.feedbackAmplitude: {\n                this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].feedbackAmplitude = clamp(0, Config.operatorAmplitudeMax + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n            } break;\n            case SongTagCode.feedbackEnvelope: {\n                if ((beforeNine && fromBeepBox) || (beforeFive && fromJummBox)) {\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                    const legacySettings: LegacySettings = legacySettingsCache![instrumentChannelIterator][instrumentIndexIterator];\n                    legacySettings.feedbackEnvelope = Song._envelopeFromLegacyIndex(base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                    instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\n                } else {\n                    // Do nothing? This song tag code is deprecated for now.\n                }\n            } break;\n            case SongTagCode.operatorFrequencies: {\n                for (let o: number = 0; o < Config.operatorCount; o++) {\n                    this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].operators[o].frequency = clamp(0, Config.operatorFrequencies.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                }\n            } break;\n            case SongTagCode.operatorAmplitudes: {\n                for (let o: number = 0; o < Config.operatorCount; o++) {\n                    this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].operators[o].amplitude = clamp(0, Config.operatorAmplitudeMax + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                }\n            } break;\n            case SongTagCode.envelopes: {\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                if ((beforeNine && fromBeepBox) || (beforeFive && fromJummBox)) {\n                    const legacySettings: LegacySettings = legacySettingsCache![instrumentChannelIterator][instrumentIndexIterator];\n                    legacySettings.operatorEnvelopes = [];\n                    for (let o: number = 0; o < Config.operatorCount; o++) {\n                        legacySettings.operatorEnvelopes[o] = Song._envelopeFromLegacyIndex(base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                    }\n                    instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\n                } else {\n                    const envelopeCount: number = clamp(0, Config.maxEnvelopeCount + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                    // JB v6 adds some envelope options here in the sequence.\n                    if (fromJummBox && !beforeSix) {\n                        instrument.envelopeSpeed = clamp(0, Config.modulators.dictionary[\"envelope speed\"].maxRawVol + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                        instrument.discreteEnvelope = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) ? true : false;\n                    }\n                    for (let i: number = 0; i < envelopeCount; i++) {\n                        const target: number = clamp(0, Config.instrumentAutomationTargets.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                        let index: number = 0;\n                        const maxCount: number = Config.instrumentAutomationTargets[target].maxCount;\n                        if (maxCount > 1) {\n                            index = clamp(0, maxCount, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                        }\n                        const envelope: number = clamp(0, Config.envelopes.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                        instrument.addEnvelope(target, index, envelope);\n                    }\n                }\n            } break;\n            case SongTagCode.operatorWaves: {\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                for (let o: number = 0; o < Config.operatorCount; o++) {\n                    instrument.operators[o].waveform = clamp(0, Config.operatorWaves.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                    // Pulse width follows, if it is a pulse width operator wave\n                    if (instrument.operators[o].waveform == 3) {\n                        instrument.operators[o].pulseWidth = clamp(0, Config.pwmOperatorWaves.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                    }\n                }\n            } break;\n            case SongTagCode.spectrum: {\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                if (instrument.type == InstrumentType.spectrum) {\n                    const byteCount: number = Math.ceil(Config.spectrumControlPoints * Config.spectrumControlPointBits / 6)\n                    const bits: BitFieldReader = new BitFieldReader(compressed, charIndex, charIndex + byteCount);\n                    for (let i: number = 0; i < Config.spectrumControlPoints; i++) {\n                        instrument.spectrumWave.spectrum[i] = bits.read(Config.spectrumControlPointBits);\n                    }\n                    instrument.spectrumWave.markCustomWaveDirty();\n                    charIndex += byteCount;\n                } else if (instrument.type == InstrumentType.drumset) {\n                    const byteCount: number = Math.ceil(Config.drumCount * Config.spectrumControlPoints * Config.spectrumControlPointBits / 6)\n                    const bits: BitFieldReader = new BitFieldReader(compressed, charIndex, charIndex + byteCount);\n                    for (let j: number = 0; j < Config.drumCount; j++) {\n                        for (let i: number = 0; i < Config.spectrumControlPoints; i++) {\n                            instrument.drumsetSpectrumWaves[j].spectrum[i] = bits.read(Config.spectrumControlPointBits);\n                        }\n                        instrument.drumsetSpectrumWaves[j].markCustomWaveDirty();\n                    }\n                    charIndex += byteCount;\n                } else {\n                    throw new Error(\"Unhandled instrument type for spectrum song tag code.\");\n                }\n            } break;\n            case SongTagCode.harmonics: {\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                const byteCount: number = Math.ceil(Config.harmonicsControlPoints * Config.harmonicsControlPointBits / 6)\n                const bits: BitFieldReader = new BitFieldReader(compressed, charIndex, charIndex + byteCount);\n                for (let i: number = 0; i < Config.harmonicsControlPoints; i++) {\n                    instrument.harmonicsWave.harmonics[i] = bits.read(Config.harmonicsControlPointBits);\n                }\n                instrument.harmonicsWave.markCustomWaveDirty();\n                charIndex += byteCount;\n            } break;\n            case SongTagCode.aliases: {\n                if (fromJummBox && beforeFive) {\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\n                    instrument.aliases = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) ? true : false;\n                    if (instrument.aliases) {\n                        instrument.distortion = 0;\n                        instrument.effects |= 1 << EffectType.distortion;\n                    }\n                } else {\n                    // Do nothing, deprecated\n                }\n            }\n                break;\n            case SongTagCode.bars: {\n                let subStringLength: number;\n                if (beforeThree && fromBeepBox) {\n                    const channelIndex: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                    const barCount: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                    subStringLength = Math.ceil(barCount * 0.5);\n                    const bits: BitFieldReader = new BitFieldReader(compressed, charIndex, charIndex + subStringLength);\n                    for (let i: number = 0; i < barCount; i++) {\n                        this.channels[channelIndex].bars[i] = bits.read(3) + 1;\n                    }\n                } else if (beforeFive && fromBeepBox) {\n                    let neededBits: number = 0;\n                    while ((1 << neededBits) < this.patternsPerChannel) neededBits++;\n                    subStringLength = Math.ceil(this.getChannelCount() * this.barCount * neededBits / 6);\n                    const bits: BitFieldReader = new BitFieldReader(compressed, charIndex, charIndex + subStringLength);\n                    for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n                        for (let i: number = 0; i < this.barCount; i++) {\n                            this.channels[channelIndex].bars[i] = bits.read(neededBits) + 1;\n                        }\n                    }\n                } else {\n                    let neededBits: number = 0;\n                    while ((1 << neededBits) < this.patternsPerChannel + 1) neededBits++;\n                    subStringLength = Math.ceil(this.getChannelCount() * this.barCount * neededBits / 6);\n                    const bits: BitFieldReader = new BitFieldReader(compressed, charIndex, charIndex + subStringLength);\n                    for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n                        for (let i: number = 0; i < this.barCount; i++) {\n                            this.channels[channelIndex].bars[i] = bits.read(neededBits);\n                        }\n                    }\n                }\n                charIndex += subStringLength;\n            } break;\n            case SongTagCode.patterns: {\n                let bitStringLength: number = 0;\n                let channelIndex: number;\n                let largerChords: boolean = !((beforeFour && fromJummBox) || fromBeepBox);\n                let recentPitchBitLength: number = (largerChords ? 4 : 3);\n                let recentPitchLength: number = (largerChords ? 16 : 8);\n                if (beforeThree && fromBeepBox) {\n                    channelIndex = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n\n                    // The old format used the next character to represent the number of patterns in the channel, which is usually eight, the default. \n                    charIndex++; //let patternCount: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n\n                    bitStringLength = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                    bitStringLength = bitStringLength << 6;\n                    bitStringLength += base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                } else {\n                    channelIndex = 0;\n                    let bitStringLengthLength: number = validateRange(1, 4, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\n                    while (bitStringLengthLength > 0) {\n                        bitStringLength = bitStringLength << 6;\n                        bitStringLength += base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\n                        bitStringLengthLength--;\n                    }\n                }\n\n                const bits: BitFieldReader = new BitFieldReader(compressed, charIndex, charIndex + bitStringLength);\n                charIndex += bitStringLength;\n\n                const bitsPerNoteSize: number = Song.getNeededBits(Config.noteSizeMax);\n                let songReverbChannel: number = -1;\n                let songReverbInstrument: number = -1;\n                let songReverbIndex: number = -1;\n\n                while (true) {\n                    const channel: Channel = this.channels[channelIndex];\n                    const isNoiseChannel: boolean = this.getChannelIsNoise(channelIndex);\n                    const isModChannel: boolean = this.getChannelIsMod(channelIndex);\n\n                    const maxInstrumentsPerPattern: number = this.getMaxInstrumentsPerPattern(channelIndex);\n                    const neededInstrumentCountBits: number = Song.getNeededBits(maxInstrumentsPerPattern - Config.instrumentCountMin);\n\n                    const neededInstrumentIndexBits: number = Song.getNeededBits(channel.instruments.length - 1);\n\n                    // Some info about modulator settings immediately follows in mod channels.\n                    if (isModChannel) {\n\n                        // 2 more indices for 'all' and 'active'\n                        const neededModInstrumentIndexBits: number = (beforeFive) ? neededInstrumentIndexBits : Song.getNeededBits(this.getMaxInstrumentsPerChannel() + 2);\n\n                        for (let instrumentIndex: number = 0; instrumentIndex < channel.instruments.length; instrumentIndex++) {\n\n                            let instrument: Instrument = channel.instruments[instrumentIndex];\n\n                            for (let mod: number = 0; mod < Config.modCount; mod++) {\n                                // Still using legacy \"mod status\" format, but doing it manually as it's only used in the URL now.\n                                // 0 - For pitch/noise\n                                // 1 - (used to be For noise, not needed)\n                                // 2 - For song\n                                // 3 - None\n                                let status: number = bits.read(2);\n\n                                switch (status) {\n                                    case 0: // Pitch\n                                        instrument.modChannels[mod] = clamp(0, this.pitchChannelCount + this.noiseChannelCount + 1, bits.read(8));\n                                        instrument.modInstruments[mod] = clamp(0, this.channels[instrument.modChannels[mod]].instruments.length + 2, bits.read(neededModInstrumentIndexBits));\n                                        break;\n                                    case 1: // Noise\n                                        // Getting a status of 1 means this is legacy mod info. Need to add pitch channel count, as it used to just store noise channel index and not overall channel index\n                                        instrument.modChannels[mod] = this.pitchChannelCount + clamp(0, this.noiseChannelCount + 1, bits.read(8));\n                                        instrument.modInstruments[mod] = clamp(0, this.channels[instrument.modChannels[mod]].instruments.length + 2, bits.read(neededInstrumentIndexBits));\n                                        break;\n                                    case 2: // For song\n                                        instrument.modChannels[mod] = -1;\n                                        break;\n                                    case 3: // None\n                                        instrument.modChannels[mod] = -2;\n                                        break;\n                                }\n\n                                // Mod setting is only used if the status isn't \"none\".\n                                if (status != 3) {\n                                    instrument.modulators[mod] = bits.read(6);\n                                }\n\n                                if (!beforeFive && (Config.modulators[instrument.modulators[mod]].name == \"eq filter\" || Config.modulators[instrument.modulators[mod]].name == \"note filter\")) {\n                                    instrument.modFilterTypes[mod] = bits.read(6);\n                                }\n\n                                if (beforeFive && instrument.modChannels[mod] >= 0) {\n                                    let forNoteFilter: boolean = effectsIncludeNoteFilter(this.channels[instrument.modChannels[mod]].instruments[instrument.modInstruments[mod]].effects);\n\n                                    // For legacy filter cut/peak, need to denote since scaling must be applied\n                                    if (instrument.modulators[mod] == 7) {\n                                        // Legacy filter cut index\n                                        // Check if there is no filter dot on prospective filter. If so, add a low pass at max possible freq.\n\n                                        if (forNoteFilter) {\n                                            instrument.modulators[mod] = Config.modulators.dictionary[\"note filt cut\"].index;\n                                        }\n                                        else {\n                                            instrument.modulators[mod] = Config.modulators.dictionary[\"eq filt cut\"].index;\n                                        }\n\n                                        instrument.modFilterTypes[mod] = 1; // Dot 1 X\n\n                                    }\n                                    else if (instrument.modulators[mod] == 8) {\n                                        // Legacy filter peak index\n                                        if (forNoteFilter) {\n                                            instrument.modulators[mod] = Config.modulators.dictionary[\"note filt peak\"].index;\n                                        }\n                                        else {\n                                            instrument.modulators[mod] = Config.modulators.dictionary[\"eq filt peak\"].index;\n                                        }\n\n                                        instrument.modFilterTypes[mod] = 2; // Dot 1 Y\n                                    }\n                                }\n                                else if (beforeFive) {\n                                    // Check for song reverb mod, which must be handled differently now that it is a multiplier\n                                    if (instrument.modulators[mod] == Config.modulators.dictionary[\"song reverb\"].index) {\n                                        songReverbChannel = channelIndex;\n                                        songReverbInstrument = instrumentIndex;\n                                        songReverbIndex = mod;\n                                    }\n                                }\n\n                                // Based on setting, enable some effects for the modulated instrument. This isn't always set, say if the instrument's pan was right in the center.\n                                // Only used on import of old songs, because sometimes an invalid effect can be set in a mod in the new version that is actually unused. In that case,\n                                // keeping the mod invalid is better since it preserves the state.\n                                if (beforeFive && Config.modulators[instrument.modulators[mod]].associatedEffect != EffectType.length) {\n                                    this.channels[instrument.modChannels[mod]].instruments[instrument.modInstruments[mod]].effects |= 1 << Config.modulators[instrument.modulators[mod]].associatedEffect;\n                                }\n                            }\n                        }\n                    }\n\n                    // Scalar applied to detune mods since its granularity was upped. Could be repurposed later if any other granularity changes occur.\n                    const detuneScaleNotes: number[][] = [];\n                    for (let j: number = 0; j < channel.instruments.length; j++) {\n                        detuneScaleNotes[j] = [];\n                        for (let i: number = 0; i < Config.modCount; i++) {\n                            detuneScaleNotes[j][Config.modCount - 1 - i] = 1 + 3 * +(beforeFive && fromJummBox && isModChannel && (channel.instruments[j].modulators[i] == Config.modulators.dictionary[\"detune\"].index));\n                        }\n                    }\n                    const octaveOffset: number = (isNoiseChannel || isModChannel) ? 0 : channel.octave * 12;\n                    let lastPitch: number = ((isNoiseChannel || isModChannel) ? 4 : octaveOffset);\n                    const recentPitches: number[] = isModChannel ? [0, 1, 2, 3, 4, 5] : (isNoiseChannel ? [4, 6, 7, 2, 3, 8, 0, 10] : [0, 7, 12, 19, 24, -5, -12]);\n                    const recentShapes: any[] = [];\n                    for (let i: number = 0; i < recentPitches.length; i++) {\n                        recentPitches[i] += octaveOffset;\n                    }\n                    for (let i: number = 0; i < this.patternsPerChannel; i++) {\n                        const newPattern: Pattern = channel.patterns[i];\n\n                        if ((beforeNine && fromBeepBox) || (beforeFive && fromJummBox)) {\n                            newPattern.instruments[0] = validateRange(0, channel.instruments.length - 1, bits.read(neededInstrumentIndexBits));\n                            newPattern.instruments.length = 1;\n                        } else {\n                            if (this.patternInstruments) {\n                                const instrumentCount: number = validateRange(Config.instrumentCountMin, maxInstrumentsPerPattern, bits.read(neededInstrumentCountBits) + Config.instrumentCountMin);\n                                for (let j: number = 0; j < instrumentCount; j++) {\n                                    newPattern.instruments[j] = validateRange(0, channel.instruments.length - 1 + +(isModChannel) * 2, bits.read(neededInstrumentIndexBits));\n                                }\n                                newPattern.instruments.length = instrumentCount;\n                            } else {\n                                newPattern.instruments[0] = 0;\n                                newPattern.instruments.length = Config.instrumentCountMin;\n                            }\n                        }\n\n                        if (!(fromBeepBox && beforeThree) && bits.read(1) == 0) {\n                            newPattern.notes.length = 0;\n                            continue;\n                        }\n\n                        let curPart: number = 0;\n                        const newNotes: Note[] = newPattern.notes;\n                        let noteCount: number = 0;\n                        // Due to arbitrary note positioning, mod channels don't end the count until curPart actually exceeds the max\n                        while (curPart < this.beatsPerBar * Config.partsPerBeat + (+isModChannel)) {\n\n                            const useOldShape: boolean = bits.read(1) == 1;\n                            let newNote: boolean = false;\n                            let shapeIndex: number = 0;\n                            if (useOldShape) {\n                                shapeIndex = validateRange(0, recentShapes.length - 1, bits.readLongTail(0, 0));\n                            } else {\n                                newNote = bits.read(1) == 1;\n                            }\n\n                            if (!useOldShape && !newNote) {\n                                // For mod channels, check if you need to move backward too (notes can appear in any order and offset from each other).\n                                if (isModChannel) {\n                                    const isBackwards: boolean = bits.read(1) == 1;\n                                    const restLength: number = bits.readPartDuration();\n                                    if (isBackwards) {\n                                        curPart -= restLength;\n                                    }\n                                    else {\n                                        curPart += restLength;\n                                    }\n                                } else {\n                                    const restLength: number = (beforeSeven && fromBeepBox)\n                                        ? bits.readLegacyPartDuration() * Config.partsPerBeat / Config.rhythms[this.rhythm].stepsPerBeat\n                                        : bits.readPartDuration();\n                                    curPart += restLength;\n\n                                }\n                            } else {\n                                let shape: any;\n                                if (useOldShape) {\n                                    shape = recentShapes[shapeIndex];\n                                    recentShapes.splice(shapeIndex, 1);\n                                } else {\n                                    shape = {};\n\n                                    if (!largerChords) {\n                                        // Old format: X 1's followed by a 0 => X+1 pitches, up to 4\n                                        shape.pitchCount = 1;\n                                        while (shape.pitchCount < 4 && bits.read(1) == 1) shape.pitchCount++;\n                                    }\n                                    else {\n                                        // New format is:\n                                        //      0: 1 pitch\n                                        // 1[XXX]: 3 bits of binary signifying 2+ pitches\n                                        if (bits.read(1) == 1) {\n                                            shape.pitchCount = bits.read(3) + 2;\n                                        }\n                                        else {\n                                            shape.pitchCount = 1;\n                                        }\n                                    }\n\n                                    shape.pinCount = bits.readPinCount();\n                                    if (fromBeepBox) {\n                                        shape.initialSize = bits.read(2) * 2;\n                                    } else if (!isModChannel) {\n                                        shape.initialSize = bits.read(bitsPerNoteSize);\n                                    } else {\n                                        shape.initialSize = bits.read(9);\n                                    }\n\n                                    shape.pins = [];\n                                    shape.length = 0;\n                                    shape.bendCount = 0;\n                                    for (let j: number = 0; j < shape.pinCount; j++) {\n                                        let pinObj: any = {};\n                                        pinObj.pitchBend = bits.read(1) == 1;\n                                        if (pinObj.pitchBend) shape.bendCount++;\n                                        shape.length += (beforeSeven && fromBeepBox)\n                                            ? bits.readLegacyPartDuration() * Config.partsPerBeat / Config.rhythms[this.rhythm].stepsPerBeat\n                                            : bits.readPartDuration();\n                                        pinObj.time = shape.length;\n                                        if (fromBeepBox) {\n                                            pinObj.size = bits.read(2) * 2;\n                                        } else if (!isModChannel) {\n                                            pinObj.size = bits.read(bitsPerNoteSize);\n                                        }\n                                        else {\n                                            pinObj.size = bits.read(9);\n                                        }\n                                        shape.pins.push(pinObj);\n                                    }\n                                }\n                                recentShapes.unshift(shape);\n                                if (recentShapes.length > 10) recentShapes.pop(); // TODO: Use Deque?\n\n                                let note: Note;\n                                if (newNotes.length <= noteCount) {\n                                    note = new Note(0, curPart, curPart + shape.length, shape.initialSize);\n                                    newNotes[noteCount++] = note;\n                                } else {\n                                    note = newNotes[noteCount++];\n                                    note.start = curPart;\n                                    note.end = curPart + shape.length;\n                                    note.pins[0].size = shape.initialSize;\n                                }\n\n                                let pitch: number;\n                                let pitchCount: number = 0;\n                                const pitchBends: number[] = []; // TODO: allocate this array only once! keep separate length and iterator index. Use Deque?\n                                for (let j: number = 0; j < shape.pitchCount + shape.bendCount; j++) {\n                                    const useOldPitch: boolean = bits.read(1) == 1;\n                                    if (!useOldPitch) {\n                                        const interval: number = bits.readPitchInterval();\n                                        pitch = lastPitch;\n                                        let intervalIter: number = interval;\n                                        while (intervalIter > 0) {\n                                            pitch++;\n                                            while (recentPitches.indexOf(pitch) != -1) pitch++;\n                                            intervalIter--;\n                                        }\n                                        while (intervalIter < 0) {\n                                            pitch--;\n                                            while (recentPitches.indexOf(pitch) != -1) pitch--;\n                                            intervalIter++;\n                                        }\n                                    } else {\n                                        const pitchIndex: number = validateRange(0, recentPitches.length - 1, bits.read(recentPitchBitLength));\n                                        pitch = recentPitches[pitchIndex];\n                                        recentPitches.splice(pitchIndex, 1);\n                                    }\n\n                                    recentPitches.unshift(pitch);\n                                    if (recentPitches.length > recentPitchLength) recentPitches.pop();\n\n                                    if (j < shape.pitchCount) {\n                                        note.pitches[pitchCount++] = pitch;\n                                    } else {\n                                        pitchBends.push(pitch);\n                                    }\n\n                                    if (j == shape.pitchCount - 1) {\n                                        lastPitch = note.pitches[0];\n                                    } else {\n                                        lastPitch = pitch;\n                                    }\n                                }\n                                note.pitches.length = pitchCount;\n                                pitchBends.unshift(note.pitches[0]); // TODO: Use Deque?\n                                if (isModChannel) {\n                                    note.pins[0].size *= detuneScaleNotes[newPattern.instruments[0]][note.pitches[0]];\n                                }\n                                let pinCount: number = 1;\n                                for (const pinObj of shape.pins) {\n                                    if (pinObj.pitchBend) pitchBends.shift();\n\n                                    const interval: number = pitchBends[0] - note.pitches[0];\n                                    if (note.pins.length <= pinCount) {\n                                        if (isModChannel) {\n                                            note.pins[pinCount++] = makeNotePin(interval, pinObj.time, pinObj.size * detuneScaleNotes[newPattern.instruments[0]][note.pitches[0]]);\n                                        } else {\n                                            note.pins[pinCount++] = makeNotePin(interval, pinObj.time, pinObj.size);\n                                        }\n                                    } else {\n                                        const pin: NotePin = note.pins[pinCount++];\n                                        pin.interval = interval;\n                                        pin.time = pinObj.time;\n                                        if (isModChannel) {\n                                            pin.size = pinObj.size * detuneScaleNotes[newPattern.instruments[0]][note.pitches[0]];\n                                        } else {\n                                            pin.size = pinObj.size;\n                                        }\n                                    }\n                                }\n                                note.pins.length = pinCount;\n\n                                if (note.start == 0) {\n                                    if (!((beforeNine && fromBeepBox) || (beforeFive && fromJummBox))) {\n                                        note.continuesLastPattern = (bits.read(1) == 1);\n                                    } else {\n                                        if (beforeFour || fromBeepBox) {\n                                            note.continuesLastPattern = false;\n                                        } else {\n                                            note.continuesLastPattern = channel.instruments[newPattern.instruments[0]].legacyTieOver;\n                                        }\n                                    }\n                                }\n\n                                curPart = validateRange(0, this.beatsPerBar * Config.partsPerBeat, note.end);\n                            }\n                        }\n                        newNotes.length = noteCount;\n                    }\n\n                    if (beforeThree && fromBeepBox) {\n                        break;\n                    } else {\n                        channelIndex++;\n                        if (channelIndex >= this.getChannelCount()) break;\n                    }\n                } // while (true)\n\n                // Correction for old JB songs that had song reverb mods. Change all instruments using reverb to max reverb\n                if (fromJummBox && beforeFive && songReverbIndex >= 0) {\n                    for (let channelIndex: number = 0; channelIndex < this.channels.length; channelIndex++) {\n                        for (let instrumentIndex: number = 0; instrumentIndex < this.channels[channelIndex].instruments.length; instrumentIndex++) {\n                            const instrument: Instrument = this.channels[channelIndex].instruments[instrumentIndex];\n                            if (effectsIncludeReverb(instrument.effects)) {\n                                instrument.reverb = Config.reverbRange - 1;\n                            }\n                            // Set song reverb via mod to the old setting at song start.\n                            if (songReverbChannel == channelIndex && songReverbInstrument == instrumentIndex) {\n                                const patternIndex: number = this.channels[channelIndex].bars[0];\n                                if (patternIndex > 0) {\n                                    // Doesn't work if 1st pattern isn't using the right ins for song reverb...\n                                    // Add note to start of pattern\n                                    const pattern: Pattern = this.channels[channelIndex].patterns[patternIndex - 1];\n                                    let lowestPart: number = 6;\n                                    for (const note of pattern.notes) {\n                                        if (note.pitches[0] == Config.modCount - 1 - songReverbIndex) {\n                                            lowestPart = Math.min(lowestPart, note.start);\n                                        }\n                                    }\n\n                                    if (lowestPart > 0) {\n                                        pattern.notes.push(new Note(Config.modCount - 1 - songReverbIndex, 0, lowestPart, legacyGlobalReverb));\n                                    }\n                                }\n                                else {\n                                    // Add pattern\n                                    if (this.channels[channelIndex].patterns.length < Config.barCountMax) {\n                                        const pattern: Pattern = new Pattern();\n                                        this.channels[channelIndex].patterns.push(pattern);\n                                        this.channels[channelIndex].bars[0] = this.channels[channelIndex].patterns.length;\n                                        if (this.channels[channelIndex].patterns.length > this.patternsPerChannel) {\n                                            for (let chn: number = 0; chn < this.channels.length; chn++) {\n                                                if (this.channels[chn].patterns.length <= this.patternsPerChannel) {\n                                                    this.channels[chn].patterns.push(new Pattern());\n                                                }\n                                            }\n                                            this.patternsPerChannel++;\n                                        }\n                                        pattern.instruments.length = 1;\n                                        pattern.instruments[0] = songReverbInstrument;\n                                        pattern.notes.length = 0;\n                                        pattern.notes.push(new Note(Config.modCount - 1 - songReverbIndex, 0, 6, legacyGlobalReverb));\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            } break;\n            default: {\n                throw new Error(\"Unrecognized song tag code \" + String.fromCharCode(command) + \" at index \" + (charIndex - 1));\n            } break;\n        }\n    }\n\n    public toJsonObject(enableIntro: boolean = true, loopCount: number = 1, enableOutro: boolean = true): Object {\n        const channelArray: Object[] = [];\n        for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\n            const channel: Channel = this.channels[channelIndex];\n            const instrumentArray: Object[] = [];\n            const isNoiseChannel: boolean = this.getChannelIsNoise(channelIndex);\n            const isModChannel: boolean = this.getChannelIsMod(channelIndex);\n            for (const instrument of channel.instruments) {\n                instrumentArray.push(instrument.toJsonObject());\n            }\n\n            const patternArray: Object[] = [];\n            for (const pattern of channel.patterns) {\n                patternArray.push(pattern.toJsonObject(this, channel, isModChannel));\n            }\n\n            const sequenceArray: number[] = [];\n            if (enableIntro) for (let i: number = 0; i < this.loopStart; i++) {\n                sequenceArray.push(channel.bars[i]);\n            }\n            for (let l: number = 0; l < loopCount; l++) for (let i: number = this.loopStart; i < this.loopStart + this.loopLength; i++) {\n                sequenceArray.push(channel.bars[i]);\n            }\n            if (enableOutro) for (let i: number = this.loopStart + this.loopLength; i < this.barCount; i++) {\n                sequenceArray.push(channel.bars[i]);\n            }\n\n            const channelObject: any = {\n                \"type\": isModChannel ? \"mod\" : (isNoiseChannel ? \"drum\" : \"pitch\"),\n                \"name\": channel.name,\n                \"instruments\": instrumentArray,\n                \"patterns\": patternArray,\n                \"sequence\": sequenceArray,\n            };\n            if (!isNoiseChannel) {\n                // For compatibility with old versions the octave is offset by one.\n                channelObject[\"octaveScrollBar\"] = channel.octave - 1;\n            }\n            channelArray.push(channelObject);\n        }\n\n        return {\n            \"name\": this.title,\n            \"format\": Song._format,\n            \"version\": Song._latestJummBoxVersion,\n            \"scale\": Config.scales[this.scale].name,\n            \"key\": Config.keys[this.key].name,\n            \"introBars\": this.loopStart,\n            \"loopBars\": this.loopLength,\n            \"beatsPerBar\": this.beatsPerBar,\n            \"ticksPerBeat\": Config.rhythms[this.rhythm].stepsPerBeat,\n            \"beatsPerMinute\": this.tempo,\n            \"reverb\": this.reverb,\n            \"masterGain\": this.masterGain,\n            \"compressionThreshold\": this.compressionThreshold,\n            \"limitThreshold\": this.limitThreshold,\n            \"limitDecay\": this.limitDecay,\n            \"limitRise\": this.limitRise,\n            \"limitRatio\": this.limitRatio,\n            \"compressionRatio\": this.compressionRatio,\n            //\"outroBars\": this.barCount - this.loopStart - this.loopLength; // derive this from bar arrays?\n            //\"patternCount\": this.patternsPerChannel, // derive this from pattern arrays?\n            \"layeredInstruments\": this.layeredInstruments,\n            \"patternInstruments\": this.patternInstruments,\n            \"channels\": channelArray,\n        };\n    }\n\n    public fromJsonObject(jsonObject: any): void {\n        this.initToDefault(true);\n        if (!jsonObject) return;\n\n        //const version: number = jsonObject[\"version\"] | 0;\n        //if (version > Song._latestVersion) return; // Go ahead and try to parse something from the future I guess? JSON is pretty easy-going!\n\n        if (jsonObject[\"name\"] != undefined) {\n            this.title = jsonObject[\"name\"];\n        }\n\n        this.scale = 0; // default to free.\n        if (jsonObject[\"scale\"] != undefined) {\n            const oldScaleNames: Dictionary<string> = {\n\t\t\t\t\"romani :)\": \"double harmonic :)\",\n\t\t\t\t\"romani :(\": \"double harmonic :(\",\n\t\t\t\t\"dbl harmonic :)\": \"double harmonic :)\",\n\t\t\t\t\"dbl harmonic :(\": \"double harmonic :(\",\n                \"enigma\": \"strange\",\n            };\n            const scaleName: string = (oldScaleNames[jsonObject[\"scale\"]] != undefined) ? oldScaleNames[jsonObject[\"scale\"]] : jsonObject[\"scale\"];\n            const scale: number = Config.scales.findIndex(scale => scale.name == scaleName);\n            if (scale != -1) this.scale = scale;\n        }\n\n        if (jsonObject[\"key\"] != undefined) {\n            if (typeof (jsonObject[\"key\"]) == \"number\") {\n                this.key = ((jsonObject[\"key\"] + 1200) >>> 0) % Config.keys.length;\n            } else if (typeof (jsonObject[\"key\"]) == \"string\") {\n                const key: string = jsonObject[\"key\"];\n                const letter: string = key.charAt(0).toUpperCase();\n                const symbol: string = key.charAt(1).toLowerCase();\n                const letterMap: Readonly<Dictionary<number>> = { \"C\": 0, \"D\": 2, \"E\": 4, \"F\": 5, \"G\": 7, \"A\": 9, \"B\": 11 };\n                const accidentalMap: Readonly<Dictionary<number>> = { \"#\": 1, \"♯\": 1, \"b\": -1, \"♭\": -1 };\n                let index: number | undefined = letterMap[letter];\n                const offset: number | undefined = accidentalMap[symbol];\n                if (index != undefined) {\n                    if (offset != undefined) index += offset;\n                    if (index < 0) index += 12;\n                    index = index % 12;\n                    this.key = index;\n                }\n            }\n        }\n\n        if (jsonObject[\"beatsPerMinute\"] != undefined) {\n            this.tempo = clamp(Config.tempoMin, Config.tempoMax + 1, jsonObject[\"beatsPerMinute\"] | 0);\n        }\n\n        let legacyGlobalReverb: number = 0; // In older songs, reverb was song-global, record that here and pass it to Instrument.fromJsonObject() for context.\n        if (jsonObject[\"reverb\"] != undefined) {\n            legacyGlobalReverb = clamp(0, 32, jsonObject[\"reverb\"] | 0);\n        }\n\n        if (jsonObject[\"beatsPerBar\"] != undefined) {\n            this.beatsPerBar = Math.max(Config.beatsPerBarMin, Math.min(Config.beatsPerBarMax, jsonObject[\"beatsPerBar\"] | 0));\n        }\n\n        let importedPartsPerBeat: number = 4;\n        if (jsonObject[\"ticksPerBeat\"] != undefined) {\n            importedPartsPerBeat = (jsonObject[\"ticksPerBeat\"] | 0) || 4;\n            this.rhythm = Config.rhythms.findIndex(rhythm => rhythm.stepsPerBeat == importedPartsPerBeat);\n            if (this.rhythm == -1) {\n                this.rhythm = 1;\n            }\n        }\n\n        // Read limiter settings. Ranges and defaults are based on slider settings\n\n        if (jsonObject[\"masterGain\"] != undefined) {\n            this.masterGain = Math.max(0.0, Math.min(5.0, jsonObject[\"masterGain\"] || 0));\n        } else {\n            this.masterGain = 1.0;\n        }\n\n        if (jsonObject[\"limitThreshold\"] != undefined) {\n            this.limitThreshold = Math.max(0.0, Math.min(2.0, jsonObject[\"limitThreshold\"] || 0));\n        }\n        else {\n            this.limitThreshold = 1.0;\n        }\n\n        if (jsonObject[\"compressionThreshold\"] != undefined) {\n            this.compressionThreshold = Math.max(0.0, Math.min(1.1, jsonObject[\"compressionThreshold\"] || 0));\n        }\n        else {\n            this.compressionThreshold = 1.0;\n        }\n\n        if (jsonObject[\"limitRise\"] != undefined) {\n            this.limitRise = Math.max(2000.0, Math.min(10000.0, jsonObject[\"limitRise\"] || 0));\n        }\n        else {\n            this.limitRise = 4000.0;\n        }\n\n        if (jsonObject[\"limitDecay\"] != undefined) {\n            this.limitDecay = Math.max(1.0, Math.min(30.0, jsonObject[\"limitDecay\"] || 0));\n        }\n        else {\n            this.limitDecay = 4.0;\n        }\n\n        if (jsonObject[\"limitRatio\"] != undefined) {\n            this.limitRatio = Math.max(0.0, Math.min(11.0, jsonObject[\"limitRatio\"] || 0));\n        }\n        else {\n            this.limitRatio = 1.0;\n        }\n\n        if (jsonObject[\"compressionRatio\"] != undefined) {\n            this.compressionRatio = Math.max(0.0, Math.min(1.168, jsonObject[\"compressionRatio\"] || 0));\n        }\n        else {\n            this.compressionRatio = 1.0;\n        }\n\n        let maxInstruments: number = 1;\n        let maxPatterns: number = 1;\n        let maxBars: number = 1;\n        if (jsonObject[\"channels\"] != undefined) {\n            for (const channelObject of jsonObject[\"channels\"]) {\n                if (channelObject[\"instruments\"]) maxInstruments = Math.max(maxInstruments, channelObject[\"instruments\"].length | 0);\n                if (channelObject[\"patterns\"]) maxPatterns = Math.max(maxPatterns, channelObject[\"patterns\"].length | 0);\n                if (channelObject[\"sequence\"]) maxBars = Math.max(maxBars, channelObject[\"sequence\"].length | 0);\n            }\n        }\n\n        if (jsonObject[\"layeredInstruments\"] != undefined) {\n            this.layeredInstruments = !!jsonObject[\"layeredInstruments\"];\n        } else {\n            this.layeredInstruments = false;\n        }\n        if (jsonObject[\"patternInstruments\"] != undefined) {\n            this.patternInstruments = !!jsonObject[\"patternInstruments\"];\n        } else {\n            this.patternInstruments = (maxInstruments > 1);\n        }\n        this.patternsPerChannel = Math.min(maxPatterns, Config.barCountMax);\n        this.barCount = Math.min(maxBars, Config.barCountMax);\n\n        if (jsonObject[\"introBars\"] != undefined) {\n            this.loopStart = clamp(0, this.barCount, jsonObject[\"introBars\"] | 0);\n        }\n        if (jsonObject[\"loopBars\"] != undefined) {\n            this.loopLength = clamp(1, this.barCount - this.loopStart + 1, jsonObject[\"loopBars\"] | 0);\n        }\n\n        const newPitchChannels: Channel[] = [];\n        const newNoiseChannels: Channel[] = [];\n        const newModChannels: Channel[] = [];\n        if (jsonObject[\"channels\"] != undefined) {\n            for (let channelIndex: number = 0; channelIndex < jsonObject[\"channels\"].length; channelIndex++) {\n                let channelObject: any = jsonObject[\"channels\"][channelIndex];\n\n                const channel: Channel = new Channel();\n\n                let isNoiseChannel: boolean = false;\n                let isModChannel: boolean = false;\n                if (channelObject[\"type\"] != undefined) {\n                    isNoiseChannel = (channelObject[\"type\"] == \"drum\");\n                    isModChannel = (channelObject[\"type\"] == \"mod\");\n                } else {\n                    // for older files, assume drums are channel 3.\n                    isNoiseChannel = (channelIndex >= 3);\n                }\n                if (isNoiseChannel) {\n                    newNoiseChannels.push(channel);\n                } else if (isModChannel) {\n                    newModChannels.push(channel);\n                }\n                else {\n                    newPitchChannels.push(channel);\n                }\n\n                if (channelObject[\"octaveScrollBar\"] != undefined) {\n                    channel.octave = clamp(0, Config.pitchOctaves, (channelObject[\"octaveScrollBar\"] | 0) + 1);\n                    if (isNoiseChannel) channel.octave = 0;\n                }\n\n                if (channelObject[\"name\"] != undefined) {\n                    channel.name = channelObject[\"name\"];\n                }\n                else {\n                    channel.name = \"\";\n                }\n\n                if (Array.isArray(channelObject[\"instruments\"])) {\n                    const instrumentObjects: any[] = channelObject[\"instruments\"];\n                    for (let i: number = 0; i < instrumentObjects.length; i++) {\n                        if (i >= this.getMaxInstrumentsPerChannel()) break;\n                        const instrument: Instrument = new Instrument(isNoiseChannel, isModChannel);\n                        channel.instruments[i] = instrument;\n                        instrument.fromJsonObject(instrumentObjects[i], isNoiseChannel, isModChannel, false, false, legacyGlobalReverb);\n                    }\n\n                }\n\n                for (let i: number = 0; i < this.patternsPerChannel; i++) {\n                    const pattern: Pattern = new Pattern();\n                    channel.patterns[i] = pattern;\n\n                    let patternObject: any = undefined;\n                    if (channelObject[\"patterns\"]) patternObject = channelObject[\"patterns\"][i];\n                    if (patternObject == undefined) continue;\n\n                    pattern.fromJsonObject(patternObject, this, channel, importedPartsPerBeat, isNoiseChannel, isModChannel);\n                }\n                channel.patterns.length = this.patternsPerChannel;\n\n                for (let i: number = 0; i < this.barCount; i++) {\n                    channel.bars[i] = (channelObject[\"sequence\"] != undefined) ? Math.min(this.patternsPerChannel, channelObject[\"sequence\"][i] >>> 0) : 0;\n                }\n                channel.bars.length = this.barCount;\n            }\n        }\n\n        if (newPitchChannels.length > Config.pitchChannelCountMax) newPitchChannels.length = Config.pitchChannelCountMax;\n        if (newNoiseChannels.length > Config.noiseChannelCountMax) newNoiseChannels.length = Config.noiseChannelCountMax;\n        if (newModChannels.length > Config.modChannelCountMax) newModChannels.length = Config.modChannelCountMax;\n        this.pitchChannelCount = newPitchChannels.length;\n        this.noiseChannelCount = newNoiseChannels.length;\n        this.modChannelCount = newModChannels.length;\n        this.channels.length = 0;\n        Array.prototype.push.apply(this.channels, newPitchChannels);\n        Array.prototype.push.apply(this.channels, newNoiseChannels);\n        Array.prototype.push.apply(this.channels, newModChannels);\n    }\n\n    public getPattern(channelIndex: number, bar: number): Pattern | null {\n        if (bar < 0 || bar >= this.barCount) return null;\n        const patternIndex: number = this.channels[channelIndex].bars[bar];\n        if (patternIndex == 0) return null;\n        return this.channels[channelIndex].patterns[patternIndex - 1];\n    }\n\n    public getBeatsPerMinute(): number {\n        return this.tempo;\n    }\n\n    public static getNeededBits(maxValue: number): number {\n        return 32 - Math.clz32(Math.ceil(maxValue + 1) - 1);\n    }\n\n    public restoreLimiterDefaults(): void {\n        this.compressionRatio = 1.0;\n        this.limitRatio = 1.0;\n        this.limitRise = 4000.0;\n        this.limitDecay = 4.0;\n        this.limitThreshold = 1.0;\n        this.compressionThreshold = 1.0;\n        this.masterGain = 1.0;\n    }\n}\n\nclass PickedString {\n    public delayLine: Float32Array | null = null;\n    public delayIndex: number;\n    public allPassSample: number;\n    public allPassPrevInput: number;\n    public sustainFilterSample: number;\n\tpublic sustainFilterPrevOutput2: number;\n\tpublic sustainFilterPrevInput1: number;\n\tpublic sustainFilterPrevInput2: number;\n    public fractionalDelaySample: number;\n    public prevDelayLength: number;\n    public delayLengthDelta: number;\n    public delayResetOffset: number;\n\n    public allPassG: number = 0.0;\n    public allPassGDelta: number = 0.0;\n   public sustainFilterA1: number = 0.0;\n\tpublic sustainFilterA1Delta: number = 0.0;\n\tpublic sustainFilterA2: number = 0.0;\n\tpublic sustainFilterA2Delta: number = 0.0;\n\tpublic sustainFilterB0: number = 0.0;\n\tpublic sustainFilterB0Delta: number = 0.0;\n\tpublic sustainFilterB1: number = 0.0;\n\tpublic sustainFilterB1Delta: number = 0.0;\n\tpublic sustainFilterB2: number = 0.0;\n\tpublic sustainFilterB2Delta: number = 0.0;\n\n    constructor() {\n        this.reset();\n    }\n\n    public reset(): void {\n        this.delayIndex = -1;\n        this.allPassSample = 0.0;\n        this.allPassPrevInput = 0.0;\n        this.sustainFilterSample = 0.0;\n\t\tthis.sustainFilterPrevOutput2 = 0.0;\n\t\tthis.sustainFilterPrevInput1 = 0.0;\n\t\tthis.sustainFilterPrevInput2 = 0.0;\n        this.fractionalDelaySample = 0.0;\n        this.prevDelayLength = -1.0;\n        this.delayResetOffset = 0;\n    }\n\n    public update(synth: Synth, instrumentState: InstrumentState, tone: Tone, stringIndex: number, roundedSamplesPerTick: number, stringDecayStart: number, stringDecayEnd: number, sustainType: SustainType): void {\n        const allPassCenter: number = 2.0 * Math.PI * Config.pickedStringDispersionCenterFreq / synth.samplesPerSecond;\n\n        const prevDelayLength: number = this.prevDelayLength;\n\n        const phaseDeltaStart: number = tone.phaseDeltas[stringIndex];\n        const phaseDeltaScale: number = tone.phaseDeltaScales[stringIndex];\n        const phaseDeltaEnd: number = phaseDeltaStart * Math.pow(phaseDeltaScale, roundedSamplesPerTick);\n\n        const radiansPerSampleStart: number = Math.PI * 2.0 * phaseDeltaStart;\n        const radiansPerSampleEnd: number = Math.PI * 2.0 * phaseDeltaEnd;\n\n        const centerHarmonicStart: number = radiansPerSampleStart * 2.0;\n        const centerHarmonicEnd: number = radiansPerSampleEnd * 2.0;\n\n        const allPassRadiansStart: number = Math.min(Math.PI, radiansPerSampleStart * Config.pickedStringDispersionFreqMult * Math.pow(allPassCenter / radiansPerSampleStart, Config.pickedStringDispersionFreqScale));\n        const allPassRadiansEnd: number = Math.min(Math.PI, radiansPerSampleEnd * Config.pickedStringDispersionFreqMult * Math.pow(allPassCenter / radiansPerSampleEnd, Config.pickedStringDispersionFreqScale));\n        const shelfRadians: number = 2.0 * Math.PI * Config.pickedStringShelfHz / synth.samplesPerSecond;\n\t\tconst decayCurveStart: number = (Math.pow(100.0, stringDecayStart) - 1.0) / 99.0;\n\t\tconst decayCurveEnd: number   = (Math.pow(100.0, stringDecayEnd  ) - 1.0) / 99.0;\n\t\tconst register: number = sustainType == SustainType.acoustic ? 0.25 : 0.0;\n\t\tconst registerShelfCenter: number = 15.6;\n\t\tconst registerLowpassCenter: number = 3.0 * synth.samplesPerSecond / 48000;\n\t\t//const decayRateStart: number = Math.pow(0.5, decayCurveStart * shelfRadians / radiansPerSampleStart);\n\t\t//const decayRateEnd: number   = Math.pow(0.5, decayCurveEnd   * shelfRadians / radiansPerSampleEnd);\n\t\tconst decayRateStart: number = Math.pow(0.5, decayCurveStart * Math.pow(shelfRadians / (radiansPerSampleStart * registerShelfCenter), (1.0 + 2.0 * register)) * registerShelfCenter);\n\t\tconst decayRateEnd:   number = Math.pow(0.5, decayCurveEnd   * Math.pow(shelfRadians / (radiansPerSampleEnd   * registerShelfCenter), (1.0 + 2.0 * register)) * registerShelfCenter);\n\t\t\n        const expressionDecayStart: number = Math.pow(decayRateStart, 0.002);\n        const expressionDecayEnd: number = Math.pow(decayRateEnd, 0.002);\n\n        Synth.tempFilterStartCoefficients.allPass1stOrderInvertPhaseAbove(allPassRadiansStart);\n        synth.tempFrequencyResponse.analyze(Synth.tempFilterStartCoefficients, centerHarmonicStart);\n        const allPassGStart: number = Synth.tempFilterStartCoefficients.b[0]; /* same as a[1] */\n        const allPassPhaseDelayStart: number = -synth.tempFrequencyResponse.angle() / centerHarmonicStart;\n\n        Synth.tempFilterEndCoefficients.allPass1stOrderInvertPhaseAbove(allPassRadiansEnd);\n        synth.tempFrequencyResponse.analyze(Synth.tempFilterEndCoefficients, centerHarmonicEnd);\n        const allPassGEnd: number = Synth.tempFilterEndCoefficients.b[0]; /* same as a[1] */\n        const allPassPhaseDelayEnd: number = -synth.tempFrequencyResponse.angle() / centerHarmonicEnd;\n\n        // 1st order shelf filters and 2nd order lowpass filters have differently shaped frequency\n\t\t// responses, as well as adjustable shapes. I originally picked a 1st order shelf filter,\n\t\t// but I kinda prefer 2nd order lowpass filters now and I designed a couple settings:\n\t\tconst enum PickedStringBrightnessType {\n\t\t\tbright, // 1st order shelf\n\t\t\tnormal, // 2nd order lowpass, rounded corner\n\t\t\tresonant, // 3rd order lowpass, harder corner\n\t\t}\n\t\tconst brightnessType: PickedStringBrightnessType = <any> sustainType == SustainType.bright ? PickedStringBrightnessType.bright : PickedStringBrightnessType.normal;\n\t\tif (brightnessType == PickedStringBrightnessType.bright) {\n\t\t\tconst shelfGainStart: number = Math.pow(decayRateStart, Config.stringDecayRate);\n\t\t\tconst shelfGainEnd: number   = Math.pow(decayRateEnd,   Config.stringDecayRate);\n\t\t\tSynth.tempFilterStartCoefficients.highShelf2ndOrder(shelfRadians, shelfGainStart, 0.5);\n\t\t\tSynth.tempFilterEndCoefficients.highShelf2ndOrder(shelfRadians, shelfGainEnd, 0.5);\n\t\t} else {\n\t\t\tconst cornerHardness: number = Math.pow(brightnessType == PickedStringBrightnessType.normal ? 0.0 : 1.0, 0.25);\n\t\t\tconst lowpass1stOrderCutoffRadiansStart: number = Math.pow(registerLowpassCenter * registerLowpassCenter * radiansPerSampleStart * 3.3 * 48000 / synth.samplesPerSecond, 0.5 + register) / registerLowpassCenter / Math.pow(decayCurveStart, .5);\n\t\t\tconst lowpass1stOrderCutoffRadiansEnd:   number = Math.pow(registerLowpassCenter * registerLowpassCenter * radiansPerSampleEnd   * 3.3 * 48000 / synth.samplesPerSecond, 0.5 + register) / registerLowpassCenter / Math.pow(decayCurveEnd,   .5);\n\t\t\tconst lowpass2ndOrderCutoffRadiansStart: number = lowpass1stOrderCutoffRadiansStart * Math.pow(2.0, 0.5 - 1.75 * (1.0 - Math.pow(1.0 - cornerHardness, 0.85)));\n\t\t\tconst lowpass2ndOrderCutoffRadiansEnd:   number = lowpass1stOrderCutoffRadiansEnd   * Math.pow(2.0, 0.5 - 1.75 * (1.0 - Math.pow(1.0 - cornerHardness, 0.85)));\n\t\t\tconst lowpass2ndOrderGainStart: number = Math.pow(2.0, -Math.pow(2.0, -Math.pow(cornerHardness, 0.9)));\n\t\t\tconst lowpass2ndOrderGainEnd:   number = Math.pow(2.0, -Math.pow(2.0, -Math.pow(cornerHardness, 0.9)));\n\t\t\tSynth.tempFilterStartCoefficients.lowPass2ndOrderButterworth(warpInfinityToNyquist(lowpass2ndOrderCutoffRadiansStart), lowpass2ndOrderGainStart);\n\t\t\tSynth.tempFilterEndCoefficients  .lowPass2ndOrderButterworth(warpInfinityToNyquist(lowpass2ndOrderCutoffRadiansEnd),   lowpass2ndOrderGainEnd);\n\t\t}\n\t\t\n\t\tsynth.tempFrequencyResponse.analyze(Synth.tempFilterStartCoefficients, centerHarmonicStart);\n\t\tconst sustainFilterA1Start: number = Synth.tempFilterStartCoefficients.a[1];\n\t\tconst sustainFilterA2Start: number = Synth.tempFilterStartCoefficients.a[2];\n\t\tconst sustainFilterB0Start: number = Synth.tempFilterStartCoefficients.b[0] * expressionDecayStart;\n\t\tconst sustainFilterB1Start: number = Synth.tempFilterStartCoefficients.b[1] * expressionDecayStart;\n\t\tconst sustainFilterB2Start: number = Synth.tempFilterStartCoefficients.b[2] * expressionDecayStart;\n\t\tconst sustainFilterPhaseDelayStart: number = -synth.tempFrequencyResponse.angle() / centerHarmonicStart;\n\t\t\n\t\tsynth.tempFrequencyResponse.analyze(Synth.tempFilterEndCoefficients, centerHarmonicEnd);\n\t\tconst sustainFilterA1End: number = Synth.tempFilterEndCoefficients.a[1];\n\t\tconst sustainFilterA2End: number = Synth.tempFilterEndCoefficients.a[2];\n\t\tconst sustainFilterB0End: number = Synth.tempFilterEndCoefficients.b[0] * expressionDecayEnd;\n\t\tconst sustainFilterB1End: number = Synth.tempFilterEndCoefficients.b[1] * expressionDecayEnd;\n\t\tconst sustainFilterB2End: number = Synth.tempFilterEndCoefficients.b[2] * expressionDecayEnd;\n\t\tconst sustainFilterPhaseDelayEnd: number = -synth.tempFrequencyResponse.angle() / centerHarmonicEnd;\n\t\t\n\t\tconst periodLengthStart: number = 1.0 / phaseDeltaStart;\n\t\tconst periodLengthEnd: number = 1.0 / phaseDeltaEnd;\n\t\tconst minBufferLength: number = Math.ceil(Math.max(periodLengthStart, periodLengthEnd) * 2);\n\t\tconst delayLength: number = periodLengthStart - allPassPhaseDelayStart - sustainFilterPhaseDelayStart;\n\t\tconst delayLengthEnd: number = periodLengthEnd - allPassPhaseDelayEnd - sustainFilterPhaseDelayEnd;\n\t\t\n\t\tthis.prevDelayLength = delayLength;\n\t\tthis.delayLengthDelta = (delayLengthEnd - delayLength) / roundedSamplesPerTick;\n\t\tthis.allPassG = allPassGStart;\n\t\tthis.sustainFilterA1 = sustainFilterA1Start;\n\t\tthis.sustainFilterA2 = sustainFilterA2Start;\n\t\tthis.sustainFilterB0 = sustainFilterB0Start;\n\t\tthis.sustainFilterB1 = sustainFilterB1Start;\n\t\tthis.sustainFilterB2 = sustainFilterB2Start;\n\t\tthis.allPassGDelta = (allPassGEnd - allPassGStart) / roundedSamplesPerTick;\n\t\tthis.sustainFilterA1Delta = (sustainFilterA1End - sustainFilterA1Start) / roundedSamplesPerTick;\n\t\tthis.sustainFilterA2Delta = (sustainFilterA2End - sustainFilterA2Start) / roundedSamplesPerTick;\n\t\tthis.sustainFilterB0Delta = (sustainFilterB0End - sustainFilterB0Start) / roundedSamplesPerTick;\n\t\tthis.sustainFilterB1Delta = (sustainFilterB1End - sustainFilterB1Start) / roundedSamplesPerTick;\n\t\tthis.sustainFilterB2Delta = (sustainFilterB2End - sustainFilterB2Start) / roundedSamplesPerTick;\n\n        const pitchChanged: boolean = Math.abs(Math.log2(delayLength / prevDelayLength)) > 0.01;\n\n        const reinitializeImpulse: boolean = (this.delayIndex == -1 || pitchChanged);\n        if (this.delayLine == null || this.delayLine.length <= minBufferLength) {\n            // The delay line buffer will get reused for other tones so might as well\n            // start off with a buffer size that is big enough for most notes.\n            const likelyMaximumLength: number = Math.ceil(2 * synth.samplesPerSecond / Instrument.frequencyFromPitch(12));\n            const newDelayLine: Float32Array = new Float32Array(Synth.fittingPowerOfTwo(Math.max(likelyMaximumLength, minBufferLength)));\n            if (!reinitializeImpulse && this.delayLine != null) {\n                // If the tone has already started but the buffer needs to be reallocated,\n                // transfer the old data to the new buffer.\n                const oldDelayBufferMask: number = (this.delayLine.length - 1) >> 0;\n                const startCopyingFromIndex: number = this.delayIndex + this.delayResetOffset;\n                this.delayIndex = this.delayLine.length - this.delayResetOffset;\n                for (let i: number = 0; i < this.delayLine.length; i++) {\n                    newDelayLine[i] = this.delayLine[(startCopyingFromIndex + i) & oldDelayBufferMask];\n                }\n            }\n            this.delayLine = newDelayLine;\n        }\n        const delayLine: Float32Array = this.delayLine;\n        const delayBufferMask: number = (delayLine.length - 1) >> 0;\n\n        if (reinitializeImpulse) {\n            // -1 delay index means the tone was reset.\n            // Also, if the pitch changed suddenly (e.g. from seamless or arpeggio) then reset the wave.\n\n            this.delayIndex = 0;\n            this.allPassSample = 0.0;\n            this.allPassPrevInput = 0.0;\n            this.sustainFilterSample = 0.0;\n\t\t\tthis.sustainFilterPrevOutput2 = 0.0;\n\t\t\tthis.sustainFilterPrevInput1 = 0.0;\n\t\t\tthis.sustainFilterPrevInput2 = 0.0;\n            this.fractionalDelaySample = 0.0;\n\n            // Clear away a region of the delay buffer for the new impulse.\n            const startImpulseFrom: number = -delayLength;\n            const startZerosFrom: number = Math.floor(startImpulseFrom - periodLengthStart / 2);\n            const stopZerosAt: number = Math.ceil(startZerosFrom + periodLengthStart * 2);\n            this.delayResetOffset = stopZerosAt; // And continue clearing the area in front of the delay line.\n            for (let i: number = startZerosFrom; i <= stopZerosAt; i++) {\n                delayLine[i & delayBufferMask] = 0.0;\n            }\n\n            const impulseWave: Float32Array = instrumentState.wave!;\n            const impulseWaveLength: number = impulseWave.length - 1; // The first sample is duplicated at the end, don't double-count it.\n            const impulsePhaseDelta: number = impulseWaveLength / periodLengthStart;\n\n            const fadeDuration: number = Math.min(periodLengthStart * 0.2, synth.samplesPerSecond * 0.003);\n            const startImpulseFromSample: number = Math.ceil(startImpulseFrom);\n            const stopImpulseAt: number = startImpulseFrom + periodLengthStart + fadeDuration;\n            const stopImpulseAtSample: number = stopImpulseAt;\n            let impulsePhase: number = (startImpulseFromSample - startImpulseFrom) * impulsePhaseDelta;\n            let prevWaveIntegral: number = 0.0;\n            for (let i: number = startImpulseFromSample; i <= stopImpulseAtSample; i++) {\n                const impulsePhaseInt: number = impulsePhase | 0;\n                const index: number = impulsePhaseInt % impulseWaveLength;\n                let nextWaveIntegral: number = impulseWave[index];\n                const phaseRatio: number = impulsePhase - impulsePhaseInt;\n                nextWaveIntegral += (impulseWave[index + 1] - nextWaveIntegral) * phaseRatio;\n                const sample: number = (nextWaveIntegral - prevWaveIntegral) / impulsePhaseDelta;\n                const fadeIn: number = Math.min(1.0, (i - startImpulseFrom) / fadeDuration);\n                const fadeOut: number = Math.min(1.0, (stopImpulseAt - i) / fadeDuration);\n                const combinedFade: number = fadeIn * fadeOut;\n                const curvedFade: number = combinedFade * combinedFade * (3.0 - 2.0 * combinedFade); // A cubic sigmoid from 0 to 1.\n                delayLine[i & delayBufferMask] += sample * curvedFade;\n                prevWaveIntegral = nextWaveIntegral;\n                impulsePhase += impulsePhaseDelta;\n            }\n        }\n    }\n}\n\nclass EnvelopeComputer {\n    // \"Unscaled\" values do not increase with Envelope Speed's timescale factor. Thus they are \"real\" seconds since the start of the note.\n    // Fade envelopes notable use unscaled values instead of being ties to Envelope Speed.\n    public noteSecondsStart: number = 0.0;\n    public noteSecondsStartUnscaled: number = 0.0;\n    public noteSecondsEnd: number = 0.0;\n    public noteSecondsEndUnscaled: number = 0.0;\n    public noteTicksStart: number = 0.0;\n    public noteTicksEnd: number = 0.0;\n    public noteSizeStart: number = Config.noteSizeMax;\n    public noteSizeEnd: number = Config.noteSizeMax;\n    public prevNoteSize: number = Config.noteSizeMax;\n    public nextNoteSize: number = Config.noteSizeMax;\n    private _noteSizeFinal: number = Config.noteSizeMax;\n    public prevNoteSecondsStart: number = 0.0;\n    public prevNoteSecondsStartUnscaled: number = 0.0;\n    public prevNoteSecondsEnd: number = 0.0;\n    public prevNoteSecondsEndUnscaled: number = 0.0;\n    public prevNoteTicksStart: number = 0.0;\n    public prevNoteTicksEnd: number = 0.0;\n    private _prevNoteSizeFinal: number = Config.noteSizeMax;\n\n    public prevSlideStart: boolean = false;\n    public prevSlideEnd: boolean = false;\n    public nextSlideStart: boolean = false;\n    public nextSlideEnd: boolean = false;\n    public prevSlideRatioStart: number = 0.0;\n    public prevSlideRatioEnd: number = 0.0;\n    public nextSlideRatioStart: number = 0.0;\n    public nextSlideRatioEnd: number = 0.0;\n\n    public readonly envelopeStarts: number[] = [];\n    public readonly envelopeEnds: number[] = [];\n    private readonly _modifiedEnvelopeIndices: number[] = [];\n    private _modifiedEnvelopeCount: number = 0;\n    public lowpassCutoffDecayVolumeCompensation: number = 1.0;\n\n    constructor(/*private _perNote: boolean*/) {\n        //const length: number = this._perNote ? EnvelopeComputeIndex.length : InstrumentAutomationIndex.length;\n        const length: number = EnvelopeComputeIndex.length;\n        for (let i: number = 0; i < length; i++) {\n            this.envelopeStarts[i] = 1.0;\n            this.envelopeEnds[i] = 1.0;\n        }\n\n        this.reset();\n    }\n\n    public reset(): void {\n        this.noteSecondsEnd = 0.0;\n        this.noteSecondsEndUnscaled = 0.0;\n        this.noteTicksEnd = 0.0;\n        this._noteSizeFinal = Config.noteSizeMax;\n        this.prevNoteSecondsEnd = 0.0;\n        this.prevNoteSecondsEndUnscaled = 0.0;\n        this.prevNoteTicksEnd = 0.0;\n        this._prevNoteSizeFinal = Config.noteSizeMax;\n        this._modifiedEnvelopeCount = 0;\n    }\n\n    public computeEnvelopes(instrument: Instrument, currentPart: number, tickTimeStart: number, tickTimeStartReal: number, secondsPerTick: number, tone: Tone | null, timeScale: number): void {\n        const secondsPerTickUnscaled: number = secondsPerTick;\n        secondsPerTick *= timeScale;\n        const transition: Transition = instrument.getTransition();\n        if (tone != null && tone.atNoteStart && !transition.continues && !tone.forceContinueAtStart) {\n            this.prevNoteSecondsEnd = this.noteSecondsEnd;\n            this.prevNoteSecondsEndUnscaled = this.noteSecondsEndUnscaled;\n            this.prevNoteTicksEnd = this.noteTicksEnd;\n            this._prevNoteSizeFinal = this._noteSizeFinal;\n            this.noteSecondsEnd = 0.0;\n            this.noteSecondsEndUnscaled = 0.0;\n            this.noteTicksEnd = 0.0;\n        }\n        if (tone != null) {\n            if (tone.note != null) {\n                this._noteSizeFinal = tone.note.pins[tone.note.pins.length - 1].size;\n            } else {\n                this._noteSizeFinal = Config.noteSizeMax;\n            }\n        }\n        const tickTimeEnd: number = tickTimeStart + timeScale;\n        const tickTimeEndReal: number = tickTimeStartReal + 1.0;\n        const noteSecondsStart: number = this.noteSecondsEnd;\n        const noteSecondsStartUnscaled: number = this.noteSecondsEndUnscaled;\n        const noteSecondsEnd: number = noteSecondsStart + secondsPerTick;\n        const noteSecondsEndUnscaled: number = noteSecondsStartUnscaled + secondsPerTickUnscaled;\n        const noteTicksStart: number = this.noteTicksEnd;\n        const noteTicksEnd: number = noteTicksStart + 1.0;\n        const prevNoteSecondsStart: number = this.prevNoteSecondsEnd;\n        const prevNoteSecondsStartUnscaled: number = this.prevNoteSecondsEndUnscaled;\n        const prevNoteSecondsEnd: number = prevNoteSecondsStart + secondsPerTick;\n        const prevNoteSecondsEndUnscaled: number = prevNoteSecondsStartUnscaled + secondsPerTickUnscaled;\n        const prevNoteTicksStart: number = this.prevNoteTicksEnd;\n        const prevNoteTicksEnd: number = prevNoteTicksStart + 1.0;\n\n        const beatsPerTick: number = 1.0 / (Config.ticksPerPart * Config.partsPerBeat);\n        const beatTimeStart: number = beatsPerTick * tickTimeStart;\n        const beatTimeEnd: number = beatsPerTick * tickTimeEnd;\n\n        let noteSizeStart: number = this._noteSizeFinal;\n        let noteSizeEnd: number = this._noteSizeFinal;\n        let prevNoteSize: number = this._prevNoteSizeFinal;\n        let nextNoteSize: number = 0;\n        let prevSlideStart: boolean = false;\n        let prevSlideEnd: boolean = false;\n        let nextSlideStart: boolean = false;\n        let nextSlideEnd: boolean = false;\n        let prevSlideRatioStart: number = 0.0;\n        let prevSlideRatioEnd: number = 0.0;\n        let nextSlideRatioStart: number = 0.0;\n        let nextSlideRatioEnd: number = 0.0;\n        if (tone != null && tone.note != null && !tone.passedEndOfNote) {\n            const endPinIndex: number = tone.note.getEndPinIndex(currentPart);\n            const startPin: NotePin = tone.note.pins[endPinIndex - 1];\n            const endPin: NotePin = tone.note.pins[endPinIndex];\n            const startPinTick: number = (tone.note.start + startPin.time) * Config.ticksPerPart;\n            const endPinTick: number = (tone.note.start + endPin.time) * Config.ticksPerPart;\n            const ratioStart: number = (tickTimeStartReal - startPinTick) / (endPinTick - startPinTick);\n            const ratioEnd: number = (tickTimeEndReal - startPinTick) / (endPinTick - startPinTick);\n            noteSizeStart = startPin.size + (endPin.size - startPin.size) * ratioStart;\n            noteSizeEnd = startPin.size + (endPin.size - startPin.size) * ratioEnd;\n\n            if (transition.slides) {\n                const noteStartTick: number = tone.noteStartPart * Config.ticksPerPart;\n                const noteEndTick: number = tone.noteEndPart * Config.ticksPerPart;\n                const noteLengthTicks: number = noteEndTick - noteStartTick;\n                const maximumSlideTicks: number = noteLengthTicks * 0.5;\n                const slideTicks: number = Math.min(maximumSlideTicks, transition.slideTicks);\n                if (tone.prevNote != null && !tone.forceContinueAtStart) {\n                    if (tickTimeStartReal - noteStartTick < slideTicks) {\n                        prevSlideStart = true;\n                        prevSlideRatioStart = 0.5 * (1.0 - (tickTimeStartReal - noteStartTick) / slideTicks);\n                    }\n                    if (tickTimeEndReal - noteStartTick < slideTicks) {\n                        prevSlideEnd = true;\n                        prevSlideRatioEnd = 0.5 * (1.0 - (tickTimeEndReal - noteStartTick) / slideTicks);\n                    }\n                }\n                if (tone.nextNote != null && !tone.forceContinueAtEnd) {\n                    nextNoteSize = tone.nextNote.pins[0].size\n                    if (noteEndTick - tickTimeStartReal < slideTicks) {\n                        nextSlideStart = true;\n                        nextSlideRatioStart = 0.5 * (1.0 - (noteEndTick - tickTimeStartReal) / slideTicks);\n                    }\n                    if (noteEndTick - tickTimeEndReal < slideTicks) {\n                        nextSlideEnd = true;\n                        nextSlideRatioEnd = 0.5 * (1.0 - (noteEndTick - tickTimeEndReal) / slideTicks);\n                    }\n                }\n            }\n        }\n\n        let lowpassCutoffDecayVolumeCompensation: number = 1.0;\n        let usedNoteSize: boolean = false;\n        for (let envelopeIndex: number = 0; envelopeIndex <= instrument.envelopeCount; envelopeIndex++) {\n            let automationTarget: AutomationTarget;\n            let targetIndex: number;\n            let envelope: Envelope;\n            if (envelopeIndex == instrument.envelopeCount) {\n                if (usedNoteSize /*|| !this._perNote*/) break;\n                // Special case: if no other envelopes used note size, default to applying it to note volume.\n                automationTarget = Config.instrumentAutomationTargets.dictionary[\"noteVolume\"];\n                targetIndex = 0;\n                envelope = Config.envelopes.dictionary[\"note size\"];\n            } else {\n                let envelopeSettings: EnvelopeSettings = instrument.envelopes[envelopeIndex];\n                automationTarget = Config.instrumentAutomationTargets[envelopeSettings.target];\n                targetIndex = envelopeSettings.index;\n                envelope = Config.envelopes[envelopeSettings.envelope];\n                if (envelope.type == EnvelopeType.noteSize) usedNoteSize = true;\n            }\n            if (/*automationTarget.perNote == this._perNote &&*/ automationTarget.computeIndex != null) {\n                const computeIndex: number = automationTarget.computeIndex + targetIndex;\n                let envelopeStart: number = EnvelopeComputer.computeEnvelope(envelope, noteSecondsStart, beatTimeStart, noteSizeStart);\n                if (prevSlideStart) {\n                    const other: number = EnvelopeComputer.computeEnvelope(envelope, prevNoteSecondsStart, beatTimeStart, prevNoteSize);\n                    envelopeStart += (other - envelopeStart) * prevSlideRatioStart;\n                }\n                if (nextSlideStart) {\n                    const other: number = EnvelopeComputer.computeEnvelope(envelope, 0.0, beatTimeStart, nextNoteSize);\n                    envelopeStart += (other - envelopeStart) * nextSlideRatioStart;\n                }\n                let envelopeEnd: number = envelopeStart;\n                if (instrument.discreteEnvelope == false) {\n                    envelopeEnd = EnvelopeComputer.computeEnvelope(envelope, noteSecondsEnd, beatTimeEnd, noteSizeEnd);\n                    if (prevSlideEnd) {\n                        const other: number = EnvelopeComputer.computeEnvelope(envelope, prevNoteSecondsEnd, beatTimeEnd, prevNoteSize);\n                        envelopeEnd += (other - envelopeEnd) * prevSlideRatioEnd;\n                    }\n                    if (nextSlideEnd) {\n                        const other: number = EnvelopeComputer.computeEnvelope(envelope, 0.0, beatTimeEnd, nextNoteSize);\n                        envelopeEnd += (other - envelopeEnd) * nextSlideRatioEnd;\n                    }\n                }\n\n                this.envelopeStarts[computeIndex] *= envelopeStart;\n                this.envelopeEnds[computeIndex] *= envelopeEnd;\n                this._modifiedEnvelopeIndices[this._modifiedEnvelopeCount++] = computeIndex;\n\n                if (automationTarget.isFilter) {\n                    const filterSettings: FilterSettings = /*this._perNote ?*/ (instrument.tmpNoteFilterStart != null) ? instrument.tmpNoteFilterStart : instrument.noteFilter /*: instrument.eqFilter*/;\n                    if (filterSettings.controlPointCount > targetIndex && filterSettings.controlPoints[targetIndex].type == FilterType.lowPass) {\n                        lowpassCutoffDecayVolumeCompensation = Math.max(lowpassCutoffDecayVolumeCompensation, EnvelopeComputer.getLowpassCutoffDecayVolumeCompensation(envelope));\n                    }\n                }\n            }\n        }\n\n        this.noteSecondsStart = noteSecondsStart;\n        this.noteSecondsStartUnscaled = noteSecondsStartUnscaled;\n        this.noteSecondsEnd = noteSecondsEnd;\n        this.noteSecondsEndUnscaled = noteSecondsEndUnscaled;\n        this.noteTicksStart = noteTicksStart;\n        this.noteTicksEnd = noteTicksEnd;\n        this.prevNoteSecondsStart = prevNoteSecondsStart;\n        this.prevNoteSecondsStartUnscaled = prevNoteSecondsStartUnscaled;\n        this.prevNoteSecondsEnd = prevNoteSecondsEnd;\n        this.prevNoteSecondsEndUnscaled = prevNoteSecondsEndUnscaled;\n        this.prevNoteTicksStart = prevNoteTicksStart;\n        this.prevNoteTicksEnd = prevNoteTicksEnd;\n        this.prevNoteSize = prevNoteSize;\n        this.nextNoteSize = nextNoteSize;\n        this.noteSizeStart = noteSizeStart;\n        this.noteSizeEnd = noteSizeEnd;\n        this.prevSlideStart = prevSlideStart;\n        this.prevSlideEnd = prevSlideEnd;\n        this.nextSlideStart = nextSlideStart;\n        this.nextSlideEnd = nextSlideEnd;\n        this.prevSlideRatioStart = prevSlideRatioStart;\n        this.prevSlideRatioEnd = prevSlideRatioEnd;\n        this.nextSlideRatioStart = nextSlideRatioStart;\n        this.nextSlideRatioEnd = nextSlideRatioEnd;\n        this.lowpassCutoffDecayVolumeCompensation = lowpassCutoffDecayVolumeCompensation;\n    }\n\n    public clearEnvelopes(): void {\n        for (let envelopeIndex: number = 0; envelopeIndex < this._modifiedEnvelopeCount; envelopeIndex++) {\n            const computeIndex: number = this._modifiedEnvelopeIndices[envelopeIndex];\n            this.envelopeStarts[computeIndex] = 1.0;\n            this.envelopeEnds[computeIndex] = 1.0;\n        }\n        this._modifiedEnvelopeCount = 0;\n    }\n\n    public static computeEnvelope(envelope: Envelope, time: number, beats: number, noteSize: number): number {\n        switch (envelope.type) {\n            case EnvelopeType.noteSize: return Synth.noteSizeToVolumeMult(noteSize);\n            case EnvelopeType.none: return 1.0;\n            case EnvelopeType.twang: return 1.0 / (1.0 + time * envelope.speed);\n            case EnvelopeType.swell: return 1.0 - 1.0 / (1.0 + time * envelope.speed);\n            case EnvelopeType.tremolo: return 0.5 - Math.cos(beats * 2.0 * Math.PI * envelope.speed) * 0.5;\n            case EnvelopeType.tremolo2: return 0.75 - Math.cos(beats * 2.0 * Math.PI * envelope.speed) * 0.25;\n            case EnvelopeType.punch: return Math.max(1.0, 2.0 - time * 10.0);\n            case EnvelopeType.flare: const attack: number = 0.25 / Math.sqrt(envelope.speed); return time < attack ? time / attack : 1.0 / (1.0 + (time - attack) * envelope.speed);\n            case EnvelopeType.decay: return Math.pow(2, -envelope.speed * time);\n            case EnvelopeType.blip: return 1.0 * +(time < (0.25 / Math.sqrt(envelope.speed)));\n            default: throw new Error(\"Unrecognized operator envelope type.\");\n        }\n\n    }\n\n    public static getLowpassCutoffDecayVolumeCompensation(envelope: Envelope): number {\n        // This is a little hokey in the details, but I designed it a while ago and keep it \n        // around for compatibility. This decides how much to increase the volume (or\n        // expression) to compensate for a decaying lowpass cutoff to maintain perceived\n        // volume overall.\n        if (envelope.type == EnvelopeType.decay) return 1.25 + 0.025 * envelope.speed;\n        if (envelope.type == EnvelopeType.twang) return 1.0 + 0.02 * envelope.speed;\n        return 1.0;\n    }\n}\n\nclass Tone {\n    public instrumentIndex: number;\n    public readonly pitches: number[] = Array(Config.maxChordSize).fill(0);\n    public pitchCount: number = 0;\n    public chordSize: number = 0;\n    public drumsetPitch: number | null = null;\n    public note: Note | null = null;\n    public prevNote: Note | null = null;\n    public nextNote: Note | null = null;\n    public prevNotePitchIndex: number = 0;\n    public nextNotePitchIndex: number = 0;\n    public freshlyAllocated: boolean = true;\n    public atNoteStart: boolean = false;\n    public isOnLastTick: boolean = false; // Whether the tone is finished fading out and ready to be freed.\n    public passedEndOfNote: boolean = false;\n    public forceContinueAtStart: boolean = false;\n    public forceContinueAtEnd: boolean = false;\n    public noteStartPart: number = 0;\n    public noteEndPart: number = 0;\n    public ticksSinceReleased: number = 0;\n    public liveInputSamplesHeld: number = 0;\n    public lastInterval: number = 0;\n    public noiseSample: number = 0.0;\n    public stringSustainStart: number = 0;\n    public stringSustainEnd: number = 0;\n    public readonly phases: number[] = [];\n    public readonly operatorWaves: OperatorWave[] = [];\n    public readonly phaseDeltas: number[] = [];\n    public readonly phaseDeltaScales: number[] = [];\n    public expression: number = 0.0;\n    public expressionDelta: number = 0.0;\n    public readonly operatorExpressions: number[] = [];\n    public readonly operatorExpressionDeltas: number[] = [];\n    public readonly prevPitchExpressions: Array<number | null> = Array(Config.maxPitchOrOperatorCount).fill(null);\n    public prevVibrato: number | null = null;\n    public prevStringDecay: number | null = null;\n    public pulseWidth: number = 0.0;\n    public pulseWidthDelta: number = 0.0;\n    public supersawDynamism: number = 0.0;\n\tpublic supersawDynamismDelta: number = 0.0;\n\tpublic supersawUnisonDetunes: number[] = []; // These can change over time, but slowly enough that I'm not including corresponding delta values within a tick run.\n\tpublic supersawShape: number = 0.0;\n\tpublic supersawShapeDelta: number = 0.0;\n\tpublic supersawDelayLength: number = 0.0;\n\tpublic supersawDelayLengthDelta: number = 0.0;\n\tpublic supersawDelayLine: Float32Array | null = null;\n\tpublic supersawDelayIndex: number = -1;\n\tpublic supersawPrevPhaseDelta: number | null = null;\n    public readonly pickedStrings: PickedString[] = [];\n\n    public readonly noteFilters: DynamicBiquadFilter[] = [];\n    public noteFilterCount: number = 0;\n    public initialNoteFilterInput1: number = 0.0;\n    public initialNoteFilterInput2: number = 0.0;\n\n    public specialIntervalExpressionMult: number = 1.0;\n    public readonly feedbackOutputs: number[] = [];\n    public feedbackMult: number = 0.0;\n    public feedbackDelta: number = 0.0;\n    public stereoVolumeLStart: number = 0.0;\n    public stereoVolumeRStart: number = 0.0;\n    public stereoVolumeLDelta: number = 0.0;\n    public stereoVolumeRDelta: number = 0.0;\n    public stereoDelayStart: number = 0.0;\n    public stereoDelayEnd: number = 0.0;\n    public stereoDelayDelta: number = 0.0;\n    public customVolumeStart: number = 0.0;\n    public customVolumeEnd: number = 0.0;\n    public filterResonanceStart: number = 0.0;\n    public filterResonanceDelta: number = 0.0;\n    public isFirstOrder: boolean = false;\n\n    public readonly envelopeComputer: EnvelopeComputer = new EnvelopeComputer(/*true*/);\n\n    constructor() {\n        this.reset();\n    }\n\n    public reset(): void {\n        this.noiseSample = 0.0;\n        for (let i: number = 0; i < Config.maxPitchOrOperatorCount; i++) {\n            this.phases[i] = 0.0;\n            this.operatorWaves[i] = Config.operatorWaves[0];\n            this.feedbackOutputs[i] = 0.0;\n            this.prevPitchExpressions[i] = null;\n        }\n        for (let i: number = 0; i < this.noteFilterCount; i++) {\n            this.noteFilters[i].resetOutput();\n        }\n        this.noteFilterCount = 0;\n        this.initialNoteFilterInput1 = 0.0;\n        this.initialNoteFilterInput2 = 0.0;\n        this.liveInputSamplesHeld = 0;\n        this.supersawDelayIndex = -1;\n        for (const pickedString of this.pickedStrings) {\n            pickedString.reset();\n        }\n        this.envelopeComputer.reset();\n        this.prevVibrato = null;\n        this.prevStringDecay = null;\n        this.supersawPrevPhaseDelta = null;\n        this.drumsetPitch = null;\n    }\n}\n\nclass InstrumentState {\n    public awake: boolean = false; // Whether the instrument's effects-processing loop should continue.\n    public computed: boolean = false; // Whether the effects-processing parameters are up-to-date for the current synth run.\n    public tonesAddedInThisTick: boolean = false; // Whether any instrument tones are currently active.\n    public flushingDelayLines: boolean = false; // If no tones were active recently, enter a mode where the delay lines are filled with zeros to reset them for later use.\n    public deactivateAfterThisTick: boolean = false; // Whether the instrument is ready to be deactivated because the delay lines, if any, are fully zeroed.\n    public attentuationProgress: number = 0.0; // How long since an active tone introduced an input signal to the delay lines, normalized from 0 to 1 based on how long to wait until the delay lines signal will have audibly dissapated.\n    public flushedSamples: number = 0; // How many delay line samples have been flushed to zero.\n    public readonly activeTones: Deque<Tone> = new Deque<Tone>();\n    public readonly activeModTones: Deque<Tone> = new Deque<Tone>();\n    public readonly releasedTones: Deque<Tone> = new Deque<Tone>(); // Tones that are in the process of fading out after the corresponding notes ended.\n    public readonly liveInputTones: Deque<Tone> = new Deque<Tone>(); // Tones that are initiated by a source external to the loaded song data.\n\n    public type: InstrumentType = InstrumentType.chip;\n    public synthesizer: Function | null = null;\n    public wave: Float32Array | null = null;\n    public noisePitchFilterMult: number = 1.0;\n    public unison: Unison | null = null;\n    public chord: Chord | null = null;\n    public effects: number = 0;\n\n    public volumeScale: number = 0;\n    public aliases: boolean = false;\n    public arpTime: number = 0;\n    public vibratoTime: number = 0;\n    public nextVibratoTime: number = 0;\n    public envelopeTime: number = 0;\n\n    public eqFilterVolume: number = 1.0;\n    public eqFilterVolumeDelta: number = 0.0;\n    public mixVolume: number = 1.0;\n    public mixVolumeDelta: number = 0.0;\n    public delayInputMult: number = 0.0;\n    public delayInputMultDelta: number = 0.0;\n\n    public distortion: number = 0.0;\n    public distortionDelta: number = 0.0;\n    public distortionDrive: number = 0.0;\n    public distortionDriveDelta: number = 0.0;\n    public distortionFractionalInput1: number = 0.0;\n    public distortionFractionalInput2: number = 0.0;\n    public distortionFractionalInput3: number = 0.0;\n    public distortionPrevInput: number = 0.0;\n    public distortionNextOutput: number = 0.0;\n\n    public bitcrusherPrevInput: number = 0.0;\n    public bitcrusherCurrentOutput: number = 0.0;\n    public bitcrusherPhase: number = 1.0;\n    public bitcrusherPhaseDelta: number = 0.0;\n    public bitcrusherPhaseDeltaScale: number = 1.0;\n    public bitcrusherScale: number = 1.0;\n    public bitcrusherScaleScale: number = 1.0;\n    public bitcrusherFoldLevel: number = 1.0;\n    public bitcrusherFoldLevelScale: number = 1.0;\n\n    public readonly eqFilters: DynamicBiquadFilter[] = [];\n    public eqFilterCount: number = 0;\n    public initialEqFilterInput1: number = 0.0;\n    public initialEqFilterInput2: number = 0.0;\n\n    public panningDelayLine: Float32Array | null = null;\n    public panningDelayPos: number = 0;\n    public panningVolumeL: number = 0.0;\n    public panningVolumeR: number = 0.0;\n    public panningVolumeDeltaL: number = 0.0;\n    public panningVolumeDeltaR: number = 0.0;\n    public panningOffsetL: number = 0.0;\n    public panningOffsetR: number = 0.0;\n    public panningOffsetDeltaL: number = 0.0;\n    public panningOffsetDeltaR: number = 0.0;\n\n    public chorusDelayLineL: Float32Array | null = null;\n    public chorusDelayLineR: Float32Array | null = null;\n    public chorusDelayLineDirty: boolean = false;\n    public chorusDelayPos: number = 0;\n    public chorusPhase: number = 0;\n    public chorusVoiceMult: number = 0;\n    public chorusVoiceMultDelta: number = 0;\n    public chorusCombinedMult: number = 0;\n    public chorusCombinedMultDelta: number = 0;\n\n    public echoDelayLineL: Float32Array | null = null;\n    public echoDelayLineR: Float32Array | null = null;\n    public echoDelayLineDirty: boolean = false;\n    public echoDelayPos: number = 0;\n    public echoDelayOffsetStart: number = 0;\n    public echoDelayOffsetEnd: number | null = null;\n    public echoDelayOffsetRatio: number = 0.0;\n    public echoDelayOffsetRatioDelta: number = 0.0;\n    public echoMult: number = 0.0;\n    public echoMultDelta: number = 0.0;\n    public echoShelfA1: number = 0.0;\n    public echoShelfB0: number = 0.0;\n    public echoShelfB1: number = 0.0;\n    public echoShelfSampleL: number = 0.0;\n    public echoShelfSampleR: number = 0.0;\n    public echoShelfPrevInputL: number = 0.0;\n    public echoShelfPrevInputR: number = 0.0;\n\n    public reverbDelayLine: Float32Array | null = null;\n    public reverbDelayLineDirty: boolean = false;\n    public reverbDelayPos: number = 0;\n    public reverbMult: number = 0.0;\n    public reverbMultDelta: number = 0.0;\n    public reverbShelfA1: number = 0.0;\n    public reverbShelfB0: number = 0.0;\n    public reverbShelfB1: number = 0.0;\n    public reverbShelfSample0: number = 0.0;\n    public reverbShelfSample1: number = 0.0;\n    public reverbShelfSample2: number = 0.0;\n    public reverbShelfSample3: number = 0.0;\n    public reverbShelfPrevInput0: number = 0.0;\n    public reverbShelfPrevInput1: number = 0.0;\n    public reverbShelfPrevInput2: number = 0.0;\n    public reverbShelfPrevInput3: number = 0.0;\n\n    //public readonly envelopeComputer: EnvelopeComputer = new EnvelopeComputer(false);\n\n    public readonly spectrumWave: SpectrumWaveState = new SpectrumWaveState();\n    public readonly harmonicsWave: HarmonicsWaveState = new HarmonicsWaveState();\n    public readonly drumsetSpectrumWaves: SpectrumWaveState[] = [];\n\n    constructor() {\n        for (let i: number = 0; i < Config.drumCount; i++) {\n            this.drumsetSpectrumWaves[i] = new SpectrumWaveState();\n        }\n    }\n\n\n    public allocateNecessaryBuffers(synth: Synth, instrument: Instrument, samplesPerTick: number): void {\n        if (effectsIncludePanning(instrument.effects)) {\n            if (this.panningDelayLine == null || this.panningDelayLine.length < synth.panningDelayBufferSize) {\n                this.panningDelayLine = new Float32Array(synth.panningDelayBufferSize);\n            }\n        }\n        if (effectsIncludeChorus(instrument.effects)) {\n            if (this.chorusDelayLineL == null || this.chorusDelayLineL.length < synth.chorusDelayBufferSize) {\n                this.chorusDelayLineL = new Float32Array(synth.chorusDelayBufferSize);\n            }\n            if (this.chorusDelayLineR == null || this.chorusDelayLineR.length < synth.chorusDelayBufferSize) {\n                this.chorusDelayLineR = new Float32Array(synth.chorusDelayBufferSize);\n            }\n        }\n        if (effectsIncludeEcho(instrument.effects)) {\n            // account for tempo and delay automation changing delay length during a tick?\n            const safeEchoDelaySteps: number = Math.max(Config.echoDelayRange >> 1, (instrument.echoDelay + 1)); // The delay may be very short now, but if it increases later make sure we have enough sample history.\n            const baseEchoDelayBufferSize: number = Synth.fittingPowerOfTwo(safeEchoDelaySteps * Config.echoDelayStepTicks * samplesPerTick);\n            const safeEchoDelayBufferSize: number = baseEchoDelayBufferSize * 2; // If the tempo or delay changes and we suddenly need a longer delay, make sure that we have enough sample history to accomodate the longer delay.\n\n            if (this.echoDelayLineL == null || this.echoDelayLineR == null) {\n                this.echoDelayLineL = new Float32Array(safeEchoDelayBufferSize);\n                this.echoDelayLineR = new Float32Array(safeEchoDelayBufferSize);\n            } else if (this.echoDelayLineL.length < safeEchoDelayBufferSize || this.echoDelayLineR.length < safeEchoDelayBufferSize) {\n                // The echo delay length may change whlie the song is playing if tempo changes,\n                // so buffers may need to be reallocated, but we don't want to lose any echoes\n                // so we need to copy the contents of the old buffer to the new one.\n                const newDelayLineL: Float32Array = new Float32Array(safeEchoDelayBufferSize);\n                const newDelayLineR: Float32Array = new Float32Array(safeEchoDelayBufferSize);\n                const oldMask: number = this.echoDelayLineL.length - 1;\n\n                for (let i = 0; i < this.echoDelayLineL.length; i++) {\n                    newDelayLineL[i] = this.echoDelayLineL[(this.echoDelayPos + i) & oldMask];\n                    newDelayLineR[i] = this.echoDelayLineL[(this.echoDelayPos + i) & oldMask];\n                }\n\n                this.echoDelayPos = this.echoDelayLineL.length;\n                this.echoDelayLineL = newDelayLineL;\n                this.echoDelayLineR = newDelayLineR;\n            }\n        }\n        if (effectsIncludeReverb(instrument.effects)) {\n            // TODO: Make reverb delay line sample rate agnostic. Maybe just double buffer size for 96KHz? Adjust attenuation and shelf cutoff appropriately?\n            if (this.reverbDelayLine == null) {\n                this.reverbDelayLine = new Float32Array(Config.reverbDelayBufferSize);\n            }\n        }\n    }\n\n    public deactivate(): void {\n        this.bitcrusherPrevInput = 0.0;\n        this.bitcrusherCurrentOutput = 0.0;\n        this.bitcrusherPhase = 1.0;\n        for (let i: number = 0; i < this.eqFilterCount; i++) {\n            this.eqFilters[i].resetOutput();\n        }\n        this.eqFilterCount = 0;\n        this.initialEqFilterInput1 = 0.0;\n        this.initialEqFilterInput2 = 0.0;\n        this.distortionFractionalInput1 = 0.0;\n        this.distortionFractionalInput2 = 0.0;\n        this.distortionFractionalInput3 = 0.0;\n        this.distortionPrevInput = 0.0;\n        this.distortionNextOutput = 0.0;\n        this.panningDelayPos = 0;\n        if (this.panningDelayLine != null) for (let i: number = 0; i < this.panningDelayLine.length; i++) this.panningDelayLine[i] = 0.0;\n        this.echoDelayOffsetEnd = null;\n        this.echoShelfSampleL = 0.0;\n        this.echoShelfSampleR = 0.0;\n        this.echoShelfPrevInputL = 0.0;\n        this.echoShelfPrevInputR = 0.0;\n        this.reverbShelfSample0 = 0.0;\n        this.reverbShelfSample1 = 0.0;\n        this.reverbShelfSample2 = 0.0;\n        this.reverbShelfSample3 = 0.0;\n        this.reverbShelfPrevInput0 = 0.0;\n        this.reverbShelfPrevInput1 = 0.0;\n        this.reverbShelfPrevInput2 = 0.0;\n        this.reverbShelfPrevInput3 = 0.0;\n\n        this.volumeScale = 1.0;\n        this.aliases = false;\n\n        this.awake = false;\n        this.flushingDelayLines = false;\n        this.deactivateAfterThisTick = false;\n        this.attentuationProgress = 0.0;\n        this.flushedSamples = 0;\n    }\n\n    public resetAllEffects(): void {\n        this.deactivate();\n        // LFOs are reset here rather than in deactivate() for periodic oscillation that stays \"on the beat\". Resetting in deactivate() will cause it to reset with each note.\n        this.vibratoTime = 0;\n        this.nextVibratoTime = 0;\n        this.arpTime = 0;\n        this.envelopeTime = 0;\n\n        if (this.chorusDelayLineDirty) {\n            for (let i: number = 0; i < this.chorusDelayLineL!.length; i++) this.chorusDelayLineL![i] = 0.0;\n            for (let i: number = 0; i < this.chorusDelayLineR!.length; i++) this.chorusDelayLineR![i] = 0.0;\n        }\n        if (this.echoDelayLineDirty) {\n            for (let i: number = 0; i < this.echoDelayLineL!.length; i++) this.echoDelayLineL![i] = 0.0;\n            for (let i: number = 0; i < this.echoDelayLineR!.length; i++) this.echoDelayLineR![i] = 0.0;\n        }\n        if (this.reverbDelayLineDirty) {\n            for (let i: number = 0; i < this.reverbDelayLine!.length; i++) this.reverbDelayLine![i] = 0.0;\n        }\n\n        this.chorusPhase = 0.0;\n    }\n\n    public compute(synth: Synth, instrument: Instrument, samplesPerTick: number, roundedSamplesPerTick: number, tone: Tone | null, channelIndex: number, instrumentIndex: number): void {\n        this.computed = true;\n\n        this.type = instrument.type;\n        this.synthesizer = Synth.getInstrumentSynthFunction(instrument);\n        this.unison = Config.unisons[instrument.unison];\n        this.chord = instrument.getChord();\n        this.noisePitchFilterMult = Config.chipNoises[instrument.chipNoise].pitchFilterMult;\n        this.effects = instrument.effects;\t\n\n        this.aliases = instrument.aliases;\n        this.volumeScale = 1.0;\n\n        this.allocateNecessaryBuffers(synth, instrument, samplesPerTick);\n\n        const samplesPerSecond: number = synth.samplesPerSecond;\n        this.updateWaves(instrument, samplesPerSecond);\n\n        //const ticksIntoBar: number = synth.getTicksIntoBar();\n        //const tickTimeStart: number = ticksIntoBar;\n        //const tickTimeEnd:   number = ticksIntoBar + 1.0;\n        //const secondsPerTick: number = samplesPerTick / synth.samplesPerSecond;\n        //const currentPart: number = synth.getCurrentPart();\n        //this.envelopeComputer.computeEnvelopes(instrument, currentPart, tickTimeStart, secondsPerTick, tone);\n        //const envelopeStarts: number[] = this.envelopeComputer.envelopeStarts;\n        //const envelopeEnds: number[] = this.envelopeComputer.envelopeEnds;\n\n        const usesDistortion: boolean = effectsIncludeDistortion(this.effects);\n        const usesBitcrusher: boolean = effectsIncludeBitcrusher(this.effects);\n        const usesPanning: boolean = effectsIncludePanning(this.effects);\n        const usesChorus: boolean = effectsIncludeChorus(this.effects);\n        const usesEcho: boolean = effectsIncludeEcho(this.effects);\n        const usesReverb: boolean = effectsIncludeReverb(this.effects);\n\n        if (usesDistortion) {\n            let useDistortionStart: number = instrument.distortion;\n            let useDistortionEnd: number = instrument.distortion;\n\n            // Check for distortion mods\n            if (synth.isModActive(Config.modulators.dictionary[\"distortion\"].index, channelIndex, instrumentIndex)) {\n                useDistortionStart = synth.getModValue(Config.modulators.dictionary[\"distortion\"].index, channelIndex, instrumentIndex, false);\n                useDistortionEnd = synth.getModValue(Config.modulators.dictionary[\"distortion\"].index, channelIndex, instrumentIndex, true);\n            }\n\n            const distortionSliderStart = Math.min(1.0, /*envelopeStarts[InstrumentAutomationIndex.distortion] **/ useDistortionStart / (Config.distortionRange - 1));\n            const distortionSliderEnd = Math.min(1.0, /*envelopeEnds[  InstrumentAutomationIndex.distortion] **/ useDistortionEnd / (Config.distortionRange - 1));\n            const distortionStart: number = Math.pow(1.0 - 0.895 * (Math.pow(20.0, distortionSliderStart) - 1.0) / 19.0, 2.0);\n            const distortionEnd: number = Math.pow(1.0 - 0.895 * (Math.pow(20.0, distortionSliderEnd) - 1.0) / 19.0, 2.0);\n            const distortionDriveStart: number = (1.0 + 2.0 * distortionSliderStart) / Config.distortionBaseVolume;\n            const distortionDriveEnd: number = (1.0 + 2.0 * distortionSliderEnd) / Config.distortionBaseVolume;\n            this.distortion = distortionStart;\n            this.distortionDelta = (distortionEnd - distortionStart) / roundedSamplesPerTick;\n            this.distortionDrive = distortionDriveStart;\n            this.distortionDriveDelta = (distortionDriveEnd - distortionDriveStart) / roundedSamplesPerTick;\n        }\n\n        if (usesBitcrusher) {\n            let freqSettingStart: number = instrument.bitcrusherFreq /** Math.sqrt(envelopeStarts[InstrumentAutomationIndex.bitcrusherFrequency])*/;\n            let freqSettingEnd: number = instrument.bitcrusherFreq /** Math.sqrt(envelopeEnds[  InstrumentAutomationIndex.bitcrusherFrequency])*/;\n\n            // Check for freq crush mods\n            if (synth.isModActive(Config.modulators.dictionary[\"freq crush\"].index, channelIndex, instrumentIndex)) {\n                freqSettingStart = synth.getModValue(Config.modulators.dictionary[\"freq crush\"].index, channelIndex, instrumentIndex, false);\n                freqSettingEnd = synth.getModValue(Config.modulators.dictionary[\"freq crush\"].index, channelIndex, instrumentIndex, true);\n            }\n\n            let quantizationSettingStart: number = instrument.bitcrusherQuantization /** Math.sqrt(envelopeStarts[InstrumentAutomationIndex.bitcrusherQuantization])*/;\n            let quantizationSettingEnd: number = instrument.bitcrusherQuantization /** Math.sqrt(envelopeEnds[  InstrumentAutomationIndex.bitcrusherQuantization])*/;\n\n            // Check for bitcrush mods\n            if (synth.isModActive(Config.modulators.dictionary[\"bit crush\"].index, channelIndex, instrumentIndex)) {\n                quantizationSettingStart = synth.getModValue(Config.modulators.dictionary[\"bit crush\"].index, channelIndex, instrumentIndex, false);\n                quantizationSettingEnd = synth.getModValue(Config.modulators.dictionary[\"bit crush\"].index, channelIndex, instrumentIndex, true);\n            }\n\n            const basePitch: number = Config.keys[synth.song!.key].basePitch; // TODO: What if there's a key change mid-song?\n            const freqStart: number = Instrument.frequencyFromPitch(basePitch + 60) * Math.pow(2.0, (Config.bitcrusherFreqRange - 1 - freqSettingStart) * Config.bitcrusherOctaveStep);\n            const freqEnd: number = Instrument.frequencyFromPitch(basePitch + 60) * Math.pow(2.0, (Config.bitcrusherFreqRange - 1 - freqSettingEnd) * Config.bitcrusherOctaveStep);\n            const phaseDeltaStart: number = Math.min(1.0, freqStart / samplesPerSecond);\n            const phaseDeltaEnd: number = Math.min(1.0, freqEnd / samplesPerSecond);\n            this.bitcrusherPhaseDelta = phaseDeltaStart;\n            this.bitcrusherPhaseDeltaScale = Math.pow(phaseDeltaEnd / phaseDeltaStart, 1.0 / roundedSamplesPerTick);\n\n            const scaleStart: number = 2.0 * Config.bitcrusherBaseVolume * Math.pow(2.0, 1.0 - Math.pow(2.0, (Config.bitcrusherQuantizationRange - 1 - quantizationSettingStart) * 0.5));\n            const scaleEnd: number = 2.0 * Config.bitcrusherBaseVolume * Math.pow(2.0, 1.0 - Math.pow(2.0, (Config.bitcrusherQuantizationRange - 1 - quantizationSettingEnd) * 0.5));\n            this.bitcrusherScale = scaleStart;\n            this.bitcrusherScaleScale = Math.pow(scaleEnd / scaleStart, 1.0 / roundedSamplesPerTick);\n\n            const foldLevelStart: number = 2.0 * Config.bitcrusherBaseVolume * Math.pow(1.5, Config.bitcrusherQuantizationRange - 1 - quantizationSettingStart);\n            const foldLevelEnd: number = 2.0 * Config.bitcrusherBaseVolume * Math.pow(1.5, Config.bitcrusherQuantizationRange - 1 - quantizationSettingEnd);\n            this.bitcrusherFoldLevel = foldLevelStart;\n            this.bitcrusherFoldLevelScale = Math.pow(foldLevelEnd / foldLevelStart, 1.0 / roundedSamplesPerTick);\n        }\n\n        let eqFilterVolume: number = 1.0; //this.envelopeComputer.lowpassCutoffDecayVolumeCompensation;\n        if (instrument.eqFilterType) {\n            // Simple EQ filter (old style). For analysis, using random filters from normal style since they are N/A in this context.\n            const eqFilterSettingsStart: FilterSettings = instrument.eqFilter;\n            if (instrument.eqSubFilters[1] == null)\n                instrument.eqSubFilters[1] = new FilterSettings();\n            const eqFilterSettingsEnd: FilterSettings = instrument.eqSubFilters[1];\n\n            // Change location based on slider values\n            let startSimpleFreq: number = instrument.eqFilterSimpleCut;\n            let startSimpleGain: number = instrument.eqFilterSimplePeak;\n            let endSimpleFreq: number = instrument.eqFilterSimpleCut;\n            let endSimpleGain: number = instrument.eqFilterSimplePeak;\n\n            let filterChanges: boolean = false;\n\n            if (synth.isModActive(Config.modulators.dictionary[\"eq filt cut\"].index, channelIndex, instrumentIndex)) {\n                startSimpleFreq = synth.getModValue(Config.modulators.dictionary[\"eq filt cut\"].index, channelIndex, instrumentIndex, false);\n                endSimpleFreq = synth.getModValue(Config.modulators.dictionary[\"eq filt cut\"].index, channelIndex, instrumentIndex, true);\n                filterChanges = true;\n            }\n            if (synth.isModActive(Config.modulators.dictionary[\"eq filt peak\"].index, channelIndex, instrumentIndex)) {\n                startSimpleGain = synth.getModValue(Config.modulators.dictionary[\"eq filt peak\"].index, channelIndex, instrumentIndex, false);\n                endSimpleGain = synth.getModValue(Config.modulators.dictionary[\"eq filt peak\"].index, channelIndex, instrumentIndex, true);\n                filterChanges = true;\n            }\n\n            let startPoint: FilterControlPoint;\n\n            if (filterChanges) {\n                eqFilterSettingsStart.convertLegacySettingsForSynth(startSimpleFreq, startSimpleGain);\n                eqFilterSettingsEnd.convertLegacySettingsForSynth(endSimpleFreq, endSimpleGain);\n\n                startPoint = eqFilterSettingsStart.controlPoints[0];\n                let endPoint: FilterControlPoint = eqFilterSettingsEnd.controlPoints[0];\n\n                startPoint.toCoefficients(Synth.tempFilterStartCoefficients, samplesPerSecond, 1.0, 1.0);\n                endPoint.toCoefficients(Synth.tempFilterEndCoefficients, samplesPerSecond, 1.0, 1.0);\n\n                if (this.eqFilters.length < 1) this.eqFilters[0] = new DynamicBiquadFilter();\n                this.eqFilters[0].loadCoefficientsWithGradient(Synth.tempFilterStartCoefficients, Synth.tempFilterEndCoefficients, 1.0 / roundedSamplesPerTick, startPoint.type == FilterType.lowPass);\n\n            } else {\n                eqFilterSettingsStart.convertLegacySettingsForSynth(startSimpleFreq, startSimpleGain, true);\n\n                startPoint = eqFilterSettingsStart.controlPoints[0];\n\n                startPoint.toCoefficients(Synth.tempFilterStartCoefficients, samplesPerSecond, 1.0, 1.0);\n\n                if (this.eqFilters.length < 1) this.eqFilters[0] = new DynamicBiquadFilter();\n                this.eqFilters[0].loadCoefficientsWithGradient(Synth.tempFilterStartCoefficients, Synth.tempFilterStartCoefficients, 1.0 / roundedSamplesPerTick, startPoint.type == FilterType.lowPass);\n\n            }\n\n            eqFilterVolume *= startPoint.getVolumeCompensationMult();\n\n            this.eqFilterCount = 1;\n            eqFilterVolume = Math.min(3.0, eqFilterVolume);\n        }\n        else {\n            const eqFilterSettings: FilterSettings = (instrument.tmpEqFilterStart != null) ? instrument.tmpEqFilterStart : instrument.eqFilter;\n            //const eqAllFreqsEnvelopeStart: number = envelopeStarts[InstrumentAutomationIndex.eqFilterAllFreqs];\n            //const eqAllFreqsEnvelopeEnd:   number = envelopeEnds[  InstrumentAutomationIndex.eqFilterAllFreqs];\n            for (let i: number = 0; i < eqFilterSettings.controlPointCount; i++) {\n                //const eqFreqEnvelopeStart: number = envelopeStarts[InstrumentAutomationIndex.eqFilterFreq0 + i];\n                //const eqFreqEnvelopeEnd:   number = envelopeEnds[  InstrumentAutomationIndex.eqFilterFreq0 + i];\n                //const eqPeakEnvelopeStart: number = envelopeStarts[InstrumentAutomationIndex.eqFilterGain0 + i];\n                //const eqPeakEnvelopeEnd:   number = envelopeEnds[  InstrumentAutomationIndex.eqFilterGain0 + i];\n                let startPoint: FilterControlPoint = eqFilterSettings.controlPoints[i];\n                let endPoint: FilterControlPoint = (instrument.tmpEqFilterEnd != null && instrument.tmpEqFilterEnd.controlPoints[i] != null) ? instrument.tmpEqFilterEnd.controlPoints[i] : eqFilterSettings.controlPoints[i];\n\n                // If switching dot type, do it all at once and do not try to interpolate since no valid interpolation exists.\n                if (startPoint.type != endPoint.type) {\n                    startPoint = endPoint;\n                }\n\n                startPoint.toCoefficients(Synth.tempFilterStartCoefficients, samplesPerSecond, /*eqAllFreqsEnvelopeStart * eqFreqEnvelopeStart*/ 1.0, /*eqPeakEnvelopeStart*/ 1.0);\n                endPoint.toCoefficients(Synth.tempFilterEndCoefficients, samplesPerSecond, /*eqAllFreqsEnvelopeEnd   * eqFreqEnvelopeEnd*/   1.0, /*eqPeakEnvelopeEnd*/   1.0);\n                if (this.eqFilters.length <= i) this.eqFilters[i] = new DynamicBiquadFilter();\n                this.eqFilters[i].loadCoefficientsWithGradient(Synth.tempFilterStartCoefficients, Synth.tempFilterEndCoefficients, 1.0 / roundedSamplesPerTick, startPoint.type == FilterType.lowPass);\n                eqFilterVolume *= startPoint.getVolumeCompensationMult();\n\n            }\n            this.eqFilterCount = eqFilterSettings.controlPointCount;\n            eqFilterVolume = Math.min(3.0, eqFilterVolume);\n        }\n\n        const mainInstrumentVolume: number = Synth.instrumentVolumeToVolumeMult(instrument.volume);\n        this.mixVolume = mainInstrumentVolume /** envelopeStarts[InstrumentAutomationIndex.mixVolume]*/;\n        let mixVolumeEnd: number = mainInstrumentVolume /** envelopeEnds[  InstrumentAutomationIndex.mixVolume]*/;\n\n        // Check for mod-related volume delta\n        if (synth.isModActive(Config.modulators.dictionary[\"mix volume\"].index, channelIndex, instrumentIndex)) {\n            // Linear falloff below 0, normal volume formula above 0. Seems to work best for scaling since the normal volume mult formula has a big gap from -25 to -24.\n            const startVal: number = synth.getModValue(Config.modulators.dictionary[\"mix volume\"].index, channelIndex, instrumentIndex, false);\n            const endVal: number = synth.getModValue(Config.modulators.dictionary[\"mix volume\"].index, channelIndex, instrumentIndex, true)\n            this.mixVolume *= ((startVal <= 0) ? ((startVal + Config.volumeRange / 2) / (Config.volumeRange / 2)) : Synth.instrumentVolumeToVolumeMult(startVal));\n            mixVolumeEnd *= ((endVal <= 0) ? ((endVal + Config.volumeRange / 2) / (Config.volumeRange / 2)) : Synth.instrumentVolumeToVolumeMult(endVal));\n        }\n\n        // Check for SONG mod-related volume delta\n        if (synth.isModActive(Config.modulators.dictionary[\"song volume\"].index)) {\n            this.mixVolume *= (synth.getModValue(Config.modulators.dictionary[\"song volume\"].index, undefined, undefined, false)) / 100.0;\n            mixVolumeEnd *= (synth.getModValue(Config.modulators.dictionary[\"song volume\"].index, undefined, undefined, true)) / 100.0;\n        }\n\n        this.mixVolumeDelta = (mixVolumeEnd - this.mixVolume) / roundedSamplesPerTick;\n\n        let eqFilterVolumeStart: number = eqFilterVolume;\n        let eqFilterVolumeEnd: number = eqFilterVolume;\n        let delayInputMultStart: number = 1.0;\n        let delayInputMultEnd: number = 1.0;\n\n        if (usesPanning) {\n            //const panEnvelopeStart: number = envelopeStarts[InstrumentAutomationIndex.panning] * 2.0 - 1.0;\n            //const panEnvelopeEnd:   number = envelopeEnds[  InstrumentAutomationIndex.panning] * 2.0 - 1.0;\n\n            let usePanStart: number = instrument.pan;\n            let usePanEnd: number = instrument.pan;\n            // Check for pan mods\n            if (synth.isModActive(Config.modulators.dictionary[\"pan\"].index, channelIndex, instrumentIndex)) {\n                usePanStart = synth.getModValue(Config.modulators.dictionary[\"pan\"].index, channelIndex, instrumentIndex, false);\n                usePanEnd = synth.getModValue(Config.modulators.dictionary[\"pan\"].index, channelIndex, instrumentIndex, true);\n            }\n\n            let panStart: number = Math.max(-1.0, Math.min(1.0, (usePanStart - Config.panCenter) / Config.panCenter /** panEnvelopeStart*/));\n            let panEnd: number = Math.max(-1.0, Math.min(1.0, (usePanEnd - Config.panCenter) / Config.panCenter /** panEnvelopeEnd  */));\n\n            const volumeStartL: number = Math.cos((1 + panStart) * Math.PI * 0.25) * 1.414;\n            const volumeStartR: number = Math.cos((1 - panStart) * Math.PI * 0.25) * 1.414;\n            const volumeEndL: number = Math.cos((1 + panEnd) * Math.PI * 0.25) * 1.414;\n            const volumeEndR: number = Math.cos((1 - panEnd) * Math.PI * 0.25) * 1.414;\n            const maxDelaySamples: number = samplesPerSecond * Config.panDelaySecondsMax;\n\n            let usePanDelayStart: number = instrument.panDelay;\n            let usePanDelayEnd: number = instrument.panDelay;\n            // Check for pan delay mods\n            if (synth.isModActive(Config.modulators.dictionary[\"pan delay\"].index, channelIndex, instrumentIndex)) {\n                usePanDelayStart = synth.getModValue(Config.modulators.dictionary[\"pan delay\"].index, channelIndex, instrumentIndex, false);\n                usePanDelayEnd = synth.getModValue(Config.modulators.dictionary[\"pan delay\"].index, channelIndex, instrumentIndex, true);\n            }\n\n            const delayStart: number = panStart * usePanDelayStart * maxDelaySamples / 10;\n            const delayEnd: number = panEnd * usePanDelayEnd * maxDelaySamples / 10;\n            const delayStartL: number = Math.max(0.0, delayStart);\n            const delayStartR: number = Math.max(0.0, -delayStart);\n            const delayEndL: number = Math.max(0.0, delayEnd);\n            const delayEndR: number = Math.max(0.0, -delayEnd);\n\n            this.panningVolumeL = volumeStartL;\n            this.panningVolumeR = volumeStartR;\n            this.panningVolumeDeltaL = (volumeEndL - volumeStartL) / roundedSamplesPerTick;\n            this.panningVolumeDeltaR = (volumeEndR - volumeStartR) / roundedSamplesPerTick;\n            this.panningOffsetL = this.panningDelayPos - delayStartL + synth.panningDelayBufferSize;\n            this.panningOffsetR = this.panningDelayPos - delayStartR + synth.panningDelayBufferSize;\n            this.panningOffsetDeltaL = (delayEndL - delayStartL) / roundedSamplesPerTick;\n            this.panningOffsetDeltaR = (delayEndR - delayStartR) / roundedSamplesPerTick;\n        }\n\n        if (usesChorus) {\n            //const chorusEnvelopeStart: number = envelopeStarts[InstrumentAutomationIndex.chorus];\n            //const chorusEnvelopeEnd:   number = envelopeEnds[  InstrumentAutomationIndex.chorus];\n            let useChorusStart: number = instrument.chorus;\n            let useChorusEnd: number = instrument.chorus;\n            // Check for chorus mods\n            if (synth.isModActive(Config.modulators.dictionary[\"chorus\"].index, channelIndex, instrumentIndex)) {\n                useChorusStart = synth.getModValue(Config.modulators.dictionary[\"chorus\"].index, channelIndex, instrumentIndex, false);\n                useChorusEnd = synth.getModValue(Config.modulators.dictionary[\"chorus\"].index, channelIndex, instrumentIndex, true);\n            }\n\n            let chorusStart: number = Math.min(1.0, /*chorusEnvelopeStart **/ useChorusStart / (Config.chorusRange - 1));\n            let chorusEnd: number = Math.min(1.0, /*chorusEnvelopeEnd   **/ useChorusEnd / (Config.chorusRange - 1));\n            chorusStart = chorusStart * 0.6 + (Math.pow(chorusStart, 6.0)) * 0.4;\n            chorusEnd = chorusEnd * 0.6 + (Math.pow(chorusEnd, 6.0)) * 0.4;\n            const chorusCombinedMultStart = 1.0 / Math.sqrt(3.0 * chorusStart * chorusStart + 1.0);\n            const chorusCombinedMultEnd = 1.0 / Math.sqrt(3.0 * chorusEnd * chorusEnd + 1.0);\n            this.chorusVoiceMult = chorusStart;\n            this.chorusVoiceMultDelta = (chorusEnd - chorusStart) / roundedSamplesPerTick;\n            this.chorusCombinedMult = chorusCombinedMultStart;\n            this.chorusCombinedMultDelta = (chorusCombinedMultEnd - chorusCombinedMultStart) / roundedSamplesPerTick;\n        }\n\n        let maxEchoMult = 0.0;\n        let averageEchoDelaySeconds: number = 0.0;\n        if (usesEcho) {\n            //const echoSustainEnvelopeStart: number = envelopeStarts[InstrumentAutomationIndex.echoSustain];\n            //const echoSustainEnvelopeEnd:   number = envelopeEnds[  InstrumentAutomationIndex.echoSustain];\n            let useEchoSustainStart: number = instrument.echoSustain;\n            let useEchoSustainEnd: number = instrument.echoSustain;\n            // Check for echo mods\n            if (synth.isModActive(Config.modulators.dictionary[\"echo\"].index, channelIndex, instrumentIndex)) {\n                useEchoSustainStart = Math.max( 0.0, synth.getModValue(Config.modulators.dictionary[\"echo\"].index, channelIndex, instrumentIndex, false) );\n                useEchoSustainEnd = Math.max( 0.0, synth.getModValue(Config.modulators.dictionary[\"echo\"].index, channelIndex, instrumentIndex, true) );\n            }\n            const echoMultStart: number = Math.min(1.0, Math.pow(/*echoSustainEnvelopeStart **/ useEchoSustainStart / Config.echoSustainRange, 1.1)) * 0.9;\n            const echoMultEnd: number = Math.min(1.0, Math.pow(/*echoSustainEnvelopeEnd   **/ useEchoSustainEnd / Config.echoSustainRange, 1.1)) * 0.9;\n            this.echoMult = echoMultStart;\n            this.echoMultDelta = Math.max(0.0, (echoMultEnd - echoMultStart) / roundedSamplesPerTick);\n            maxEchoMult = Math.max(echoMultStart, echoMultEnd);\n\n            // TODO: After computing a tick's settings once for multiple run lengths (which is\n            // good for audio worklet threads), compute the echo delay envelopes at tick (or\n            // part) boundaries to interpolate between two delay taps.\n            //const echoDelayEnvelopeStart:   number = envelopeStarts[InstrumentAutomationIndex.echoDelay];\n            //const echoDelayEnvelopeEnd:     number = envelopeEnds[  InstrumentAutomationIndex.echoDelay];\n            let useEchoDelayStart: number = instrument.echoDelay;\n            let useEchoDelayEnd: number = instrument.echoDelay;\n            let ignoreTicks: boolean = false;\n            // Check for pan delay mods\n            if (synth.isModActive(Config.modulators.dictionary[\"echo delay\"].index, channelIndex, instrumentIndex)) {\n                useEchoDelayStart = synth.getModValue(Config.modulators.dictionary[\"echo delay\"].index, channelIndex, instrumentIndex, false);\n                useEchoDelayEnd = synth.getModValue(Config.modulators.dictionary[\"echo delay\"].index, channelIndex, instrumentIndex, true);\n                ignoreTicks = true;\n            }\n\n            const tmpEchoDelayOffsetStart: number = Math.round((useEchoDelayStart + 1) * Config.echoDelayStepTicks * samplesPerTick);\n            const tmpEchoDelayOffsetEnd: number = Math.round((useEchoDelayEnd + 1) * Config.echoDelayStepTicks * samplesPerTick);\n            if (this.echoDelayOffsetEnd != null && !ignoreTicks) {\n                this.echoDelayOffsetStart = this.echoDelayOffsetEnd;\n            } else {\n                this.echoDelayOffsetStart = tmpEchoDelayOffsetStart;\n            }\n\n            this.echoDelayOffsetEnd = tmpEchoDelayOffsetEnd;\n            averageEchoDelaySeconds = (this.echoDelayOffsetStart + this.echoDelayOffsetEnd) * 0.5 / samplesPerSecond;\n\n            this.echoDelayOffsetRatio = 0.0;\n            this.echoDelayOffsetRatioDelta = 1.0 / roundedSamplesPerTick;\n\n            const shelfRadians: number = 2.0 * Math.PI * Config.echoShelfHz / synth.samplesPerSecond;\n            Synth.tempFilterStartCoefficients.highShelf1stOrder(shelfRadians, Config.echoShelfGain);\n            this.echoShelfA1 = Synth.tempFilterStartCoefficients.a[1];\n            this.echoShelfB0 = Synth.tempFilterStartCoefficients.b[0];\n            this.echoShelfB1 = Synth.tempFilterStartCoefficients.b[1];\n        }\n\n        let maxReverbMult = 0.0;\n        if (usesReverb) {\n            //const reverbEnvelopeStart: number = envelopeStarts[InstrumentAutomationIndex.reverb];\n            //const reverbEnvelopeEnd:   number = envelopeEnds[  InstrumentAutomationIndex.reverb];\n\n            let useReverbStart: number = instrument.reverb;\n            let useReverbEnd: number = instrument.reverb;\n\n            // Check for mod reverb, instrument level\n            if (synth.isModActive(Config.modulators.dictionary[\"reverb\"].index, channelIndex, instrumentIndex)) {\n                useReverbStart = synth.getModValue(Config.modulators.dictionary[\"reverb\"].index, channelIndex, instrumentIndex, false);\n                useReverbEnd = synth.getModValue(Config.modulators.dictionary[\"reverb\"].index, channelIndex, instrumentIndex, true);\n            }\n            // Check for mod reverb, song scalar\n            if (synth.isModActive(Config.modulators.dictionary[\"song reverb\"].index, channelIndex, instrumentIndex)) {\n                useReverbStart *= (synth.getModValue(Config.modulators.dictionary[\"song reverb\"].index, undefined, undefined, false) - Config.modulators.dictionary[\"song reverb\"].convertRealFactor) / Config.reverbRange;\n                useReverbEnd *= (synth.getModValue(Config.modulators.dictionary[\"song reverb\"].index, undefined, undefined, true) - Config.modulators.dictionary[\"song reverb\"].convertRealFactor) / Config.reverbRange;\n            }\n\n            const reverbStart: number = Math.min(1.0, Math.pow(/*reverbEnvelopeStart **/ useReverbStart / Config.reverbRange, 0.667)) * 0.425;\n            const reverbEnd: number = Math.min(1.0, Math.pow(/*reverbEnvelopeEnd   **/ useReverbEnd / Config.reverbRange, 0.667)) * 0.425;\n\n            this.reverbMult = reverbStart;\n            this.reverbMultDelta = (reverbEnd - reverbStart) / roundedSamplesPerTick;\n            maxReverbMult = Math.max(reverbStart, reverbEnd);\n\n            const shelfRadians: number = 2.0 * Math.PI * Config.reverbShelfHz / synth.samplesPerSecond;\n            Synth.tempFilterStartCoefficients.highShelf1stOrder(shelfRadians, Config.reverbShelfGain);\n            this.reverbShelfA1 = Synth.tempFilterStartCoefficients.a[1];\n            this.reverbShelfB0 = Synth.tempFilterStartCoefficients.b[0];\n            this.reverbShelfB1 = Synth.tempFilterStartCoefficients.b[1];\n        }\n\n        if (this.tonesAddedInThisTick) {\n            this.attentuationProgress = 0.0;\n            this.flushedSamples = 0;\n            this.flushingDelayLines = false;\n        } else if (!this.flushingDelayLines) {\n            // If this instrument isn't playing tones anymore, the volume can fade out by the\n            // end of the first tick. It's possible for filters and the panning delay line to\n            // continue past the end of the tone but they should have mostly dissipated by the\n            // end of the tick anyway.\n            if (this.attentuationProgress == 0.0) {\n                eqFilterVolumeEnd = 0.0;\n            } else {\n                eqFilterVolumeStart = 0.0;\n                eqFilterVolumeEnd = 0.0;\n            }\n\n            const attenuationThreshold: number = 1.0 / 256.0; // when the delay line signal has attenuated this much, it should be inaudible and should be flushed to zero.\n            const halfLifeMult: number = -Math.log2(attenuationThreshold);\n            let delayDuration: number = 0.0;\n\n            if (usesChorus) {\n                delayDuration += Config.chorusMaxDelay;\n            }\n\n            if (usesEcho) {\n                const attenuationPerSecond: number = Math.pow(maxEchoMult, 1.0 / averageEchoDelaySeconds);\n                const halfLife: number = -1.0 / Math.log2(attenuationPerSecond);\n                const echoDuration: number = halfLife * halfLifeMult;\n                delayDuration += echoDuration;\n            }\n\n            if (usesReverb) {\n                const averageMult: number = maxReverbMult * 2.0;\n                const averageReverbDelaySeconds: number = (Config.reverbDelayBufferSize / 4.0) / samplesPerSecond;\n                const attenuationPerSecond: number = Math.pow(averageMult, 1.0 / averageReverbDelaySeconds);\n                const halfLife: number = -1.0 / Math.log2(attenuationPerSecond);\n                const reverbDuration: number = halfLife * halfLifeMult;\n                delayDuration += reverbDuration;\n            }\n\n            const secondsInTick: number = samplesPerTick / samplesPerSecond;\n            const progressInTick: number = secondsInTick / delayDuration;\n            const progressAtEndOfTick: number = this.attentuationProgress + progressInTick;\n            if (progressAtEndOfTick >= 1.0) {\n                delayInputMultEnd = 0.0;\n            }\n\n            this.attentuationProgress = progressAtEndOfTick;\n            if (this.attentuationProgress >= 1.0) {\n                this.flushingDelayLines = true;\n            }\n        } else {\n            // Flushing delay lines to zero since the signal has mostly dissipated.\n            eqFilterVolumeStart = 0.0;\n            eqFilterVolumeEnd = 0.0;\n            delayInputMultStart = 0.0;\n            delayInputMultEnd = 0.0;\n\n            let totalDelaySamples: number = 0;\n            if (usesChorus) totalDelaySamples += synth.chorusDelayBufferSize;\n            if (usesEcho) totalDelaySamples += this.echoDelayLineL!.length;\n            if (usesReverb) totalDelaySamples += Config.reverbDelayBufferSize;\n\n            this.flushedSamples += roundedSamplesPerTick;\n            if (this.flushedSamples >= totalDelaySamples) {\n                this.deactivateAfterThisTick = true;\n            }\n        }\n\n        this.eqFilterVolume = eqFilterVolumeStart;\n        this.eqFilterVolumeDelta = (eqFilterVolumeEnd - eqFilterVolumeStart) / roundedSamplesPerTick;\n        this.delayInputMult = delayInputMultStart;\n        this.delayInputMultDelta = (delayInputMultEnd - delayInputMultStart) / roundedSamplesPerTick;\n    }\n\n    public updateWaves(instrument: Instrument, samplesPerSecond: number): void {\n        this.volumeScale = 1.0;\n        if (instrument.type == InstrumentType.chip) {\n            this.wave = (this.aliases) ? Config.rawChipWaves[instrument.chipWave].samples : Config.chipWaves[instrument.chipWave].samples;\n        } else if (instrument.type == InstrumentType.customChipWave) {\n            this.wave = (this.aliases) ? instrument.customChipWave! : instrument.customChipWaveIntegral!;\n            this.volumeScale = 0.05;\n        } else if (instrument.type == InstrumentType.noise) {\n            this.wave = getDrumWave(instrument.chipNoise, inverseRealFourierTransform, scaleElementsByFactor);\n        } else if (instrument.type == InstrumentType.harmonics) {\n            this.wave = this.harmonicsWave.getCustomWave(instrument.harmonicsWave, instrument.type);\n        } else if (instrument.type == InstrumentType.pickedString) {\n            this.wave = this.harmonicsWave.getCustomWave(instrument.harmonicsWave, instrument.type);\n        } else if (instrument.type == InstrumentType.spectrum) {\n            this.wave = this.spectrumWave.getCustomWave(instrument.spectrumWave, 8);\n        } else if (instrument.type == InstrumentType.drumset) {\n            for (let i: number = 0; i < Config.drumCount; i++) {\n                this.drumsetSpectrumWaves[i].getCustomWave(instrument.drumsetSpectrumWaves[i], InstrumentState._drumsetIndexToSpectrumOctave(i));\n            }\n            this.wave = null;\n        } else {\n            this.wave = null;\n        }\n    }\n\n    public getDrumsetWave(pitch: number): Float32Array {\n        if (this.type == InstrumentType.drumset) {\n            return this.drumsetSpectrumWaves[pitch].wave!;\n        } else {\n            throw new Error(\"Unhandled instrument type in getDrumsetWave\");\n        }\n    }\n\n    public static drumsetIndexReferenceDelta(index: number): number {\n        return Instrument.frequencyFromPitch(Config.spectrumBasePitch + index * 6) / 44100;\n    }\n\n    private static _drumsetIndexToSpectrumOctave(index: number): number {\n        return 15 + Math.log2(InstrumentState.drumsetIndexReferenceDelta(index));\n    }\n}\n\nclass ChannelState {\n    public readonly instruments: InstrumentState[] = [];\n    public muted: boolean = false;\n    public singleSeamlessInstrument: number | null = null; // Seamless tones from a pattern with a single instrument can be transferred to a different single seamless instrument in the next pattern.\n}\n\nexport class Synth {\n\n    private syncSongState(): void {\n        const channelCount: number = this.song!.getChannelCount();\n        for (let i: number = this.channels.length; i < channelCount; i++) {\n            this.channels[i] = new ChannelState();\n        }\n        this.channels.length = channelCount;\n        for (let i: number = 0; i < channelCount; i++) {\n            const channel: Channel = this.song!.channels[i];\n            const channelState: ChannelState = this.channels[i];\n            for (let j: number = channelState.instruments.length; j < channel.instruments.length; j++) {\n                channelState.instruments[j] = new InstrumentState();\n            }\n            channelState.instruments.length = channel.instruments.length;\n\n            if (channelState.muted != channel.muted) {\n                channelState.muted = channel.muted;\n                if (channelState.muted) {\n                    for (const instrumentState of channelState.instruments) {\n                        instrumentState.resetAllEffects();\n                    }\n                }\n            }\n        }\n    }\n\n    public initModFilters(song: Song | null): void {\n        if (song != null) {\n            for (let channelIndex: number = 0; channelIndex < song.getChannelCount(); channelIndex++) {\n                for (let instrumentIndex: number = 0; instrumentIndex < song.channels[channelIndex].instruments.length; instrumentIndex++) {\n                    const instrument: Instrument = song.channels[channelIndex].instruments[instrumentIndex];\n                    instrument.tmpEqFilterStart = instrument.eqFilter;\n                    instrument.tmpEqFilterEnd = null;\n                    instrument.tmpNoteFilterStart = instrument.noteFilter;\n                    instrument.tmpNoteFilterEnd = null;\n                }\n            }\n        }\n    }\n    public warmUpSynthesizer(song: Song | null): void {\n        // Don't bother to generate the drum waves unless the song actually\n        // uses them, since they may require a lot of computation.\n        if (song != null) {\n            this.syncSongState();\n            const samplesPerTick: number = this.getSamplesPerTick();\n            for (let channelIndex: number = 0; channelIndex < song.getChannelCount(); channelIndex++) {\n                for (let instrumentIndex: number = 0; instrumentIndex < song.channels[channelIndex].instruments.length; instrumentIndex++) {\n                    const instrument: Instrument = song.channels[channelIndex].instruments[instrumentIndex];\n                    const instrumentState: InstrumentState = this.channels[channelIndex].instruments[instrumentIndex];\n                    Synth.getInstrumentSynthFunction(instrument);\n                    instrumentState.vibratoTime = 0;\n                    instrumentState.nextVibratoTime = 0;\n                    instrumentState.envelopeTime = 0;\n                    instrumentState.arpTime = 0;\n                    instrumentState.updateWaves(instrument, this.samplesPerSecond);\n                    instrumentState.allocateNecessaryBuffers(this, instrument, samplesPerTick);\n                }\n\n            }\n        }\n        // JummBox needs to run synth functions for at least one sample (for JIT purposes)\n\t\t// before starting audio callbacks to avoid skipping the initial output.\n        var dummyArray = new Float32Array(1);\n        this.isPlayingSong = true;\n        this.synthesize(dummyArray, dummyArray, 1, true);\n        this.isPlayingSong = false;\n    }\n\n    public computeLatestModValues(): void {\n\n        if (this.song != null && this.song.modChannelCount > 0) {\n\n            // Clear all mod values, and set up temp variables for the time a mod would be set at.\n            let latestModTimes: (number | null)[] = [];\n            let latestModInsTimes: (number | null)[][][] = [];\n            this.modValues = [];\n            this.nextModValues = [];\n            this.modInsValues = [];\n            this.nextModInsValues = [];\n            this.heldMods = [];\n            for (let channel: number = 0; channel < this.song.pitchChannelCount + this.song.noiseChannelCount; channel++) {\n                latestModInsTimes[channel] = [];\n                this.modInsValues[channel] = [];\n                this.nextModInsValues[channel] = [];\n\n                for (let instrument: number = 0; instrument < this.song.channels[channel].instruments.length; instrument++) {\n                    this.modInsValues[channel][instrument] = [];\n                    this.nextModInsValues[channel][instrument] = [];\n                    latestModInsTimes[channel][instrument] = [];\n                }\n            }\n\n            // Find out where we're at in the fraction of the current bar.\n            let currentPart: number = this.beat * Config.partsPerBeat + this.part;\n\n            // For mod channels, calculate last set value for each mod\n            for (let channelIndex: number = this.song.pitchChannelCount + this.song.noiseChannelCount; channelIndex < this.song.getChannelCount(); channelIndex++) {\n                if (!(this.song.channels[channelIndex].muted)) {\n\n                    let pattern: Pattern | null;\n\n                    for (let currentBar: number = this.bar; currentBar >= 0; currentBar--) {\n                        pattern = this.song.getPattern(channelIndex, currentBar);\n\n                        if (pattern != null) {\n                            let instrumentIdx: number = pattern.instruments[0];\n                            let instrument: Instrument = this.song.channels[channelIndex].instruments[instrumentIdx];\n                            let latestPinParts: number[] = [];\n                            let latestPinValues: number[] = [];\n\n                            let partsInBar: number = (currentBar == this.bar)\n                                ? currentPart\n                                : this.findPartsInBar(currentBar);\n\n                            for (const note of pattern.notes) {\n                                if (note.start <= partsInBar && (latestPinParts[Config.modCount - 1 - note.pitches[0]] == null || note.end > latestPinParts[Config.modCount - 1 - note.pitches[0]])) {\n                                    if (note.start == partsInBar) { // This can happen with next bar mods, and the value of the aligned note's start pin will be used.\n                                        latestPinParts[Config.modCount - 1 - note.pitches[0]] = note.start;\n                                        latestPinValues[Config.modCount - 1 - note.pitches[0]] = note.pins[0].size;\n                                    }\n                                    if (note.end <= partsInBar) {\n                                        latestPinParts[Config.modCount - 1 - note.pitches[0]] = note.end;\n                                        latestPinValues[Config.modCount - 1 - note.pitches[0]] = note.pins[note.pins.length - 1].size;\n                                    }\n                                    else {\n                                        latestPinParts[Config.modCount - 1 - note.pitches[0]] = partsInBar;\n                                        // Find the pin where bar change happens, and compute where pin volume would be at that time\n                                        for (let pinIdx = 0; pinIdx < note.pins.length; pinIdx++) {\n                                            if (note.pins[pinIdx].time + note.start > partsInBar) {\n                                                const transitionLength: number = note.pins[pinIdx].time - note.pins[pinIdx - 1].time;\n                                                const toNextBarLength: number = partsInBar - note.start - note.pins[pinIdx - 1].time;\n                                                const deltaVolume: number = note.pins[pinIdx].size - note.pins[pinIdx - 1].size;\n\n                                                latestPinValues[Config.modCount - 1 - note.pitches[0]] = Math.round(note.pins[pinIdx - 1].size + deltaVolume * toNextBarLength / transitionLength);\n                                                pinIdx = note.pins.length;\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n\n                            // Set modulator value, if it wasn't set in another pattern already scanned\n                            for (let mod: number = 0; mod < Config.modCount; mod++) {\n                                if (latestPinParts[mod] != null) {\n                                    if (Config.modulators[instrument.modulators[mod]].forSong) {\n                                        if (latestModTimes[instrument.modulators[mod]] == null || currentBar * Config.partsPerBeat * this.song.beatsPerBar + latestPinParts[mod] > (latestModTimes[instrument.modulators[mod]] as number)) {\n                                            this.setModValue(latestPinValues[mod], latestPinValues[mod], instrument.modChannels[mod], instrument.modInstruments[mod], instrument.modulators[mod]);\n                                            latestModTimes[instrument.modulators[mod]] = currentBar * Config.partsPerBeat * this.song.beatsPerBar + latestPinParts[mod];\n                                        }\n                                    }\n                                    else {\n                                        // Generate list of used instruments\n                                        let usedInstruments: number[] = [];\n                                        // All\n                                        if (instrument.modInstruments[mod] == this.song.channels[instrument.modChannels[mod]].instruments.length) {\n                                            for (let i: number = 0; i < this.song.channels[instrument.modChannels[mod]].instruments.length; i++) {\n                                                usedInstruments.push(i);\n                                            }\n                                        }\n                                        // Active\n                                        else if (instrument.modInstruments[mod] > this.song.channels[instrument.modChannels[mod]].instruments.length) {\n                                            const tgtPattern: Pattern | null = this.song.getPattern(instrument.modChannels[mod], currentBar);\n                                            if (tgtPattern != null)\n                                                usedInstruments = tgtPattern.instruments;\n                                        } else {\n                                            usedInstruments.push(instrument.modInstruments[mod]);\n                                        }\n                                        for (let instrumentIndex: number = 0; instrumentIndex < usedInstruments.length; instrumentIndex++) {\n                                            // Iterate through all used instruments by this modulator\n                                            // Special indices for mod filter targets, since they control multiple things.\n                                            const eqFilterParam: boolean = instrument.modulators[mod] == Config.modulators.dictionary[\"eq filter\"].index;\n                                            const noteFilterParam: boolean = instrument.modulators[mod] == Config.modulators.dictionary[\"note filter\"].index\n                                            let modulatorAdjust: number = instrument.modulators[mod];\n                                            if (eqFilterParam) {\n                                                modulatorAdjust = Config.modulators.length + (instrument.modFilterTypes[mod] | 0);\n                                            } else if (noteFilterParam) {\n                                                // Skip all possible indices for eq filter\n                                                modulatorAdjust = Config.modulators.length + 1 + (2 * Config.filterMaxPoints) + (instrument.modFilterTypes[mod] | 0);\n                                            }\n\n                                            if (latestModInsTimes[instrument.modChannels[mod]][usedInstruments[instrumentIndex]][modulatorAdjust] == null\n                                                || currentBar * Config.partsPerBeat * this.song.beatsPerBar + latestPinParts[mod] > latestModInsTimes[instrument.modChannels[mod]][usedInstruments[instrumentIndex]][modulatorAdjust]!) {\n\n                                                if (eqFilterParam) {\n                                                    let tgtInstrument: Instrument = this.song.channels[instrument.modChannels[mod]].instruments[usedInstruments[instrumentIndex]];\n                                                    if (instrument.modFilterTypes[mod] == 0) {\n                                                        tgtInstrument.tmpEqFilterStart = tgtInstrument.eqSubFilters[latestPinValues[mod]];\n                                                    } else {\n                                                        for (let i: number = 0; i < Config.filterMorphCount; i++) {\n                                                            if (tgtInstrument.tmpEqFilterStart != null && tgtInstrument.tmpEqFilterStart == tgtInstrument.eqSubFilters[i]) {\n                                                                tgtInstrument.tmpEqFilterStart = new FilterSettings();\n                                                                tgtInstrument.tmpEqFilterStart.fromJsonObject(tgtInstrument.eqSubFilters[i]!.toJsonObject());\n                                                                i = Config.filterMorphCount;\n                                                            }\n                                                        }\n                                                        if (tgtInstrument.tmpEqFilterStart != null && Math.floor((instrument.modFilterTypes[mod] - 1) / 2) < tgtInstrument.tmpEqFilterStart.controlPointCount) {\n                                                            if (instrument.modFilterTypes[mod] % 2)\n                                                                tgtInstrument.tmpEqFilterStart.controlPoints[Math.floor((instrument.modFilterTypes[mod] - 1) / 2)].freq = latestPinValues[mod];\n                                                            else\n                                                                tgtInstrument.tmpEqFilterStart.controlPoints[Math.floor((instrument.modFilterTypes[mod] - 1) / 2)].gain = latestPinValues[mod];\n                                                        }\n                                                    }\n                                                    tgtInstrument.tmpEqFilterEnd = tgtInstrument.tmpEqFilterStart;\n                                                } else if (noteFilterParam) {\n                                                    let tgtInstrument: Instrument = this.song.channels[instrument.modChannels[mod]].instruments[usedInstruments[instrumentIndex]];\n                                                    if (instrument.modFilterTypes[mod] == 0) {\n                                                        tgtInstrument.tmpNoteFilterStart = tgtInstrument.noteSubFilters[latestPinValues[mod]];\n                                                    } else {\n                                                        for (let i: number = 0; i < Config.filterMorphCount; i++) {\n                                                            if (tgtInstrument.tmpNoteFilterStart != null && tgtInstrument.tmpNoteFilterStart == tgtInstrument.noteSubFilters[i]) {\n                                                                tgtInstrument.tmpNoteFilterStart = new FilterSettings();\n                                                                tgtInstrument.tmpNoteFilterStart.fromJsonObject(tgtInstrument.noteSubFilters[i]!.toJsonObject());\n                                                                i = Config.filterMorphCount;\n                                                            }\n                                                        }\n                                                        if (tgtInstrument.tmpNoteFilterStart != null && Math.floor((instrument.modFilterTypes[mod] - 1) / 2) < tgtInstrument.tmpNoteFilterStart.controlPointCount) {\n                                                            if (instrument.modFilterTypes[mod] % 2)\n                                                                tgtInstrument.tmpNoteFilterStart.controlPoints[Math.floor((instrument.modFilterTypes[mod] - 1) / 2)].freq = latestPinValues[mod];\n                                                            else\n                                                                tgtInstrument.tmpNoteFilterStart.controlPoints[Math.floor((instrument.modFilterTypes[mod] - 1) / 2)].gain = latestPinValues[mod];\n                                                        }\n                                                    }\n                                                    tgtInstrument.tmpNoteFilterEnd = tgtInstrument.tmpNoteFilterStart;\n                                                }\n                                                else this.setModValue(latestPinValues[mod], latestPinValues[mod], instrument.modChannels[mod], usedInstruments[instrumentIndex], modulatorAdjust);\n\n                                                latestModInsTimes[instrument.modChannels[mod]][usedInstruments[instrumentIndex]][modulatorAdjust] = currentBar * Config.partsPerBeat * this.song.beatsPerBar + latestPinParts[mod];\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    // Detects if a modulator is set, but not valid for the current effects/instrument type/filter type\n    // Note, setting 'none' or the intermediary steps when clicking to add a mod, like an unset channel/unset instrument, counts as valid.\n    // TODO: This kind of check is mirrored in SongEditor.ts' whenUpdated. Creates a lot of redundancy for adding new mods. Can be moved into new properties for mods, to avoid this later.\n    public determineInvalidModulators(instrument: Instrument): void {\n        if (this.song == null)\n            return;\n        for (let mod: number = 0; mod < Config.modCount; mod++) {\n            instrument.invalidModulators[mod] = true;\n            // For song modulator, valid if any setting used\n            if (instrument.modChannels[mod] == -1) {\n                if (instrument.modulators[mod] != 0)\n                    instrument.invalidModulators[mod] = false;\n                continue;\n            }\n            const channel: Channel | null = this.song.channels[instrument.modChannels[mod]];\n            if (channel == null) continue;\n            let tgtInstrumentList: Instrument[] = [];\n            if (instrument.modInstruments[mod] >= channel.instruments.length) { // All or active\n                tgtInstrumentList = channel.instruments;\n            } else {\n                tgtInstrumentList = [channel.instruments[instrument.modInstruments[mod]]];\n            }\n            for (let i: number = 0; i < tgtInstrumentList.length; i++) {\n                const tgtInstrument: Instrument | null = tgtInstrumentList[i];\n                if (tgtInstrument == null) continue;\n                const str: string = Config.modulators[instrument.modulators[mod]].name;\n                // Check effects\n                if (!((Config.modulators[instrument.modulators[mod]].associatedEffect != EffectType.length && !(tgtInstrument.effects & (1 << Config.modulators[instrument.modulators[mod]].associatedEffect)))\n                    // Instrument type specific\n                    || (tgtInstrument.type != InstrumentType.fm && (str == \"fm slider 1\" || str == \"fm slider 2\" || str == \"fm slider 3\" || str == \"fm slider 4\" || str == \"fm feedback\"))\n                    || ((tgtInstrument.type != InstrumentType.pwm && tgtInstrument.type != InstrumentType.supersaw) && (str == \"pulse width\"))\n                    || ((tgtInstrument.type != InstrumentType.supersaw) && (str == \"dynamism\" || str == \"spread\" || str == \"saw shape\"))\n                    // Arp check\n                    || (!tgtInstrument.getChord().arpeggiates && (str == \"arp speed\" || str == \"reset arp\"))\n                    // EQ Filter check\n                    || (tgtInstrument.eqFilterType && str == \"eq filter\")\n                    || (!tgtInstrument.eqFilterType && (str == \"eq filt cut\" || str == \"eq filt peak\"))\n                    || (str == \"eq filter\" && Math.floor((instrument.modFilterTypes[mod] + 1) / 2) > tgtInstrument.getLargestControlPointCount(false))\n                    // Note Filter check\n                    || (tgtInstrument.noteFilterType && str == \"note filter\")\n                    || (!tgtInstrument.noteFilterType && (str == \"note filt cut\" || str == \"note filt peak\"))\n                    || (str == \"note filter\" && Math.floor((instrument.modFilterTypes[mod] + 1) / 2) > tgtInstrument.getLargestControlPointCount(true)))) {\n\n                    instrument.invalidModulators[mod] = false;\n                    i = tgtInstrumentList.length;\n                }\n            }\n\n        }\n    }\n\n    private static operatorAmplitudeCurve(amplitude: number): number {\n        return (Math.pow(16.0, amplitude / 15.0) - 1.0) / 15.0;\n    }\n\n    public samplesPerSecond: number = 44100;\n    public panningDelayBufferSize: number;\n    public panningDelayBufferMask: number;\n    public chorusDelayBufferSize: number;\n    public chorusDelayBufferMask: number;\n    // TODO: reverb\n\n    public song: Song | null = null;\n    public preferLowerLatency: boolean = false; // enable when recording performances from keyboard or MIDI. Takes effect next time you activate audio.\n    public anticipatePoorPerformance: boolean = false; // enable on mobile devices to reduce audio stutter glitches. Takes effect next time you activate audio.\n    public liveInputDuration: number = 0;\n    public liveBassInputDuration: number = 0;\n    public liveInputStarted: boolean = false;\n    public liveBassInputStarted: boolean = false;\n    public liveInputPitches: number[] = [];\n    public liveBassInputPitches: number[] = [];\n    public liveInputChannel: number = 0;\n    public liveBassInputChannel: number = 0;\n    public liveInputInstruments: number[] = [];\n    public liveBassInputInstruments: number[] = [];\n    public loopRepeatCount: number = -1;\n    public volume: number = 1.0;\n    public enableMetronome: boolean = false;\n    public countInMetronome: boolean = false;\n    public renderingSong: boolean = false;\n    public heldMods: HeldMod[] = [];\n    private wantToSkip: boolean = false;\n    private playheadInternal: number = 0.0;\n    private bar: number = 0;\n    private prevBar: number | null = null;\n    private nextBar: number | null = null;\n    private beat: number = 0;\n    private part: number = 0;\n    private tick: number = 0;\n    public isAtStartOfTick: boolean = true;\n    public isAtEndOfTick: boolean = true;\n    public tickSampleCountdown: number = 0;\n    private modValues: (number | null)[] = [];\n    private modInsValues: (number | null)[][][] = [];\n    private nextModValues: (number | null)[] = [];\n    private nextModInsValues: (number | null)[][][] = [];\n    private isPlayingSong: boolean = false;\n    private isRecording: boolean = false;\n    private liveInputEndTime: number = 0.0;\n    private browserAutomaticallyClearsAudioBuffer: boolean = true; // Assume true until proven otherwise. Older Chrome does not clear the buffer so it needs to be cleared manually.\n\n    public static readonly tempFilterStartCoefficients: FilterCoefficients = new FilterCoefficients();\n    public static readonly tempFilterEndCoefficients: FilterCoefficients = new FilterCoefficients();\n    private tempDrumSetControlPoint: FilterControlPoint = new FilterControlPoint();\n    public tempFrequencyResponse: FrequencyResponse = new FrequencyResponse();\n    public loopBarStart: number = -1;\n    public loopBarEnd: number = -1;\n\n    private static readonly fmSynthFunctionCache: Dictionary<Function> = {};\n    private static readonly effectsFunctionCache: Function[] = Array(1 << 7).fill(undefined); // keep in sync with the number of post-process effects.\n    private static readonly pickedStringFunctionCache: Function[] = Array(3).fill(undefined); // keep in sync with the number of unison voices.\n\n    private readonly channels: ChannelState[] = [];\n    private readonly tonePool: Deque<Tone> = new Deque<Tone>();\n    private readonly tempMatchedPitchTones: Array<Tone | null> = Array(Config.maxChordSize).fill(null);\n\n    private startedMetronome: boolean = false;\n    private metronomeSamplesRemaining: number = -1;\n    private metronomeAmplitude: number = 0.0;\n    private metronomePrevAmplitude: number = 0.0;\n    private metronomeFilter: number = 0.0;\n    private limit: number = 0.0;\n\n    private tempMonoInstrumentSampleBuffer: Float32Array | null = null;\n\n    private audioCtx: any | null = null;\n    private scriptNode: any | null = null;\n\n    public get playing(): boolean {\n        return this.isPlayingSong;\n    }\n\n    public get recording(): boolean {\n        return this.isRecording;\n    }\n\n    public get playhead(): number {\n        return this.playheadInternal;\n    }\n\n    public set playhead(value: number) {\n        if (this.song != null) {\n            this.playheadInternal = Math.max(0, Math.min(this.song.barCount, value));\n            let remainder: number = this.playheadInternal;\n            this.bar = Math.floor(remainder);\n            remainder = this.song.beatsPerBar * (remainder - this.bar);\n            this.beat = Math.floor(remainder);\n            remainder = Config.partsPerBeat * (remainder - this.beat);\n            this.part = Math.floor(remainder);\n            remainder = Config.ticksPerPart * (remainder - this.part);\n            this.tick = Math.floor(remainder);\n            this.tickSampleCountdown = 0;\n            this.isAtStartOfTick = true;\n            this.prevBar = null;\n        }\n    }\n\n    public getSamplesPerBar(): number {\n        if (this.song == null) throw new Error();\n        return this.getSamplesPerTick() * Config.ticksPerPart * Config.partsPerBeat * this.song.beatsPerBar;\n    }\n\n    public getTicksIntoBar(): number {\n        return (this.beat * Config.partsPerBeat + this.part) * Config.ticksPerPart + this.tick;\n    }\n    public getCurrentPart(): number {\n        return (this.beat * Config.partsPerBeat + this.part);\n    }\n\n    private findPartsInBar(bar: number): number {\n        if (this.song == null) return 0;\n        let partsInBar: number = Config.partsPerBeat * this.song.beatsPerBar;\n        for (let channel: number = this.song.pitchChannelCount + this.song.noiseChannelCount; channel < this.song.getChannelCount(); channel++) {\n            let pattern: Pattern | null = this.song.getPattern(channel, bar);\n            if (pattern != null) {\n                let instrument: Instrument = this.song.channels[channel].instruments[pattern.instruments[0]];\n                for (let mod: number = 0; mod < Config.modCount; mod++) {\n                    if (instrument.modulators[mod] == Config.modulators.dictionary[\"next bar\"].index) {\n                        for (const note of pattern.notes) {\n                            if (note.pitches[0] == (Config.modCount - 1 - mod)) {\n                                // Find the earliest next bar note.\n                                if (partsInBar > note.start)\n                                    partsInBar = note.start;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return partsInBar;\n    }\n\n    // Returns the total samples in the song\n    public getTotalSamples(enableIntro: boolean, enableOutro: boolean, loop: number): number {\n        if (this.song == null)\n            return -1;\n\n        // Compute the window to be checked (start bar to end bar)\n        let startBar: number = enableIntro ? 0 : this.song.loopStart;\n        let endBar: number = enableOutro ? this.song.barCount : (this.song.loopStart + this.song.loopLength);\n        let hasTempoMods: boolean = false;\n        let hasNextBarMods: boolean = false;\n        let prevTempo: number = this.song.tempo;\n\n        // Determine if any tempo or next bar mods happen anywhere in the window\n        for (let channel: number = this.song.getChannelCount() - 1; channel >= this.song.pitchChannelCount + this.song.noiseChannelCount; channel--) {\n            for (let bar: number = startBar; bar < endBar; bar++) {\n                let pattern: Pattern | null = this.song.getPattern(channel, bar);\n                if (pattern != null) {\n                    let instrument: Instrument = this.song.channels[channel].instruments[pattern.instruments[0]];\n                    for (let mod: number = 0; mod < Config.modCount; mod++) {\n                        if (instrument.modulators[mod] == Config.modulators.dictionary[\"tempo\"].index) {\n                            hasTempoMods = true;\n                        }\n                        if (instrument.modulators[mod] == Config.modulators.dictionary[\"next bar\"].index) {\n                            hasNextBarMods = true;\n                        }\n                    }\n                }\n            }\n        }\n\n        // If intro is not zero length, determine what the \"entry\" tempo is going into the start part, by looking at mods that came before...\n        if (startBar > 0) {\n            let latestTempoPin: number | null = null;\n            let latestTempoValue: number = 0;\n\n            for (let bar: number = startBar - 1; bar >= 0; bar--) {\n                for (let channel: number = this.song.getChannelCount() - 1; channel >= this.song.pitchChannelCount + this.song.noiseChannelCount; channel--) {\n                    let pattern = this.song.getPattern(channel, bar);\n\n                    if (pattern != null) {\n                        let instrumentIdx: number = pattern.instruments[0];\n                        let instrument: Instrument = this.song.channels[channel].instruments[instrumentIdx];\n\n                        let partsInBar: number = this.findPartsInBar(bar);\n\n                        for (const note of pattern.notes) {\n                            if (instrument.modulators[Config.modCount - 1 - note.pitches[0]] == Config.modulators.dictionary[\"tempo\"].index) {\n                                if (note.start < partsInBar && (latestTempoPin == null || note.end > latestTempoPin)) {\n                                    if (note.end <= partsInBar) {\n                                        latestTempoPin = note.end;\n                                        latestTempoValue = note.pins[note.pins.length - 1].size;\n                                    }\n                                    else {\n                                        latestTempoPin = partsInBar;\n                                        // Find the pin where bar change happens, and compute where pin volume would be at that time\n                                        for (let pinIdx = 0; pinIdx < note.pins.length; pinIdx++) {\n                                            if (note.pins[pinIdx].time + note.start > partsInBar) {\n                                                const transitionLength: number = note.pins[pinIdx].time - note.pins[pinIdx - 1].time;\n                                                const toNextBarLength: number = partsInBar - note.start - note.pins[pinIdx - 1].time;\n                                                const deltaVolume: number = note.pins[pinIdx].size - note.pins[pinIdx - 1].size;\n\n                                                latestTempoValue = Math.round(note.pins[pinIdx - 1].size + deltaVolume * toNextBarLength / transitionLength);\n                                                pinIdx = note.pins.length;\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n\n                // Done once you process a pattern where tempo mods happened, since the search happens backward\n                if (latestTempoPin != null) {\n                    prevTempo = latestTempoValue + Config.modulators.dictionary[\"tempo\"].convertRealFactor;\n                    bar = -1;\n                }\n            }\n        }\n\n        if (hasTempoMods || hasNextBarMods) {\n            // Run from start bar to end bar and observe looping, computing average tempo across each bar\n            let bar: number = startBar;\n            let ended: boolean = false;\n            let totalSamples: number = 0;\n\n            while (!ended) {\n                // Compute the subsection of the pattern that will play\n                let partsInBar: number = Config.partsPerBeat * this.song.beatsPerBar;\n                let currentPart: number = 0;\n\n                if (hasNextBarMods) {\n                    partsInBar = this.findPartsInBar(bar);\n                }\n\n                // Compute average tempo in this tick window, or use last tempo if nothing happened\n                if (hasTempoMods) {\n                    let foundMod: boolean = false;\n                    for (let channel: number = this.song.getChannelCount() - 1; channel >= this.song.pitchChannelCount + this.song.noiseChannelCount; channel--) {\n                        if (foundMod == false) {\n                            let pattern: Pattern | null = this.song.getPattern(channel, bar);\n                            if (pattern != null) {\n                                let instrument: Instrument = this.song.channels[channel].instruments[pattern.instruments[0]];\n                                for (let mod: number = 0; mod < Config.modCount; mod++) {\n                                    if (foundMod == false && instrument.modulators[mod] == Config.modulators.dictionary[\"tempo\"].index\n                                        && pattern.notes.find(n => n.pitches[0] == (Config.modCount - 1 - mod))) {\n                                        // Only the first tempo mod instrument for this bar will be checked (well, the first with a note in this bar).\n                                        foundMod = true;\n                                        // Need to re-sort the notes by start time to make the next part much less painful.\n                                        pattern.notes.sort(function (a, b) { return (a.start == b.start) ? a.pitches[0] - b.pitches[0] : a.start - b.start; });\n                                        for (const note of pattern.notes) {\n                                            if (note.pitches[0] == (Config.modCount - 1 - mod)) {\n                                                // Compute samples up to this note\n                                                totalSamples += (Math.min(partsInBar - currentPart, note.start - currentPart)) * Config.ticksPerPart * this.getSamplesPerTickSpecificBPM(prevTempo);\n\n                                                if (note.start < partsInBar) {\n                                                    for (let pinIdx: number = 1; pinIdx < note.pins.length; pinIdx++) {\n                                                        // Compute samples up to this pin\n                                                        if (note.pins[pinIdx - 1].time + note.start <= partsInBar) {\n                                                            const tickLength: number = Config.ticksPerPart * Math.min(partsInBar - (note.start + note.pins[pinIdx - 1].time), note.pins[pinIdx].time - note.pins[pinIdx - 1].time);\n                                                            const prevPinTempo: number = note.pins[pinIdx - 1].size + Config.modulators.dictionary[\"tempo\"].convertRealFactor;\n                                                            let currPinTempo: number = note.pins[pinIdx].size + Config.modulators.dictionary[\"tempo\"].convertRealFactor;\n                                                            if (note.pins[pinIdx].time + note.start > partsInBar) {\n                                                                // Compute an intermediary tempo since bar changed over mid-pin. Maybe I'm deep in \"what if\" territory now!\n                                                                currPinTempo = note.pins[pinIdx - 1].size + (note.pins[pinIdx].size - note.pins[pinIdx - 1].size) * (partsInBar - (note.start + note.pins[pinIdx - 1].time)) / (note.pins[pinIdx].time - note.pins[pinIdx - 1].time) + Config.modulators.dictionary[\"tempo\"].convertRealFactor;\n                                                            }\n                                                            let bpmScalar: number = Config.partsPerBeat * Config.ticksPerPart / 60;\n\n                                                            if (currPinTempo != prevPinTempo) {\n\n                                                                // Definite integral of SamplesPerTick w/r/t beats to find total samples from start point to end point for a variable tempo\n                                                                // The starting formula is\n                                                                // SamplesPerTick = SamplesPerSec / ((PartsPerBeat * TicksPerPart) / SecPerMin) * BeatsPerMin )\n                                                                //\n                                                                // This is an expression of samples per tick \"instantaneously\", and it can be multiplied by a number of ticks to get a sample count.\n                                                                // But this isn't the full story. BeatsPerMin, e.g. tempo, changes throughout the interval so it has to be expressed in terms of ticks, \"t\"\n                                                                // ( Also from now on PartsPerBeat, TicksPerPart, and SecPerMin are combined into one scalar, called \"BPMScalar\" )\n                                                                // Substituting BPM for a step variable that moves with respect to the current tick, we get\n                                                                // SamplesPerTick = SamplesPerSec / (BPMScalar * ( (EndTempo - StartTempo / TickLength) * t + StartTempo ) )\n                                                                //\n                                                                // When this equation is integrated from 0 to TickLength with respect to t, we get the following expression:\n                                                                //   Samples = - SamplesPerSec * TickLength * ( log( BPMScalar * EndTempo * TickLength ) - log( BPMScalar * StartTempo * TickLength ) ) / BPMScalar * ( StartTempo - EndTempo )\n\n                                                                totalSamples += - this.samplesPerSecond * tickLength * (Math.log(bpmScalar * currPinTempo * tickLength) - Math.log(bpmScalar * prevPinTempo * tickLength)) / (bpmScalar * (prevPinTempo - currPinTempo));\n\n                                                            }\n                                                            else {\n\n                                                                // No tempo change between the two pins.\n                                                                totalSamples += tickLength * this.getSamplesPerTickSpecificBPM(currPinTempo);\n\n                                                            }\n                                                            prevTempo = currPinTempo;\n                                                        }\n                                                        currentPart = Math.min(note.start + note.pins[pinIdx].time, partsInBar);\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n\n                // Compute samples for the rest of the bar\n                totalSamples += (partsInBar - currentPart) * Config.ticksPerPart * this.getSamplesPerTickSpecificBPM(prevTempo);\n\n                bar++;\n                if (loop != 0 && bar == this.song.loopStart + this.song.loopLength) {\n                    bar = this.song.loopStart;\n                    if (loop > 0) loop--;\n                }\n                if (bar >= endBar) {\n                    ended = true;\n                }\n\n            }\n\n            return Math.ceil(totalSamples);\n        }\n        else {\n            // No tempo or next bar mods... phew! Just calculate normally.\n            return this.getSamplesPerBar() * this.getTotalBars(enableIntro, enableOutro, loop);\n        }\n    }\n\n    public getTotalBars(enableIntro: boolean, enableOutro: boolean, useLoopCount: number = this.loopRepeatCount): number {\n        if (this.song == null) throw new Error();\n        let bars: number = this.song.loopLength * (useLoopCount + 1);\n        if (enableIntro) bars += this.song.loopStart;\n        if (enableOutro) bars += this.song.barCount - (this.song.loopStart + this.song.loopLength);\n        return bars;\n    }\n\n    constructor(song: Song | string | null = null) {\n        this.computeDelayBufferSizes();\n        if (song != null) this.setSong(song);\n    }\n\n    public setSong(song: Song | string): void {\n        if (typeof (song) == \"string\") {\n            this.song = new Song(song);\n        } else if (song instanceof Song) {\n            this.song = song;\n        }\n        this.prevBar = null;\n    }\n\n    private computeDelayBufferSizes(): void {\n        this.panningDelayBufferSize = Synth.fittingPowerOfTwo(this.samplesPerSecond * Config.panDelaySecondsMax);\n        this.panningDelayBufferMask = this.panningDelayBufferSize - 1;\n        this.chorusDelayBufferSize = Synth.fittingPowerOfTwo(this.samplesPerSecond * Config.chorusMaxDelay);\n        this.chorusDelayBufferMask = this.chorusDelayBufferSize - 1;\n    }\n\n    private activateAudio(): void {\n        const bufferSize: number = this.anticipatePoorPerformance ? (this.preferLowerLatency ? 2048 : 4096) : (this.preferLowerLatency ? 512 : 2048);\n        if (this.audioCtx == null || this.scriptNode == null || this.scriptNode.bufferSize != bufferSize) {\n            if (this.scriptNode != null) this.deactivateAudio();\n            const latencyHint: string = this.anticipatePoorPerformance ? (this.preferLowerLatency ? \"balanced\" : \"playback\") : (this.preferLowerLatency ? \"interactive\" : \"balanced\");\n            this.audioCtx = this.audioCtx || new (window.AudioContext || window.webkitAudioContext)({ latencyHint: latencyHint });\n            this.samplesPerSecond = this.audioCtx.sampleRate;\n            this.scriptNode = this.audioCtx.createScriptProcessor ? this.audioCtx.createScriptProcessor(bufferSize, 0, 2) : this.audioCtx.createJavaScriptNode(bufferSize, 0, 2); // bufferSize samples per callback buffer, 0 input channels, 2 output channels (left/right)\n            this.scriptNode.onaudioprocess = this.audioProcessCallback;\n            this.scriptNode.channelCountMode = 'explicit';\n            this.scriptNode.channelInterpretation = 'speakers';\n            this.scriptNode.connect(this.audioCtx.destination);\n\n            this.computeDelayBufferSizes();\n        }\n        this.audioCtx.resume();\n    }\n\n    private deactivateAudio(): void {\n        if (this.audioCtx != null && this.scriptNode != null) {\n            this.scriptNode.disconnect(this.audioCtx.destination);\n            this.scriptNode = null;\n            if (this.audioCtx.close) this.audioCtx.close(); // firefox is missing this function?\n            this.audioCtx = null;\n        }\n    }\n\n    public maintainLiveInput(): void {\n        this.activateAudio();\n        this.liveInputEndTime = performance.now() + 10000.0;\n    }\n\n    public play(): void {\n        if (this.isPlayingSong) return;\n        this.initModFilters(this.song);\n        this.computeLatestModValues();\n        this.activateAudio();\n        this.warmUpSynthesizer(this.song);\n        this.isPlayingSong = true;\n    }\n\n    public pause(): void {\n        if (!this.isPlayingSong) return;\n        this.isPlayingSong = false;\n        this.isRecording = false;\n        this.modValues = [];\n        this.nextModValues = [];\n        this.heldMods = [];\n        if (this.song != null) {\n            this.song.inVolumeCap = 0.0;\n            this.song.outVolumeCap = 0.0;\n            for (let channelIndex: number = 0; channelIndex < this.song.pitchChannelCount + this.song.noiseChannelCount; channelIndex++) {\n                this.modInsValues[channelIndex] = [];\n                this.nextModInsValues[channelIndex] = [];\n            }\n        }\n    }\n\n    public startRecording(): void {\n        this.preferLowerLatency = true;\n        this.isRecording = true;\n        this.play();\n    }\n\n    public resetEffects(): void {\n        this.limit = 0.0;\n        this.freeAllTones();\n        if (this.song != null) {\n            for (const channelState of this.channels) {\n                for (const instrumentState of channelState.instruments) {\n                    instrumentState.resetAllEffects();\n                }\n            }\n        }\n    }\n\n    public setModValue(volumeStart: number, volumeEnd: number, channelIndex: number, instrumentIndex: number, setting: number): number {\n        let val: number = volumeStart + Config.modulators[setting].convertRealFactor;\n        let nextVal: number = volumeEnd + Config.modulators[setting].convertRealFactor;\n        if (Config.modulators[setting].forSong) {\n            if (this.modValues[setting] == null || this.modValues[setting] != val || this.nextModValues[setting] != nextVal) {\n                this.modValues[setting] = val;\n                this.nextModValues[setting] = nextVal;\n            }\n        } else {\n            if (this.modInsValues[channelIndex][instrumentIndex][setting] == null\n                || this.modInsValues[channelIndex][instrumentIndex][setting] != val\n                || this.nextModInsValues[channelIndex][instrumentIndex][setting] != nextVal) {\n                this.modInsValues[channelIndex][instrumentIndex][setting] = val;\n                this.nextModInsValues[channelIndex][instrumentIndex][setting] = nextVal;\n            }\n        }\n\n        return val;\n    }\n\n    public getModValue(setting: number, channel?: number | null, instrument?: number | null, nextVal?: boolean): number {\n        const forSong: boolean = Config.modulators[setting].forSong;\n        if (forSong) {\n            if (this.modValues[setting] != null && this.nextModValues[setting] != null) {\n                return nextVal ? this.nextModValues[setting]! : this.modValues[setting]!;\n            }\n        } else if (channel != undefined && instrument != undefined) {\n            if (this.modInsValues[channel][instrument][setting] != null && this.nextModInsValues[channel][instrument][setting] != null) {\n                return nextVal ? this.nextModInsValues[channel][instrument][setting]! : this.modInsValues[channel][instrument][setting]!;\n            }\n        }\n        return -1;\n    }\n\n    // Checks if any mod is active for the given channel/instrument OR if any mod is active for the song scope. Could split the logic if needed later.\n    public isAnyModActive(channel: number, instrument: number): boolean {\n        for (let setting: number = 0; setting < Config.modulators.length; setting++) {\n            if ((this.modValues != undefined && this.modValues[setting] != null)\n                || (this.modInsValues != undefined && this.modInsValues[channel] != undefined && this.modInsValues[channel][instrument] != undefined && this.modInsValues[channel][instrument][setting] != null)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    public unsetMod(setting: number, channel?: number, instrument?: number) {\n        if (this.isModActive(setting) || (channel != undefined && instrument != undefined && this.isModActive(setting, channel, instrument))) {\n            this.modValues[setting] = null;\n            this.nextModValues[setting] = null;\n            for (let i: number = 0; i < this.heldMods.length; i++) {\n                if (channel != undefined && instrument != undefined) {\n                    if (this.heldMods[i].channelIndex == channel && this.heldMods[i].instrumentIndex == instrument && this.heldMods[i].setting == setting)\n                        this.heldMods.splice(i, 1);\n                } else {\n                    if (this.heldMods[i].setting == setting)\n                        this.heldMods.splice(i, 1);\n                }\n            }\n            if (channel != undefined && instrument != undefined) {\n                this.modInsValues[channel][instrument][setting] = null;\n                this.nextModInsValues[channel][instrument][setting] = null;\n            }\n        }\n    }\n\n    public isFilterModActive(forNoteFilter: boolean, channelIdx: number, instrumentIdx: number) {\n        const instrument: Instrument = this.song!.channels[channelIdx].instruments[instrumentIdx];\n\n        if (forNoteFilter) {\n            if (instrument.noteFilterType)\n                return false;\n            if (instrument.tmpNoteFilterEnd != null)\n                return true;\n        }\n        else {\n            if (instrument.eqFilterType)\n                return false;\n            if (instrument.tmpEqFilterEnd != null)\n                return true;\n        }\n        return false\n    }\n\n    public isModActive(setting: number, channel?: number, instrument?: number): boolean {\n        const forSong: boolean = Config.modulators[setting].forSong;\n        if (forSong) {\n            return (this.modValues != undefined && this.modValues[setting] != null);\n        } else if (channel != undefined && instrument != undefined && this.modInsValues != undefined && this.modInsValues[channel] != null && this.modInsValues[channel][instrument] != null) {\n            return (this.modInsValues[channel][instrument][setting] != null);\n        }\n        return false;\n    }\n\n    // Force a modulator to be held at the given volumeStart for a brief duration.\n    public forceHoldMods(volumeStart: number, channelIndex: number, instrumentIndex: number, setting: number): void {\n        let found: boolean = false;\n        for (let i: number = 0; i < this.heldMods.length; i++) {\n            if (this.heldMods[i].channelIndex == channelIndex && this.heldMods[i].instrumentIndex == instrumentIndex && this.heldMods[i].setting == setting) {\n                this.heldMods[i].volume = volumeStart;\n                this.heldMods[i].holdFor = 24;\n                found = true;\n            }\n        }\n        // Default: hold for 24 ticks / 12 parts (half a beat).\n        if (!found)\n            this.heldMods.push({ volume: volumeStart, channelIndex: channelIndex, instrumentIndex: instrumentIndex, setting: setting, holdFor: 24 });\n    }\n\n    public snapToStart(): void {\n        this.bar = 0;\n        this.resetEffects();\n        this.snapToBar();\n    }\n\n    public goToBar(bar: number): void {\n        this.bar = bar;\n        this.resetEffects();\n        this.playheadInternal = this.bar;\n    }\n\n    public snapToBar(): void {\n        this.playheadInternal = this.bar;\n        this.beat = 0;\n        this.part = 0;\n        this.tick = 0;\n        this.tickSampleCountdown = 0;\n    }\n\n    public jumpIntoLoop(): void {\n        if (!this.song) return;\n        if (this.bar < this.song.loopStart || this.bar >= this.song.loopStart + this.song.loopLength) {\n            const oldBar: number = this.bar;\n            this.bar = this.song.loopStart;\n            this.playheadInternal += this.bar - oldBar;\n\n            if (this.playing)\n                this.computeLatestModValues();\n        }\n    }\n\n    public goToNextBar(): void {\n        if (!this.song) return;\n        this.prevBar = this.bar;\n        const oldBar: number = this.bar;\n        this.bar++;\n        if (this.bar >= this.song.barCount) {\n            this.bar = 0;\n        }\n        this.playheadInternal += this.bar - oldBar;\n\n        if (this.playing)\n            this.computeLatestModValues();\n    }\n\n    public goToPrevBar(): void {\n        if (!this.song) return;\n        this.prevBar = null;\n        const oldBar: number = this.bar;\n        this.bar--;\n        if (this.bar < 0 || this.bar >= this.song.barCount) {\n            this.bar = this.song.barCount - 1;\n        }\n        this.playheadInternal += this.bar - oldBar;\n\n        if (this.playing)\n            this.computeLatestModValues();\n    }\n\n    private getNextBar(): number {\n        let nextBar: number = this.bar + 1;\n        if (this.isRecording) {\n            if (nextBar >= this.song!.barCount) {\n                nextBar = this.song!.barCount - 1;\n            }\n        } else if (this.bar == this.loopBarEnd && !this.renderingSong) {\n            nextBar = this.loopBarStart;\n        }\n        else if (this.loopRepeatCount != 0 && nextBar == Math.max(this.loopBarEnd+1, this.song!.loopStart + this.song!.loopLength)) {\n            nextBar = this.song!.loopStart;\n        }\n        return nextBar;\n    }\n\n    public skipBar(): void {\n        if (!this.song) return;\n        const samplesPerTick: number = this.getSamplesPerTick();\n        this.prevBar = this.bar; // Bugfix by LeoV\n        if (this.loopBarEnd != this.bar)\n            this.bar++;\n        else {\n            this.bar = this.loopBarStart;\n        }\n        this.beat = 0;\n        this.part = 0;\n        this.tick = 0;\n        this.tickSampleCountdown = samplesPerTick;\n        this.isAtStartOfTick = true;\n\n        if (this.loopRepeatCount != 0 && this.bar == Math.max(this.song.loopStart + this.song.loopLength, this.loopBarEnd)) {\n            this.bar = this.song.loopStart;\n            if (this.loopBarStart != -1)\n                this.bar = this.loopBarStart;\n            if (this.loopRepeatCount > 0) this.loopRepeatCount--;\n        }\n\n    }\n\n    private audioProcessCallback = (audioProcessingEvent: any): void => {\n        const outputBuffer = audioProcessingEvent.outputBuffer;\n        const outputDataL: Float32Array = outputBuffer.getChannelData(0);\n        const outputDataR: Float32Array = outputBuffer.getChannelData(1);\n\n        if (this.browserAutomaticallyClearsAudioBuffer && (outputDataL[0] != 0.0 || outputDataR[0] != 0.0 || outputDataL[outputBuffer.length - 1] != 0.0 || outputDataR[outputBuffer.length - 1] != 0.0)) {\n            // If the buffer is ever initially nonzero, then this must be an older browser that doesn't automatically clear the audio buffer.\n            this.browserAutomaticallyClearsAudioBuffer = false;\n        }\n        if (!this.browserAutomaticallyClearsAudioBuffer) {\n            // If this browser does not clear the buffer automatically, do so manually before continuing.\n            const length: number = outputBuffer.length;\n            for (let i: number = 0; i < length; i++) {\n                outputDataL[i] = 0.0;\n                outputDataR[i] = 0.0;\n            }\n        }\n\n        if (!this.isPlayingSong && performance.now() >= this.liveInputEndTime) {\n            this.deactivateAudio();\n        } else {\n            this.synthesize(outputDataL, outputDataR, outputBuffer.length, this.isPlayingSong);\n        }\n    }\n\n    public synthesize(outputDataL: Float32Array, outputDataR: Float32Array, outputBufferLength: number, playSong: boolean = true): void {\n        if (this.song == null) {\n            for (let i: number = 0; i < outputBufferLength; i++) {\n                outputDataL[i] = 0.0;\n                outputDataR[i] = 0.0;\n            }\n            this.deactivateAudio();\n            return;\n        }\n\n        const song: Song = this.song;\n        this.song.inVolumeCap = 0.0 // Reset volume cap for this run\n        this.song.outVolumeCap = 0.0;\n\n        let samplesPerTick: number = this.getSamplesPerTick();\n        let ended: boolean = false;\n\n        // Check the bounds of the playhead:\n        if (this.tickSampleCountdown <= 0 || this.tickSampleCountdown > samplesPerTick) {\n            this.tickSampleCountdown = samplesPerTick;\n            this.isAtStartOfTick = true;\n        }\n        if (playSong) {\n            if (this.beat >= song.beatsPerBar) {\n                this.beat = 0;\n                this.part = 0;\n                this.tick = 0;\n                this.tickSampleCountdown = samplesPerTick;\n                this.isAtStartOfTick = true;\n\n                this.prevBar = this.bar;\n                this.bar = this.getNextBar();\n                if (this.bar <= this.prevBar && this.loopRepeatCount > 0) this.loopRepeatCount--;\n\n            }\n            if (this.bar >= song.barCount) {\n                this.bar = 0;\n                if (this.loopRepeatCount != -1) {\n                    ended = true;\n                    this.pause();\n                }\n            }\n        }\n\n        //const synthStartTime: number = performance.now();\n\n        this.syncSongState();\n\n        if (this.tempMonoInstrumentSampleBuffer == null || this.tempMonoInstrumentSampleBuffer.length < outputBufferLength) {\n            this.tempMonoInstrumentSampleBuffer = new Float32Array(outputBufferLength);\n        }\n\n        // Post processing parameters:\n        const volume: number = +this.volume;\n        const limitDecay: number = 1.0 - Math.pow(0.5, this.song.limitDecay / this.samplesPerSecond);\n        const limitRise: number = 1.0 - Math.pow(0.5, this.song.limitRise / this.samplesPerSecond);\n        let limit: number = +this.limit;\n        let skippedBars: number[] = [];\n        let firstSkippedBufferIndex: number = -1;\n\n        let bufferIndex: number = 0;\n        while (bufferIndex < outputBufferLength && !ended) {\n\n            this.nextBar = this.getNextBar();\n            if (this.nextBar >= song.barCount) this.nextBar = null;\n\n            const samplesLeftInBuffer: number = outputBufferLength - bufferIndex;\n            const samplesLeftInTick: number = Math.ceil(this.tickSampleCountdown);\n            const runLength: number = Math.min(samplesLeftInTick, samplesLeftInBuffer);\n            const runEnd: number = bufferIndex + runLength;\n            \n            // Handle mod synth\n            if (this.isPlayingSong || this.renderingSong) {\n\n                // First modulation pass. Determines active tones.\n                // Runs everything but Dot X/Y mods, to let them always come after morph.\n                for (let channelIndex: number = song.pitchChannelCount + song.noiseChannelCount; channelIndex < song.getChannelCount(); channelIndex++) {\n                    const channel: Channel = song.channels[channelIndex];\n                    const channelState: ChannelState = this.channels[channelIndex];\n\n                    this.determineCurrentActiveTones(song, channelIndex, samplesPerTick, playSong);\n\n                    for (let instrumentIndex: number = 0; instrumentIndex < channel.instruments.length; instrumentIndex++) {\n                        const instrumentState: InstrumentState = channelState.instruments[instrumentIndex];\n                        for (let i: number = 0; i < instrumentState.activeModTones.count(); i++) {\n                            const tone: Tone = instrumentState.activeModTones.get(i);\n                            const channel: Channel = song.channels[channelIndex];\n                            const instrument: Instrument = channel.instruments[tone.instrumentIndex];\n                            let mod: number = Config.modCount - 1 - tone.pitches[0];\n\n                            if ((instrument.modulators[mod] == Config.modulators.dictionary[\"note filter\"].index\n                                || instrument.modulators[mod] == Config.modulators.dictionary[\"eq filter\"].index)\n                                && instrument.modFilterTypes[mod] != null && instrument.modFilterTypes[mod] > 0) {\n                                continue;\n                            }\n\n                            this.playModTone(song, channelIndex, samplesPerTick, bufferIndex, runLength, tone, false, false);\n                        }\n                    }\n                }\n\n                // Second modulation pass.\n                // Only for Dot X/Y mods.\n                for (let channelIndex: number = song.pitchChannelCount + song.noiseChannelCount; channelIndex < song.getChannelCount(); channelIndex++) {\n                    const channel: Channel = song.channels[channelIndex];\n                    const channelState: ChannelState = this.channels[channelIndex];\n\n                    for (let instrumentIndex: number = 0; instrumentIndex < channel.instruments.length; instrumentIndex++) {\n                        const instrumentState: InstrumentState = channelState.instruments[instrumentIndex];\n                        for (let i: number = 0; i < instrumentState.activeModTones.count(); i++) {\n                            const tone: Tone = instrumentState.activeModTones.get(i);\n                            const channel: Channel = song.channels[channelIndex];\n                            const instrument: Instrument = channel.instruments[tone.instrumentIndex];\n                            let mod: number = Config.modCount - 1 - tone.pitches[0];\n\n                            if ((instrument.modulators[mod] == Config.modulators.dictionary[\"note filter\"].index\n                                || instrument.modulators[mod] == Config.modulators.dictionary[\"eq filter\"].index)\n                                && instrument.modFilterTypes[mod] != null && instrument.modFilterTypes[mod] > 0) {\n\n                                this.playModTone(song, channelIndex, samplesPerTick, bufferIndex, runLength, tone, false, false);\n                            }\n\n                        }\n                    }\n                }\n            }\n\n            // Handle next bar mods if they were set\n            if (this.wantToSkip) {\n                // Unable to continue, as we have skipped back to a previously visited bar without generating new samples, which means we are infinitely skipping.\n                // In this case processing will return before the designated number of samples are processed. In other words, silence will be generated.\n                let barVisited: boolean = skippedBars.includes(this.bar);\n                if (barVisited && bufferIndex == firstSkippedBufferIndex) {\n                    this.pause();\n                    return;\n                }\n                if (firstSkippedBufferIndex == -1) {\n                    firstSkippedBufferIndex = bufferIndex;\n                }\n                if (!barVisited)\n                    skippedBars.push(this.bar);\n\n                this.wantToSkip = false;\n                this.skipBar();\n\n                continue;\n            }\n\n            for (let channelIndex: number = 0; channelIndex < song.pitchChannelCount + song.noiseChannelCount; channelIndex++) {\n                const channel: Channel = song.channels[channelIndex];\n                const channelState: ChannelState = this.channels[channelIndex];\n\n                if (this.isAtStartOfTick) {\n                    this.determineCurrentActiveTones(song, channelIndex, samplesPerTick, playSong && !this.countInMetronome);\n                    this.determineLiveInputTones(song, channelIndex, samplesPerTick);\n                }\n                for (let instrumentIndex: number = 0; instrumentIndex < channel.instruments.length; instrumentIndex++) {\n                    const instrument: Instrument = channel.instruments[instrumentIndex];\n                    const instrumentState: InstrumentState = channelState.instruments[instrumentIndex];\n\n                    if (this.isAtStartOfTick) {\n                        let tonesPlayedInThisInstrument: number = instrumentState.activeTones.count() + instrumentState.liveInputTones.count();\n\n                        for (let i: number = 0; i < instrumentState.releasedTones.count(); i++) {\n                            const tone: Tone = instrumentState.releasedTones.get(i);\n                            if (tone.ticksSinceReleased >= Math.abs(instrument.getFadeOutTicks())) {\n                                this.freeReleasedTone(instrumentState, i);\n                                i--;\n                                continue;\n                            }\n                            const shouldFadeOutFast: boolean = (tonesPlayedInThisInstrument >= Config.maximumTonesPerChannel);\n                            this.computeTone(song, channelIndex, samplesPerTick, tone, true, shouldFadeOutFast);\n                            tonesPlayedInThisInstrument++;\n                        }\n\n                        if (instrumentState.awake) {\n                            if (!instrumentState.computed) {\n                                instrumentState.compute(this, instrument, samplesPerTick, Math.ceil(samplesPerTick), null, channelIndex, instrumentIndex);\n                            }\n\n                            instrumentState.computed = false;\n                            //instrumentState.envelopeComputer.clearEnvelopes();\n                        }\n                    }\n\n                    for (let i: number = 0; i < instrumentState.activeTones.count(); i++) {\n                        const tone: Tone = instrumentState.activeTones.get(i);\n                        this.playTone(channelIndex, bufferIndex, runLength, tone);\n                    }\n\n                    for (let i: number = 0; i < instrumentState.liveInputTones.count(); i++) {\n                        const tone: Tone = instrumentState.liveInputTones.get(i);\n                        this.playTone(channelIndex, bufferIndex, runLength, tone);\n                    }\n\n                    for (let i: number = 0; i < instrumentState.releasedTones.count(); i++) {\n                        const tone: Tone = instrumentState.releasedTones.get(i);\n                        this.playTone(channelIndex, bufferIndex, runLength, tone);\n                    }\n\n                    if (instrumentState.awake) {\n                        Synth.effectsSynth(this, outputDataL, outputDataR, bufferIndex, runLength, instrumentState);\n                    }\n\n                    // Update LFO time for instruments (used to be deterministic based on bar position but now vibrato/arp speed messes that up!)\n\n                    const tickSampleCountdown: number = this.tickSampleCountdown;\n                    const startRatio: number = 1.0 - (tickSampleCountdown) / samplesPerTick;\n                    const endRatio: number = 1.0 - (tickSampleCountdown - runLength) / samplesPerTick;\n                    const ticksIntoBar: number = (this.beat * Config.partsPerBeat + this.part) * Config.ticksPerPart + this.tick;\n                    const partTimeTickStart: number = (ticksIntoBar) / Config.ticksPerPart;\n                    const partTimeTickEnd: number = (ticksIntoBar + 1) / Config.ticksPerPart;\n                    const partTimeStart: number = partTimeTickStart + (partTimeTickEnd - partTimeTickStart) * startRatio;\n                    const partTimeEnd: number = partTimeTickStart + (partTimeTickEnd - partTimeTickStart) * endRatio;\n                    let useVibratoSpeed: number = instrument.vibratoSpeed;\n\n                    instrumentState.vibratoTime = instrumentState.nextVibratoTime;\n\n                    if (this.isModActive(Config.modulators.dictionary[\"vibrato speed\"].index, channelIndex, instrumentIndex)) {\n                        useVibratoSpeed = this.getModValue(Config.modulators.dictionary[\"vibrato speed\"].index, channelIndex, instrumentIndex);\n                    }\n\n                    if (useVibratoSpeed == 0) {\n                        instrumentState.vibratoTime = 0;\n                        instrumentState.nextVibratoTime = 0;\n                    }\n                    else {\n                        instrumentState.nextVibratoTime += useVibratoSpeed * 0.1 * (partTimeEnd - partTimeStart);\n                    }\n                }\n            }\n\n            if (this.enableMetronome || this.countInMetronome) {\n                if (this.part == 0) {\n                    if (!this.startedMetronome) {\n                        const midBeat: boolean = (song.beatsPerBar > 4 && (song.beatsPerBar % 2 == 0) && this.beat == song.beatsPerBar / 2);\n                        const periods: number = (this.beat == 0) ? 8 : midBeat ? 6 : 4;\n                        const hz: number = (this.beat == 0) ? 1600 : midBeat ? 1200 : 800;\n                        const amplitude: number = (this.beat == 0) ? 0.06 : midBeat ? 0.05 : 0.04;\n                        const samplesPerPeriod: number = this.samplesPerSecond / hz;\n                        const radiansPerSample: number = Math.PI * 2.0 / samplesPerPeriod;\n                        this.metronomeSamplesRemaining = Math.floor(samplesPerPeriod * periods);\n                        this.metronomeFilter = 2.0 * Math.cos(radiansPerSample);\n                        this.metronomeAmplitude = amplitude * Math.sin(radiansPerSample);\n                        this.metronomePrevAmplitude = 0.0;\n\n                        this.startedMetronome = true;\n                    }\n                    if (this.metronomeSamplesRemaining > 0) {\n                        const stopIndex: number = Math.min(runEnd, bufferIndex + this.metronomeSamplesRemaining);\n                        this.metronomeSamplesRemaining -= stopIndex - bufferIndex;\n                        for (let i: number = bufferIndex; i < stopIndex; i++) {\n                            outputDataL[i] += this.metronomeAmplitude;\n                            outputDataR[i] += this.metronomeAmplitude;\n                            const tempAmplitude: number = this.metronomeFilter * this.metronomeAmplitude - this.metronomePrevAmplitude;\n                            this.metronomePrevAmplitude = this.metronomeAmplitude;\n                            this.metronomeAmplitude = tempAmplitude;\n                        }\n                    }\n                } else {\n                    this.startedMetronome = false;\n                }\n            }\n\n            // Post processing:\n            for (let i: number = bufferIndex; i < runEnd; i++) {\n                // A compressor/limiter.\n                const sampleL = outputDataL[i] * song.masterGain * song.masterGain;\n                const sampleR = outputDataR[i] * song.masterGain * song.masterGain;\n                const absL: number = sampleL < 0.0 ? -sampleL : sampleL;\n                const absR: number = sampleR < 0.0 ? -sampleR : sampleR;\n                const abs: number = absL > absR ? absL : absR;\n                this.song.inVolumeCap = (this.song.inVolumeCap > abs ? this.song.inVolumeCap : abs); // Analytics, spit out raw input volume\n                // Determines which formula to use. 0 when volume is between [0, compressionThreshold], 1 when between (compressionThreshold, limitThreshold], 2 above\n                const limitRange: number = (+(abs > song.compressionThreshold)) + (+(abs > song.limitThreshold));\n                // Determine the target amplification based on the range of the curve\n                const limitTarget: number =\n                    (+(limitRange == 0)) * (((abs + 1 - song.compressionThreshold) * 0.8 + 0.25) * song.compressionRatio + 1.05 * (1 - song.compressionRatio))\n                    + (+(limitRange == 1)) * (1.05)\n                    + (+(limitRange == 2)) * (1.05 * ((abs + 1 - song.limitThreshold) * song.limitRatio + (1 - song.limitThreshold)));\n                // Move the limit towards the target\n                limit += ((limitTarget - limit) * (limit < limitTarget ? limitRise : limitDecay));\n                const limitedVolume = volume / (limit >= 1 ? limit * 1.05 : limit * 0.8 + 0.25);\n                outputDataL[i] = sampleL * limitedVolume;\n                outputDataR[i] = sampleR * limitedVolume;\n\n                this.song.outVolumeCap = (this.song.outVolumeCap > abs * limitedVolume ? this.song.outVolumeCap : abs * limitedVolume); // Analytics, spit out limited output volume\n            }\n\n            bufferIndex += runLength;\n\n            this.isAtStartOfTick = false;\n            this.tickSampleCountdown -= runLength;\n            if (this.tickSampleCountdown <= 0) {\n                this.isAtStartOfTick = true;\n\n                // Track how long tones have been released, and free them if there are too many.\n                // Also reset awake InstrumentStates that didn't have any Tones during this tick.\n                for (const channelState of this.channels) {\n                    for (const instrumentState of channelState.instruments) {\n                        for (let i: number = 0; i < instrumentState.releasedTones.count(); i++) {\n                            const tone: Tone = instrumentState.releasedTones.get(i);\n                            if (tone.isOnLastTick) {\n                                this.freeReleasedTone(instrumentState, i);\n                                i--;\n                            } else {\n                                tone.ticksSinceReleased++;\n                            }\n                        }\n                        if (instrumentState.deactivateAfterThisTick) {\n                            instrumentState.deactivate();\n                        }\n                        instrumentState.tonesAddedInThisTick = false;\n                    }\n                }\n\n                for (let channel: number = 0; channel < this.song.pitchChannelCount + this.song.noiseChannelCount; channel++) {\n                    for (let instrumentIdx: number = 0; instrumentIdx < this.song.channels[channel].instruments.length; instrumentIdx++) {\n                        let instrument: Instrument = this.song.channels[channel].instruments[instrumentIdx];\n                        let instrumentState: InstrumentState = this.channels[channel].instruments[instrumentIdx];\n  \n                        // Update arpeggio time, which is used to calculate arpeggio position\n                        let useArpeggioSpeed: number = instrument.arpeggioSpeed;\n                        if (this.isModActive(Config.modulators.dictionary[\"arp speed\"].index, channel, instrumentIdx)) {\n                            useArpeggioSpeed = Math.max(0, Math.min(Config.arpSpeedScale.length-1, this.getModValue(Config.modulators.dictionary[\"arp speed\"].index, channel, instrumentIdx, false)));\n                            if (Number.isInteger(useArpeggioSpeed)) {\n                                instrumentState.arpTime += Config.arpSpeedScale[useArpeggioSpeed];\n                            } else {\n                                // Linear interpolate arpeggio values\n                                instrumentState.arpTime += (1 - (useArpeggioSpeed % 1)) * Config.arpSpeedScale[Math.floor(useArpeggioSpeed)] + (useArpeggioSpeed % 1) * Config.arpSpeedScale[Math.ceil(useArpeggioSpeed)];\n                            }\n                        }\n                        else {\n                            instrumentState.arpTime += Config.arpSpeedScale[useArpeggioSpeed];\n                        }\n\n                        // Update envelope time, which is used to calculate (all envelopes') position\n                        let useEnvelopeSpeed: number = instrument.envelopeSpeed;\n                        if (this.isModActive(Config.modulators.dictionary[\"envelope speed\"].index, channel, instrumentIdx)) {\n                            useEnvelopeSpeed = Math.max(0, Math.min(Config.arpSpeedScale.length-1, this.getModValue(Config.modulators.dictionary[\"envelope speed\"].index, channel, instrumentIdx, false)));\n                            if (Number.isInteger(useEnvelopeSpeed)) {\n                                instrumentState.envelopeTime += Config.arpSpeedScale[useEnvelopeSpeed];\n                            } else {\n                                // Linear interpolate envelope values\n                                instrumentState.envelopeTime += (1 - (useEnvelopeSpeed % 1)) * Config.arpSpeedScale[Math.floor(useEnvelopeSpeed)] + (useEnvelopeSpeed % 1) * Config.arpSpeedScale[Math.ceil(useEnvelopeSpeed)];\n                            }\n                        }\n                        else {\n                            instrumentState.envelopeTime += Config.arpSpeedScale[useEnvelopeSpeed];\n                        }\n                    }\n                }\n\n                // Update next-used filters after each run\n                for (let channel: number = 0; channel < this.song.pitchChannelCount + this.song.noiseChannelCount; channel++) {\n                    for (let instrumentIdx: number = 0; instrumentIdx < this.song.channels[channel].instruments.length; instrumentIdx++) {\n                        let instrument: Instrument = this.song.channels[channel].instruments[instrumentIdx];\n                        if (instrument.tmpEqFilterEnd != null) {\n                            instrument.tmpEqFilterStart = instrument.tmpEqFilterEnd;\n                        } else {\n                            instrument.tmpEqFilterStart = instrument.eqFilter;\n                        }\n                        if (instrument.tmpNoteFilterEnd != null) {\n                            instrument.tmpNoteFilterStart = instrument.tmpNoteFilterEnd;\n                        } else {\n                            instrument.tmpNoteFilterStart = instrument.noteFilter;\n                        }\n                    }\n                }\n\n                this.tick++;\n                this.tickSampleCountdown += samplesPerTick;\n                if (this.tick == Config.ticksPerPart) {\n                    this.tick = 0;\n                    this.part++;\n                    this.liveInputDuration--;\n                    this.liveBassInputDuration--;\n                    // Decrement held modulator counters after each run\n                    for (let i: number = 0; i < this.heldMods.length; i++) {\n                        this.heldMods[i].holdFor--;\n                        if (this.heldMods[i].holdFor <= 0) {\n                            this.heldMods.splice(i, 1);\n                        }\n                    }\n\n                    if (this.part == Config.partsPerBeat) {\n                        this.part = 0;\n\n                        if (playSong) {\n                            this.beat++;\n                            if (this.beat == song.beatsPerBar) {\n                                // bar changed, reset for next bar:\n                                this.beat = 0;\n\n                                if (this.countInMetronome) {\n                                    this.countInMetronome = false;\n                                } else {\n                                    this.prevBar = this.bar;\n                                    this.bar = this.getNextBar();\n                                    if (this.bar <= this.prevBar && this.loopRepeatCount > 0) this.loopRepeatCount--;\n\n                                    if (this.bar >= song.barCount) {\n                                        this.bar = 0;\n                                        if (this.loopRepeatCount != -1) {\n                                            ended = true;\n                                            this.resetEffects();\n                                            this.pause();\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n\n            // Update mod values so that next values copy to current values\n            for (let setting: number = 0; setting < Config.modulators.length; setting++) {\n                if (this.nextModValues != null && this.nextModValues[setting] != null)\n                    this.modValues[setting] = this.nextModValues[setting];\n            }\n\n            // Set samples per tick if song tempo mods changed it\n            if (this.isModActive(Config.modulators.dictionary[\"tempo\"].index)) {\n                samplesPerTick = this.getSamplesPerTick();\n                this.tickSampleCountdown = Math.min(this.tickSampleCountdown, samplesPerTick);\n            }\n\n            // Bound LFO times to be within their period (to keep values from getting large)\n            // I figured this modulo math probably doesn't have to happen every LFO tick.\n            for (let channelIndex: number = 0; channelIndex < this.song.pitchChannelCount + this.song.noiseChannelCount; channelIndex++) {\n                for (let instrumentIndex = 0; instrumentIndex < this.channels[channelIndex].instruments.length; instrumentIndex++) {\n                    const instrumentState: InstrumentState = this.channels[channelIndex].instruments[instrumentIndex];\n                    const instrument: Instrument = this.song.channels[channelIndex].instruments[instrumentIndex];\n                    instrumentState.nextVibratoTime = (instrumentState.nextVibratoTime % (Config.vibratoTypes[instrument.vibratoType].period / (Config.ticksPerPart * samplesPerTick / this.samplesPerSecond)));\n                    instrumentState.arpTime = (instrumentState.arpTime % (2520 * Config.ticksPerArpeggio)); // 2520 = LCM of 4, 5, 6, 7, 8, 9 (arp sizes)\n                    instrumentState.envelopeTime = (instrumentState.envelopeTime % (Config.partsPerBeat * Config.ticksPerPart * this.song.beatsPerBar));\n                }\n            }\n\n            for (let setting: number = 0; setting < Config.modulators.length; setting++) {\n                for (let channel: number = 0; channel < this.song.pitchChannelCount + this.song.noiseChannelCount; channel++) {\n                    for (let instrument: number = 0; instrument < this.song.getMaxInstrumentsPerChannel(); instrument++) {\n                        if (this.nextModInsValues != null && this.nextModInsValues[channel] != null && this.nextModInsValues[channel][instrument] != null && this.nextModInsValues[channel][instrument][setting] != null) {\n                            this.modInsValues[channel][instrument][setting] = this.nextModInsValues[channel][instrument][setting];\n                        }\n                    }\n                }\n            }\n        }\n\n        // Optimization: Avoid persistent reverb values in the float denormal range.\n        if (!Number.isFinite(limit) || Math.abs(limit) < epsilon) limit = 0.0;\n        this.limit = limit;\n\n        if (playSong && !this.countInMetronome) {\n            this.playheadInternal = (((this.tick + 1.0 - this.tickSampleCountdown / samplesPerTick) / 2.0 + this.part) / Config.partsPerBeat + this.beat) / song.beatsPerBar + this.bar;\n        }\n\n        /*\n        const synthDuration: number = performance.now() - synthStartTime;\n        // Performance measurements:\n        samplesAccumulated += outputBufferLength;\n        samplePerformance += synthDuration;\n    \t\n        if (samplesAccumulated >= 44100 * 4) {\n            const secondsGenerated = samplesAccumulated / 44100;\n            const secondsRequired = samplePerformance / 1000;\n            const ratio = secondsRequired / secondsGenerated;\n            console.log(ratio);\n            samplePerformance = 0;\n            samplesAccumulated = 0;\n        }\n        */\n    }\n\n    private freeTone(tone: Tone): void {\n        this.tonePool.pushBack(tone);\n    }\n\n    private newTone(): Tone {\n        if (this.tonePool.count() > 0) {\n            const tone: Tone = this.tonePool.popBack();\n            tone.freshlyAllocated = true;\n            return tone;\n        }\n        return new Tone();\n    }\n\n    private releaseTone(instrumentState: InstrumentState, tone: Tone): void {\n        instrumentState.releasedTones.pushFront(tone);\n        tone.atNoteStart = false;\n        tone.passedEndOfNote = true;\n    }\n\n    private freeReleasedTone(instrumentState: InstrumentState, toneIndex: number): void {\n        this.freeTone(instrumentState.releasedTones.get(toneIndex));\n        instrumentState.releasedTones.remove(toneIndex);\n    }\n\n    public freeAllTones(): void {\n        for (const channelState of this.channels) {\n            for (const instrumentState of channelState.instruments) {\n                while (instrumentState.activeTones.count() > 0) this.freeTone(instrumentState.activeTones.popBack());\n                while (instrumentState.activeModTones.count() > 0) this.freeTone(instrumentState.activeModTones.popBack());\n                while (instrumentState.releasedTones.count() > 0) this.freeTone(instrumentState.releasedTones.popBack());\n                while (instrumentState.liveInputTones.count() > 0) this.freeTone(instrumentState.liveInputTones.popBack());\n            }\n        }\n    }\n\n    private determineLiveInputTones(song: Song, channelIndex: number, samplesPerTick: number): void {\n        const channel: Channel = song.channels[channelIndex];\n        const channelState: ChannelState = this.channels[channelIndex];\n        const pitches: number[] = this.liveInputPitches;\n        const bassPitches: number[] = this.liveBassInputPitches;\n\n        for (let instrumentIndex: number = 0; instrumentIndex < channel.instruments.length; instrumentIndex++) {\n            const instrumentState: InstrumentState = channelState.instruments[instrumentIndex];\n            const toneList: Deque<Tone> = instrumentState.liveInputTones;\n            let toneCount: number = 0;\n            if (this.liveInputDuration > 0 && (channelIndex == this.liveInputChannel) && pitches.length > 0 && this.liveInputInstruments.indexOf(instrumentIndex) != -1) {\n                const instrument: Instrument = channel.instruments[instrumentIndex];\n\n                if (instrument.getChord().singleTone) {\n                    let tone: Tone;\n                    if (toneList.count() <= toneCount) {\n                        tone = this.newTone();\n                        toneList.pushBack(tone);\n                    } else if (!instrument.getTransition().isSeamless && this.liveInputStarted) {\n                        this.releaseTone(instrumentState, toneList.get(toneCount));\n                        tone = this.newTone();\n                        toneList.set(toneCount, tone);\n                    } else {\n                        tone = toneList.get(toneCount);\n                    }\n                    toneCount++;\n\n                    for (let i: number = 0; i < pitches.length; i++) {\n                        tone.pitches[i] = pitches[i];\n                    }\n                    tone.pitchCount = pitches.length;\n                    tone.chordSize = 1;\n                    tone.instrumentIndex = instrumentIndex;\n                    tone.note = tone.prevNote = tone.nextNote = null;\n                    tone.atNoteStart = this.liveInputStarted;\n                    tone.forceContinueAtStart = false;\n                    tone.forceContinueAtEnd = false;\n                    this.computeTone(song, channelIndex, samplesPerTick, tone, false, false);\n                } else {\n                    //const transition: Transition = instrument.getTransition();\n\n                    this.moveTonesIntoOrderedTempMatchedList(toneList, pitches);\n\n                    for (let i: number = 0; i < pitches.length; i++) {\n                        //const strumOffsetParts: number = i * instrument.getChord().strumParts;\n\n                        let tone: Tone;\n                        if (this.tempMatchedPitchTones[toneCount] != null) {\n                            tone = this.tempMatchedPitchTones[toneCount]!;\n                            this.tempMatchedPitchTones[toneCount] = null;\n                            if (tone.pitchCount != 1 || tone.pitches[0] != pitches[i]) {\n                                this.releaseTone(instrumentState, tone);\n                                tone = this.newTone();\n                            }\n                            toneList.pushBack(tone);\n                        } else {\n                            tone = this.newTone();\n                            toneList.pushBack(tone);\n                        }\n                        toneCount++;\n\n                        tone.pitches[0] = pitches[i];\n                        tone.pitchCount = 1;\n                        tone.chordSize = pitches.length;\n                        tone.instrumentIndex = instrumentIndex;\n                        tone.note = tone.prevNote = tone.nextNote = null;\n                        tone.atNoteStart = this.liveInputStarted;\n                        tone.forceContinueAtStart = false;\n                        tone.forceContinueAtEnd = false;\n                        this.computeTone(song, channelIndex, samplesPerTick, tone, false, false);\n                    }\n                }\n            }\n\n            if (this.liveBassInputDuration > 0 && (channelIndex == this.liveBassInputChannel) && bassPitches.length > 0 && this.liveBassInputInstruments.indexOf(instrumentIndex) != -1) {\n                const instrument: Instrument = channel.instruments[instrumentIndex];\n\n                if (instrument.getChord().singleTone) {\n                    let tone: Tone;\n                    if (toneList.count() <= toneCount) {\n                        tone = this.newTone();\n                        toneList.pushBack(tone);\n                    } else if (!instrument.getTransition().isSeamless && this.liveInputStarted) {\n                        this.releaseTone(instrumentState, toneList.get(toneCount));\n                        tone = this.newTone();\n                        toneList.set(toneCount, tone);\n                    } else {\n                        tone = toneList.get(toneCount);\n                    }\n                    toneCount++;\n\n                    for (let i: number = 0; i < bassPitches.length; i++) {\n                        tone.pitches[i] = bassPitches[i];\n                    }\n                    tone.pitchCount = bassPitches.length;\n                    tone.chordSize = 1;\n                    tone.instrumentIndex = instrumentIndex;\n                    tone.note = tone.prevNote = tone.nextNote = null;\n                    tone.atNoteStart = this.liveBassInputStarted;\n                    tone.forceContinueAtStart = false;\n                    tone.forceContinueAtEnd = false;\n                    this.computeTone(song, channelIndex, samplesPerTick, tone, false, false);\n                } else {\n                    //const transition: Transition = instrument.getTransition();\n\n                    this.moveTonesIntoOrderedTempMatchedList(toneList, bassPitches);\n\n                    for (let i: number = 0; i < bassPitches.length; i++) {\n                        //const strumOffsetParts: number = i * instrument.getChord().strumParts;\n\n                        let tone: Tone;\n                        if (this.tempMatchedPitchTones[toneCount] != null) {\n                            tone = this.tempMatchedPitchTones[toneCount]!;\n                            this.tempMatchedPitchTones[toneCount] = null;\n                            if (tone.pitchCount != 1 || tone.pitches[0] != bassPitches[i]) {\n                                this.releaseTone(instrumentState, tone);\n                                tone = this.newTone();\n                            }\n                            toneList.pushBack(tone);\n                        } else {\n                            tone = this.newTone();\n                            toneList.pushBack(tone);\n                        }\n                        toneCount++;\n\n                        tone.pitches[0] = bassPitches[i];\n                        tone.pitchCount = 1;\n                        tone.chordSize = bassPitches.length;\n                        tone.instrumentIndex = instrumentIndex;\n                        tone.note = tone.prevNote = tone.nextNote = null;\n                        tone.atNoteStart = this.liveBassInputStarted;\n                        tone.forceContinueAtStart = false;\n                        tone.forceContinueAtEnd = false;\n                        this.computeTone(song, channelIndex, samplesPerTick, tone, false, false);\n                    }\n                }\n            }\n\n            while (toneList.count() > toneCount) {\n                this.releaseTone(instrumentState, toneList.popBack());\n            }\n\n            this.clearTempMatchedPitchTones(toneCount, instrumentState);\n        }\n\n        this.liveInputStarted = false;\n        this.liveBassInputStarted = false;\n    }\n\n    // Returns the chord type of the instrument in the adjacent pattern if it is compatible for a\n    // seamless transition across patterns, otherwise returns null.\n    private adjacentPatternHasCompatibleInstrumentTransition(song: Song, channel: Channel, pattern: Pattern, otherPattern: Pattern, instrumentIndex: number, transition: Transition, chord: Chord, note: Note, otherNote: Note, forceContinue: boolean): Chord | null {\n        if (song.patternInstruments && otherPattern.instruments.indexOf(instrumentIndex) == -1) {\n            // The adjacent pattern does not contain the same instrument as the current pattern.\n\n            if (pattern.instruments.length > 1 || otherPattern.instruments.length > 1) {\n                // The current or adjacent pattern contains more than one instrument, don't bother\n                // trying to connect them.\n                return null;\n            }\n            // Otherwise, the two patterns each contain one instrument, but not the same instrument.\n            // Try to connect them.\n            const otherInstrument: Instrument = channel.instruments[otherPattern.instruments[0]];\n\n            if (forceContinue) {\n                // Even non-seamless instruments can be connected across patterns if forced.\n                return otherInstrument.getChord();\n            }\n\n            // Otherwise, check that both instruments are seamless across patterns.\n            const otherTransition: Transition = otherInstrument.getTransition();\n            if (transition.includeAdjacentPatterns && otherTransition.includeAdjacentPatterns && otherTransition.slides == transition.slides) {\n                return otherInstrument.getChord();\n            } else {\n                return null;\n            }\n        } else {\n            // If both patterns contain the same instrument, check that it is seamless across patterns.\n            return (forceContinue || transition.includeAdjacentPatterns) ? chord : null;\n        }\n    }\n\n    public static adjacentNotesHaveMatchingPitches(firstNote: Note, secondNote: Note): boolean {\n        if (firstNote.pitches.length != secondNote.pitches.length) return false;\n        const firstNoteInterval: number = firstNote.pins[firstNote.pins.length - 1].interval;\n        for (const pitch of firstNote.pitches) {\n            if (secondNote.pitches.indexOf(pitch + firstNoteInterval) == -1) return false;\n        }\n        return true;\n    }\n\n    private moveTonesIntoOrderedTempMatchedList(toneList: Deque<Tone>, notePitches: number[]): void {\n        // The tones are about to seamlessly transition to a new note. The pitches\n        // from the old note may or may not match any of the pitches in the new\n        // note, and not necessarily in order, but if any do match, they'll sound\n        // better if those tones continue to have the same pitch. Attempt to find\n        // the right spot for each old tone in the new chord if possible.\n\n        for (let i: number = 0; i < toneList.count(); i++) {\n            const tone: Tone = toneList.get(i);\n            const pitch: number = tone.pitches[0] + tone.lastInterval;\n            for (let j: number = 0; j < notePitches.length; j++) {\n                if (notePitches[j] == pitch) {\n                    this.tempMatchedPitchTones[j] = tone;\n                    toneList.remove(i);\n                    i--;\n                    break;\n                }\n            }\n        }\n\n        // Any tones that didn't get matched should just fill in the gaps.\n        while (toneList.count() > 0) {\n            const tone: Tone = toneList.popFront();\n            for (let j: number = 0; j < this.tempMatchedPitchTones.length; j++) {\n                if (this.tempMatchedPitchTones[j] == null) {\n                    this.tempMatchedPitchTones[j] = tone;\n                    break;\n                }\n            }\n        }\n    }\n\n    private determineCurrentActiveTones(song: Song, channelIndex: number, samplesPerTick: number, playSong: boolean): void {\n        const channel: Channel = song.channels[channelIndex];\n        const channelState: ChannelState = this.channels[channelIndex];\n        const pattern: Pattern | null = song.getPattern(channelIndex, this.bar);\n        const currentPart: number = this.getCurrentPart();\n        const currentTick: number = this.tick + Config.ticksPerPart * currentPart;\n\n        if (playSong && song.getChannelIsMod(channelIndex)) {\n\n            // For mod channels, notes aren't strictly arranged chronologically. Also, each pitch value could play or not play at a given time. So... a bit more computation involved!\n            // The same transition logic should apply though, even though it isn't really used by mod channels.\n            let notes: (Note | null)[] = [];\n            let prevNotes: (Note | null)[] = [];\n            let nextNotes: (Note | null)[] = [];\n            let fillCount: number = Config.modCount;\n            while (fillCount--) {\n                notes.push(null);\n                prevNotes.push(null);\n                nextNotes.push(null);\n            }\n\n            if (pattern != null && !channel.muted) {\n                for (let i: number = 0; i < pattern.notes.length; i++) {\n                    if (pattern.notes[i].end <= currentPart) {\n                        // Actually need to check which note starts closer to the start of this note.\n                        if (prevNotes[pattern.notes[i].pitches[0]] == null || pattern.notes[i].end > (prevNotes[pattern.notes[i].pitches[0]] as Note).start) {\n                            prevNotes[pattern.notes[i].pitches[0]] = pattern.notes[i];\n                        }\n                    }\n                    else if (pattern.notes[i].start <= currentPart && pattern.notes[i].end > currentPart) {\n                        notes[pattern.notes[i].pitches[0]] = pattern.notes[i];\n                    }\n                    else if (pattern.notes[i].start > currentPart) {\n                        // Actually need to check which note starts closer to the end of this note.\n                        if (nextNotes[pattern.notes[i].pitches[0]] == null || pattern.notes[i].start < (nextNotes[pattern.notes[i].pitches[0]] as Note).start) {\n                            nextNotes[pattern.notes[i].pitches[0]] = pattern.notes[i];\n                        }\n                    }\n                }\n            }\n\n            let modToneCount: number = 0;\n            const newInstrumentIndex: number = (song.patternInstruments && (pattern != null)) ? pattern!.instruments[0] : 0;\n            const instrumentState: InstrumentState = channelState.instruments[newInstrumentIndex];\n            const toneList: Deque<Tone> = instrumentState.activeModTones;\n            for (let mod: number = 0; mod < Config.modCount; mod++) {\n                if (notes[mod] != null) {\n                    if (prevNotes[mod] != null && (prevNotes[mod] as Note).end != (notes[mod] as Note).start) prevNotes[mod] = null;\n                    if (nextNotes[mod] != null && (nextNotes[mod] as Note).start != (notes[mod] as Note).end) nextNotes[mod] = null;\n\n                }\n\n                if (channelState.singleSeamlessInstrument != null && channelState.singleSeamlessInstrument != newInstrumentIndex && channelState.singleSeamlessInstrument < channelState.instruments.length) {\n                    const sourceInstrumentState: InstrumentState = channelState.instruments[channelState.singleSeamlessInstrument];\n                    const destInstrumentState: InstrumentState = channelState.instruments[newInstrumentIndex];\n                    while (sourceInstrumentState.activeModTones.count() > 0) {\n                        destInstrumentState.activeModTones.pushFront(sourceInstrumentState.activeModTones.popBack());\n                    }\n                }\n                channelState.singleSeamlessInstrument = newInstrumentIndex;\n\n                if (notes[mod] != null) {\n                    let prevNoteForThisInstrument: Note | null = prevNotes[mod];\n                    let nextNoteForThisInstrument: Note | null = nextNotes[mod];\n\n                    let forceContinueAtStart: boolean = false;\n                    let forceContinueAtEnd: boolean = false;\n                    const atNoteStart: boolean = (Config.ticksPerPart * notes[mod]!.start == currentTick) && this.isAtStartOfTick;\n                    let tone: Tone;\n                    if (toneList.count() <= modToneCount) {\n                        tone = this.newTone();\n                        toneList.pushBack(tone);\n                    } else if (atNoteStart && (prevNoteForThisInstrument == null)) {\n                        const oldTone: Tone = toneList.get(modToneCount);\n                        if (oldTone.isOnLastTick) {\n                            this.freeTone(oldTone);\n                        } else {\n                            this.releaseTone(instrumentState, oldTone);\n                        }\n                        tone = this.newTone();\n                        toneList.set(modToneCount, tone);\n                    } else {\n                        tone = toneList.get(modToneCount);\n                    }\n                    modToneCount++;\n\n                    for (let i: number = 0; i < notes[mod]!.pitches.length; i++) {\n                        tone.pitches[i] = notes[mod]!.pitches[i];\n                    }\n                    tone.pitchCount = notes[mod]!.pitches.length;\n                    tone.chordSize = 1;\n                    tone.instrumentIndex = newInstrumentIndex;\n                    tone.note = notes[mod];\n                    tone.noteStartPart = notes[mod]!.start;\n                    tone.noteEndPart = notes[mod]!.end;\n                    tone.prevNote = prevNoteForThisInstrument;\n                    tone.nextNote = nextNoteForThisInstrument;\n                    tone.prevNotePitchIndex = 0;\n                    tone.nextNotePitchIndex = 0;\n                    tone.atNoteStart = atNoteStart;\n                    tone.passedEndOfNote = false;\n                    tone.forceContinueAtStart = forceContinueAtStart;\n                    tone.forceContinueAtEnd = forceContinueAtEnd;\n                }\n            }\n            // Automatically free or release seamless tones if there's no new note to take over.\n            while (toneList.count() > modToneCount) {\n                const tone: Tone = toneList.popBack();\n                const channel: Channel = song.channels[channelIndex];\n                if (tone.instrumentIndex < channel.instruments.length && !tone.isOnLastTick) {\n                    const instrumentState: InstrumentState = this.channels[channelIndex].instruments[tone.instrumentIndex];\n                    this.releaseTone(instrumentState, tone);\n                } else {\n                    this.freeTone(tone);\n                }\n            }\n\n        }\n        else if (!song.getChannelIsMod(channelIndex)) {\n\n            let note: Note | null = null;\n            let prevNote: Note | null = null;\n            let nextNote: Note | null = null;\n\n            if (playSong && pattern != null && !channel.muted && (!this.isRecording || this.liveInputChannel != channelIndex)) {\n                for (let i: number = 0; i < pattern.notes.length; i++) {\n                    if (pattern.notes[i].end <= currentPart) {\n                        prevNote = pattern.notes[i];\n                    } else if (pattern.notes[i].start <= currentPart && pattern.notes[i].end > currentPart) {\n                        note = pattern.notes[i];\n                    } else if (pattern.notes[i].start > currentPart) {\n                        nextNote = pattern.notes[i];\n                        break;\n                    }\n                }\n\n                if (note != null) {\n                    if (prevNote != null && prevNote.end != note.start) prevNote = null;\n                    if (nextNote != null && nextNote.start != note.end) nextNote = null;\n                }\n            }\n\n            // Seamless tones from a pattern with a single instrument can be transferred to a different single seamless instrument in the next pattern.\n            if (pattern != null && (!song.layeredInstruments || channel.instruments.length == 1 || (song.patternInstruments && pattern.instruments.length == 1))) {\n                const newInstrumentIndex: number = song.patternInstruments ? pattern.instruments[0] : 0;\n                if (channelState.singleSeamlessInstrument != null && channelState.singleSeamlessInstrument != newInstrumentIndex && channelState.singleSeamlessInstrument < channelState.instruments.length) {\n                    const sourceInstrumentState: InstrumentState = channelState.instruments[channelState.singleSeamlessInstrument];\n                    const destInstrumentState: InstrumentState = channelState.instruments[newInstrumentIndex];\n                    while (sourceInstrumentState.activeTones.count() > 0) {\n                        destInstrumentState.activeTones.pushFront(sourceInstrumentState.activeTones.popBack());\n                    }\n                }\n                channelState.singleSeamlessInstrument = newInstrumentIndex;\n            } else {\n                channelState.singleSeamlessInstrument = null;\n            }\n\n            for (let instrumentIndex: number = 0; instrumentIndex < channel.instruments.length; instrumentIndex++) {\n                const instrumentState: InstrumentState = channelState.instruments[instrumentIndex];\n                const toneList: Deque<Tone> = instrumentState.activeTones;\n                let toneCount: number = 0;\n                if ((note != null) && (!song.patternInstruments || (pattern!.instruments.indexOf(instrumentIndex) != -1))) {\n                    const instrument: Instrument = channel.instruments[instrumentIndex];\n                    let prevNoteForThisInstrument: Note | null = prevNote;\n                    let nextNoteForThisInstrument: Note | null = nextNote;\n\n                    const partsPerBar: Number = Config.partsPerBeat * song.beatsPerBar;\n                    const transition: Transition = instrument.getTransition();\n                    const chord: Chord = instrument.getChord();\n                    let forceContinueAtStart: boolean = false;\n                    let forceContinueAtEnd: boolean = false;\n                    let tonesInPrevNote: number = 0;\n                    let tonesInNextNote: number = 0;\n                    if (note.start == 0) {\n                        // If the beginning of the note coincides with the beginning of the pattern,\n                        let prevPattern: Pattern | null = (this.prevBar == null) ? null : song.getPattern(channelIndex, this.prevBar);\n                        if (prevPattern != null) {\n                            const lastNote: Note | null = (prevPattern.notes.length <= 0) ? null : prevPattern.notes[prevPattern.notes.length - 1];\n                            if (lastNote != null && lastNote.end == partsPerBar) {\n                                const patternForcesContinueAtStart: boolean = note.continuesLastPattern && Synth.adjacentNotesHaveMatchingPitches(lastNote, note);\n                                const chordOfCompatibleInstrument: Chord | null = this.adjacentPatternHasCompatibleInstrumentTransition(song, channel, pattern!, prevPattern, instrumentIndex, transition, chord, note, lastNote, patternForcesContinueAtStart);\n                                if (chordOfCompatibleInstrument != null) {\n                                    prevNoteForThisInstrument = lastNote;\n                                    tonesInPrevNote = chordOfCompatibleInstrument.singleTone ? 1 : prevNoteForThisInstrument.pitches.length\n                                    forceContinueAtStart = patternForcesContinueAtStart;\n                                }\n                            }\n                        }\n                    } else if (prevNoteForThisInstrument != null) {\n                        tonesInPrevNote = chord.singleTone ? 1 : prevNoteForThisInstrument.pitches.length\n                    }\n                    if (note.end == partsPerBar) {\n                        // If the end of the note coincides with the end of the pattern, look for an\n                        // adjacent note at the beginning of the next pattern.\n                        let nextPattern: Pattern | null = (this.nextBar == null) ? null : song.getPattern(channelIndex, this.nextBar);\n                        if (nextPattern != null) {\n                            const firstNote: Note | null = (nextPattern.notes.length <= 0) ? null : nextPattern.notes[0];\n                            if (firstNote != null && firstNote.start == 0) {\n                                const nextPatternForcesContinueAtStart: boolean = firstNote.continuesLastPattern && Synth.adjacentNotesHaveMatchingPitches(note, firstNote);\n                                const chordOfCompatibleInstrument: Chord | null = this.adjacentPatternHasCompatibleInstrumentTransition(song, channel, pattern!, nextPattern, instrumentIndex, transition, chord, note, firstNote, nextPatternForcesContinueAtStart);\n                                if (chordOfCompatibleInstrument != null) {\n                                    nextNoteForThisInstrument = firstNote;\n                                    tonesInNextNote = chordOfCompatibleInstrument.singleTone ? 1 : nextNoteForThisInstrument.pitches.length\n                                    forceContinueAtEnd = nextPatternForcesContinueAtStart;\n                                }\n                            }\n                        }\n                    } else if (nextNoteForThisInstrument != null) {\n                        tonesInNextNote = chord.singleTone ? 1 : nextNoteForThisInstrument.pitches.length\n                    }\n\n                    if (chord.singleTone) {\n                        const atNoteStart: boolean = (Config.ticksPerPart * note.start == currentTick);\n                        let tone: Tone;\n                        if (toneList.count() <= toneCount) {\n                            tone = this.newTone();\n                            toneList.pushBack(tone);\n                        } else if (atNoteStart && ((!(transition.isSeamless || instrument.clicklessTransition) && !forceContinueAtStart) || prevNoteForThisInstrument == null)) {\n                            const oldTone: Tone = toneList.get(toneCount);\n                            if (oldTone.isOnLastTick) {\n                                this.freeTone(oldTone);\n                            } else {\n                                this.releaseTone(instrumentState, oldTone);\n                            }\n                            tone = this.newTone();\n                            toneList.set(toneCount, tone);\n                        } else {\n                            tone = toneList.get(toneCount);\n                        }\n                        toneCount++;\n\n                        for (let i: number = 0; i < note.pitches.length; i++) {\n                            tone.pitches[i] = note.pitches[i];\n                        }\n                        tone.pitchCount = note.pitches.length;\n                        tone.chordSize = 1;\n                        tone.instrumentIndex = instrumentIndex;\n                        tone.note = note;\n                        tone.noteStartPart = note.start;\n                        tone.noteEndPart = note.end;\n                        tone.prevNote = prevNoteForThisInstrument;\n                        tone.nextNote = nextNoteForThisInstrument;\n                        tone.prevNotePitchIndex = 0;\n                        tone.nextNotePitchIndex = 0;\n                        tone.atNoteStart = atNoteStart;\n                        tone.passedEndOfNote = false;\n                        tone.forceContinueAtStart = forceContinueAtStart;\n                        tone.forceContinueAtEnd = forceContinueAtEnd;\n                        this.computeTone(song, channelIndex, samplesPerTick, tone, false, false);\n                    } else {\n                        const transition: Transition = instrument.getTransition();\n\n                        if (((transition.isSeamless && !transition.slides && chord.strumParts == 0) || forceContinueAtStart) && (Config.ticksPerPart * note.start == currentTick) && prevNoteForThisInstrument != null) {\n                            this.moveTonesIntoOrderedTempMatchedList(toneList, note.pitches);\n                        }\n\n                        let strumOffsetParts: number = 0;\n                        for (let i: number = 0; i < note.pitches.length; i++) {\n\n                            let prevNoteForThisTone: Note | null = (tonesInPrevNote > i) ? prevNoteForThisInstrument : null;\n                            let noteForThisTone: Note = note;\n                            let nextNoteForThisTone: Note | null = (tonesInNextNote > i) ? nextNoteForThisInstrument : null;\n                            let noteStartPart: number = noteForThisTone.start + strumOffsetParts;\n                            let passedEndOfNote: boolean = false;\n\n                            // Strumming may mean that a note's actual start time may be after the\n                            // note's displayed start time. If the note start hasn't been reached yet,\n                            // carry over the previous tone if available and seamless, otherwise skip\n                            // the new tone until it is ready to start.\n                            if (noteStartPart > currentPart) {\n                                if (toneList.count() > i && (transition.isSeamless || forceContinueAtStart) && prevNoteForThisTone != null) {\n                                    // Continue the previous note's chord until the current one takes over.\n                                    nextNoteForThisTone = noteForThisTone;\n                                    noteForThisTone = prevNoteForThisTone;\n                                    prevNoteForThisTone = null;\n                                    noteStartPart = noteForThisTone.start + strumOffsetParts;\n                                    passedEndOfNote = true;\n                                } else {\n                                    // This and the rest of the tones in the chord shouldn't start yet.\n                                    break;\n                                }\n                            }\n\n                            let noteEndPart: number = noteForThisTone.end;\n                            if ((transition.isSeamless || forceContinueAtStart) && nextNoteForThisTone != null) {\n                                noteEndPart = Math.min(Config.partsPerBeat * this.song!.beatsPerBar, noteEndPart + strumOffsetParts);\n                            }\n                            if ((!transition.continues && !forceContinueAtStart) || prevNoteForThisTone == null) {\n                                strumOffsetParts += chord.strumParts;\n                            }\n\n                            const atNoteStart: boolean = (Config.ticksPerPart * noteStartPart == currentTick);\n                            let tone: Tone;\n                            if (this.tempMatchedPitchTones[toneCount] != null) {\n                                tone = this.tempMatchedPitchTones[toneCount]!;\n                                this.tempMatchedPitchTones[toneCount] = null;\n                                toneList.pushBack(tone);\n                            } else if (toneList.count() <= toneCount) {\n                                tone = this.newTone();\n                                toneList.pushBack(tone);\n                            } else if (atNoteStart && ((!transition.isSeamless && !forceContinueAtStart) || prevNoteForThisTone == null)) {\n                                const oldTone: Tone = toneList.get(toneCount);\n                                if (oldTone.isOnLastTick) {\n                                    this.freeTone(oldTone);\n                                } else {\n                                    this.releaseTone(instrumentState, oldTone);\n                                }\n                                tone = this.newTone();\n                                toneList.set(toneCount, tone);\n                            } else {\n                                tone = toneList.get(toneCount);\n                            }\n                            toneCount++;\n\n                            tone.pitches[0] = noteForThisTone.pitches[i];\n                            tone.pitchCount = 1;\n                            tone.chordSize = noteForThisTone.pitches.length;\n                            tone.instrumentIndex = instrumentIndex;\n                            tone.note = noteForThisTone;\n                            tone.noteStartPart = noteStartPart;\n                            tone.noteEndPart = noteEndPart;\n                            tone.prevNote = prevNoteForThisTone;\n                            tone.nextNote = nextNoteForThisTone;\n                            tone.prevNotePitchIndex = i;\n                            tone.nextNotePitchIndex = i;\n                            tone.atNoteStart = atNoteStart;\n                            tone.passedEndOfNote = passedEndOfNote;\n                            tone.forceContinueAtStart = forceContinueAtStart && prevNoteForThisTone != null;\n                            tone.forceContinueAtEnd = forceContinueAtEnd && nextNoteForThisTone != null;\n                            this.computeTone(song, channelIndex, samplesPerTick, tone, false, false);\n                        }\n                    }\n                }\n                // Automatically free or release seamless tones if there's no new note to take over.\n                while (toneList.count() > toneCount) {\n                    const tone: Tone = toneList.popBack();\n                    const channel: Channel = song.channels[channelIndex];\n                    if (tone.instrumentIndex < channel.instruments.length && !tone.isOnLastTick) {\n                        const instrumentState: InstrumentState = channelState.instruments[tone.instrumentIndex];\n                        this.releaseTone(instrumentState, tone);\n                    } else {\n                        this.freeTone(tone);\n                    }\n                }\n\n                this.clearTempMatchedPitchTones(toneCount, instrumentState);\n            }\n        }\n    }\n\n    private clearTempMatchedPitchTones(toneCount: number, instrumentState: InstrumentState): void {\n        for (let i: number = toneCount; i < this.tempMatchedPitchTones.length; i++) {\n            const oldTone: Tone | null = this.tempMatchedPitchTones[i];\n            if (oldTone != null) {\n                if (oldTone.isOnLastTick) {\n                    this.freeTone(oldTone);\n                } else {\n                    this.releaseTone(instrumentState, oldTone);\n                }\n                this.tempMatchedPitchTones[i] = null;\n            }\n        }\n    }\n\n\n    private playTone(channelIndex: number, bufferIndex: number, runLength: number, tone: Tone): void {\n        const channelState: ChannelState = this.channels[channelIndex];\n        const instrumentState: InstrumentState = channelState.instruments[tone.instrumentIndex];\n\n        if (instrumentState.synthesizer != null) instrumentState.synthesizer!(this, bufferIndex, runLength, tone, instrumentState);\n        tone.envelopeComputer.clearEnvelopes();\n    }\n\n    // Computes mod note position at the start and end of the window and \"plays\" the mod tone, setting appropriate mod data.\n    private playModTone(song: Song, channelIndex: number, samplesPerTick: number, bufferIndex: number, roundedSamplesPerTick: number, tone: Tone, released: boolean, shouldFadeOutFast: boolean): void {\n        const channel: Channel = song.channels[channelIndex];\n        const instrument: Instrument = channel.instruments[tone.instrumentIndex];\n\n        if (tone.note != null) {\n            const ticksIntoBar: number = this.getTicksIntoBar();\n            const partTimeTickStart: number = (ticksIntoBar) / Config.ticksPerPart;\n            const partTimeTickEnd: number = (ticksIntoBar + 1) / Config.ticksPerPart;\n            const tickSampleCountdown: number = this.tickSampleCountdown;\n            const startRatio: number = 1.0 - (tickSampleCountdown) / samplesPerTick;\n            const endRatio: number = 1.0 - (tickSampleCountdown - roundedSamplesPerTick) / samplesPerTick;\n            const partTimeStart: number = partTimeTickStart + (partTimeTickEnd - partTimeTickStart) * startRatio;\n            const partTimeEnd: number = partTimeTickStart + (partTimeTickEnd - partTimeTickStart) * endRatio;\n            const tickTimeStart: number = Config.ticksPerPart * partTimeStart;\n            const tickTimeEnd: number = Config.ticksPerPart * partTimeEnd;\n            const endPinIndex: number = tone.note.getEndPinIndex(this.getCurrentPart());\n            const startPin: NotePin = tone.note.pins[endPinIndex - 1];\n            const endPin: NotePin = tone.note.pins[endPinIndex];\n            const startPinTick: number = (tone.note.start + startPin.time) * Config.ticksPerPart;\n            const endPinTick: number = (tone.note.start + endPin.time) * Config.ticksPerPart;\n            const ratioStart: number = (tickTimeStart - startPinTick) / (endPinTick - startPinTick);\n            const ratioEnd: number = (tickTimeEnd - startPinTick) / (endPinTick - startPinTick);\n            tone.expression = startPin.size + (endPin.size - startPin.size) * ratioStart;\n            tone.expressionDelta = (startPin.size + (endPin.size - startPin.size) * ratioEnd) - tone.expression;\n\n            Synth.modSynth(this, bufferIndex, roundedSamplesPerTick, tone, instrument);\n        }\n    }\n\n    private static computeChordExpression(chordSize: number): number {\n        return 1.0 / ((chordSize - 1) * 0.25 + 1.0);\n    }\n\n    private computeTone(song: Song, channelIndex: number, samplesPerTick: number, tone: Tone, released: boolean, shouldFadeOutFast: boolean): void {\n        const roundedSamplesPerTick: number = Math.ceil(samplesPerTick);\n        const channel: Channel = song.channels[channelIndex];\n        const channelState: ChannelState = this.channels[channelIndex];\n        const instrument: Instrument = channel.instruments[tone.instrumentIndex];\n        const instrumentState: InstrumentState = channelState.instruments[tone.instrumentIndex];\n        instrumentState.awake = true;\n        instrumentState.tonesAddedInThisTick = true;\n        if (!instrumentState.computed) {\n            instrumentState.compute(this, instrument, samplesPerTick, roundedSamplesPerTick, tone, channelIndex, tone.instrumentIndex);\n        }\n        const transition: Transition = instrument.getTransition();\n        const chord: Chord = instrument.getChord();\n        const chordExpression: number = chord.singleTone ? 1.0 : Synth.computeChordExpression(tone.chordSize);\n        const isNoiseChannel: boolean = song.getChannelIsNoise(channelIndex);\n        const intervalScale: number = isNoiseChannel ? Config.noiseInterval : 1;\n        const secondsPerPart: number = Config.ticksPerPart * samplesPerTick / this.samplesPerSecond;\n        const sampleTime: number = 1.0 / this.samplesPerSecond;\n        const beatsPerPart: number = 1.0 / Config.partsPerBeat;\n        const ticksIntoBar: number = this.getTicksIntoBar();\n        const partTimeStart: number = (ticksIntoBar) / Config.ticksPerPart;\n        const partTimeEnd: number = (ticksIntoBar + 1.0) / Config.ticksPerPart;\n        const currentPart: number = this.getCurrentPart();\n\n        let specialIntervalMult: number = 1.0;\n        tone.specialIntervalExpressionMult = 1.0;\n\n        //if (synth.isModActive(ModSetting.mstPan, channelIndex, tone.instrumentIndex)) {\n        //    startPan = synth.getModValue(ModSetting.mstPan, false, channel, instrumentIdx, false);\n        //    endPan = synth.getModValue(ModSetting.mstPan, false, channel, instrumentIdx, true);\n        //}\n\n        let toneIsOnLastTick: boolean = shouldFadeOutFast;\n        let intervalStart: number = 0.0;\n        let intervalEnd: number = 0.0;\n        let fadeExpressionStart: number = 1.0;\n        let fadeExpressionEnd: number = 1.0;\n        let chordExpressionStart: number = chordExpression;\n        let chordExpressionEnd: number = chordExpression;\n\n        let expressionReferencePitch: number = 16; // A low \"E\" as a MIDI pitch.\n        let basePitch: number = Config.keys[song.key].basePitch;\n        let baseExpression: number = 1.0;\n        let pitchDamping: number = 48;\n        if (instrument.type == InstrumentType.spectrum) {\n            baseExpression = Config.spectrumBaseExpression;\n            if (isNoiseChannel) {\n                basePitch = Config.spectrumBasePitch;\n                baseExpression *= 2.0; // Note: spectrum is louder for drum channels than pitch channels!\n            }\n            expressionReferencePitch = Config.spectrumBasePitch;\n            pitchDamping = 28;\n        } else if (instrument.type == InstrumentType.drumset) {\n            basePitch = Config.spectrumBasePitch;\n            baseExpression = Config.drumsetBaseExpression;\n            expressionReferencePitch = basePitch;\n        } else if (instrument.type == InstrumentType.noise) {\n            basePitch = Config.chipNoises[instrument.chipNoise].basePitch;\n            baseExpression = Config.noiseBaseExpression;\n            expressionReferencePitch = basePitch;\n            pitchDamping = Config.chipNoises[instrument.chipNoise].isSoft ? 24.0 : 60.0;\n        } else if (instrument.type == InstrumentType.fm) {\n            baseExpression = Config.fmBaseExpression;\n        } else if (instrument.type == InstrumentType.chip || instrument.type == InstrumentType.customChipWave) {\n            baseExpression = Config.chipBaseExpression;\n        } else if (instrument.type == InstrumentType.harmonics) {\n            baseExpression = Config.harmonicsBaseExpression;\n        } else if (instrument.type == InstrumentType.pwm) {\n            baseExpression = Config.pwmBaseExpression;\n        } else if (instrument.type == InstrumentType.supersaw) {\n\t\t\tbaseExpression = Config.supersawBaseExpression;\n        } else if (instrument.type == InstrumentType.pickedString) {\n            baseExpression = Config.pickedStringBaseExpression;\n        } else if (instrument.type == InstrumentType.mod) {\n            baseExpression = 1.0;\n            expressionReferencePitch = 0;\n            pitchDamping = 1.0;\n            basePitch = 0;\n        } else {\n            throw new Error(\"Unknown instrument type in computeTone.\");\n        }\n\n        if ((tone.atNoteStart && !transition.isSeamless && !tone.forceContinueAtStart) || tone.freshlyAllocated) {\n            tone.reset();\n        }\n        tone.freshlyAllocated = false;\n\n        for (let i: number = 0; i < Config.maxPitchOrOperatorCount; i++) {\n            tone.phaseDeltas[i] = 0.0;\n            tone.phaseDeltaScales[i] = 0.0;\n            tone.operatorExpressions[i] = 0.0;\n            tone.operatorExpressionDeltas[i] = 0.0;\n        }\n        tone.expression = 0.0;\n        tone.expressionDelta = 0.0;\n        for (let i: number = 0; i < Config.operatorCount; i++) {\n            tone.operatorWaves[i] = Synth.getOperatorWave(instrument.operators[i].waveform, instrument.operators[i].pulseWidth);\n        }\n\n        if (released) {\n            const startTicksSinceReleased: number = tone.ticksSinceReleased;\n            const endTicksSinceReleased: number = tone.ticksSinceReleased + 1.0;\n            intervalStart = intervalEnd = tone.lastInterval;\n            const fadeOutTicks: number = Math.abs(instrument.getFadeOutTicks());\n            fadeExpressionStart = Synth.noteSizeToVolumeMult((1.0 - startTicksSinceReleased / fadeOutTicks) * Config.noteSizeMax);\n            fadeExpressionEnd = Synth.noteSizeToVolumeMult((1.0 - endTicksSinceReleased / fadeOutTicks) * Config.noteSizeMax);\n\n            if (shouldFadeOutFast) {\n                fadeExpressionEnd = 0.0;\n            }\n\n            if (tone.ticksSinceReleased + 1 >= fadeOutTicks) toneIsOnLastTick = true;\n        } else if (tone.note == null) {\n            fadeExpressionStart = fadeExpressionEnd = 1.0;\n            tone.lastInterval = 0;\n            tone.ticksSinceReleased = 0;\n            tone.liveInputSamplesHeld += roundedSamplesPerTick;\n        } else {\n            const note: Note = tone.note;\n            const nextNote: Note | null = tone.nextNote;\n\n            const noteStartPart: number = tone.noteStartPart;\n            const noteEndPart: number = tone.noteEndPart;\n\n\n            const endPinIndex: number = note.getEndPinIndex(currentPart);\n            const startPin: NotePin = note.pins[endPinIndex - 1];\n            const endPin: NotePin = note.pins[endPinIndex];\n            const noteStartTick: number = noteStartPart * Config.ticksPerPart;\n            const noteEndTick: number = noteEndPart * Config.ticksPerPart;\n            const pinStart: number = (note.start + startPin.time) * Config.ticksPerPart;\n            const pinEnd: number = (note.start + endPin.time) * Config.ticksPerPart;\n\n            tone.ticksSinceReleased = 0;\n\n            const tickTimeStart: number = currentPart * Config.ticksPerPart + this.tick;\n            const tickTimeEnd: number = tickTimeStart + 1.0;\n            const noteTicksPassedTickStart: number = tickTimeStart - noteStartTick;\n            const noteTicksPassedTickEnd: number = tickTimeEnd - noteStartTick;\n            const pinRatioStart: number = Math.min(1.0, (tickTimeStart - pinStart) / (pinEnd - pinStart));\n            const pinRatioEnd: number = Math.min(1.0, (tickTimeEnd - pinStart) / (pinEnd - pinStart));\n            fadeExpressionStart = 1.0;\n            fadeExpressionEnd = 1.0;\n            intervalStart = startPin.interval + (endPin.interval - startPin.interval) * pinRatioStart;\n            intervalEnd = startPin.interval + (endPin.interval - startPin.interval) * pinRatioEnd;\n            tone.lastInterval = intervalEnd;\n\n            if ((!transition.isSeamless && !tone.forceContinueAtEnd) || nextNote == null) {\n                const fadeOutTicks: number = -instrument.getFadeOutTicks();\n                if (fadeOutTicks > 0.0) {\n                    // If the tone should fade out before the end of the note, do so here.\n                    const noteLengthTicks: number = noteEndTick - noteStartTick;\n                    fadeExpressionStart *= Math.min(1.0, (noteLengthTicks - noteTicksPassedTickStart) / fadeOutTicks);\n                    fadeExpressionEnd *= Math.min(1.0, (noteLengthTicks - noteTicksPassedTickEnd) / fadeOutTicks);\n                    if (tickTimeEnd >= noteStartTick + noteLengthTicks) toneIsOnLastTick = true;\n                }\n            }\n\n        }\n\n        tone.isOnLastTick = toneIsOnLastTick;\n\n        let tmpNoteFilter: FilterSettings = instrument.noteFilter;\n        let startPoint: FilterControlPoint;\n        let endPoint: FilterControlPoint;\n\n        if (instrument.noteFilterType) {\n            // Simple EQ filter (old style). For analysis, using random filters from normal style since they are N/A in this context.\n            const noteFilterSettingsStart: FilterSettings = instrument.noteFilter;\n            if (instrument.noteSubFilters[1] == null)\n                instrument.noteSubFilters[1] = new FilterSettings();\n            const noteFilterSettingsEnd: FilterSettings = instrument.noteSubFilters[1];\n\n            // Change location based on slider values\n            let startSimpleFreq: number = instrument.noteFilterSimpleCut;\n            let startSimpleGain: number = instrument.noteFilterSimplePeak;\n            let endSimpleFreq: number = instrument.noteFilterSimpleCut;\n            let endSimpleGain: number = instrument.noteFilterSimplePeak;\n            let filterChanges: boolean = false;\n\n            if (this.isModActive(Config.modulators.dictionary[\"note filt cut\"].index, channelIndex, tone.instrumentIndex)) {\n                startSimpleFreq = this.getModValue(Config.modulators.dictionary[\"note filt cut\"].index, channelIndex, tone.instrumentIndex, false);\n                endSimpleFreq = this.getModValue(Config.modulators.dictionary[\"note filt cut\"].index, channelIndex, tone.instrumentIndex, true);\n                filterChanges = true;\n            }\n            if (this.isModActive(Config.modulators.dictionary[\"note filt peak\"].index, channelIndex, tone.instrumentIndex)) {\n                startSimpleGain = this.getModValue(Config.modulators.dictionary[\"note filt peak\"].index, channelIndex, tone.instrumentIndex, false);\n                endSimpleGain = this.getModValue(Config.modulators.dictionary[\"note filt peak\"].index, channelIndex, tone.instrumentIndex, true);\n                filterChanges = true;\n            }\n\n            noteFilterSettingsStart.convertLegacySettingsForSynth(startSimpleFreq, startSimpleGain, !filterChanges);\n            noteFilterSettingsEnd.convertLegacySettingsForSynth(endSimpleFreq, endSimpleGain, !filterChanges);\n\n            startPoint = noteFilterSettingsStart.controlPoints[0];\n            endPoint = noteFilterSettingsEnd.controlPoints[0];\n\n            // Temporarily override so that envelope computer uses appropriate computed note filter\n            instrument.noteFilter = noteFilterSettingsStart;\n            instrument.tmpNoteFilterStart = noteFilterSettingsStart;\n        }\n\n        // Compute envelopes *after* resetting the tone, otherwise the envelope computer gets reset too!\n        const envelopeComputer: EnvelopeComputer = tone.envelopeComputer;\n        let useEnvelopeSpeed: number = Config.arpSpeedScale[instrument.envelopeSpeed];\n        if (this.isModActive(Config.modulators.dictionary[\"envelope speed\"].index, channelIndex, tone.instrumentIndex)) {\n            useEnvelopeSpeed = Math.max(0, Math.min(Config.arpSpeedScale.length - 1, this.getModValue(Config.modulators.dictionary[\"envelope speed\"].index, channelIndex, tone.instrumentIndex, false)));\n            if (Number.isInteger(useEnvelopeSpeed)) {\n                useEnvelopeSpeed = Config.arpSpeedScale[useEnvelopeSpeed];\n            } else {\n                // Linear interpolate envelope values\n                useEnvelopeSpeed = (1 - (useEnvelopeSpeed % 1)) * Config.arpSpeedScale[Math.floor(useEnvelopeSpeed)] + (useEnvelopeSpeed % 1) * Config.arpSpeedScale[Math.ceil(useEnvelopeSpeed)];\n            }\n        }\n        envelopeComputer.computeEnvelopes(instrument, currentPart, instrumentState.envelopeTime, Config.ticksPerPart * partTimeStart, samplesPerTick / this.samplesPerSecond, tone, useEnvelopeSpeed);\n        const envelopeStarts: number[] = tone.envelopeComputer.envelopeStarts;\n        const envelopeEnds: number[] = tone.envelopeComputer.envelopeEnds;\n        instrument.noteFilter = tmpNoteFilter;\n\n        if (tone.note != null && transition.slides) {\n            // Slide interval and chordExpression at the start and/or end of the note if necessary.\n            const prevNote: Note | null = tone.prevNote;\n            const nextNote: Note | null = tone.nextNote;\n            if (prevNote != null) {\n                const intervalDiff: number = prevNote.pitches[tone.prevNotePitchIndex] + prevNote.pins[prevNote.pins.length - 1].interval - tone.pitches[0];\n                if (envelopeComputer.prevSlideStart) intervalStart += intervalDiff * envelopeComputer.prevSlideRatioStart;\n                if (envelopeComputer.prevSlideEnd) intervalEnd += intervalDiff * envelopeComputer.prevSlideRatioEnd;\n                if (!chord.singleTone) {\n                    const chordSizeDiff: number = prevNote.pitches.length - tone.chordSize;\n                    if (envelopeComputer.prevSlideStart) chordExpressionStart = Synth.computeChordExpression(tone.chordSize + chordSizeDiff * envelopeComputer.prevSlideRatioStart);\n                    if (envelopeComputer.prevSlideEnd) chordExpressionEnd = Synth.computeChordExpression(tone.chordSize + chordSizeDiff * envelopeComputer.prevSlideRatioEnd);\n                }\n            }\n            if (nextNote != null) {\n                const intervalDiff: number = nextNote.pitches[tone.nextNotePitchIndex] - (tone.pitches[0] + tone.note.pins[tone.note.pins.length - 1].interval);\n                if (envelopeComputer.nextSlideStart) intervalStart += intervalDiff * envelopeComputer.nextSlideRatioStart;\n                if (envelopeComputer.nextSlideEnd) intervalEnd += intervalDiff * envelopeComputer.nextSlideRatioEnd;\n                if (!chord.singleTone) {\n                    const chordSizeDiff: number = nextNote.pitches.length - tone.chordSize;\n                    if (envelopeComputer.nextSlideStart) chordExpressionStart = Synth.computeChordExpression(tone.chordSize + chordSizeDiff * envelopeComputer.nextSlideRatioStart);\n                    if (envelopeComputer.nextSlideEnd) chordExpressionEnd = Synth.computeChordExpression(tone.chordSize + chordSizeDiff * envelopeComputer.nextSlideRatioEnd);\n                }\n            }\n        }\n\n        if (effectsIncludePitchShift(instrument.effects)) {\n            let pitchShift: number = Config.justIntonationSemitones[instrument.pitchShift] / intervalScale;\n            let pitchShiftScalarStart: number = 1.0;\n            let pitchShiftScalarEnd: number = 1.0;\n            if (this.isModActive(Config.modulators.dictionary[\"pitch shift\"].index, channelIndex, tone.instrumentIndex)) {\n                pitchShift = Config.justIntonationSemitones[Config.justIntonationSemitones.length - 1];\n                pitchShiftScalarStart = (this.getModValue(Config.modulators.dictionary[\"pitch shift\"].index, channelIndex, tone.instrumentIndex, false)) / (Config.pitchShiftCenter);\n                pitchShiftScalarEnd = (this.getModValue(Config.modulators.dictionary[\"pitch shift\"].index, channelIndex, tone.instrumentIndex, true)) / (Config.pitchShiftCenter);\n            }\n            const envelopeStart: number = envelopeStarts[EnvelopeComputeIndex.pitchShift];\n            const envelopeEnd: number = envelopeEnds[EnvelopeComputeIndex.pitchShift];\n            intervalStart += pitchShift * envelopeStart * pitchShiftScalarStart;\n            intervalEnd += pitchShift * envelopeEnd * pitchShiftScalarEnd;\n        }\n        if (effectsIncludeDetune(instrument.effects) || this.isModActive(Config.modulators.dictionary[\"song detune\"].index, channelIndex, tone.instrumentIndex)) {\n            const envelopeStart: number = envelopeStarts[EnvelopeComputeIndex.detune];\n            const envelopeEnd: number = envelopeEnds[EnvelopeComputeIndex.detune];\n            let modDetuneStart: number = instrument.detune;\n            let modDetuneEnd: number = instrument.detune;\n            if (this.isModActive(Config.modulators.dictionary[\"detune\"].index, channelIndex, tone.instrumentIndex)) {\n                modDetuneStart = this.getModValue(Config.modulators.dictionary[\"detune\"].index, channelIndex, tone.instrumentIndex, false) + Config.detuneCenter;\n                modDetuneEnd = this.getModValue(Config.modulators.dictionary[\"detune\"].index, channelIndex, tone.instrumentIndex, true) + Config.detuneCenter;\n            }\n            if (this.isModActive(Config.modulators.dictionary[\"song detune\"].index, channelIndex, tone.instrumentIndex)) {\n                modDetuneStart += 4 * this.getModValue(Config.modulators.dictionary[\"song detune\"].index, channelIndex, tone.instrumentIndex, false);\n                modDetuneEnd += 4 * this.getModValue(Config.modulators.dictionary[\"song detune\"].index, channelIndex, tone.instrumentIndex, true);\n            }\n            intervalStart += Synth.detuneToCents(modDetuneStart) * envelopeStart * Config.pitchesPerOctave / (12.0 * 100.0);\n            intervalEnd += Synth.detuneToCents(modDetuneEnd) * envelopeEnd * Config.pitchesPerOctave / (12.0 * 100.0);\n        }\n\n        if (effectsIncludeVibrato(instrument.effects)) {\n            let delayTicks: number;\n            let vibratoAmplitudeStart: number;\n            let vibratoAmplitudeEnd: number;\n            // Custom vibrato\n            if (instrument.vibrato == Config.vibratos.length) {\n                delayTicks = instrument.vibratoDelay * 2; // Delay was changed from parts to ticks in BB v9\n                // Special case: if vibrato delay is max, NEVER vibrato.\n                if (instrument.vibratoDelay == Config.modulators.dictionary[\"vibrato delay\"].maxRawVol)\n                    delayTicks = Number.POSITIVE_INFINITY;\n                vibratoAmplitudeStart = instrument.vibratoDepth;\n                vibratoAmplitudeEnd = vibratoAmplitudeStart;\n            } else {\n                delayTicks = Config.vibratos[instrument.vibrato].delayTicks;\n                vibratoAmplitudeStart = Config.vibratos[instrument.vibrato].amplitude;\n                vibratoAmplitudeEnd = vibratoAmplitudeStart;\n            }\n\n            if (this.isModActive(Config.modulators.dictionary[\"vibrato delay\"].index, channelIndex, tone.instrumentIndex)) {\n                delayTicks = this.getModValue(Config.modulators.dictionary[\"vibrato delay\"].index, channelIndex, tone.instrumentIndex, false) * 2; // Delay was changed from parts to ticks in BB v9\n                if (delayTicks == Config.modulators.dictionary[\"vibrato delay\"].maxRawVol * 2)\n                    delayTicks = Number.POSITIVE_INFINITY;\n\n            }\n\n            if (this.isModActive(Config.modulators.dictionary[\"vibrato depth\"].index, channelIndex, tone.instrumentIndex)) {\n                vibratoAmplitudeStart = this.getModValue(Config.modulators.dictionary[\"vibrato depth\"].index, channelIndex, tone.instrumentIndex, false) / 25;\n                vibratoAmplitudeEnd = this.getModValue(Config.modulators.dictionary[\"vibrato depth\"].index, channelIndex, tone.instrumentIndex, true) / 25;\n            }\n\n\n            // To maintain pitch continuity, (mostly for picked string which retriggers impulse\n            // otherwise) remember the vibrato at the end of this run and reuse it at the start\n            // of the next run if available.\n            let vibratoStart: number;\n            if (tone.prevVibrato != null) {\n                vibratoStart = tone.prevVibrato;\n            } else {\n                let vibratoLfoStart: number = Synth.getLFOAmplitude(instrument, secondsPerPart * instrumentState.vibratoTime);\n                const vibratoDepthEnvelopeStart: number = envelopeStarts[EnvelopeComputeIndex.vibratoDepth];\n                vibratoStart = vibratoAmplitudeStart * vibratoLfoStart * vibratoDepthEnvelopeStart;\n                if (delayTicks > 0.0) {\n                    const ticksUntilVibratoStart: number = delayTicks - envelopeComputer.noteTicksStart;\n                    vibratoStart *= Math.max(0.0, Math.min(1.0, 1.0 - ticksUntilVibratoStart / 2.0));\n                }\n            }\n\n            let vibratoLfoEnd: number = Synth.getLFOAmplitude(instrument, secondsPerPart * instrumentState.nextVibratoTime);\n            const vibratoDepthEnvelopeEnd: number = envelopeEnds[EnvelopeComputeIndex.vibratoDepth];\n            if (instrument.type != InstrumentType.mod) {\n                let vibratoEnd: number = vibratoAmplitudeEnd * vibratoLfoEnd * vibratoDepthEnvelopeEnd;\n                if (delayTicks > 0.0) {\n                    const ticksUntilVibratoEnd: number = delayTicks - envelopeComputer.noteTicksEnd;\n                    vibratoEnd *= Math.max(0.0, Math.min(1.0, 1.0 - ticksUntilVibratoEnd / 2.0));\n                }\n\n                tone.prevVibrato = vibratoEnd;\n\n                intervalStart += vibratoStart;\n                intervalEnd += vibratoEnd;\n            }\n        }\n\n        if ((!transition.isSeamless && !tone.forceContinueAtStart) || tone.prevNote == null) {\n            // Fade in the beginning of the note.\n            const fadeInSeconds: number = instrument.getFadeInSeconds();\n            if (fadeInSeconds > 0.0) {\n                fadeExpressionStart *= Math.min(1.0, envelopeComputer.noteSecondsStartUnscaled / fadeInSeconds);\n                fadeExpressionEnd *= Math.min(1.0, envelopeComputer.noteSecondsEndUnscaled / fadeInSeconds);\n            }\n        }\n\n        if (instrument.type == InstrumentType.drumset && tone.drumsetPitch == null) {\n            // It's possible that the note will change while the user is editing it,\n            // but the tone's pitches don't get updated because the tone has already\n            // ended and is fading out. To avoid an array index out of bounds error, clamp the pitch.\n            tone.drumsetPitch = tone.pitches[0];\n            if (tone.note != null) tone.drumsetPitch += tone.note.pickMainInterval();\n            tone.drumsetPitch = Math.max(0, Math.min(Config.drumCount - 1, tone.drumsetPitch));\n        }\n\n        let noteFilterExpression: number = envelopeComputer.lowpassCutoffDecayVolumeCompensation;\n        if (!effectsIncludeNoteFilter(instrument.effects)) {\n            tone.noteFilterCount = 0;\n        } else {\n\n            const noteAllFreqsEnvelopeStart: number = envelopeStarts[EnvelopeComputeIndex.noteFilterAllFreqs];\n            const noteAllFreqsEnvelopeEnd: number = envelopeEnds[EnvelopeComputeIndex.noteFilterAllFreqs];\n\n            // Simple note filter\n            if (instrument.noteFilterType) {\n                const noteFreqEnvelopeStart: number = envelopeStarts[EnvelopeComputeIndex.noteFilterFreq0];\n                const noteFreqEnvelopeEnd: number = envelopeEnds[EnvelopeComputeIndex.noteFilterFreq0];\n                const notePeakEnvelopeStart: number = envelopeStarts[EnvelopeComputeIndex.noteFilterGain0];\n                const notePeakEnvelopeEnd: number = envelopeEnds[EnvelopeComputeIndex.noteFilterGain0];\n\n                startPoint!.toCoefficients(Synth.tempFilterStartCoefficients, this.samplesPerSecond, noteAllFreqsEnvelopeStart * noteFreqEnvelopeStart, notePeakEnvelopeStart);\n                endPoint!.toCoefficients(Synth.tempFilterEndCoefficients, this.samplesPerSecond, noteAllFreqsEnvelopeEnd * noteFreqEnvelopeEnd, notePeakEnvelopeEnd);\n\n                if (tone.noteFilters.length < 1) tone.noteFilters[0] = new DynamicBiquadFilter();\n                tone.noteFilters[0].loadCoefficientsWithGradient(Synth.tempFilterStartCoefficients, Synth.tempFilterEndCoefficients, 1.0 / roundedSamplesPerTick, startPoint!.type == FilterType.lowPass);\n                noteFilterExpression *= startPoint!.getVolumeCompensationMult();\n\n                tone.noteFilterCount = 1;\n            }\n            else {\n                const noteFilterSettings: FilterSettings = (instrument.tmpNoteFilterStart != null) ? instrument.tmpNoteFilterStart : instrument.noteFilter;\n\n                for (let i: number = 0; i < noteFilterSettings.controlPointCount; i++) {\n                    const noteFreqEnvelopeStart: number = envelopeStarts[EnvelopeComputeIndex.noteFilterFreq0 + i];\n                    const noteFreqEnvelopeEnd: number = envelopeEnds[EnvelopeComputeIndex.noteFilterFreq0 + i];\n                    const notePeakEnvelopeStart: number = envelopeStarts[EnvelopeComputeIndex.noteFilterGain0 + i];\n                    const notePeakEnvelopeEnd: number = envelopeEnds[EnvelopeComputeIndex.noteFilterGain0 + i];\n                    let startPoint: FilterControlPoint = noteFilterSettings.controlPoints[i];\n                    const endPoint: FilterControlPoint = (instrument.tmpNoteFilterEnd != null && instrument.tmpNoteFilterEnd.controlPoints[i] != null) ? instrument.tmpNoteFilterEnd.controlPoints[i] : noteFilterSettings.controlPoints[i];\n\n                    // If switching dot type, do it all at once and do not try to interpolate since no valid interpolation exists.\n                    if (startPoint.type != endPoint.type) {\n                        startPoint = endPoint;\n                    }\n\n                    startPoint.toCoefficients(Synth.tempFilterStartCoefficients, this.samplesPerSecond, noteAllFreqsEnvelopeStart * noteFreqEnvelopeStart, notePeakEnvelopeStart);\n                    endPoint.toCoefficients(Synth.tempFilterEndCoefficients, this.samplesPerSecond, noteAllFreqsEnvelopeEnd * noteFreqEnvelopeEnd, notePeakEnvelopeEnd);\n                    if (tone.noteFilters.length <= i) tone.noteFilters[i] = new DynamicBiquadFilter();\n                    tone.noteFilters[i].loadCoefficientsWithGradient(Synth.tempFilterStartCoefficients, Synth.tempFilterEndCoefficients, 1.0 / roundedSamplesPerTick, startPoint.type == FilterType.lowPass);\n                    noteFilterExpression *= startPoint.getVolumeCompensationMult();\n                }\n                tone.noteFilterCount = noteFilterSettings.controlPointCount;\n            }\n        }\n\n        if (instrument.type == InstrumentType.drumset) {\n            const drumsetFilterEnvelope: Envelope = instrument.getDrumsetEnvelope(tone.drumsetPitch!);\n\n            // If the drumset lowpass cutoff decays, compensate by increasing expression.\n            noteFilterExpression *= EnvelopeComputer.getLowpassCutoffDecayVolumeCompensation(drumsetFilterEnvelope)\n\n            // Drumset filters use the same envelope timing as the rest of the envelopes, but do not include support for slide transitions.\n            let drumsetFilterEnvelopeStart: number = EnvelopeComputer.computeEnvelope(drumsetFilterEnvelope, envelopeComputer.noteSecondsStart, beatsPerPart * partTimeStart, envelopeComputer.noteSizeStart);\n\n            // Apply slide interpolation to drumset envelope.\n            if (envelopeComputer.prevSlideStart) {\n                const other: number = EnvelopeComputer.computeEnvelope(drumsetFilterEnvelope, envelopeComputer.prevNoteSecondsStart, beatsPerPart * partTimeStart, envelopeComputer.prevNoteSize);\n                drumsetFilterEnvelopeStart += (other - drumsetFilterEnvelopeStart) * envelopeComputer.prevSlideRatioStart;\n            }\n            if (envelopeComputer.nextSlideStart) {\n                const other: number = EnvelopeComputer.computeEnvelope(drumsetFilterEnvelope, 0.0, beatsPerPart * partTimeStart, envelopeComputer.nextNoteSize);\n                drumsetFilterEnvelopeStart += (other - drumsetFilterEnvelopeStart) * envelopeComputer.nextSlideRatioStart;\n            }\n\n            let drumsetFilterEnvelopeEnd: number = drumsetFilterEnvelopeStart;\n\n            if ( instrument.discreteEnvelope == false ) {\n                drumsetFilterEnvelopeEnd = EnvelopeComputer.computeEnvelope(drumsetFilterEnvelope, envelopeComputer.noteSecondsEnd, beatsPerPart * partTimeEnd, envelopeComputer.noteSizeEnd);\n\n                if (envelopeComputer.prevSlideEnd) {\n                    const other: number = EnvelopeComputer.computeEnvelope(drumsetFilterEnvelope, envelopeComputer.prevNoteSecondsEnd, beatsPerPart * partTimeEnd, envelopeComputer.prevNoteSize);\n                    drumsetFilterEnvelopeEnd += (other - drumsetFilterEnvelopeEnd) * envelopeComputer.prevSlideRatioEnd;\n                }\n                if (envelopeComputer.nextSlideEnd) {\n                    const other: number = EnvelopeComputer.computeEnvelope(drumsetFilterEnvelope, 0.0, beatsPerPart * partTimeEnd, envelopeComputer.nextNoteSize);\n                    drumsetFilterEnvelopeEnd += (other - drumsetFilterEnvelopeEnd) * envelopeComputer.nextSlideRatioEnd;\n                }\n            }\n\n            const point: FilterControlPoint = this.tempDrumSetControlPoint;\n            point.type = FilterType.lowPass;\n            point.gain = FilterControlPoint.getRoundedSettingValueFromLinearGain(0.5);\n            point.freq = FilterControlPoint.getRoundedSettingValueFromHz(8000.0);\n            // Drumset envelopes are warped to better imitate the legacy simplified 2nd order lowpass at ~48000Hz that I used to use.\n            point.toCoefficients(Synth.tempFilterStartCoefficients, this.samplesPerSecond, drumsetFilterEnvelopeStart * (1.0 + drumsetFilterEnvelopeStart), 1.0);\n            point.toCoefficients(Synth.tempFilterEndCoefficients, this.samplesPerSecond, drumsetFilterEnvelopeEnd * (1.0 + drumsetFilterEnvelopeEnd), 1.0);\n            if (tone.noteFilters.length == tone.noteFilterCount) tone.noteFilters[tone.noteFilterCount] = new DynamicBiquadFilter();\n            tone.noteFilters[tone.noteFilterCount].loadCoefficientsWithGradient(Synth.tempFilterStartCoefficients, Synth.tempFilterEndCoefficients, 1.0 / roundedSamplesPerTick, true);\n            tone.noteFilterCount++;\n        }\n\n        noteFilterExpression = Math.min(3.0, noteFilterExpression);\n\n        if (instrument.type == InstrumentType.fm) {\n            // phase modulation!\n\n            let sineExpressionBoost: number = 1.0;\n            let totalCarrierExpression: number = 0.0;\n\n            let arpeggioInterval: number = 0;\n            const arpeggiates: boolean = chord.arpeggiates;\n            if (tone.pitchCount > 1 && arpeggiates) {\n                const arpeggio: number = Math.floor(instrumentState.arpTime / Config.ticksPerArpeggio);\n                arpeggioInterval = tone.pitches[getArpeggioPitchIndex(tone.pitchCount, instrument.fastTwoNoteArp, arpeggio)] - tone.pitches[0];\n            }\n\n            const carrierCount: number = Config.algorithms[instrument.algorithm].carrierCount;\n            for (let i: number = 0; i < Config.operatorCount; i++) {\n\n                const associatedCarrierIndex: number = Config.algorithms[instrument.algorithm].associatedCarrier[i] - 1;\n                const pitch: number = tone.pitches[arpeggiates ? 0 : ((i < tone.pitchCount) ? i : ((associatedCarrierIndex < tone.pitchCount) ? associatedCarrierIndex : 0))];\n                const freqMult = Config.operatorFrequencies[instrument.operators[i].frequency].mult;\n                const interval = Config.operatorCarrierInterval[associatedCarrierIndex] + arpeggioInterval;\n                const pitchStart: number = basePitch + (pitch + intervalStart) * intervalScale + interval;\n                const pitchEnd: number = basePitch + (pitch + intervalEnd) * intervalScale + interval;\n                const baseFreqStart: number = Instrument.frequencyFromPitch(pitchStart);\n                const baseFreqEnd: number = Instrument.frequencyFromPitch(pitchEnd);\n                const hzOffset: number = Config.operatorFrequencies[instrument.operators[i].frequency].hzOffset;\n                const targetFreqStart: number = freqMult * baseFreqStart + hzOffset;\n                const targetFreqEnd: number = freqMult * baseFreqEnd + hzOffset;\n\n                const freqEnvelopeStart: number = envelopeStarts[EnvelopeComputeIndex.operatorFrequency0 + i];\n                const freqEnvelopeEnd: number = envelopeEnds[EnvelopeComputeIndex.operatorFrequency0 + i];\n                let freqStart: number;\n                let freqEnd: number;\n                if (freqEnvelopeStart != 1.0 || freqEnvelopeEnd != 1.0) {\n                    freqStart = Math.pow(2.0, Math.log2(targetFreqStart / baseFreqStart) * freqEnvelopeStart) * baseFreqStart;\n                    freqEnd = Math.pow(2.0, Math.log2(targetFreqEnd / baseFreqEnd) * freqEnvelopeEnd) * baseFreqEnd;\n                } else {\n                    freqStart = targetFreqStart;\n                    freqEnd = targetFreqEnd;\n                }\n                tone.phaseDeltas[i] = freqStart * sampleTime;\n                tone.phaseDeltaScales[i] = Math.pow(freqEnd / freqStart, 1.0 / roundedSamplesPerTick);\n\n                let amplitudeStart: number = instrument.operators[i].amplitude;\n                let amplitudeEnd: number = instrument.operators[i].amplitude;\n                if (this.isModActive(Config.modulators.dictionary[\"fm slider 1\"].index + i, channelIndex, tone.instrumentIndex)) {\n                    amplitudeStart *= this.getModValue(Config.modulators.dictionary[\"fm slider 1\"].index + i, channelIndex, tone.instrumentIndex, false) / 15.0;\n                    amplitudeEnd *= this.getModValue(Config.modulators.dictionary[\"fm slider 1\"].index + i, channelIndex, tone.instrumentIndex, true) / 15.0;\n                }\n\n                const amplitudeCurveStart: number = Synth.operatorAmplitudeCurve(amplitudeStart);\n                const amplitudeCurveEnd: number = Synth.operatorAmplitudeCurve(amplitudeEnd);\n                const amplitudeMultStart: number = amplitudeCurveStart * Config.operatorFrequencies[instrument.operators[i].frequency].amplitudeSign;\n                const amplitudeMultEnd: number = amplitudeCurveEnd * Config.operatorFrequencies[instrument.operators[i].frequency].amplitudeSign;\n\n                let expressionStart: number = amplitudeMultStart;\n                let expressionEnd: number = amplitudeMultEnd;\n\n\n                if (i < carrierCount) {\n                    // carrier\n                    let pitchExpressionStart: number;\n                    if (tone.prevPitchExpressions[i] != null) {\n                        pitchExpressionStart = tone.prevPitchExpressions[i]!;\n                    } else {\n                        pitchExpressionStart = Math.pow(2.0, -(pitchStart - expressionReferencePitch) / pitchDamping);\n                    }\n                    const pitchExpressionEnd: number = Math.pow(2.0, -(pitchEnd - expressionReferencePitch) / pitchDamping);\n                    tone.prevPitchExpressions[i] = pitchExpressionEnd;\n                    expressionStart *= pitchExpressionStart;\n                    expressionEnd *= pitchExpressionEnd;\n\n                    totalCarrierExpression += amplitudeCurveEnd;\n                } else {\n                    // modulator\n                    expressionStart *= Config.sineWaveLength * 1.5;\n                    expressionEnd *= Config.sineWaveLength * 1.5;\n\n                    sineExpressionBoost *= 1.0 - Math.min(1.0, instrument.operators[i].amplitude / 15);\n                }\n\n                expressionStart *= envelopeStarts[EnvelopeComputeIndex.operatorAmplitude0 + i];\n                expressionEnd *= envelopeEnds[EnvelopeComputeIndex.operatorAmplitude0 + i];\n\n                // Check for mod-related volume delta\n                // @jummbus - This amplification is also applied to modulator FM operators which distorts the sound.\n                // The fix is to apply this only to carriers, but as this is a legacy bug and it can cause some interesting sounds, it's left in.\n                // You can use the mix volume modulator instead to avoid this effect.\n\n                if (this.isModActive(Config.modulators.dictionary[\"note volume\"].index, channelIndex, tone.instrumentIndex)) {\n                    // Linear falloff below 0, normal volume formula above 0. Seems to work best for scaling since the normal volume mult formula has a big gap from -25 to -24.\n                    const startVal: number = this.getModValue(Config.modulators.dictionary[\"note volume\"].index, channelIndex, tone.instrumentIndex, false);\n                    const endVal: number = this.getModValue(Config.modulators.dictionary[\"note volume\"].index, channelIndex, tone.instrumentIndex, true);\n                    expressionStart *= ((startVal <= 0) ? ((startVal + Config.volumeRange / 2) / (Config.volumeRange / 2)) : Synth.instrumentVolumeToVolumeMult(startVal));\n                    expressionEnd *= ((endVal <= 0) ? ((endVal + Config.volumeRange / 2) / (Config.volumeRange / 2)) : Synth.instrumentVolumeToVolumeMult(endVal));\n                }\n\n                tone.operatorExpressions[i] = expressionStart;\n                tone.operatorExpressionDeltas[i] = (expressionEnd - expressionStart) / roundedSamplesPerTick;\n\n            }\n\n            sineExpressionBoost *= (Math.pow(2.0, (2.0 - 1.4 * instrument.feedbackAmplitude / 15.0)) - 1.0) / 3.0;\n            sineExpressionBoost *= 1.0 - Math.min(1.0, Math.max(0.0, totalCarrierExpression - 1) / 2.0);\n            sineExpressionBoost = 1.0 + sineExpressionBoost * 3.0;\n            const expressionStart: number = baseExpression * sineExpressionBoost * noteFilterExpression * fadeExpressionStart * chordExpressionStart * envelopeStarts[EnvelopeComputeIndex.noteVolume];\n            const expressionEnd: number = baseExpression * sineExpressionBoost * noteFilterExpression * fadeExpressionEnd * chordExpressionEnd * envelopeEnds[EnvelopeComputeIndex.noteVolume];\n            tone.expression = expressionStart;\n            tone.expressionDelta = (expressionEnd - expressionStart) / roundedSamplesPerTick;\n\n\n            let useFeedbackAmplitudeStart: number = instrument.feedbackAmplitude;\n            let useFeedbackAmplitudeEnd: number = instrument.feedbackAmplitude;\n            if (this.isModActive(Config.modulators.dictionary[\"fm feedback\"].index, channelIndex, tone.instrumentIndex)) {\n                useFeedbackAmplitudeStart *= this.getModValue(Config.modulators.dictionary[\"fm feedback\"].index, channelIndex, tone.instrumentIndex, false) / 15.0;\n                useFeedbackAmplitudeEnd *= this.getModValue(Config.modulators.dictionary[\"fm feedback\"].index, channelIndex, tone.instrumentIndex, true) / 15.0;\n            }\n\n            let feedbackAmplitudeStart: number = Config.sineWaveLength * 0.3 * useFeedbackAmplitudeStart / 15.0;\n            const feedbackAmplitudeEnd: number = Config.sineWaveLength * 0.3 * useFeedbackAmplitudeEnd / 15.0;\n\n            let feedbackStart: number = feedbackAmplitudeStart * envelopeStarts[EnvelopeComputeIndex.feedbackAmplitude];\n            let feedbackEnd: number = feedbackAmplitudeEnd * envelopeEnds[EnvelopeComputeIndex.feedbackAmplitude];\n            tone.feedbackMult = feedbackStart;\n            tone.feedbackDelta = (feedbackEnd - feedbackStart) / roundedSamplesPerTick;\n\n\n        } else {\n            const freqEndRatio: number = Math.pow(2.0, (intervalEnd - intervalStart) * intervalScale / 12.0);\n\t\t\tconst basePhaseDeltaScale: number = Math.pow(freqEndRatio, 1.0 / roundedSamplesPerTick);\n\t\t\t\n            let pitch: number = tone.pitches[0];\n            if (tone.pitchCount > 1 && (chord.arpeggiates || chord.customInterval)) {\n                const arpeggio: number = Math.floor(instrumentState.arpTime / Config.ticksPerArpeggio);\n                if (chord.customInterval) {\n                    const intervalOffset: number = tone.pitches[1 + getArpeggioPitchIndex(tone.pitchCount - 1, instrument.fastTwoNoteArp, arpeggio)] - tone.pitches[0];\n                    specialIntervalMult = Math.pow(2.0, intervalOffset / 12.0);\n                    tone.specialIntervalExpressionMult = Math.pow(2.0, -intervalOffset / pitchDamping);\n                } else {\n                    pitch = tone.pitches[getArpeggioPitchIndex(tone.pitchCount, instrument.fastTwoNoteArp, arpeggio)];\n                }\n            }\n\n            const startPitch: number = basePitch + (pitch + intervalStart) * intervalScale;\n            const endPitch: number = basePitch + (pitch + intervalEnd) * intervalScale;\n            let pitchExpressionStart: number;\n            // TODO: use the second element of prevPitchExpressions for the unison voice, compute a separate expression delta for it.\n            if (tone.prevPitchExpressions[0] != null) {\n                pitchExpressionStart = tone.prevPitchExpressions[0]!;\n            } else {\n                pitchExpressionStart = Math.pow(2.0, -(startPitch - expressionReferencePitch) / pitchDamping);\n            }\n            const pitchExpressionEnd: number = Math.pow(2.0, -(endPitch - expressionReferencePitch) / pitchDamping);\n            tone.prevPitchExpressions[0] = pitchExpressionEnd;\n            let settingsExpressionMult: number = baseExpression * noteFilterExpression;\n\n            if (instrument.type == InstrumentType.noise) {\n                settingsExpressionMult *= Config.chipNoises[instrument.chipNoise].expression;\n            }\n            if (instrument.type == InstrumentType.chip) {\n                settingsExpressionMult *= Config.chipWaves[instrument.chipWave].expression;\n            }\n            if (instrument.type == InstrumentType.pwm) {\n                const basePulseWidth: number = getPulseWidthRatio(instrument.pulseWidth);\n\n                // Check for PWM mods to this instrument\n                let pulseWidthModStart: number = basePulseWidth;\n                let pulseWidthModEnd: number = basePulseWidth;\n                if (this.isModActive(Config.modulators.dictionary[\"pulse width\"].index, channelIndex, tone.instrumentIndex)) {\n                    pulseWidthModStart = (this.getModValue(Config.modulators.dictionary[\"pulse width\"].index, channelIndex, tone.instrumentIndex, false)) / (Config.pulseWidthRange * 2);\n                    pulseWidthModEnd = (this.getModValue(Config.modulators.dictionary[\"pulse width\"].index, channelIndex, tone.instrumentIndex, true)) / (Config.pulseWidthRange * 2);\n                }\n\n                const pulseWidthStart: number = pulseWidthModStart * envelopeStarts[EnvelopeComputeIndex.pulseWidth];\n                const pulseWidthEnd: number = pulseWidthModEnd * envelopeEnds[EnvelopeComputeIndex.pulseWidth];\n                tone.pulseWidth = pulseWidthStart;\n                tone.pulseWidthDelta = (pulseWidthEnd - pulseWidthStart) / roundedSamplesPerTick;\n            }\n            if (instrument.type == InstrumentType.pickedString) {\n                // Check for sustain mods\n                let useSustainStart: number = instrument.stringSustain;\n                let useSustainEnd: number = instrument.stringSustain;\n                if (this.isModActive(Config.modulators.dictionary[\"sustain\"].index, channelIndex, tone.instrumentIndex)) {\n                    useSustainStart = this.getModValue(Config.modulators.dictionary[\"sustain\"].index, channelIndex, tone.instrumentIndex, false);\n                    useSustainEnd = this.getModValue(Config.modulators.dictionary[\"sustain\"].index, channelIndex, tone.instrumentIndex, true);\n                }\n\n                tone.stringSustainStart = useSustainStart;\n                tone.stringSustainEnd = useSustainEnd;\n\n                // Increase expression to compensate for string decay.\n                settingsExpressionMult *= Math.pow(2.0, 0.7 * (1.0 - useSustainStart / (Config.stringSustainRange - 1)));\n\n            }\n\n            const startFreq: number = Instrument.frequencyFromPitch(startPitch);\n            if (instrument.type == InstrumentType.chip || instrument.type == InstrumentType.customChipWave || instrument.type == InstrumentType.harmonics || instrument.type == InstrumentType.pickedString) {\n                // These instruments have two waves at different frequencies for the unison feature.\n                const unison: Unison = Config.unisons[instrument.unison];\n                const voiceCountExpression: number = (instrument.type == InstrumentType.pickedString) ? 1 : unison.voices / 2.0;\n                settingsExpressionMult *= unison.expression * voiceCountExpression;\n                const unisonEnvelopeStart = envelopeStarts[EnvelopeComputeIndex.unison];\n                const unisonEnvelopeEnd = envelopeEnds[EnvelopeComputeIndex.unison];\n                const unisonAStart: number = Math.pow(2.0, (unison.offset + unison.spread) * unisonEnvelopeStart / 12.0);\n                const unisonAEnd: number = Math.pow(2.0, (unison.offset + unison.spread) * unisonEnvelopeEnd / 12.0);\n                const unisonBStart: number = Math.pow(2.0, (unison.offset - unison.spread) * unisonEnvelopeStart / 12.0) * specialIntervalMult;\n                const unisonBEnd: number = Math.pow(2.0, (unison.offset - unison.spread) * unisonEnvelopeEnd / 12.0) * specialIntervalMult;\n                tone.phaseDeltas[0] = startFreq * sampleTime * unisonAStart;\n                tone.phaseDeltas[1] = startFreq * sampleTime * unisonBStart;\n                tone.phaseDeltaScales[0] = basePhaseDeltaScale * Math.pow(unisonAEnd / unisonAStart, 1.0 / roundedSamplesPerTick);\n                tone.phaseDeltaScales[1] = basePhaseDeltaScale * Math.pow(unisonBEnd / unisonBStart, 1.0 / roundedSamplesPerTick);\n            } else {\n                tone.phaseDeltas[0] = startFreq * sampleTime;\n                tone.phaseDeltaScales[0] = basePhaseDeltaScale;\n            }\n\n            // TODO: make expressionStart and expressionEnd variables earlier and modify those\n\t\t\t// instead of these supersawExpression variables.\n\t\t\tlet supersawExpressionStart: number = 1.0;\n\t\t\tlet supersawExpressionEnd: number = 1.0;\n\t\t\tif (instrument.type == InstrumentType.supersaw) {\n\t\t\t\tconst minFirstVoiceAmplitude: number = 1.0 / Math.sqrt(Config.supersawVoiceCount);\n\t\t\t\t\n                // Dynamism mods\n                let useDynamismStart: number = instrument.supersawDynamism / Config.supersawDynamismMax;\n                let useDynamismEnd: number = instrument.supersawDynamism / Config.supersawDynamismMax;\n                if (this.isModActive(Config.modulators.dictionary[\"dynamism\"].index, channelIndex, tone.instrumentIndex)) {\n                    useDynamismStart = (this.getModValue(Config.modulators.dictionary[\"dynamism\"].index, channelIndex, tone.instrumentIndex, false)) / Config.supersawDynamismMax;\n                    useDynamismEnd = (this.getModValue(Config.modulators.dictionary[\"dynamism\"].index, channelIndex, tone.instrumentIndex, true)) / Config.supersawDynamismMax;\n                }\n\n\t\t\t\tconst curvedDynamismStart: number = 1.0 - Math.pow(Math.max(0.0, 1.0 - useDynamismStart * envelopeStarts[EnvelopeComputeIndex.supersawDynamism]), 0.2);\n\t\t\t\tconst curvedDynamismEnd:   number = 1.0 - Math.pow(Math.max(0.0, 1.0 - useDynamismEnd * envelopeEnds[  EnvelopeComputeIndex.supersawDynamism]), 0.2);\n\t\t\t\tconst firstVoiceAmplitudeStart: number = Math.pow(2.0, Math.log2(minFirstVoiceAmplitude) * curvedDynamismStart);\n\t\t\t\tconst firstVoiceAmplitudeEnd:   number = Math.pow(2.0, Math.log2(minFirstVoiceAmplitude) * curvedDynamismEnd);\n\n\t\t\t\tconst dynamismStart: number = Math.sqrt((1.0 / Math.pow(firstVoiceAmplitudeStart, 2.0) - 1.0) / (Config.supersawVoiceCount - 1.0));\n\t\t\t\tconst dynamismEnd:   number = Math.sqrt((1.0 / Math.pow(firstVoiceAmplitudeEnd, 2.0) - 1.0) / (Config.supersawVoiceCount - 1.0));\n\t\t\t\ttone.supersawDynamism = dynamismStart;\n\t\t\t\ttone.supersawDynamismDelta = (dynamismEnd - dynamismStart) / roundedSamplesPerTick;\n\t\t\t\t\n\t\t\t\tconst initializeSupersaw: boolean = (tone.supersawDelayIndex == -1);\n\t\t\t\tif (initializeSupersaw) {\n\t\t\t\t\t// Goal: generate sawtooth phases such that the combined initial amplitude\n\t\t\t\t\t// cancel out to minimize pop. Algorithm: generate sorted phases, iterate over\n\t\t\t\t\t// their sawtooth drop points to find a combined zero crossing, then offset the\n\t\t\t\t\t// phases so they start there.\n\t\t\t\t\t\n\t\t\t\t\t// Generate random phases in ascending order by adding positive randomly\n\t\t\t\t\t// sized gaps between adjacent phases. For a proper distribution of random\n\t\t\t\t\t// events, the gaps sizes should be an \"exponential distribution\", which is\n\t\t\t\t\t// just: -Math.log(Math.random()). At the end, normalize the phases to a 0-1\n\t\t\t\t\t// range by dividing by the final value of the accumulator.\n\t\t\t\t\tlet accumulator: number = 0.0;\n\t\t\t\t\tfor (let i: number = 0; i < Config.supersawVoiceCount; i++) {\n\t\t\t\t\t\ttone.phases[i] = accumulator;\n\t\t\t\t\t\taccumulator += -Math.log(Math.random());\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tconst amplitudeSum: number = 1.0 + (Config.supersawVoiceCount - 1.0) * dynamismStart;\n\t\t\t\t\tconst slope: number = amplitudeSum;\n\t\t\t\t\t\n\t\t\t\t\t// Find the initial amplitude of the sum of sawtooths with the normalized\n\t\t\t\t\t// set of phases.\n\t\t\t\t\tlet sample: number = 0.0;\n\t\t\t\t\tfor (let i: number = 0; i < Config.supersawVoiceCount; i++) {\n\t\t\t\t\t\tconst amplitude: number = (i == 0) ? 1.0 : dynamismStart;\n\t\t\t\t\t\tconst normalizedPhase: number = tone.phases[i] / accumulator;\n\t\t\t\t\t\ttone.phases[i] = normalizedPhase;\n\t\t\t\t\t\tsample += (normalizedPhase - 0.5) * amplitude;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// Find the phase of the zero crossing of the sum of the sawtooths. You can\n\t\t\t\t\t// use a constant slope and the distance between sawtooth drops to determine if\n\t\t\t\t\t// the zero crossing occurs between them. Note that a small phase means that\n\t\t\t\t\t// the corresponding drop for that wave is far away, and a big phase means the\n\t\t\t\t\t// drop is nearby, so to iterate forward through the drops we iterate backward\n\t\t\t\t\t// through the phases.\n\t\t\t\t\tlet zeroCrossingPhase: number = 1.0;\n\t\t\t\t\tlet prevDrop: number = 0.0;\n\t\t\t\t\tfor (let i: number = Config.supersawVoiceCount - 1; i >= 0; i--) {\n\t\t\t\t\t\tconst nextDrop: number = 1.0 - tone.phases[i];\n\t\t\t\t\t\tconst phaseDelta: number = nextDrop - prevDrop;\n\t\t\t\t\t\tif (sample < 0.0) {\n\t\t\t\t\t\t\tconst distanceToZeroCrossing: number = -sample / slope;\n\t\t\t\t\t\t\tif (distanceToZeroCrossing < phaseDelta) {\n\t\t\t\t\t\t\t\tzeroCrossingPhase = prevDrop + distanceToZeroCrossing;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst amplitude: number = (i == 0) ? 1.0 : dynamismStart;\n\t\t\t\t\t\tsample += phaseDelta * slope - amplitude;\n\t\t\t\t\t\tprevDrop = nextDrop;\n\t\t\t\t\t}\n\t\t\t\t\tfor (let i: number = 0; i < Config.supersawVoiceCount; i++) {\n\t\t\t\t\t\ttone.phases[i] += zeroCrossingPhase;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// Randomize the (initially sorted) order of the phases (aside from the\n\t\t\t\t\t// first one) so that they don't correlate to the detunes that are also\n\t\t\t\t\t// based on index.\n\t\t\t\t\tfor (let i: number = 1; i < Config.supersawVoiceCount - 1; i++) {\n\t\t\t\t\t\tconst swappedIndex: number = i + Math.floor(Math.random() * (Config.supersawVoiceCount - i));\n\t\t\t\t\t\tconst temp: number = tone.phases[i];\n\t\t\t\t\t\ttone.phases[i] = tone.phases[swappedIndex];\n\t\t\t\t\t\ttone.phases[swappedIndex] = temp;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tconst baseSpreadSlider: number = instrument.supersawSpread / Config.supersawSpreadMax;\n\t\t\t\t// Spread mods\n\t\t\t\tlet useSpreadStart: number = baseSpreadSlider;\n\t\t\t\tlet useSpreadEnd:   number = baseSpreadSlider;\n                if (this.isModActive(Config.modulators.dictionary[\"spread\"].index, channelIndex, tone.instrumentIndex)) {\n                    useSpreadStart = (this.getModValue(Config.modulators.dictionary[\"spread\"].index, channelIndex, tone.instrumentIndex, false)) / Config.supersawSpreadMax;\n                    useSpreadEnd = (this.getModValue(Config.modulators.dictionary[\"spread\"].index, channelIndex, tone.instrumentIndex, true)) / Config.supersawSpreadMax;\n                }\n                \n\t\t\t\tconst spreadSliderStart: number = useSpreadStart * envelopeStarts[EnvelopeComputeIndex.supersawSpread];\n\t\t\t\tconst spreadSliderEnd:   number = useSpreadEnd * envelopeEnds[  EnvelopeComputeIndex.supersawSpread];\n\t\t\t\t// Just use the average detune for the current tick in the below loop.\n\t\t\t\tconst averageSpreadSlider: number = (spreadSliderStart + spreadSliderEnd) * 0.5;\n\t\t\t\tconst curvedSpread: number = Math.pow(1.0 - Math.sqrt(Math.max(0.0, 1.0 - averageSpreadSlider)), 1.75);\n\t\t\t\tfor (let i = 0; i < Config.supersawVoiceCount; i++) {\n\t\t\t\t\t// Spread out the detunes around the center;\n\t\t\t\t\tconst offset: number = (i == 0) ? 0.0 : Math.pow((((i + 1) >> 1) - 0.5 + 0.025 * ((i & 2) - 1)) / (Config.supersawVoiceCount >> 1), 1.1) * ((i & 1) * 2 - 1);\n\t\t\t\t\ttone.supersawUnisonDetunes[i] = Math.pow(2.0, curvedSpread * offset / 12.0);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tconst baseShape: number = instrument.supersawShape / Config.supersawShapeMax;\n\t\t\t\t// Saw shape mods\n\t\t\t\tlet useShapeStart: number = baseShape * envelopeStarts[EnvelopeComputeIndex.supersawShape];\n\t\t\t\tlet useShapeEnd:   number = baseShape * envelopeEnds[  EnvelopeComputeIndex.supersawShape];\n                if (this.isModActive(Config.modulators.dictionary[\"saw shape\"].index, channelIndex, tone.instrumentIndex)) {\n                    useShapeStart = (this.getModValue(Config.modulators.dictionary[\"saw shape\"].index, channelIndex, tone.instrumentIndex, false)) / Config.supersawShapeMax;\n                    useShapeEnd = (this.getModValue(Config.modulators.dictionary[\"saw shape\"].index, channelIndex, tone.instrumentIndex, true)) / Config.supersawShapeMax;\n                }\n\n\t\t\t\tconst shapeStart: number = useShapeStart * envelopeStarts[EnvelopeComputeIndex.supersawShape];\n\t\t\t\tconst shapeEnd:   number = useShapeEnd * envelopeEnds[  EnvelopeComputeIndex.supersawShape];\n\t\t\t\ttone.supersawShape = shapeStart;\n\t\t\t\ttone.supersawShapeDelta = (shapeEnd - shapeStart) / roundedSamplesPerTick;\n\t\t\t\t\n\t\t\t\tconst basePulseWidth: number = getPulseWidthRatio(instrument.pulseWidth);\n\t\t\t\t\n                // Check for PWM mods to this instrument\n                let pulseWidthModStart: number = basePulseWidth;\n                let pulseWidthModEnd: number = basePulseWidth;\n                if (this.isModActive(Config.modulators.dictionary[\"pulse width\"].index, channelIndex, tone.instrumentIndex)) {\n                    pulseWidthModStart = (this.getModValue(Config.modulators.dictionary[\"pulse width\"].index, channelIndex, tone.instrumentIndex, false)) / (Config.pulseWidthRange * 2);\n                    pulseWidthModEnd = (this.getModValue(Config.modulators.dictionary[\"pulse width\"].index, channelIndex, tone.instrumentIndex, true)) / (Config.pulseWidthRange * 2);\n                }\n\n                const pulseWidthStart: number = pulseWidthModStart * envelopeStarts[EnvelopeComputeIndex.pulseWidth];\n                const pulseWidthEnd: number = pulseWidthModEnd * envelopeEnds[EnvelopeComputeIndex.pulseWidth];\n\t\t\t\tconst phaseDeltaStart: number = (tone.supersawPrevPhaseDelta != null) ? tone.supersawPrevPhaseDelta : startFreq * sampleTime;\n\t\t\t\tconst phaseDeltaEnd: number = startFreq * sampleTime * freqEndRatio;\n\t\t\t\ttone.supersawPrevPhaseDelta = phaseDeltaEnd;\n\t\t\t\tconst delayLengthStart = pulseWidthStart / phaseDeltaStart;\n\t\t\t\tconst delayLengthEnd = pulseWidthEnd / phaseDeltaEnd;\n\t\t\t\ttone.supersawDelayLength = delayLengthStart;\n\t\t\t\ttone.supersawDelayLengthDelta = (delayLengthEnd - delayLengthStart) / roundedSamplesPerTick;\n\t\t\t\tconst minBufferLength: number = Math.ceil(Math.max(delayLengthStart, delayLengthEnd)) + 2;\n\t\t\t\t\n\t\t\t\tif (tone.supersawDelayLine == null || tone.supersawDelayLine.length <= minBufferLength) {\n\t\t\t\t\t// The delay line buffer will get reused for other tones so might as well\n\t\t\t\t\t// start off with a buffer size that is big enough for most notes.\n\t\t\t\t\tconst likelyMaximumLength: number = Math.ceil(0.5 * this.samplesPerSecond / Instrument.frequencyFromPitch(24));\n\t\t\t\t\tconst newDelayLine: Float32Array = new Float32Array(Synth.fittingPowerOfTwo(Math.max(likelyMaximumLength, minBufferLength)));\n\t\t\t\t\tif (!initializeSupersaw && tone.supersawDelayLine != null) {\n\t\t\t\t\t\t// If the tone has already started but the buffer needs to be reallocated,\n\t\t\t\t\t\t// transfer the old data to the new buffer.\n\t\t\t\t\t\tconst oldDelayBufferMask: number = (tone.supersawDelayLine.length - 1) >> 0;\n\t\t\t\t\t\tconst startCopyingFromIndex: number = tone.supersawDelayIndex;\n\t\t\t\t\t\tfor (let i: number = 0; i < tone.supersawDelayLine.length; i++) {\n\t\t\t\t\t\t\tnewDelayLine[i] = tone.supersawDelayLine[(startCopyingFromIndex + i) & oldDelayBufferMask];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\ttone.supersawDelayLine = newDelayLine;\n\t\t\t\t\ttone.supersawDelayIndex = tone.supersawDelayLine.length;\n\t\t\t\t} else if (initializeSupersaw) {\n\t\t\t\t\ttone.supersawDelayLine.fill(0.0);\n\t\t\t\t\ttone.supersawDelayIndex = tone.supersawDelayLine.length;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tconst pulseExpressionRatio: number = Config.pwmBaseExpression / Config.supersawBaseExpression;\n\t\t\t\tsupersawExpressionStart *= (1.0 + (pulseExpressionRatio - 1.0) * shapeStart) / Math.sqrt(1.0 + (Config.supersawVoiceCount - 1.0) * dynamismStart * dynamismStart);\n\t\t\t\tsupersawExpressionEnd *= (1.0 + (pulseExpressionRatio - 1.0) * shapeEnd) / Math.sqrt(1.0 + (Config.supersawVoiceCount - 1.0) * dynamismEnd * dynamismEnd);\n\t\t\t}\n\t\t\t\n\t\t\tlet expressionStart: number = settingsExpressionMult * fadeExpressionStart * chordExpressionStart * pitchExpressionStart * envelopeStarts[EnvelopeComputeIndex.noteVolume] * supersawExpressionStart;\n\t\t\tlet expressionEnd:   number = settingsExpressionMult * fadeExpressionEnd   * chordExpressionEnd   * pitchExpressionEnd   * envelopeEnds[  EnvelopeComputeIndex.noteVolume] * supersawExpressionEnd;\n\n            // Check for mod-related volume delta\n            if (this.isModActive(Config.modulators.dictionary[\"note volume\"].index, channelIndex, tone.instrumentIndex)) {\n                // Linear falloff below 0, normal volume formula above 0. Seems to work best for scaling since the normal volume mult formula has a big gap from -25 to -24.\n                const startVal: number = this.getModValue(Config.modulators.dictionary[\"note volume\"].index, channelIndex, tone.instrumentIndex, false);\n                const endVal: number = this.getModValue(Config.modulators.dictionary[\"note volume\"].index, channelIndex, tone.instrumentIndex, true)\n                expressionStart *= ((startVal <= 0) ? ((startVal + Config.volumeRange / 2) / (Config.volumeRange / 2)) : Synth.instrumentVolumeToVolumeMult(startVal));\n                expressionEnd *= ((endVal <= 0) ? ((endVal + Config.volumeRange / 2) / (Config.volumeRange / 2)) : Synth.instrumentVolumeToVolumeMult(endVal));\n            }\n\n            tone.expression = expressionStart;\n            tone.expressionDelta = (expressionEnd - expressionStart) / roundedSamplesPerTick;\n\n\n            if (instrument.type == InstrumentType.pickedString) {\n                let stringDecayStart: number;\n                if (tone.prevStringDecay != null) {\n                    stringDecayStart = tone.prevStringDecay;\n                } else {\n                    const sustainEnvelopeStart: number = tone.envelopeComputer.envelopeStarts[EnvelopeComputeIndex.stringSustain];\n                    stringDecayStart = 1.0 - Math.min(1.0, sustainEnvelopeStart * tone.stringSustainStart / (Config.stringSustainRange - 1));\n                }\n                const sustainEnvelopeEnd: number = tone.envelopeComputer.envelopeEnds[EnvelopeComputeIndex.stringSustain];\n                let stringDecayEnd: number = 1.0 - Math.min(1.0, sustainEnvelopeEnd * tone.stringSustainEnd / (Config.stringSustainRange - 1));\n                tone.prevStringDecay = stringDecayEnd;\n\n                const unison: Unison = Config.unisons[instrument.unison];\n                for (let i: number = tone.pickedStrings.length; i < unison.voices; i++) {\n                    tone.pickedStrings[i] = new PickedString();\n                }\n\n                if (tone.atNoteStart && !transition.continues && !tone.forceContinueAtStart) {\n                    for (const pickedString of tone.pickedStrings) {\n                        // Force the picked string to retrigger the attack impulse at the start of the note.\n                        pickedString.delayIndex = -1;\n                    }\n                }\n\n                for (let i: number = 0; i < unison.voices; i++) {\n                    \ttone.pickedStrings[i].update(this, instrumentState, tone, i, roundedSamplesPerTick, stringDecayStart, stringDecayEnd, instrument.stringSustainType);\n                }\n            }\n        }\n    }\n\n    public static getLFOAmplitude(instrument: Instrument, secondsIntoBar: number): number {\n        let effect: number = 0.0;\n        for (const vibratoPeriodSeconds of Config.vibratoTypes[instrument.vibratoType].periodsSeconds) {\n            effect += Math.sin(Math.PI * 2.0 * secondsIntoBar / vibratoPeriodSeconds);\n        }\n        return effect;\n    }\n\n\n    public static getInstrumentSynthFunction(instrument: Instrument): Function {\n        if (instrument.type == InstrumentType.fm) {\n            const fingerprint: string = instrument.algorithm + \"_\" + instrument.feedbackType;\n            if (Synth.fmSynthFunctionCache[fingerprint] == undefined) {\n                const synthSource: string[] = [];\n\n                for (const line of Synth.fmSourceTemplate) {\n                    if (line.indexOf(\"// CARRIER OUTPUTS\") != -1) {\n                        const outputs: string[] = [];\n                        for (let j: number = 0; j < Config.algorithms[instrument.algorithm].carrierCount; j++) {\n                            outputs.push(\"operator\" + j + \"Scaled\");\n                        }\n                        synthSource.push(line.replace(\"/*operator#Scaled*/\", outputs.join(\" + \")));\n                    } else if (line.indexOf(\"// INSERT OPERATOR COMPUTATION HERE\") != -1) {\n                        for (let j: number = Config.operatorCount - 1; j >= 0; j--) {\n                            for (const operatorLine of Synth.operatorSourceTemplate) {\n                                if (operatorLine.indexOf(\"/* + operator@Scaled*/\") != -1) {\n                                    let modulators = \"\";\n                                    for (const modulatorNumber of Config.algorithms[instrument.algorithm].modulatedBy[j]) {\n                                        modulators += \" + operator\" + (modulatorNumber - 1) + \"Scaled\";\n                                    }\n\n                                    const feedbackIndices: ReadonlyArray<number> = Config.feedbacks[instrument.feedbackType].indices[j];\n                                    if (feedbackIndices.length > 0) {\n                                        modulators += \" + feedbackMult * (\";\n                                        const feedbacks: string[] = [];\n                                        for (const modulatorNumber of feedbackIndices) {\n                                            feedbacks.push(\"operator\" + (modulatorNumber - 1) + \"Output\");\n                                        }\n                                        modulators += feedbacks.join(\" + \") + \")\";\n                                    }\n                                    synthSource.push(operatorLine.replace(/\\#/g, j + \"\").replace(\"/* + operator@Scaled*/\", modulators));\n                                } else {\n                                    synthSource.push(operatorLine.replace(/\\#/g, j + \"\"));\n                                }\n                            }\n                        }\n                    } else if (line.indexOf(\"#\") != -1) {\n                        for (let j: number = 0; j < Config.operatorCount; j++) {\n                            synthSource.push(line.replace(/\\#/g, j + \"\"));\n                        }\n                    } else {\n                        synthSource.push(line);\n                    }\n                }\n\n                //console.log(synthSource.join(\"\\n\"));\n\n                const wrappedFmSynth: string = \"return (synth, bufferIndex, roundedSamplesPerTick, tone, instrument) => {\" + synthSource.join(\"\\n\") + \"}\";\n\t\t\t\t\n\t\t\t\tSynth.fmSynthFunctionCache[fingerprint] = new Function(\"Config\", \"Synth\", wrappedFmSynth)(Config, Synth);\n\t\t\t\n            }\n            return Synth.fmSynthFunctionCache[fingerprint];\n        } else if (instrument.type == InstrumentType.chip) {\n            return Synth.chipSynth;\n        } else if (instrument.type == InstrumentType.customChipWave) {\n            return Synth.chipSynth;\n        } else if (instrument.type == InstrumentType.harmonics) {\n            return Synth.harmonicsSynth;\n        } else if (instrument.type == InstrumentType.pwm) {\n            return Synth.pulseWidthSynth;\n        } else if (instrument.type == InstrumentType.supersaw) {\n\t\t\treturn Synth.supersawSynth;\n        } else if (instrument.type == InstrumentType.pickedString) {\n            return Synth.pickedStringSynth;\n        } else if (instrument.type == InstrumentType.noise) {\n            return Synth.noiseSynth;\n        } else if (instrument.type == InstrumentType.spectrum) {\n            return Synth.spectrumSynth;\n        } else if (instrument.type == InstrumentType.drumset) {\n            return Synth.drumsetSynth;\n        } else if (instrument.type == InstrumentType.mod) {\n            return Synth.modSynth;\n        } else {\n            throw new Error(\"Unrecognized instrument type: \" + instrument.type);\n        }\n    }\n\n    private static chipSynth(synth: Synth, bufferIndex: number, roundedSamplesPerTick: number, tone: Tone, instrumentState: InstrumentState): void {\n        const aliases: boolean = (effectsIncludeDistortion(instrumentState.effects) && instrumentState.aliases);\n        const data: Float32Array = synth.tempMonoInstrumentSampleBuffer!;\n        const wave: Float32Array = instrumentState.wave!;\n        const volumeScale = instrumentState.volumeScale;\n\n        // For all but aliasing custom chip, the first sample is duplicated at the end, so don't double-count it.\n        const waveLength: number = (aliases && instrumentState.type == InstrumentType.customChipWave) ? wave.length : wave.length - 1;\n\n        const unisonSign: number = tone.specialIntervalExpressionMult * instrumentState.unison!.sign;\n        if (instrumentState.unison!.voices == 1 && !instrumentState.chord!.customInterval) tone.phases[1] = tone.phases[0];\n        let phaseDeltaA: number = tone.phaseDeltas[0] * waveLength;\n        let phaseDeltaB: number = tone.phaseDeltas[1] * waveLength;\n        const phaseDeltaScaleA: number = +tone.phaseDeltaScales[0];\n        const phaseDeltaScaleB: number = +tone.phaseDeltaScales[1];\n        let expression: number = +tone.expression;\n        const expressionDelta: number = +tone.expressionDelta;\n        let phaseA: number = (tone.phases[0] % 1) * waveLength;\n        let phaseB: number = (tone.phases[1] % 1) * waveLength;\n\n        const filters: DynamicBiquadFilter[] = tone.noteFilters;\n        const filterCount: number = tone.noteFilterCount | 0;\n        let initialFilterInput1: number = +tone.initialNoteFilterInput1;\n        let initialFilterInput2: number = +tone.initialNoteFilterInput2;\n        const applyFilters: Function = Synth.applyFilters;\n        let prevWaveIntegralA: number = 0;\n        let prevWaveIntegralB: number = 0;\n\n        if (!aliases) {\n            const phaseAInt: number = phaseA | 0;\n            const phaseBInt: number = phaseB | 0;\n            const indexA: number = phaseAInt % waveLength;\n            const indexB: number = phaseBInt % waveLength;\n            const phaseRatioA: number = phaseA - phaseAInt;\n            const phaseRatioB: number = phaseB - phaseBInt;\n            prevWaveIntegralA = +wave[indexA];\n            prevWaveIntegralB = +wave[indexB];\n            prevWaveIntegralA += (wave[indexA + 1] - prevWaveIntegralA) * phaseRatioA;\n            prevWaveIntegralB += (wave[indexB + 1] - prevWaveIntegralB) * phaseRatioB;\n        }\n\n        const stopIndex: number = bufferIndex + roundedSamplesPerTick;\n        for (let sampleIndex: number = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\n\n            phaseA += phaseDeltaA;\n            phaseB += phaseDeltaB;\n\n            let waveA: number;\n            let waveB: number;\n            let inputSample: number;\n\n            if (aliases) {\n                waveA = wave[(0 | phaseA) % waveLength];\n                waveB = wave[(0 | phaseB) % waveLength];\n                inputSample = waveA + waveB;\n            } else {\n                const phaseAInt: number = phaseA | 0;\n                const phaseBInt: number = phaseB | 0;\n                const indexA: number = phaseAInt % waveLength;\n                const indexB: number = phaseBInt % waveLength;\n                let nextWaveIntegralA: number = wave[indexA];\n                let nextWaveIntegralB: number = wave[indexB];\n                const phaseRatioA: number = phaseA - phaseAInt;\n                const phaseRatioB: number = phaseB - phaseBInt;\n                nextWaveIntegralA += (wave[indexA + 1] - nextWaveIntegralA) * phaseRatioA;\n                nextWaveIntegralB += (wave[indexB + 1] - nextWaveIntegralB) * phaseRatioB;\n                waveA = (nextWaveIntegralA - prevWaveIntegralA) / phaseDeltaA;\n                waveB = (nextWaveIntegralB - prevWaveIntegralB) / phaseDeltaB;\n                prevWaveIntegralA = nextWaveIntegralA;\n                prevWaveIntegralB = nextWaveIntegralB;\n                inputSample = waveA + waveB * unisonSign;\n            }\n\n            const sample: number = applyFilters(inputSample * volumeScale, initialFilterInput1, initialFilterInput2, filterCount, filters);\n            initialFilterInput2 = initialFilterInput1;\n            initialFilterInput1 = inputSample * volumeScale;\n\n            phaseDeltaA *= phaseDeltaScaleA;\n            phaseDeltaB *= phaseDeltaScaleB;\n\n            const output: number = sample * expression;\n            expression += expressionDelta;\n\n            data[sampleIndex] += output;\n        }\n\n        tone.phases[0] = phaseA / waveLength;\n        tone.phases[1] = phaseB / waveLength;\n        tone.phaseDeltas[0] = phaseDeltaA / waveLength;\n        tone.phaseDeltas[1] = phaseDeltaB / waveLength;\n        tone.expression = expression;\n\n        synth.sanitizeFilters(filters);\n        tone.initialNoteFilterInput1 = initialFilterInput1;\n        tone.initialNoteFilterInput2 = initialFilterInput2;\n    }\n\n    private static harmonicsSynth(synth: Synth, bufferIndex: number, roundedSamplesPerTick: number, tone: Tone, instrumentState: InstrumentState): void {\n        const data: Float32Array = synth.tempMonoInstrumentSampleBuffer!;\n        const wave: Float32Array = instrumentState.wave!;\n        const waveLength: number = wave.length - 1; // The first sample is duplicated at the end, don't double-count it.\n\n        const unisonSign: number = tone.specialIntervalExpressionMult * instrumentState.unison!.sign;\n        if (instrumentState.unison!.voices == 1 && !instrumentState.chord!.customInterval) tone.phases[1] = tone.phases[0];\n        let phaseDeltaA: number = tone.phaseDeltas[0] * waveLength;\n        let phaseDeltaB: number = tone.phaseDeltas[1] * waveLength;\n        const phaseDeltaScaleA: number = +tone.phaseDeltaScales[0];\n        const phaseDeltaScaleB: number = +tone.phaseDeltaScales[1];\n        let expression: number = +tone.expression;\n        const expressionDelta: number = +tone.expressionDelta;\n        let phaseA: number = (tone.phases[0] % 1) * waveLength;\n        let phaseB: number = (tone.phases[1] % 1) * waveLength;\n\n        const filters: DynamicBiquadFilter[] = tone.noteFilters;\n        const filterCount: number = tone.noteFilterCount | 0;\n        let initialFilterInput1: number = +tone.initialNoteFilterInput1;\n        let initialFilterInput2: number = +tone.initialNoteFilterInput2;\n        const applyFilters: Function = Synth.applyFilters;\n\n        const phaseAInt: number = phaseA | 0;\n        const phaseBInt: number = phaseB | 0;\n        const indexA: number = phaseAInt % waveLength;\n        const indexB: number = phaseBInt % waveLength;\n        const phaseRatioA: number = phaseA - phaseAInt;\n        const phaseRatioB: number = phaseB - phaseBInt;\n        let prevWaveIntegralA: number = +wave[indexA];\n        let prevWaveIntegralB: number = +wave[indexB];\n        prevWaveIntegralA += (wave[indexA + 1] - prevWaveIntegralA) * phaseRatioA;\n        prevWaveIntegralB += (wave[indexB + 1] - prevWaveIntegralB) * phaseRatioB;\n\n        const stopIndex: number = bufferIndex + roundedSamplesPerTick;\n        for (let sampleIndex: number = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\n\n            phaseA += phaseDeltaA;\n            phaseB += phaseDeltaB;\n\n            const phaseAInt: number = phaseA | 0;\n            const phaseBInt: number = phaseB | 0;\n            const indexA: number = phaseAInt % waveLength;\n            const indexB: number = phaseBInt % waveLength;\n            let nextWaveIntegralA: number = wave[indexA];\n            let nextWaveIntegralB: number = wave[indexB];\n            const phaseRatioA: number = phaseA - phaseAInt;\n            const phaseRatioB: number = phaseB - phaseBInt;\n            nextWaveIntegralA += (wave[indexA + 1] - nextWaveIntegralA) * phaseRatioA;\n            nextWaveIntegralB += (wave[indexB + 1] - nextWaveIntegralB) * phaseRatioB;\n            const waveA: number = (nextWaveIntegralA - prevWaveIntegralA) / phaseDeltaA;\n            const waveB: number = (nextWaveIntegralB - prevWaveIntegralB) / phaseDeltaB;\n            prevWaveIntegralA = nextWaveIntegralA;\n            prevWaveIntegralB = nextWaveIntegralB;\n\n            const inputSample: number = waveA + waveB * unisonSign;\n            const sample: number = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\n            initialFilterInput2 = initialFilterInput1;\n            initialFilterInput1 = inputSample;\n\n            phaseDeltaA *= phaseDeltaScaleA;\n            phaseDeltaB *= phaseDeltaScaleB;\n\n            const output: number = sample * expression;\n            expression += expressionDelta;\n\n            data[sampleIndex] += output;\n        }\n\n        tone.phases[0] = phaseA / waveLength;\n        tone.phases[1] = phaseB / waveLength;\n        tone.phaseDeltas[0] = phaseDeltaA / waveLength;\n        tone.phaseDeltas[1] = phaseDeltaB / waveLength;\n        tone.expression = expression;\n\n        synth.sanitizeFilters(filters);\n        tone.initialNoteFilterInput1 = initialFilterInput1;\n        tone.initialNoteFilterInput2 = initialFilterInput2;\n    }\n\n    private static pickedStringSynth(synth: Synth, bufferIndex: number, roundedSamplesPerTick: number, tone: Tone, instrumentState: InstrumentState): void {\n        // This algorithm is similar to the Karpluss-Strong algorithm in principle, but with an\n        // all-pass filter for dispersion and with more control over the impulse harmonics.\n        // The source code is processed as a string before being compiled, in order to\n        // handle the unison feature. If unison is disabled or set to none, then only one\n        // string voice is required, otherwise two string voices are required. We only want\n        // to compute the minimum possible number of string voices, so omit the code for\n        // processing extra ones if possible. Any line containing a \"#\" is duplicated for\n        // each required voice, replacing the \"#\" with the voice index.\n\n        const voiceCount: number = instrumentState.unison!.voices;\n        let pickedStringFunction: Function = Synth.pickedStringFunctionCache[voiceCount];\n        if (pickedStringFunction == undefined) {\n            let pickedStringSource: string = \"return (synth, bufferIndex, runLength, tone, instrumentState) => {\";\n\t\t\t\n            pickedStringSource += `\n\t\t\t\tconst Config = beepbox.Config;\n\t\t\t\tconst Synth = beepbox.Synth;\n\t\t\t\tconst data = synth.tempMonoInstrumentSampleBuffer;\n\t\t\t\t\n\t\t\t\tlet pickedString# = tone.pickedStrings[#];\n\t\t\t\tlet allPassSample# = +pickedString#.allPassSample;\n\t\t\t\tlet allPassPrevInput# = +pickedString#.allPassPrevInput;\n\t\t\t\tlet sustainFilterSample# = +pickedString#.sustainFilterSample;\n\t\t\t\tlet sustainFilterPrevOutput2# = +pickedString#.sustainFilterPrevOutput2;\n\t\t\t\tlet sustainFilterPrevInput1# = +pickedString#.sustainFilterPrevInput1;\n\t\t\t\tlet sustainFilterPrevInput2# = +pickedString#.sustainFilterPrevInput2;\n\t\t\t\tlet fractionalDelaySample# = +pickedString#.fractionalDelaySample;\n\t\t\t\tconst delayLine# = pickedString#.delayLine;\n\t\t\t\tconst delayBufferMask# = (delayLine#.length - 1) >> 0;\n\t\t\t\tlet delayIndex# = pickedString#.delayIndex|0;\n\t\t\t\tdelayIndex# = (delayIndex# & delayBufferMask#) + delayLine#.length;\n\t\t\t\tlet delayLength# = +pickedString#.prevDelayLength;\n\t\t\t\tconst delayLengthDelta# = +pickedString#.delayLengthDelta;\n\t\t\t\tlet allPassG# = +pickedString#.allPassG;\n\t\t\t\tlet sustainFilterA1# = +pickedString#.sustainFilterA1;\n\t\t\t\tlet sustainFilterA2# = +pickedString#.sustainFilterA2;\n\t\t\t\tlet sustainFilterB0# = +pickedString#.sustainFilterB0;\n\t\t\t\tlet sustainFilterB1# = +pickedString#.sustainFilterB1;\n\t\t\t\tlet sustainFilterB2# = +pickedString#.sustainFilterB2;\n\t\t\t\tconst allPassGDelta# = +pickedString#.allPassGDelta;\n\t\t\t\tconst sustainFilterA1Delta# = +pickedString#.sustainFilterA1Delta;\n\t\t\t\tconst sustainFilterA2Delta# = +pickedString#.sustainFilterA2Delta;\n\t\t\t\tconst sustainFilterB0Delta# = +pickedString#.sustainFilterB0Delta;\n\t\t\t\tconst sustainFilterB1Delta# = +pickedString#.sustainFilterB1Delta;\n\t\t\t\tconst sustainFilterB2Delta# = +pickedString#.sustainFilterB2Delta;\n\t\t\t\t\n\t\t\t\tlet expression = +tone.expression;\n\t\t\t\tconst expressionDelta = +tone.expressionDelta;\n\t\t\t\t\n\t\t\t\tconst unisonSign = tone.specialIntervalExpressionMult * instrumentState.unison.sign;\n\t\t\t\tconst delayResetOffset# = pickedString#.delayResetOffset|0;\n\t\t\t\t\n\t\t\t\tconst filters = tone.noteFilters;\n\t\t\t\tconst filterCount = tone.noteFilterCount|0;\n\t\t\t\tlet initialFilterInput1 = +tone.initialNoteFilterInput1;\n\t\t\t\tlet initialFilterInput2 = +tone.initialNoteFilterInput2;\n\t\t\t\tconst applyFilters = Synth.applyFilters;\n\t\t\t\t\n\t\t\t\tconst stopIndex = bufferIndex + runLength;\n\t\t\t\tfor (let sampleIndex = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\n\t\t\t\t\tconst targetSampleTime# = delayIndex# - delayLength#;\n\t\t\t\t\tconst lowerIndex# = (targetSampleTime# + 0.125) | 0; // Offset to improve stability of all-pass filter.\n\t\t\t\t\tconst upperIndex# = lowerIndex# + 1;\n\t\t\t\t\tconst fractionalDelay# = upperIndex# - targetSampleTime#;\n\t\t\t\t\tconst fractionalDelayG# = (1.0 - fractionalDelay#) / (1.0 + fractionalDelay#); // Inlined version of FilterCoefficients.prototype.allPass1stOrderFractionalDelay\n\t\t\t\t\tconst prevInput# = delayLine#[lowerIndex# & delayBufferMask#];\n\t\t\t\t\tconst input# = delayLine#[upperIndex# & delayBufferMask#];\n\t\t\t\t\tfractionalDelaySample# = fractionalDelayG# * input# + prevInput# - fractionalDelayG# * fractionalDelaySample#;\n\t\t\t\t\t\n\t\t\t\t\tallPassSample# = fractionalDelaySample# * allPassG# + allPassPrevInput# - allPassG# * allPassSample#;\n\t\t\t\t\tallPassPrevInput# = fractionalDelaySample#;\n\t\t\t\t\t\n\t\t\t\t\tconst sustainFilterPrevOutput1# = sustainFilterSample#;\n\t\t\t\t\tsustainFilterSample# = sustainFilterB0# * allPassSample# + sustainFilterB1# * sustainFilterPrevInput1# + sustainFilterB2# * sustainFilterPrevInput2# - sustainFilterA1# * sustainFilterSample# - sustainFilterA2# * sustainFilterPrevOutput2#;\n\t\t\t\t\tsustainFilterPrevOutput2# = sustainFilterPrevOutput1#;\n\t\t\t\t\tsustainFilterPrevInput2# = sustainFilterPrevInput1#;\n\t\t\t\t\tsustainFilterPrevInput1# = allPassSample#;\n\t\t\t\t\t\n\t\t\t\t\tdelayLine#[delayIndex# & delayBufferMask#] += sustainFilterSample#;\n\t\t\t\t\tdelayLine#[(delayIndex# + delayResetOffset#) & delayBufferMask#] = 0.0;\n\t\t\t\t\tdelayIndex#++;\n\t\t\t\t\t\n\t\t\t\t\tconst inputSample = (`\n\n            const sampleList: string[] = [];\n            for (let voice: number = 0; voice < voiceCount; voice++) {\n                sampleList.push(\"fractionalDelaySample\" + voice + (voice == 1 ? \" * unisonSign\" : \"\"));\n            }\n\n            pickedStringSource += sampleList.join(\" + \");\n\n            pickedStringSource += `) * expression;\n\t\t\t\t\tconst sample = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\n\t\t\t\t\tinitialFilterInput2 = initialFilterInput1;\n\t\t\t\t\tinitialFilterInput1 = inputSample;\n\t\t\t\t\tdata[sampleIndex] += sample;\n\t\t\t\t\t\n\t\t\t\t\texpression += expressionDelta;\n\t\t\t\t\tdelayLength# += delayLengthDelta#;\n\t\t\t\t\tallPassG# += allPassGDelta#;\n\t\t\t\t\tsustainFilterA1# += sustainFilterA1Delta#;\n\t\t\t\t\tsustainFilterA2# += sustainFilterA2Delta#;\n\t\t\t\t\tsustainFilterB0# += sustainFilterB0Delta#;\n\t\t\t\t\tsustainFilterB1# += sustainFilterB1Delta#;\n\t\t\t\t\tsustainFilterB2# += sustainFilterB2Delta#;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Avoid persistent denormal or NaN values in the delay buffers and filter history.\n\t\t\t\tconst epsilon = (1.0e-24);\n\t\t\t\tif (!Number.isFinite(allPassSample#) || Math.abs(allPassSample#) < epsilon) allPassSample# = 0.0;\n\t\t\t\tif (!Number.isFinite(allPassPrevInput#) || Math.abs(allPassPrevInput#) < epsilon) allPassPrevInput# = 0.0;\n\t\t\t\tif (!Number.isFinite(sustainFilterSample#) || Math.abs(sustainFilterSample#) < epsilon) sustainFilterSample# = 0.0;\n\t\t\t\tif (!Number.isFinite(sustainFilterPrevOutput2#) || Math.abs(sustainFilterPrevOutput2#) < epsilon) sustainFilterPrevOutput2# = 0.0;\n\t\t\t\tif (!Number.isFinite(sustainFilterPrevInput1#) || Math.abs(sustainFilterPrevInput1#) < epsilon) sustainFilterPrevInput1# = 0.0;\n\t\t\t\tif (!Number.isFinite(sustainFilterPrevInput2#) || Math.abs(sustainFilterPrevInput2#) < epsilon) sustainFilterPrevInput2# = 0.0;\n\t\t\t\tif (!Number.isFinite(fractionalDelaySample#) || Math.abs(fractionalDelaySample#) < epsilon) fractionalDelaySample# = 0.0;\n\t\t\t\tpickedString#.allPassSample = allPassSample#;\n\t\t\t\tpickedString#.allPassPrevInput = allPassPrevInput#;\n\t\t\t\tpickedString#.sustainFilterSample = sustainFilterSample#;\n\t\t\t\tpickedString#.sustainFilterPrevOutput2 = sustainFilterPrevOutput2#;\n\t\t\t\tpickedString#.sustainFilterPrevInput1 = sustainFilterPrevInput1#;\n\t\t\t\tpickedString#.sustainFilterPrevInput2 = sustainFilterPrevInput2#;\n\t\t\t\tpickedString#.fractionalDelaySample = fractionalDelaySample#;\n\t\t\t\tpickedString#.delayIndex = delayIndex#;\n\t\t\t\tpickedString#.prevDelayLength = delayLength#;\n\t\t\t\tpickedString#.allPassG = allPassG#;\n\t\t\t\tpickedString#.sustainFilterA1 = sustainFilterA1#;\n\t\t\t\tpickedString#.sustainFilterA2 = sustainFilterA2#;\n\t\t\t\tpickedString#.sustainFilterB0 = sustainFilterB0#;\n\t\t\t\tpickedString#.sustainFilterB1 = sustainFilterB1#;\n\t\t\t\tpickedString#.sustainFilterB2 = sustainFilterB2#;\n\t\t\t\t\n\t\t\t\ttone.expression = expression;\n\t\t\t\t\n\t\t\t\tsynth.sanitizeFilters(filters);\n\t\t\t\ttone.initialNoteFilterInput1 = initialFilterInput1;\n\t\t\t\ttone.initialNoteFilterInput2 = initialFilterInput2;\n\t\t\t}`\n\n            // Duplicate lines containing \"#\" for each voice and replace the \"#\" with the voice index.\n            pickedStringSource = pickedStringSource.replace(/^.*\\#.*$/mg, line => {\n                const lines = [];\n                for (let voice: number = 0; voice < voiceCount; voice++) {\n                    lines.push(line.replace(/\\#/g, String(voice)));\n                }\n                return lines.join(\"\\n\");\n            });\n\n            //console.log(pickedStringSource);\n            pickedStringFunction = new Function(\"Config\", \"Synth\", pickedStringSource)(Config, Synth);\n\t\t\tSynth.pickedStringFunctionCache[voiceCount] = pickedStringFunction;\n        }\n\n        pickedStringFunction(synth, bufferIndex, roundedSamplesPerTick, tone, instrumentState);\n    }\n\n    private static effectsSynth(synth: Synth, outputDataL: Float32Array, outputDataR: Float32Array, bufferIndex: number, runLength: number, instrumentState: InstrumentState): void {\n        // TODO: If automation is involved, don't assume sliders will stay at zero.\n        // @jummbus - ^ Correct, removed the non-zero checks as modulation can change them.\n\n        const usesDistortion: boolean = effectsIncludeDistortion(instrumentState.effects);\n        const usesBitcrusher: boolean = effectsIncludeBitcrusher(instrumentState.effects);\n        const usesEqFilter: boolean = instrumentState.eqFilterCount > 0;\n        const usesPanning: boolean = effectsIncludePanning(instrumentState.effects);\n        const usesChorus: boolean = effectsIncludeChorus(instrumentState.effects);\n        const usesEcho: boolean = effectsIncludeEcho(instrumentState.effects);\n        const usesReverb: boolean = effectsIncludeReverb(instrumentState.effects);\n        let signature: number = 0; if (usesDistortion) signature = signature | 1;\n        signature = signature << 1; if (usesBitcrusher) signature = signature | 1;\n        signature = signature << 1; if (usesEqFilter) signature = signature | 1;\n        signature = signature << 1; if (usesPanning) signature = signature | 1;\n        signature = signature << 1; if (usesChorus) signature = signature | 1;\n        signature = signature << 1; if (usesEcho) signature = signature | 1;\n        signature = signature << 1; if (usesReverb) signature = signature | 1;\n\n        let effectsFunction: Function = Synth.effectsFunctionCache[signature];\n        if (effectsFunction == undefined) {\n            let effectsSource: string = \"return (synth, outputDataL, outputDataR, bufferIndex, runLength, instrumentState) => {\";\n\n            const usesDelays: boolean = usesChorus || usesReverb || usesEcho;\n\n            effectsSource += `\n\t\t\t\tconst tempMonoInstrumentSampleBuffer = synth.tempMonoInstrumentSampleBuffer;\n\t\t\t\t\n\t\t\t\tlet mixVolume = +instrumentState.mixVolume;\n\t\t\t\tconst mixVolumeDelta = +instrumentState.mixVolumeDelta;`\n\n            if (usesDelays) {\n                effectsSource += `\n\t\t\t\t\n\t\t\t\tlet delayInputMult = +instrumentState.delayInputMult;\n\t\t\t\tconst delayInputMultDelta = +instrumentState.delayInputMultDelta;`\n            }\n\n            if (usesDistortion) {\n                // Distortion can sometimes create noticeable aliasing.\n                // It seems the established industry best practice for distortion antialiasing\n                // is to upsample the inputs (\"zero stuffing\" followed by a brick wall lowpass\n                // at the original nyquist frequency), perform the distortion, then downsample\n                // (the lowpass again followed by dropping in-between samples). This is\n                // \"mathematically correct\" in that it preserves only the intended frequencies,\n                // but it has several unfortunate tradeoffs depending on the choice of filter,\n                // introducing latency and/or time smearing, since no true brick wall filter\n                // exists. For the time being, I've opted to instead generate in-between input\n                // samples using fractional delay all-pass filters, and after distorting them,\n                // I \"downsample\" these with a simple weighted sum.\n\n                effectsSource += `\n\t\t\t\t\n\t\t\t\tconst distortionBaseVolume = +Config.distortionBaseVolume;\n\t\t\t\tlet distortion = instrumentState.distortion;\n\t\t\t\tconst distortionDelta = instrumentState.distortionDelta;\n\t\t\t\tlet distortionDrive = instrumentState.distortionDrive;\n\t\t\t\tconst distortionDriveDelta = instrumentState.distortionDriveDelta;\n\t\t\t\tconst distortionFractionalResolution = 4.0;\n\t\t\t\tconst distortionOversampleCompensation = distortionBaseVolume / distortionFractionalResolution;\n\t\t\t\tconst distortionFractionalDelay1 = 1.0 / distortionFractionalResolution;\n\t\t\t\tconst distortionFractionalDelay2 = 2.0 / distortionFractionalResolution;\n\t\t\t\tconst distortionFractionalDelay3 = 3.0 / distortionFractionalResolution;\n\t\t\t\tconst distortionFractionalDelayG1 = (1.0 - distortionFractionalDelay1) / (1.0 + distortionFractionalDelay1); // Inlined version of FilterCoefficients.prototype.allPass1stOrderFractionalDelay\n\t\t\t\tconst distortionFractionalDelayG2 = (1.0 - distortionFractionalDelay2) / (1.0 + distortionFractionalDelay2); // Inlined version of FilterCoefficients.prototype.allPass1stOrderFractionalDelay\n\t\t\t\tconst distortionFractionalDelayG3 = (1.0 - distortionFractionalDelay3) / (1.0 + distortionFractionalDelay3); // Inlined version of FilterCoefficients.prototype.allPass1stOrderFractionalDelay\n\t\t\t\tconst distortionNextOutputWeight1 = Math.cos(Math.PI * distortionFractionalDelay1) * 0.5 + 0.5;\n\t\t\t\tconst distortionNextOutputWeight2 = Math.cos(Math.PI * distortionFractionalDelay2) * 0.5 + 0.5;\n\t\t\t\tconst distortionNextOutputWeight3 = Math.cos(Math.PI * distortionFractionalDelay3) * 0.5 + 0.5;\n\t\t\t\tconst distortionPrevOutputWeight1 = 1.0 - distortionNextOutputWeight1;\n\t\t\t\tconst distortionPrevOutputWeight2 = 1.0 - distortionNextOutputWeight2;\n\t\t\t\tconst distortionPrevOutputWeight3 = 1.0 - distortionNextOutputWeight3;\n\t\t\t\t\n\t\t\t\tlet distortionFractionalInput1 = +instrumentState.distortionFractionalInput1;\n\t\t\t\tlet distortionFractionalInput2 = +instrumentState.distortionFractionalInput2;\n\t\t\t\tlet distortionFractionalInput3 = +instrumentState.distortionFractionalInput3;\n\t\t\t\tlet distortionPrevInput = +instrumentState.distortionPrevInput;\n\t\t\t\tlet distortionNextOutput = +instrumentState.distortionNextOutput;`\n            }\n\n            if (usesBitcrusher) {\n                effectsSource += `\n\t\t\t\t\n\t\t\t\tlet bitcrusherPrevInput = +instrumentState.bitcrusherPrevInput;\n\t\t\t\tlet bitcrusherCurrentOutput = +instrumentState.bitcrusherCurrentOutput;\n\t\t\t\tlet bitcrusherPhase = +instrumentState.bitcrusherPhase;\n\t\t\t\tlet bitcrusherPhaseDelta = +instrumentState.bitcrusherPhaseDelta;\n\t\t\t\tconst bitcrusherPhaseDeltaScale = +instrumentState.bitcrusherPhaseDeltaScale;\n\t\t\t\tlet bitcrusherScale = +instrumentState.bitcrusherScale;\n\t\t\t\tconst bitcrusherScaleScale = +instrumentState.bitcrusherScaleScale;\n\t\t\t\tlet bitcrusherFoldLevel = +instrumentState.bitcrusherFoldLevel;\n\t\t\t\tconst bitcrusherFoldLevelScale = +instrumentState.bitcrusherFoldLevelScale;`\n            }\n\n            if (usesEqFilter) {\n                effectsSource += `\n\t\t\t\t\n\t\t\t\tlet filters = instrumentState.eqFilters;\n\t\t\t\tconst filterCount = instrumentState.eqFilterCount|0;\n\t\t\t\tlet initialFilterInput1 = +instrumentState.initialEqFilterInput1;\n\t\t\t\tlet initialFilterInput2 = +instrumentState.initialEqFilterInput2;\n\t\t\t\tconst applyFilters = Synth.applyFilters;`\n            }\n\n            // The eq filter volume is also used to fade out the instrument state, so always include it.\n            effectsSource += `\n\t\t\t\t\n\t\t\t\tlet eqFilterVolume = +instrumentState.eqFilterVolume;\n\t\t\t\tconst eqFilterVolumeDelta = +instrumentState.eqFilterVolumeDelta;`\n\n            if (usesPanning) {\n                effectsSource += `\n\t\t\t\t\n\t\t\t\tconst panningMask = synth.panningDelayBufferMask >>> 0;\n\t\t\t\tconst panningDelayLine = instrumentState.panningDelayLine;\n\t\t\t\tlet panningDelayPos = instrumentState.panningDelayPos & panningMask;\n\t\t\t\tlet   panningVolumeL      = +instrumentState.panningVolumeL;\n\t\t\t\tlet   panningVolumeR      = +instrumentState.panningVolumeR;\n\t\t\t\tconst panningVolumeDeltaL = +instrumentState.panningVolumeDeltaL;\n\t\t\t\tconst panningVolumeDeltaR = +instrumentState.panningVolumeDeltaR;\n\t\t\t\tlet   panningOffsetL      = +instrumentState.panningOffsetL;\n\t\t\t\tlet   panningOffsetR      = +instrumentState.panningOffsetR;\n\t\t\t\tconst panningOffsetDeltaL = 1.0 - instrumentState.panningOffsetDeltaL;\n\t\t\t\tconst panningOffsetDeltaR = 1.0 - instrumentState.panningOffsetDeltaR;`\n            }\n\n            if (usesChorus) {\n                effectsSource += `\n\t\t\t\t\n\t\t\t\tconst chorusMask = synth.chorusDelayBufferMask >>> 0;\n\t\t\t\tconst chorusDelayLineL = instrumentState.chorusDelayLineL;\n\t\t\t\tconst chorusDelayLineR = instrumentState.chorusDelayLineR;\n\t\t\t\tinstrumentState.chorusDelayLineDirty = true;\n\t\t\t\tlet chorusDelayPos = instrumentState.chorusDelayPos & chorusMask;\n\t\t\t\t\n\t\t\t\tlet chorusVoiceMult = +instrumentState.chorusVoiceMult;\n\t\t\t\tconst chorusVoiceMultDelta = +instrumentState.chorusVoiceMultDelta;\n\t\t\t\tlet chorusCombinedMult = +instrumentState.chorusCombinedMult;\n\t\t\t\tconst chorusCombinedMultDelta = +instrumentState.chorusCombinedMultDelta;\n\t\t\t\t\n\t\t\t\tconst chorusDuration = +beepbox.Config.chorusPeriodSeconds;\n\t\t\t\tconst chorusAngle = Math.PI * 2.0 / (chorusDuration * synth.samplesPerSecond);\n\t\t\t\tconst chorusRange = synth.samplesPerSecond * beepbox.Config.chorusDelayRange;\n\t\t\t\tconst chorusOffset0 = synth.chorusDelayBufferSize - beepbox.Config.chorusDelayOffsets[0][0] * chorusRange;\n\t\t\t\tconst chorusOffset1 = synth.chorusDelayBufferSize - beepbox.Config.chorusDelayOffsets[0][1] * chorusRange;\n\t\t\t\tconst chorusOffset2 = synth.chorusDelayBufferSize - beepbox.Config.chorusDelayOffsets[0][2] * chorusRange;\n\t\t\t\tconst chorusOffset3 = synth.chorusDelayBufferSize - beepbox.Config.chorusDelayOffsets[1][0] * chorusRange;\n\t\t\t\tconst chorusOffset4 = synth.chorusDelayBufferSize - beepbox.Config.chorusDelayOffsets[1][1] * chorusRange;\n\t\t\t\tconst chorusOffset5 = synth.chorusDelayBufferSize - beepbox.Config.chorusDelayOffsets[1][2] * chorusRange;\n\t\t\t\tlet chorusPhase = instrumentState.chorusPhase % (Math.PI * 2.0);\n\t\t\t\tlet chorusTap0Index = chorusDelayPos + chorusOffset0 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[0][0]);\n\t\t\t\tlet chorusTap1Index = chorusDelayPos + chorusOffset1 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[0][1]);\n\t\t\t\tlet chorusTap2Index = chorusDelayPos + chorusOffset2 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[0][2]);\n\t\t\t\tlet chorusTap3Index = chorusDelayPos + chorusOffset3 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[1][0]);\n\t\t\t\tlet chorusTap4Index = chorusDelayPos + chorusOffset4 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[1][1]);\n\t\t\t\tlet chorusTap5Index = chorusDelayPos + chorusOffset5 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[1][2]);\n\t\t\t\tchorusPhase += chorusAngle * runLength;\n\t\t\t\tconst chorusTap0End = chorusDelayPos + chorusOffset0 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[0][0]) + runLength;\n\t\t\t\tconst chorusTap1End = chorusDelayPos + chorusOffset1 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[0][1]) + runLength;\n\t\t\t\tconst chorusTap2End = chorusDelayPos + chorusOffset2 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[0][2]) + runLength;\n\t\t\t\tconst chorusTap3End = chorusDelayPos + chorusOffset3 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[1][0]) + runLength;\n\t\t\t\tconst chorusTap4End = chorusDelayPos + chorusOffset4 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[1][1]) + runLength;\n\t\t\t\tconst chorusTap5End = chorusDelayPos + chorusOffset5 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[1][2]) + runLength;\n\t\t\t\tconst chorusTap0Delta = (chorusTap0End - chorusTap0Index) / runLength;\n\t\t\t\tconst chorusTap1Delta = (chorusTap1End - chorusTap1Index) / runLength;\n\t\t\t\tconst chorusTap2Delta = (chorusTap2End - chorusTap2Index) / runLength;\n\t\t\t\tconst chorusTap3Delta = (chorusTap3End - chorusTap3Index) / runLength;\n\t\t\t\tconst chorusTap4Delta = (chorusTap4End - chorusTap4Index) / runLength;\n\t\t\t\tconst chorusTap5Delta = (chorusTap5End - chorusTap5Index) / runLength;`\n            }\n\n            if (usesEcho) {\n                effectsSource += `\n\t\t\t\t\n\t\t\t\tlet echoMult = +instrumentState.echoMult;\n\t\t\t\tconst echoMultDelta = +instrumentState.echoMultDelta;\n\t\t\t\t\n\t\t\t\tconst echoDelayLineL = instrumentState.echoDelayLineL;\n\t\t\t\tconst echoDelayLineR = instrumentState.echoDelayLineR;\n\t\t\t\tconst echoMask = (echoDelayLineL.length - 1) >>> 0;\n\t\t\t\tinstrumentState.echoDelayLineDirty = true;\n\t\t\t\t\n\t\t\t\tlet echoDelayPos = instrumentState.echoDelayPos & echoMask;\n\t\t\t\tconst echoDelayOffsetStart = (echoDelayLineL.length - instrumentState.echoDelayOffsetStart) & echoMask;\n\t\t\t\tconst echoDelayOffsetEnd   = (echoDelayLineL.length - instrumentState.echoDelayOffsetEnd) & echoMask;\n\t\t\t\tlet echoDelayOffsetRatio = +instrumentState.echoDelayOffsetRatio;\n\t\t\t\tconst echoDelayOffsetRatioDelta = +instrumentState.echoDelayOffsetRatioDelta;\n\t\t\t\t\n\t\t\t\tconst echoShelfA1 = +instrumentState.echoShelfA1;\n\t\t\t\tconst echoShelfB0 = +instrumentState.echoShelfB0;\n\t\t\t\tconst echoShelfB1 = +instrumentState.echoShelfB1;\n\t\t\t\tlet echoShelfSampleL = +instrumentState.echoShelfSampleL;\n\t\t\t\tlet echoShelfSampleR = +instrumentState.echoShelfSampleR;\n\t\t\t\tlet echoShelfPrevInputL = +instrumentState.echoShelfPrevInputL;\n\t\t\t\tlet echoShelfPrevInputR = +instrumentState.echoShelfPrevInputR;`\n            }\n\n            if (usesReverb) {\n                effectsSource += `\n\t\t\t\t\n\t\t\t\tconst reverbMask = Config.reverbDelayBufferMask >>> 0; //TODO: Dynamic reverb buffer size.\n\t\t\t\tconst reverbDelayLine = instrumentState.reverbDelayLine;\n\t\t\t\tinstrumentState.reverbDelayLineDirty = true;\n\t\t\t\tlet reverbDelayPos = instrumentState.reverbDelayPos & reverbMask;\n\t\t\t\t\n\t\t\t\tlet reverb = +instrumentState.reverbMult;\n\t\t\t\tconst reverbDelta = +instrumentState.reverbMultDelta;\n\t\t\t\t\n\t\t\t\tconst reverbShelfA1 = +instrumentState.reverbShelfA1;\n\t\t\t\tconst reverbShelfB0 = +instrumentState.reverbShelfB0;\n\t\t\t\tconst reverbShelfB1 = +instrumentState.reverbShelfB1;\n\t\t\t\tlet reverbShelfSample0 = +instrumentState.reverbShelfSample0;\n\t\t\t\tlet reverbShelfSample1 = +instrumentState.reverbShelfSample1;\n\t\t\t\tlet reverbShelfSample2 = +instrumentState.reverbShelfSample2;\n\t\t\t\tlet reverbShelfSample3 = +instrumentState.reverbShelfSample3;\n\t\t\t\tlet reverbShelfPrevInput0 = +instrumentState.reverbShelfPrevInput0;\n\t\t\t\tlet reverbShelfPrevInput1 = +instrumentState.reverbShelfPrevInput1;\n\t\t\t\tlet reverbShelfPrevInput2 = +instrumentState.reverbShelfPrevInput2;\n\t\t\t\tlet reverbShelfPrevInput3 = +instrumentState.reverbShelfPrevInput3;`\n            }\n\n            effectsSource += `\n\t\t\t\t\n\t\t\t\tconst stopIndex = bufferIndex + runLength;\n\t\t\t\tfor (let sampleIndex = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\n\t\t\t\t\tlet sample = tempMonoInstrumentSampleBuffer[sampleIndex];\n\t\t\t\t\ttempMonoInstrumentSampleBuffer[sampleIndex] = 0.0;`\n\n            if (usesDistortion) {\n                effectsSource += `\n\t\t\t\t\t\n\t\t\t\t\tconst distortionReverse = 1.0 - distortion;\n\t\t\t\t\tconst distortionNextInput = sample * distortionDrive;\n\t\t\t\t\tsample = distortionNextOutput;\n\t\t\t\t\tdistortionNextOutput = distortionNextInput / (distortionReverse * Math.abs(distortionNextInput) + distortion);\n\t\t\t\t\tdistortionFractionalInput1 = distortionFractionalDelayG1 * distortionNextInput + distortionPrevInput - distortionFractionalDelayG1 * distortionFractionalInput1;\n\t\t\t\t\tdistortionFractionalInput2 = distortionFractionalDelayG2 * distortionNextInput + distortionPrevInput - distortionFractionalDelayG2 * distortionFractionalInput2;\n\t\t\t\t\tdistortionFractionalInput3 = distortionFractionalDelayG3 * distortionNextInput + distortionPrevInput - distortionFractionalDelayG3 * distortionFractionalInput3;\n\t\t\t\t\tconst distortionOutput1 = distortionFractionalInput1 / (distortionReverse * Math.abs(distortionFractionalInput1) + distortion);\n\t\t\t\t\tconst distortionOutput2 = distortionFractionalInput2 / (distortionReverse * Math.abs(distortionFractionalInput2) + distortion);\n\t\t\t\t\tconst distortionOutput3 = distortionFractionalInput3 / (distortionReverse * Math.abs(distortionFractionalInput3) + distortion);\n\t\t\t\t\tdistortionNextOutput += distortionOutput1 * distortionNextOutputWeight1 + distortionOutput2 * distortionNextOutputWeight2 + distortionOutput3 * distortionNextOutputWeight3;\n\t\t\t\t\tsample += distortionOutput1 * distortionPrevOutputWeight1 + distortionOutput2 * distortionPrevOutputWeight2 + distortionOutput3 * distortionPrevOutputWeight3;\n\t\t\t\t\tsample *= distortionOversampleCompensation;\n\t\t\t\t\tdistortionPrevInput = distortionNextInput;\n\t\t\t\t\tdistortion += distortionDelta;\n\t\t\t\t\tdistortionDrive += distortionDriveDelta;`\n            }\n\n            if (usesBitcrusher) {\n                effectsSource += `\n\t\t\t\t\t\n\t\t\t\t\tbitcrusherPhase += bitcrusherPhaseDelta;\n\t\t\t\t\tif (bitcrusherPhase < 1.0) {\n\t\t\t\t\t\tbitcrusherPrevInput = sample;\n\t\t\t\t\t\tsample = bitcrusherCurrentOutput;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbitcrusherPhase = bitcrusherPhase % 1.0;\n\t\t\t\t\t\tconst ratio = bitcrusherPhase / bitcrusherPhaseDelta;\n\t\t\t\t\t\t\n\t\t\t\t\t\tconst lerpedInput = sample + (bitcrusherPrevInput - sample) * ratio;\n\t\t\t\t\t\tbitcrusherPrevInput = sample;\n\t\t\t\t\t\t\n\t\t\t\t\t\tconst bitcrusherWrapLevel = bitcrusherFoldLevel * 4.0;\n\t\t\t\t\t\tconst wrappedSample = (((lerpedInput + bitcrusherFoldLevel) % bitcrusherWrapLevel) + bitcrusherWrapLevel) % bitcrusherWrapLevel;\n\t\t\t\t\t\tconst foldedSample = bitcrusherFoldLevel - Math.abs(bitcrusherFoldLevel * 2.0 - wrappedSample);\n\t\t\t\t\t\tconst scaledSample = foldedSample / bitcrusherScale;\n\t\t\t\t\t\tconst oldValue = bitcrusherCurrentOutput;\n\t\t\t\t\t\tconst newValue = (((scaledSample > 0 ? scaledSample + 1 : scaledSample)|0)-.5) * bitcrusherScale;\n\t\t\t\t\t\t\n\t\t\t\t\t\tsample = oldValue + (newValue - oldValue) * ratio;\n\t\t\t\t\t\tbitcrusherCurrentOutput = newValue;\n\t\t\t\t\t}\n\t\t\t\t\tbitcrusherPhaseDelta *= bitcrusherPhaseDeltaScale;\n\t\t\t\t\tbitcrusherScale *= bitcrusherScaleScale;\n\t\t\t\t\tbitcrusherFoldLevel *= bitcrusherFoldLevelScale;`\n            }\n\n            if (usesEqFilter) {\n                effectsSource += `\n\t\t\t\t\t\n\t\t\t\t\tconst inputSample = sample;\n\t\t\t\t\tsample = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\n\t\t\t\t\tinitialFilterInput2 = initialFilterInput1;\n\t\t\t\t\tinitialFilterInput1 = inputSample;`\n            }\n\n            // The eq filter volume is also used to fade out the instrument state, so always include it.\n            effectsSource += `\n\t\t\t\t\t\n\t\t\t\t\tsample *= eqFilterVolume;\n\t\t\t\t\teqFilterVolume += eqFilterVolumeDelta;`\n\n            if (usesPanning) {\n                effectsSource += `\n\t\t\t\t\t\n\t\t\t\t\tpanningDelayLine[panningDelayPos] = sample;\n\t\t\t\t\tconst panningRatioL  = panningOffsetL % 1;\n\t\t\t\t\tconst panningRatioR  = panningOffsetR % 1;\n\t\t\t\t\tconst panningTapLA   = panningDelayLine[(panningOffsetL) & panningMask];\n\t\t\t\t\tconst panningTapLB   = panningDelayLine[(panningOffsetL + 1) & panningMask];\n\t\t\t\t\tconst panningTapRA   = panningDelayLine[(panningOffsetR) & panningMask];\n\t\t\t\t\tconst panningTapRB   = panningDelayLine[(panningOffsetR + 1) & panningMask];\n\t\t\t\t\tconst panningTapL    = panningTapLA + (panningTapLB - panningTapLA) * panningRatioL;\n\t\t\t\t\tconst panningTapR    = panningTapRA + (panningTapRB - panningTapRA) * panningRatioR;\n\t\t\t\t\tlet sampleL = panningTapL * panningVolumeL;\n\t\t\t\t\tlet sampleR = panningTapR * panningVolumeR;\n\t\t\t\t\tpanningDelayPos = (panningDelayPos + 1) & panningMask;\n\t\t\t\t\tpanningVolumeL += panningVolumeDeltaL;\n\t\t\t\t\tpanningVolumeR += panningVolumeDeltaR;\n\t\t\t\t\tpanningOffsetL += panningOffsetDeltaL;\n\t\t\t\t\tpanningOffsetR += panningOffsetDeltaR;`\n            } else {\n                effectsSource += `\n\t\t\t\t\t\n\t\t\t\t\tlet sampleL = sample;\n\t\t\t\t\tlet sampleR = sample;`\n            }\n\n            if (usesChorus) {\n                effectsSource += `\n\t\t\t\t\t\n\t\t\t\t\tconst chorusTap0Ratio = chorusTap0Index % 1;\n\t\t\t\t\tconst chorusTap1Ratio = chorusTap1Index % 1;\n\t\t\t\t\tconst chorusTap2Ratio = chorusTap2Index % 1;\n\t\t\t\t\tconst chorusTap3Ratio = chorusTap3Index % 1;\n\t\t\t\t\tconst chorusTap4Ratio = chorusTap4Index % 1;\n\t\t\t\t\tconst chorusTap5Ratio = chorusTap5Index % 1;\n\t\t\t\t\tconst chorusTap0A = chorusDelayLineL[(chorusTap0Index) & chorusMask];\n\t\t\t\t\tconst chorusTap0B = chorusDelayLineL[(chorusTap0Index + 1) & chorusMask];\n\t\t\t\t\tconst chorusTap1A = chorusDelayLineL[(chorusTap1Index) & chorusMask];\n\t\t\t\t\tconst chorusTap1B = chorusDelayLineL[(chorusTap1Index + 1) & chorusMask];\n\t\t\t\t\tconst chorusTap2A = chorusDelayLineL[(chorusTap2Index) & chorusMask];\n\t\t\t\t\tconst chorusTap2B = chorusDelayLineL[(chorusTap2Index + 1) & chorusMask];\n\t\t\t\t\tconst chorusTap3A = chorusDelayLineR[(chorusTap3Index) & chorusMask];\n\t\t\t\t\tconst chorusTap3B = chorusDelayLineR[(chorusTap3Index + 1) & chorusMask];\n\t\t\t\t\tconst chorusTap4A = chorusDelayLineR[(chorusTap4Index) & chorusMask];\n\t\t\t\t\tconst chorusTap4B = chorusDelayLineR[(chorusTap4Index + 1) & chorusMask];\n\t\t\t\t\tconst chorusTap5A = chorusDelayLineR[(chorusTap5Index) & chorusMask];\n\t\t\t\t\tconst chorusTap5B = chorusDelayLineR[(chorusTap5Index + 1) & chorusMask];\n\t\t\t\t\tconst chorusTap0 = chorusTap0A + (chorusTap0B - chorusTap0A) * chorusTap0Ratio;\n\t\t\t\t\tconst chorusTap1 = chorusTap1A + (chorusTap1B - chorusTap1A) * chorusTap1Ratio;\n\t\t\t\t\tconst chorusTap2 = chorusTap2A + (chorusTap2B - chorusTap2A) * chorusTap2Ratio;\n\t\t\t\t\tconst chorusTap3 = chorusTap3A + (chorusTap3B - chorusTap3A) * chorusTap3Ratio;\n\t\t\t\t\tconst chorusTap4 = chorusTap4A + (chorusTap4B - chorusTap4A) * chorusTap4Ratio;\n\t\t\t\t\tconst chorusTap5 = chorusTap5A + (chorusTap5B - chorusTap5A) * chorusTap5Ratio;\n\t\t\t\t\tchorusDelayLineL[chorusDelayPos] = sampleL * delayInputMult;\n\t\t\t\t\tchorusDelayLineR[chorusDelayPos] = sampleR * delayInputMult;\n\t\t\t\t\tsampleL = chorusCombinedMult * (sampleL + chorusVoiceMult * (chorusTap1 - chorusTap0 - chorusTap2));\n\t\t\t\t\tsampleR = chorusCombinedMult * (sampleR + chorusVoiceMult * (chorusTap4 - chorusTap3 - chorusTap5));\n\t\t\t\t\tchorusDelayPos = (chorusDelayPos + 1) & chorusMask;\n\t\t\t\t\tchorusTap0Index += chorusTap0Delta;\n\t\t\t\t\tchorusTap1Index += chorusTap1Delta;\n\t\t\t\t\tchorusTap2Index += chorusTap2Delta;\n\t\t\t\t\tchorusTap3Index += chorusTap3Delta;\n\t\t\t\t\tchorusTap4Index += chorusTap4Delta;\n\t\t\t\t\tchorusTap5Index += chorusTap5Delta;\n\t\t\t\t\tchorusVoiceMult += chorusVoiceMultDelta;\n\t\t\t\t\tchorusCombinedMult += chorusCombinedMultDelta;`\n            }\n\n            if (usesEcho) {\n                effectsSource += `\n\t\t\t\t\t\n\t\t\t\t\tconst echoTapStartIndex = (echoDelayPos + echoDelayOffsetStart) & echoMask;\n\t\t\t\t\tconst echoTapEndIndex   = (echoDelayPos + echoDelayOffsetEnd  ) & echoMask;\n\t\t\t\t\tconst echoTapStartL = echoDelayLineL[echoTapStartIndex];\n\t\t\t\t\tconst echoTapEndL   = echoDelayLineL[echoTapEndIndex];\n\t\t\t\t\tconst echoTapStartR = echoDelayLineR[echoTapStartIndex];\n\t\t\t\t\tconst echoTapEndR   = echoDelayLineR[echoTapEndIndex];\n\t\t\t\t\tconst echoTapL = (echoTapStartL + (echoTapEndL - echoTapStartL) * echoDelayOffsetRatio) * echoMult;\n\t\t\t\t\tconst echoTapR = (echoTapStartR + (echoTapEndR - echoTapStartR) * echoDelayOffsetRatio) * echoMult;\n\t\t\t\t\t\n\t\t\t\t\techoShelfSampleL = echoShelfB0 * echoTapL + echoShelfB1 * echoShelfPrevInputL - echoShelfA1 * echoShelfSampleL;\n\t\t\t\t\techoShelfSampleR = echoShelfB0 * echoTapR + echoShelfB1 * echoShelfPrevInputR - echoShelfA1 * echoShelfSampleR;\n\t\t\t\t\techoShelfPrevInputL = echoTapL;\n\t\t\t\t\techoShelfPrevInputR = echoTapR;\n\t\t\t\t\tsampleL += echoShelfSampleL;\n\t\t\t\t\tsampleR += echoShelfSampleR;\n\t\t\t\t\t\n\t\t\t\t\techoDelayLineL[echoDelayPos] = sampleL * delayInputMult;\n\t\t\t\t\techoDelayLineR[echoDelayPos] = sampleR * delayInputMult;\n\t\t\t\t\techoDelayPos = (echoDelayPos + 1) & echoMask;\n\t\t\t\t\techoDelayOffsetRatio += echoDelayOffsetRatioDelta;\n\t\t\t\t\techoMult += echoMultDelta;\n                    `\n            }\n\n            if (usesReverb) {\n                effectsSource += `\n\t\t\t\t\t\n\t\t\t\t\t// Reverb, implemented using a feedback delay network with a Hadamard matrix and lowpass filters.\n\t\t\t\t\t// good ratios:    0.555235 + 0.618033 + 0.818 +   1.0 = 2.991268\n\t\t\t\t\t// Delay lengths:  3041     + 3385     + 4481  +  5477 = 16384 = 2^14\n\t\t\t\t\t// Buffer offsets: 3041    -> 6426   -> 10907 -> 16384\n\t\t\t\t\tconst reverbDelayPos1 = (reverbDelayPos +  3041) & reverbMask;\n\t\t\t\t\tconst reverbDelayPos2 = (reverbDelayPos +  6426) & reverbMask;\n\t\t\t\t\tconst reverbDelayPos3 = (reverbDelayPos + 10907) & reverbMask;\n\t\t\t\t\tconst reverbSample0 = (reverbDelayLine[reverbDelayPos]);\n\t\t\t\t\tconst reverbSample1 = reverbDelayLine[reverbDelayPos1];\n\t\t\t\t\tconst reverbSample2 = reverbDelayLine[reverbDelayPos2];\n\t\t\t\t\tconst reverbSample3 = reverbDelayLine[reverbDelayPos3];\n\t\t\t\t\tconst reverbTemp0 = -(reverbSample0 + sampleL) + reverbSample1;\n\t\t\t\t\tconst reverbTemp1 = -(reverbSample0 + sampleR) - reverbSample1;\n\t\t\t\t\tconst reverbTemp2 = -reverbSample2 + reverbSample3;\n\t\t\t\t\tconst reverbTemp3 = -reverbSample2 - reverbSample3;\n\t\t\t\t\tconst reverbShelfInput0 = (reverbTemp0 + reverbTemp2) * reverb;\n\t\t\t\t\tconst reverbShelfInput1 = (reverbTemp1 + reverbTemp3) * reverb;\n\t\t\t\t\tconst reverbShelfInput2 = (reverbTemp0 - reverbTemp2) * reverb;\n\t\t\t\t\tconst reverbShelfInput3 = (reverbTemp1 - reverbTemp3) * reverb;\n\t\t\t\t\treverbShelfSample0 = reverbShelfB0 * reverbShelfInput0 + reverbShelfB1 * reverbShelfPrevInput0 - reverbShelfA1 * reverbShelfSample0;\n\t\t\t\t\treverbShelfSample1 = reverbShelfB0 * reverbShelfInput1 + reverbShelfB1 * reverbShelfPrevInput1 - reverbShelfA1 * reverbShelfSample1;\n\t\t\t\t\treverbShelfSample2 = reverbShelfB0 * reverbShelfInput2 + reverbShelfB1 * reverbShelfPrevInput2 - reverbShelfA1 * reverbShelfSample2;\n\t\t\t\t\treverbShelfSample3 = reverbShelfB0 * reverbShelfInput3 + reverbShelfB1 * reverbShelfPrevInput3 - reverbShelfA1 * reverbShelfSample3;\n\t\t\t\t\treverbShelfPrevInput0 = reverbShelfInput0;\n\t\t\t\t\treverbShelfPrevInput1 = reverbShelfInput1;\n\t\t\t\t\treverbShelfPrevInput2 = reverbShelfInput2;\n\t\t\t\t\treverbShelfPrevInput3 = reverbShelfInput3;\n\t\t\t\t\treverbDelayLine[reverbDelayPos1] = reverbShelfSample0 * delayInputMult;\n\t\t\t\t\treverbDelayLine[reverbDelayPos2] = reverbShelfSample1 * delayInputMult;\n\t\t\t\t\treverbDelayLine[reverbDelayPos3] = reverbShelfSample2 * delayInputMult;\n\t\t\t\t\treverbDelayLine[reverbDelayPos ] = reverbShelfSample3 * delayInputMult;\n\t\t\t\t\treverbDelayPos = (reverbDelayPos + 1) & reverbMask;\n\t\t\t\t\tsampleL += reverbSample1 + reverbSample2 + reverbSample3;\n\t\t\t\t\tsampleR += reverbSample0 + reverbSample2 - reverbSample3;\n\t\t\t\t\treverb += reverbDelta;`\n            }\n\n            effectsSource += `\n\t\t\t\t\t\n\t\t\t\t\toutputDataL[sampleIndex] += sampleL * mixVolume;\n\t\t\t\t\toutputDataR[sampleIndex] += sampleR * mixVolume;\n\t\t\t\t\tmixVolume += mixVolumeDelta;`\n\n            if (usesDelays) {\n                effectsSource += `\n\t\t\t\t\t\n\t\t\t\t\tdelayInputMult += delayInputMultDelta;`\n            }\n\n            effectsSource += `\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tinstrumentState.mixVolume = mixVolume;\n\t\t\t\tinstrumentState.eqFilterVolume = eqFilterVolume;\n\t\t\t\t\n\t\t\t\t// Avoid persistent denormal or NaN values in the delay buffers and filter history.\n\t\t\t\tconst epsilon = (1.0e-24);`\n\n            if (usesDelays) {\n                effectsSource += `\n\t\t\t\t\n\t\t\t\tinstrumentState.delayInputMult = delayInputMult;`\n            }\n\n            if (usesDistortion) {\n                effectsSource += `\n\t\t\t\t\n\t\t\t\tinstrumentState.distortion = distortion;\n\t\t\t\tinstrumentState.distortionDrive = distortionDrive;\n\t\t\t\t\n\t\t\t\tif (!Number.isFinite(distortionFractionalInput1) || Math.abs(distortionFractionalInput1) < epsilon) distortionFractionalInput1 = 0.0;\n\t\t\t\tif (!Number.isFinite(distortionFractionalInput2) || Math.abs(distortionFractionalInput2) < epsilon) distortionFractionalInput2 = 0.0;\n\t\t\t\tif (!Number.isFinite(distortionFractionalInput3) || Math.abs(distortionFractionalInput3) < epsilon) distortionFractionalInput3 = 0.0;\n\t\t\t\tif (!Number.isFinite(distortionPrevInput) || Math.abs(distortionPrevInput) < epsilon) distortionPrevInput = 0.0;\n\t\t\t\tif (!Number.isFinite(distortionNextOutput) || Math.abs(distortionNextOutput) < epsilon) distortionNextOutput = 0.0;\n\t\t\t\t\n\t\t\t\tinstrumentState.distortionFractionalInput1 = distortionFractionalInput1;\n\t\t\t\tinstrumentState.distortionFractionalInput2 = distortionFractionalInput2;\n\t\t\t\tinstrumentState.distortionFractionalInput3 = distortionFractionalInput3;\n\t\t\t\tinstrumentState.distortionPrevInput = distortionPrevInput;\n\t\t\t\tinstrumentState.distortionNextOutput = distortionNextOutput;`\n            }\n\n            if (usesBitcrusher) {\n                effectsSource += `\n\t\t\t\t\t\n\t\t\t\tif (Math.abs(bitcrusherPrevInput) < epsilon) bitcrusherPrevInput = 0.0;\n\t\t\t\tif (Math.abs(bitcrusherCurrentOutput) < epsilon) bitcrusherCurrentOutput = 0.0;\n\t\t\t\tinstrumentState.bitcrusherPrevInput = bitcrusherPrevInput;\n\t\t\t\tinstrumentState.bitcrusherCurrentOutput = bitcrusherCurrentOutput;\n\t\t\t\tinstrumentState.bitcrusherPhase = bitcrusherPhase;\n\t\t\t\tinstrumentState.bitcrusherPhaseDelta = bitcrusherPhaseDelta;\n\t\t\t\tinstrumentState.bitcrusherScale = bitcrusherScale;\n\t\t\t\tinstrumentState.bitcrusherFoldLevel = bitcrusherFoldLevel;`\n\n            }\n\n            if (usesEqFilter) {\n                effectsSource += `\n\t\t\t\t\t\n\t\t\t\tsynth.sanitizeFilters(filters);\n\t\t\t\t// The filter input here is downstream from another filter so we\n\t\t\t\t// better make sure it's safe too.\n\t\t\t\tif (!(initialFilterInput1 < 100) || !(initialFilterInput2 < 100)) {\n\t\t\t\t\tinitialFilterInput1 = 0.0;\n\t\t\t\t\tinitialFilterInput2 = 0.0;\n\t\t\t\t}\n\t\t\t\tif (Math.abs(initialFilterInput1) < epsilon) initialFilterInput1 = 0.0;\n\t\t\t\tif (Math.abs(initialFilterInput2) < epsilon) initialFilterInput2 = 0.0;\n\t\t\t\tinstrumentState.initialEqFilterInput1 = initialFilterInput1;\n\t\t\t\tinstrumentState.initialEqFilterInput2 = initialFilterInput2;`\n            }\n\n            if (usesPanning) {\n                effectsSource += `\n\t\t\t\t\n\t\t\t\tSynth.sanitizeDelayLine(panningDelayLine, panningDelayPos, panningMask);\n\t\t\t\tinstrumentState.panningDelayPos = panningDelayPos;\n\t\t\t\tinstrumentState.panningVolumeL = panningVolumeL;\n\t\t\t\tinstrumentState.panningVolumeR = panningVolumeR;\n\t\t\t\tinstrumentState.panningOffsetL = panningOffsetL;\n\t\t\t\tinstrumentState.panningOffsetR = panningOffsetR;`\n            }\n\n            if (usesChorus) {\n                effectsSource += `\n\t\t\t\t\n\t\t\t\tSynth.sanitizeDelayLine(chorusDelayLineL, chorusDelayPos, chorusMask);\n\t\t\t\tSynth.sanitizeDelayLine(chorusDelayLineR, chorusDelayPos, chorusMask);\n\t\t\t\tinstrumentState.chorusPhase = chorusPhase;\n\t\t\t\tinstrumentState.chorusDelayPos = chorusDelayPos;\n\t\t\t\tinstrumentState.chorusVoiceMult = chorusVoiceMult;\n\t\t\t\tinstrumentState.chorusCombinedMult = chorusCombinedMult;`\n            }\n\n            if (usesEcho) {\n                effectsSource += `\n\t\t\t\t\n\t\t\t\tSynth.sanitizeDelayLine(echoDelayLineL, echoDelayPos, echoMask);\n\t\t\t\tSynth.sanitizeDelayLine(echoDelayLineR, echoDelayPos, echoMask);\n\t\t\t\tinstrumentState.echoDelayPos = echoDelayPos;\n\t\t\t\tinstrumentState.echoMult = echoMult;\n\t\t\t\tinstrumentState.echoDelayOffsetRatio = echoDelayOffsetRatio;\n\t\t\t\t\n\t\t\t\tif (!Number.isFinite(echoShelfSampleL) || Math.abs(echoShelfSampleL) < epsilon) echoShelfSampleL = 0.0;\n\t\t\t\tif (!Number.isFinite(echoShelfSampleR) || Math.abs(echoShelfSampleR) < epsilon) echoShelfSampleR = 0.0;\n\t\t\t\tif (!Number.isFinite(echoShelfPrevInputL) || Math.abs(echoShelfPrevInputL) < epsilon) echoShelfPrevInputL = 0.0;\n\t\t\t\tif (!Number.isFinite(echoShelfPrevInputR) || Math.abs(echoShelfPrevInputR) < epsilon) echoShelfPrevInputR = 0.0;\n\t\t\t\tinstrumentState.echoShelfSampleL = echoShelfSampleL;\n\t\t\t\tinstrumentState.echoShelfSampleR = echoShelfSampleR;\n\t\t\t\tinstrumentState.echoShelfPrevInputL = echoShelfPrevInputL;\n\t\t\t\tinstrumentState.echoShelfPrevInputR = echoShelfPrevInputR;`\n            }\n\n            if (usesReverb) {\n                effectsSource += `\n\t\t\t\t\n\t\t\t\tSynth.sanitizeDelayLine(reverbDelayLine, reverbDelayPos        , reverbMask);\n\t\t\t\tSynth.sanitizeDelayLine(reverbDelayLine, reverbDelayPos +  3041, reverbMask);\n\t\t\t\tSynth.sanitizeDelayLine(reverbDelayLine, reverbDelayPos +  6426, reverbMask);\n\t\t\t\tSynth.sanitizeDelayLine(reverbDelayLine, reverbDelayPos + 10907, reverbMask);\n\t\t\t\tinstrumentState.reverbDelayPos = reverbDelayPos;\n\t\t\t\tinstrumentState.reverbMult = reverb;\n\t\t\t\t\n\t\t\t\tif (!Number.isFinite(reverbShelfSample0) || Math.abs(reverbShelfSample0) < epsilon) reverbShelfSample0 = 0.0;\n\t\t\t\tif (!Number.isFinite(reverbShelfSample1) || Math.abs(reverbShelfSample1) < epsilon) reverbShelfSample1 = 0.0;\n\t\t\t\tif (!Number.isFinite(reverbShelfSample2) || Math.abs(reverbShelfSample2) < epsilon) reverbShelfSample2 = 0.0;\n\t\t\t\tif (!Number.isFinite(reverbShelfSample3) || Math.abs(reverbShelfSample3) < epsilon) reverbShelfSample3 = 0.0;\n\t\t\t\tif (!Number.isFinite(reverbShelfPrevInput0) || Math.abs(reverbShelfPrevInput0) < epsilon) reverbShelfPrevInput0 = 0.0;\n\t\t\t\tif (!Number.isFinite(reverbShelfPrevInput1) || Math.abs(reverbShelfPrevInput1) < epsilon) reverbShelfPrevInput1 = 0.0;\n\t\t\t\tif (!Number.isFinite(reverbShelfPrevInput2) || Math.abs(reverbShelfPrevInput2) < epsilon) reverbShelfPrevInput2 = 0.0;\n\t\t\t\tif (!Number.isFinite(reverbShelfPrevInput3) || Math.abs(reverbShelfPrevInput3) < epsilon) reverbShelfPrevInput3 = 0.0;\n\t\t\t\tinstrumentState.reverbShelfSample0 = reverbShelfSample0;\n\t\t\t\tinstrumentState.reverbShelfSample1 = reverbShelfSample1;\n\t\t\t\tinstrumentState.reverbShelfSample2 = reverbShelfSample2;\n\t\t\t\tinstrumentState.reverbShelfSample3 = reverbShelfSample3;\n\t\t\t\tinstrumentState.reverbShelfPrevInput0 = reverbShelfPrevInput0;\n\t\t\t\tinstrumentState.reverbShelfPrevInput1 = reverbShelfPrevInput1;\n\t\t\t\tinstrumentState.reverbShelfPrevInput2 = reverbShelfPrevInput2;\n\t\t\t\tinstrumentState.reverbShelfPrevInput3 = reverbShelfPrevInput3;`\n            }\n            \n            effectsSource += \"}\";\n\n            //console.log(effectsSource);\n            effectsFunction = new Function(\"Config\", \"Synth\", effectsSource)(Config, Synth);\n            Synth.effectsFunctionCache[signature] = effectsFunction;\n        }\n\n        effectsFunction(synth, outputDataL, outputDataR, bufferIndex, runLength, instrumentState);\n    }\n\n    private static pulseWidthSynth(synth: Synth, bufferIndex: number, roundedSamplesPerTick: number, tone: Tone, instrument: Instrument): void {\n        const data: Float32Array = synth.tempMonoInstrumentSampleBuffer!;\n\n        let phaseDelta: number = tone.phaseDeltas[0];\n        const phaseDeltaScale: number = +tone.phaseDeltaScales[0];\n        let expression: number = +tone.expression;\n        const expressionDelta: number = +tone.expressionDelta;\n        let phase: number = (tone.phases[0] % 1);\n\n        let pulseWidth: number = tone.pulseWidth;\n        const pulseWidthDelta: number = tone.pulseWidthDelta;\n\n        const filters: DynamicBiquadFilter[] = tone.noteFilters;\n        const filterCount: number = tone.noteFilterCount | 0;\n        let initialFilterInput1: number = +tone.initialNoteFilterInput1;\n        let initialFilterInput2: number = +tone.initialNoteFilterInput2;\n        const applyFilters: Function = Synth.applyFilters;\n\n        const stopIndex: number = bufferIndex + roundedSamplesPerTick;\n        for (let sampleIndex: number = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\n\n            const sawPhaseA: number = phase % 1;\n            const sawPhaseB: number = (phase + pulseWidth) % 1;\n\n            let pulseWave: number = sawPhaseB - sawPhaseA;\n\n            // This is a PolyBLEP, which smooths out discontinuities at any frequency to reduce aliasing. \n            if (!instrument.aliases) {\n                if (sawPhaseA < phaseDelta) {\n                    var t = sawPhaseA / phaseDelta;\n                    pulseWave += (t + t - t * t - 1) * 0.5;\n                } else if (sawPhaseA > 1.0 - phaseDelta) {\n                    var t = (sawPhaseA - 1.0) / phaseDelta;\n                    pulseWave += (t + t + t * t + 1) * 0.5;\n                }\n                if (sawPhaseB < phaseDelta) {\n                    var t = sawPhaseB / phaseDelta;\n                    pulseWave -= (t + t - t * t - 1) * 0.5;\n                } else if (sawPhaseB > 1.0 - phaseDelta) {\n                    var t = (sawPhaseB - 1.0) / phaseDelta;\n                    pulseWave -= (t + t + t * t + 1) * 0.5;\n                }\n            }\n\n            const inputSample: number = pulseWave;\n            const sample: number = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\n            initialFilterInput2 = initialFilterInput1;\n            initialFilterInput1 = inputSample;\n\n            phase += phaseDelta;\n            phaseDelta *= phaseDeltaScale;\n            pulseWidth += pulseWidthDelta;\n\n            const output: number = sample * expression;\n            expression += expressionDelta;\n\n            data[sampleIndex] += output;\n        }\n\n        tone.phases[0] = phase;\n        tone.phaseDeltas[0] = phaseDelta;\n        tone.expression = expression;\n        tone.pulseWidth = pulseWidth;\n\n        synth.sanitizeFilters(filters);\n        tone.initialNoteFilterInput1 = initialFilterInput1;\n        tone.initialNoteFilterInput2 = initialFilterInput2;\n    }\n\n    private static supersawSynth(synth: Synth, bufferIndex: number, runLength: number, tone: Tone, instrumentState: InstrumentState): void {\n\t\tconst data: Float32Array = synth.tempMonoInstrumentSampleBuffer!;\n\t\tconst voiceCount: number = Config.supersawVoiceCount|0;\n\t\t\n\t\tlet phaseDelta: number = tone.phaseDeltas[0];\n\t\tconst phaseDeltaScale: number = +tone.phaseDeltaScales[0];\n\t\tlet expression: number = +tone.expression;\n\t\tconst expressionDelta: number = +tone.expressionDelta;\n\t\tlet phases: number[] = tone.phases;\n\t\t\n\t\tlet dynamism: number = +tone.supersawDynamism;\n\t\tconst dynamismDelta: number = +tone.supersawDynamismDelta;\n\t\tconst unisonDetunes: number[] = tone.supersawUnisonDetunes;\n\t\tlet shape: number = +tone.supersawShape;\n\t\tconst shapeDelta: number = +tone.supersawShapeDelta;\n\t\tlet delayLength: number = +tone.supersawDelayLength;\n\t\tconst delayLengthDelta: number = +tone.supersawDelayLengthDelta;\n\t\tconst delayLine: Float32Array = tone.supersawDelayLine!;\n\t\tconst delayBufferMask: number = (delayLine.length - 1) >> 0;\n\t\tlet delayIndex: number = tone.supersawDelayIndex|0;\n\t\tdelayIndex = (delayIndex & delayBufferMask) + delayLine.length;\n\t\t\n\t\tconst filters: DynamicBiquadFilter[] = tone.noteFilters;\n\t\tconst filterCount: number = tone.noteFilterCount|0;\n\t\tlet initialFilterInput1: number = +tone.initialNoteFilterInput1;\n\t\tlet initialFilterInput2: number = +tone.initialNoteFilterInput2;\n\t\tconst applyFilters: Function = Synth.applyFilters;\n\t\t\n\t\tconst stopIndex: number = bufferIndex + runLength;\n\t\tfor (let sampleIndex: number = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\n\t\t\t// The phase initially starts at a zero crossing so apply\n\t\t\t// the delta before first sample to get a nonzero value.\n\t\t\tlet phase: number = (phases[0] + phaseDelta) % 1.0;\n\t\t\tlet supersawSample: number = phase - 0.5 * (1.0 + (voiceCount - 1.0) * dynamism);\n\t\t\t\n\t\t\t// This is a PolyBLEP, which smooths out discontinuities at any frequency to reduce aliasing. \n            if (!instrumentState.aliases) {\n                if (phase < phaseDelta) {\n                    var t: number = phase / phaseDelta;\n                    supersawSample -= (t + t - t * t - 1) * 0.5;\n                } else if (phase > 1.0 - phaseDelta) {\n                    var t: number = (phase - 1.0) / phaseDelta;\n                    supersawSample -= (t + t + t * t + 1) * 0.5;\n                }\n            }\n\t\t\t\n\t\t\tphases[0] = phase;\n\t\t\t\n\t\t\tfor (let i: number = 1; i < voiceCount; i++) {\n\t\t\t\tconst detunedPhaseDelta: number = phaseDelta * unisonDetunes[i];\n\t\t\t\t// The phase initially starts at a zero crossing so apply\n\t\t\t\t// the delta before first sample to get a nonzero value.\n\t\t\t\tlet phase: number = (phases[i] + detunedPhaseDelta) % 1.0;\n\t\t\t\tsupersawSample += phase * dynamism;\n\t\t\t\t\n\t\t\t\t// This is a PolyBLEP, which smooths out discontinuities at any frequency to reduce aliasing. \n                if (!instrumentState.aliases) {\n                    if (phase < detunedPhaseDelta) {\n                        const t: number = phase / detunedPhaseDelta;\n                        supersawSample -= (t + t - t * t - 1) * 0.5 * dynamism;\n                    } else if (phase > 1.0 - detunedPhaseDelta) {\n                        const t: number = (phase - 1.0) / detunedPhaseDelta;\n                        supersawSample -= (t + t + t * t + 1) * 0.5 * dynamism;\n                    }\n                }\n\t\t\t\t\n\t\t\t\tphases[i] = phase;\n\t\t\t}\n\t\t\t\n\t\t\tdelayLine[delayIndex & delayBufferMask] = supersawSample;\n\t\t\tconst delaySampleTime: number = delayIndex - delayLength;\n\t\t\tconst lowerIndex: number = delaySampleTime | 0;\n\t\t\tconst upperIndex: number = lowerIndex + 1;\n\t\t\tconst delayRatio: number = delaySampleTime - lowerIndex;\n\t\t\tconst prevDelaySample: number = delayLine[lowerIndex & delayBufferMask];\n\t\t\tconst nextDelaySample: number = delayLine[upperIndex & delayBufferMask];\n\t\t\tconst delaySample: number = prevDelaySample + (nextDelaySample - prevDelaySample) * delayRatio;\n\t\t\tdelayIndex++;\n\t\t\t\n\t\t\tconst inputSample: number = supersawSample - delaySample * shape;\n\t\t\tconst sample: number = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\n\t\t\tinitialFilterInput2 = initialFilterInput1;\n\t\t\tinitialFilterInput1 = inputSample;\n\t\t\t\n\t\t\tphaseDelta *= phaseDeltaScale;\n\t\t\tdynamism += dynamismDelta;\n\t\t\tshape += shapeDelta;\n\t\t\tdelayLength += delayLengthDelta;\n\t\t\t\n\t\t\tconst output: number = sample * expression;\n\t\t\texpression += expressionDelta;\n\t\t\t\n\t\t\tdata[sampleIndex] += output;\n\t\t}\n\t\t\n\t\ttone.phaseDeltas[0] = phaseDelta;\n\t\ttone.expression = expression;\n\t\ttone.supersawDynamism = dynamism;\n\t\ttone.supersawShape = shape;\n\t\ttone.supersawDelayLength = delayLength;\n\t\ttone.supersawDelayIndex = delayIndex;\n\t\t\n\t\tsynth.sanitizeFilters(filters);\n\t\ttone.initialNoteFilterInput1 = initialFilterInput1;\n\t\ttone.initialNoteFilterInput2 = initialFilterInput2;\n\t}\n\n    private static fmSourceTemplate: string[] = (`\n\t\tconst data = synth.tempMonoInstrumentSampleBuffer;\n\t\tconst sineWave = Config.sineWave;\n\t\t\t\n\t\t// I'm adding 1000 to the phase to ensure that it's never negative even when modulated by other waves because negative numbers don't work with the modulus operator very well.\n\t\tlet operator#Phase       = +((tone.phases[#] % 1) + 1000) * ` + Config.sineWaveLength + `;\n\t\tlet operator#PhaseDelta  = +tone.phaseDeltas[#] * ` + Config.sineWaveLength + `;\n\t\tlet operator#PhaseDeltaScale = +tone.phaseDeltaScales[#];\n\t\tlet operator#OutputMult  = +tone.operatorExpressions[#];\n\t\tconst operator#OutputDelta = +tone.operatorExpressionDeltas[#];\n\t\tlet operator#Output      = +tone.feedbackOutputs[#];\n        const operator#Wave      = tone.operatorWaves[#].samples;\n\t\tlet feedbackMult         = +tone.feedbackMult;\n\t\tconst feedbackDelta        = +tone.feedbackDelta;\n        let expression = +tone.expression;\n\t\tconst expressionDelta = +tone.expressionDelta;\n\t\t\n\t\tconst filters = tone.noteFilters;\n\t\tconst filterCount = tone.noteFilterCount|0;\n\t\tlet initialFilterInput1 = +tone.initialNoteFilterInput1;\n\t\tlet initialFilterInput2 = +tone.initialNoteFilterInput2;\n\t\tconst applyFilters = Synth.applyFilters;\n\t\t\n\t\tconst stopIndex = bufferIndex + roundedSamplesPerTick;\n\t\tfor (let sampleIndex = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\n\t\t\t\t// INSERT OPERATOR COMPUTATION HERE\n\t\t\t\tconst fmOutput = (/*operator#Scaled*/); // CARRIER OUTPUTS\n\t\t\t\t\n\t\t\tconst inputSample = fmOutput;\n\t\t\tconst sample = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\n\t\t\tinitialFilterInput2 = initialFilterInput1;\n\t\t\tinitialFilterInput1 = inputSample;\n\t\t\t\t\n\t\t\t\tfeedbackMult += feedbackDelta;\n\t\t\t\toperator#OutputMult += operator#OutputDelta;\n\t\t\t\toperator#Phase += operator#PhaseDelta;\n\t\t\toperator#PhaseDelta *= operator#PhaseDeltaScale;\n\t\t\t\n\t\t\tconst output = sample * expression;\n\t\t\texpression += expressionDelta;\n\n\t\t\tdata[sampleIndex] += output;\n\t\t\t}\n\t\t\t\n\t\t\ttone.phases[#] = operator#Phase / ` + Config.sineWaveLength + `;\n\t\t\ttone.phaseDeltas[#] = operator#PhaseDelta / ` + Config.sineWaveLength + `;\n\t\t\ttone.operatorExpressions[#] = operator#OutputMult;\n\t\t    tone.feedbackOutputs[#] = operator#Output;\n\t\t    tone.feedbackMult = feedbackMult;\n\t\t    tone.expression = expression;\n\t\t\t\n\t\tsynth.sanitizeFilters(filters);\n\t\ttone.initialNoteFilterInput1 = initialFilterInput1;\n\t\ttone.initialNoteFilterInput2 = initialFilterInput2;\n\t\t`).split(\"\\n\");\n\n    private static operatorSourceTemplate: string[] = (`\n\t\t\t\tconst operator#PhaseMix = operator#Phase/* + operator@Scaled*/;\n\t\t\t\tconst operator#PhaseInt = operator#PhaseMix|0;\n\t\t\t\tconst operator#Index    = operator#PhaseInt & ` + Config.sineWaveMask + `;\n                const operator#Sample   = operator#Wave[operator#Index];\n                operator#Output         = operator#Sample + (operator#Wave[operator#Index + 1] - operator#Sample) * (operator#PhaseMix - operator#PhaseInt);\n\t\t\t\tconst operator#Scaled   = operator#OutputMult * operator#Output;\n\t\t`).split(\"\\n\");\n\n    private static noiseSynth(synth: Synth, bufferIndex: number, runLength: number, tone: Tone, instrumentState: InstrumentState): void {\n        const data: Float32Array = synth.tempMonoInstrumentSampleBuffer!;\n        const wave: Float32Array = instrumentState.wave!;\n        let phaseDelta: number = +tone.phaseDeltas[0];\n        const phaseDeltaScale: number = +tone.phaseDeltaScales[0];\n        let expression: number = +tone.expression;\n        const expressionDelta: number = +tone.expressionDelta;\n        let phase: number = (tone.phases[0] % 1) * Config.chipNoiseLength;\n        if (tone.phases[0] == 0.0) {\n            // Zero phase means the tone was reset, just give noise a random start phase instead.\n            phase = Math.random() * Config.chipNoiseLength;\n        }\n        const phaseMask: number = Config.chipNoiseLength - 1;\n        let noiseSample: number = +tone.noiseSample;\n\n        const filters: DynamicBiquadFilter[] = tone.noteFilters;\n        const filterCount: number = tone.noteFilterCount | 0;\n        let initialFilterInput1: number = +tone.initialNoteFilterInput1;\n        let initialFilterInput2: number = +tone.initialNoteFilterInput2;\n        const applyFilters: Function = Synth.applyFilters;\n\n        // This is for a \"legacy\" style simplified 1st order lowpass filter with\n        // a cutoff frequency that is relative to the tone's fundamental frequency.\n        const pitchRelativefilter: number = Math.min(1.0, phaseDelta * instrumentState.noisePitchFilterMult);\n\n        const stopIndex: number = bufferIndex + runLength;\n        for (let sampleIndex: number = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\n            const waveSample: number = wave[phase & phaseMask];\n\n            noiseSample += (waveSample - noiseSample) * pitchRelativefilter;\n\n            const inputSample: number = noiseSample;\n            const sample: number = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\n            initialFilterInput2 = initialFilterInput1;\n            initialFilterInput1 = inputSample;\n\n            phase += phaseDelta;\n            phaseDelta *= phaseDeltaScale;\n\n            const output: number = sample * expression;\n            expression += expressionDelta;\n\n            data[sampleIndex] += output;\n        }\n\n        tone.phases[0] = phase / Config.chipNoiseLength;\n        tone.phaseDeltas[0] = phaseDelta;\n        tone.expression = expression;\n        tone.noiseSample = noiseSample;\n\n        synth.sanitizeFilters(filters);\n        tone.initialNoteFilterInput1 = initialFilterInput1;\n        tone.initialNoteFilterInput2 = initialFilterInput2;\n    }\n\n    private static spectrumSynth(synth: Synth, bufferIndex: number, runLength: number, tone: Tone, instrumentState: InstrumentState): void {\n        const data: Float32Array = synth.tempMonoInstrumentSampleBuffer!;\n        const wave: Float32Array = instrumentState.wave!;\n        const samplesInPeriod: number = (1 << 7);\n        let phaseDelta: number = tone.phaseDeltas[0] * samplesInPeriod;\n        const phaseDeltaScale: number = +tone.phaseDeltaScales[0];\n        let expression: number = +tone.expression;\n        const expressionDelta: number = +tone.expressionDelta;\n        let noiseSample: number = +tone.noiseSample;\n\n        const filters: DynamicBiquadFilter[] = tone.noteFilters;\n        const filterCount: number = tone.noteFilterCount | 0;\n        let initialFilterInput1: number = +tone.initialNoteFilterInput1;\n        let initialFilterInput2: number = +tone.initialNoteFilterInput2;\n        const applyFilters: Function = Synth.applyFilters;\n\n        let phase: number = (tone.phases[0] % 1) * Config.spectrumNoiseLength;\n        // Zero phase means the tone was reset, just give noise a random start phase instead.\n        if (tone.phases[0] == 0.0) phase = Synth.findRandomZeroCrossing(wave, Config.spectrumNoiseLength) + phaseDelta;\n        const phaseMask: number = Config.spectrumNoiseLength - 1;\n\n        // This is for a \"legacy\" style simplified 1st order lowpass filter with\n        // a cutoff frequency that is relative to the tone's fundamental frequency.\n        const pitchRelativefilter: number = Math.min(1.0, phaseDelta);\n\n        const stopIndex: number = bufferIndex + runLength;\n        for (let sampleIndex: number = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\n            const phaseInt: number = phase | 0;\n            const index: number = phaseInt & phaseMask;\n            let waveSample: number = wave[index];\n            const phaseRatio: number = phase - phaseInt;\n            waveSample += (wave[index + 1] - waveSample) * phaseRatio;\n\n            noiseSample += (waveSample - noiseSample) * pitchRelativefilter;\n\n\n            const inputSample: number = noiseSample;\n            const sample: number = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\n            initialFilterInput2 = initialFilterInput1;\n            initialFilterInput1 = inputSample;\n\n            phase += phaseDelta;\n            phaseDelta *= phaseDeltaScale;\n\n            const output: number = sample * expression;\n            expression += expressionDelta;\n\n            data[sampleIndex] += output;\n        }\n\n        tone.phases[0] = phase / Config.spectrumNoiseLength;\n        tone.phaseDeltas[0] = phaseDelta / samplesInPeriod;\n        tone.expression = expression;\n        tone.noiseSample = noiseSample;\n\n        synth.sanitizeFilters(filters);\n        tone.initialNoteFilterInput1 = initialFilterInput1;\n        tone.initialNoteFilterInput2 = initialFilterInput2;\n    }\n\n    private static drumsetSynth(synth: Synth, bufferIndex: number, runLength: number, tone: Tone, instrumentState: InstrumentState): void {\n        const data: Float32Array = synth.tempMonoInstrumentSampleBuffer!;\n        let wave: Float32Array = instrumentState.getDrumsetWave(tone.drumsetPitch!);\n        const referenceDelta: number = InstrumentState.drumsetIndexReferenceDelta(tone.drumsetPitch!);\n        let phaseDelta: number = tone.phaseDeltas[0] / referenceDelta;\n        const phaseDeltaScale: number = +tone.phaseDeltaScales[0];\n        let expression: number = +tone.expression;\n        const expressionDelta: number = +tone.expressionDelta;\n\n        const filters: DynamicBiquadFilter[] = tone.noteFilters;\n        const filterCount: number = tone.noteFilterCount | 0;\n        let initialFilterInput1: number = +tone.initialNoteFilterInput1;\n        let initialFilterInput2: number = +tone.initialNoteFilterInput2;\n        const applyFilters: Function = Synth.applyFilters;\n\n        let phase: number = (tone.phases[0] % 1) * Config.spectrumNoiseLength;\n        // Zero phase means the tone was reset, just give noise a random start phase instead.\n        if (tone.phases[0] == 0.0) phase = Synth.findRandomZeroCrossing(wave, Config.spectrumNoiseLength) + phaseDelta;\n        const phaseMask: number = Config.spectrumNoiseLength - 1;\n\n        const stopIndex: number = bufferIndex + runLength;\n        for (let sampleIndex: number = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\n            const phaseInt: number = phase | 0;\n            const index: number = phaseInt & phaseMask;\n            let noiseSample: number = wave[index];\n            const phaseRatio: number = phase - phaseInt;\n            noiseSample += (wave[index + 1] - noiseSample) * phaseRatio;\n\n            const inputSample: number = noiseSample;\n            const sample: number = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\n            initialFilterInput2 = initialFilterInput1;\n            initialFilterInput1 = inputSample;\n\n            phase += phaseDelta;\n            phaseDelta *= phaseDeltaScale;\n\n            const output: number = sample * expression;\n            expression += expressionDelta;\n\n            data[sampleIndex] += output;\n        }\n\n        tone.phases[0] = phase / Config.spectrumNoiseLength;\n        tone.phaseDeltas[0] = phaseDelta * referenceDelta;\n        tone.expression = expression;\n\n        synth.sanitizeFilters(filters);\n        tone.initialNoteFilterInput1 = initialFilterInput1;\n        tone.initialNoteFilterInput2 = initialFilterInput2;\n    }\n\n    private static modSynth(synth: Synth, stereoBufferIndex: number, roundedSamplesPerTick: number, tone: Tone, instrument: Instrument): void {\n        // Note: present modulator value is tone.expressionStarts[0].\n\n        if (!synth.song) return;\n\n        let mod: number = Config.modCount - 1 - tone.pitches[0];\n\n        // Flagged as invalid because unused by current settings, skip\n        if (instrument.invalidModulators[mod]) return;\n\n        let setting: number = instrument.modulators[mod];\n\n        // Generate list of used instruments\n        let usedInstruments: number[] = [];\n        if (Config.modulators[instrument.modulators[mod]].forSong) {\n            // Instrument doesn't matter for song, just push a random index to run the modsynth once\n            usedInstruments.push(0);\n        } else {\n            // All\n            if (instrument.modInstruments[mod] == synth.song.channels[instrument.modChannels[mod]].instruments.length) {\n                for (let i: number = 0; i < synth.song.channels[instrument.modChannels[mod]].instruments.length; i++) {\n                    usedInstruments.push(i);\n                }\n            }\n            // Active\n            else if (instrument.modInstruments[mod] > synth.song.channels[instrument.modChannels[mod]].instruments.length) {\n                if (synth.song.getPattern(instrument.modChannels[mod], synth.bar) != null)\n                    usedInstruments = synth.song.getPattern(instrument.modChannels[mod], synth.bar)!.instruments;\n            } else {\n                usedInstruments.push(instrument.modInstruments[mod]);\n            }\n        }\n\n        for (let instrumentIndex: number = 0; instrumentIndex < usedInstruments.length; instrumentIndex++) {\n\n            synth.setModValue(tone.expression, tone.expression + tone.expressionDelta, instrument.modChannels[mod], usedInstruments[instrumentIndex], setting);\n\n            // If mods are being held (for smoother playback while recording mods), use those values instead.\n            for (let i: number = 0; i < synth.heldMods.length; i++) {\n                if (Config.modulators[instrument.modulators[mod]].forSong) {\n                    if (synth.heldMods[i].setting == setting)\n                        synth.setModValue(synth.heldMods[i].volume, synth.heldMods[i].volume, instrument.modChannels[mod], usedInstruments[instrumentIndex], setting);\n                }\n                else if (synth.heldMods[i].channelIndex == instrument.modChannels[mod] && synth.heldMods[i].instrumentIndex == usedInstruments[instrumentIndex] && synth.heldMods[i].setting == setting) {\n                    synth.setModValue(synth.heldMods[i].volume, synth.heldMods[i].volume, instrument.modChannels[mod], usedInstruments[instrumentIndex], setting);\n                }\n            }\n\n            // Reset arps, but only at the start of the note\n            if (setting == Config.modulators.dictionary[\"reset arp\"].index && synth.tick == 0 && tone.noteStartPart == synth.beat * Config.partsPerBeat + synth.part) {\n                synth.channels[instrument.modChannels[mod]].instruments[usedInstruments[instrumentIndex]].arpTime = 0;\n            }\n            // Denote next bar skip\n            else if (setting == Config.modulators.dictionary[\"next bar\"].index) {\n                synth.wantToSkip = true;\n            }\n            // Extra info for eq filter target needs to be set as well\n            else if (setting == Config.modulators.dictionary[\"eq filter\"].index) {\n                const tgtInstrument = synth.song.channels[instrument.modChannels[mod]].instruments[usedInstruments[instrumentIndex]];\n\n                if (!tgtInstrument.eqFilterType) {\n\n                    let dotTarget = instrument.modFilterTypes[mod] | 0;\n\n                    if (dotTarget == 0) { // Morph. Figure out the target filter's X/Y coords for this point. If no point exists with this index, or point types don't match, do lerp-out for this point and lerp-in of a new point\n\n                        let pinIdx: number = 0;\n                        const currentPart: number = synth.getTicksIntoBar() / Config.ticksPerPart;\n                        while (tone.note!.start + tone.note!.pins[pinIdx].time <= currentPart) pinIdx++;\n                        // 0 to 1 based on distance to next morph\n                        //let lerpStartRatio: number = (currentPart - tone.note!.pins[pinIdx - 1].time) / (tone.note!.pins[pinIdx].time - tone.note!.pins[pinIdx - 1].time);\n                        let lerpEndRatio: number = ((currentPart - tone.note!.start + (roundedSamplesPerTick / (synth.getSamplesPerTick() * Config.ticksPerPart)) * Config.ticksPerPart) - tone.note!.pins[pinIdx - 1].time) / (tone.note!.pins[pinIdx].time - tone.note!.pins[pinIdx - 1].time);\n\n                        // Compute the new settings to go to.\n                        if (tgtInstrument.eqSubFilters[tone.note!.pins[pinIdx - 1].size] != null || tgtInstrument.eqSubFilters[tone.note!.pins[pinIdx].size] != null) {\n                            tgtInstrument.tmpEqFilterEnd = FilterSettings.lerpFilters(tgtInstrument.eqSubFilters[tone.note!.pins[pinIdx - 1].size]!, tgtInstrument.eqSubFilters[tone.note!.pins[pinIdx].size]!, lerpEndRatio);\n                        } else {\n                            // No mutation will occur to the filter object so we can safely return it without copying\n                            tgtInstrument.tmpEqFilterEnd = tgtInstrument.eqFilter;\n                        }\n\n                    } // Target (1 is dot 1 X, 2 is dot 1 Y, etc.)\n                    else {\n                        // Since we are directly manipulating the filter, make sure it is a new one and not an actual one of the instrument's filters\n                        for (let i: number = 0; i < Config.filterMorphCount; i++) {\n                            if (tgtInstrument.tmpEqFilterEnd == tgtInstrument.eqSubFilters[i] && tgtInstrument.tmpEqFilterEnd != null) {\n                                tgtInstrument.tmpEqFilterEnd = new FilterSettings();\n                                tgtInstrument.tmpEqFilterEnd.fromJsonObject(tgtInstrument.eqSubFilters[i]!.toJsonObject());\n                            }\n                        }\n                        if (tgtInstrument.tmpEqFilterEnd == null) {\n                            tgtInstrument.tmpEqFilterEnd = new FilterSettings();\n                            tgtInstrument.tmpEqFilterEnd.fromJsonObject(tgtInstrument.eqFilter.toJsonObject());\n                        }\n\n                        if (tgtInstrument.tmpEqFilterEnd.controlPointCount > Math.floor((dotTarget - 1) / 2)) {\n                            if (dotTarget % 2) { // X\n                                tgtInstrument.tmpEqFilterEnd.controlPoints[Math.floor((dotTarget - 1) / 2)].freq = tone.expression + tone.expressionDelta;\n                            } else { // Y\n                                tgtInstrument.tmpEqFilterEnd.controlPoints[Math.floor((dotTarget - 1) / 2)].gain = tone.expression + tone.expressionDelta;\n                            }\n                        }\n                    }\n                }\n            }\n            // Extra info for note filter target needs to be set as well\n            else if (setting == Config.modulators.dictionary[\"note filter\"].index) {\n                const tgtInstrument = synth.song.channels[instrument.modChannels[mod]].instruments[usedInstruments[instrumentIndex]];\n\n                if (!tgtInstrument.noteFilterType) {\n                    let dotTarget = instrument.modFilterTypes[mod] | 0;\n\n                    if (dotTarget == 0) { // Morph. Figure out the target filter's X/Y coords for this point. If no point exists with this index, or point types don't match, do lerp-out for this point and lerp-in of a new point\n\n                        let pinIdx: number = 0;\n                        const currentPart: number = synth.getTicksIntoBar() / Config.ticksPerPart;\n                        while (tone.note!.start + tone.note!.pins[pinIdx].time <= currentPart) pinIdx++;\n                        // 0 to 1 based on distance to next morph\n                        //let lerpStartRatio: number = (currentPart - tone.note!.pins[pinIdx - 1].time) / (tone.note!.pins[pinIdx].time - tone.note!.pins[pinIdx - 1].time);\n                        let lerpEndRatio: number = ((currentPart - tone.note!.start + (roundedSamplesPerTick / (synth.getSamplesPerTick() * Config.ticksPerPart)) * Config.ticksPerPart) - tone.note!.pins[pinIdx - 1].time) / (tone.note!.pins[pinIdx].time - tone.note!.pins[pinIdx - 1].time);\n\n                        // Compute the new settings to go to.\n                        if (tgtInstrument.noteSubFilters[tone.note!.pins[pinIdx - 1].size] != null || tgtInstrument.noteSubFilters[tone.note!.pins[pinIdx].size] != null) {\n                            tgtInstrument.tmpNoteFilterEnd = FilterSettings.lerpFilters(tgtInstrument.noteSubFilters[tone.note!.pins[pinIdx - 1].size]!, tgtInstrument.noteSubFilters[tone.note!.pins[pinIdx].size]!, lerpEndRatio);\n                        } else {\n                            // No mutation will occur to the filter object so we can safely return it without copying\n                            tgtInstrument.tmpNoteFilterEnd = tgtInstrument.noteFilter;\n                        }\n\n                    } // Target (1 is dot 1 X, 2 is dot 1 Y, etc.)\n                    else {\n                        // Since we are directly manipulating the filter, make sure it is a new one and not an actual one of the instrument's filters\n\n                        for (let i: number = 0; i < Config.filterMorphCount; i++) {\n                            if (tgtInstrument.tmpNoteFilterEnd == tgtInstrument.noteSubFilters[i] && tgtInstrument.tmpNoteFilterEnd != null) {\n                                tgtInstrument.tmpNoteFilterEnd = new FilterSettings();\n                                tgtInstrument.tmpNoteFilterEnd.fromJsonObject(tgtInstrument.noteSubFilters[i]!.toJsonObject());\n                            }\n                        }\n                        if (tgtInstrument.tmpNoteFilterEnd == null) {\n                            tgtInstrument.tmpNoteFilterEnd = new FilterSettings();\n                            tgtInstrument.tmpNoteFilterEnd.fromJsonObject(tgtInstrument.noteFilter.toJsonObject());\n                        }\n\n                        if (tgtInstrument.tmpNoteFilterEnd.controlPointCount > Math.floor((dotTarget - 1) / 2)) {\n                            if (dotTarget % 2) { // X\n                                tgtInstrument.tmpNoteFilterEnd.controlPoints[Math.floor((dotTarget - 1) / 2)].freq = tone.expression + tone.expressionDelta;\n                            } else { // Y\n                                tgtInstrument.tmpNoteFilterEnd.controlPoints[Math.floor((dotTarget - 1) / 2)].gain = tone.expression + tone.expressionDelta;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    private static findRandomZeroCrossing(wave: Float32Array, waveLength: number): number {\n        let phase: number = Math.random() * waveLength;\n        const phaseMask: number = waveLength - 1;\n\n        // Spectrum and drumset waves sounds best when they start at a zero crossing,\n        // otherwise they pop. Try to find a zero crossing.\n        let indexPrev: number = phase & phaseMask;\n        let wavePrev: number = wave[indexPrev];\n        const stride: number = 16;\n        for (let attemptsRemaining: number = 128; attemptsRemaining > 0; attemptsRemaining--) {\n            const indexNext: number = (indexPrev + stride) & phaseMask;\n            const waveNext: number = wave[indexNext];\n            if (wavePrev * waveNext <= 0.0) {\n                // Found a zero crossing! Now let's narrow it down to two adjacent sample indices.\n                for (let i: number = 0; i < stride; i++) {\n                    const innerIndexNext: number = (indexPrev + 1) & phaseMask;\n                    const innerWaveNext: number = wave[innerIndexNext];\n                    if (wavePrev * innerWaveNext <= 0.0) {\n                        // Found the zero crossing again! Now let's find the exact intersection.\n                        const slope: number = innerWaveNext - wavePrev;\n                        phase = indexPrev;\n                        if (Math.abs(slope) > 0.00000001) {\n                            phase += -wavePrev / slope;\n                        }\n                        phase = Math.max(0, phase) % waveLength;\n                        break;\n                    } else {\n                        indexPrev = innerIndexNext;\n                        wavePrev = innerWaveNext;\n                    }\n                }\n                break;\n            } else {\n                indexPrev = indexNext;\n                wavePrev = waveNext;\n            }\n        }\n\n        return phase;\n    }\n\n    public static instrumentVolumeToVolumeMult(instrumentVolume: number): number {\n        return (instrumentVolume == -Config.volumeRange / 2.0) ? 0.0 : Math.pow(2, Config.volumeLogScale * instrumentVolume);\n    }\n    public static volumeMultToInstrumentVolume(volumeMult: number): number {\n        return (volumeMult <= 0.0) ? -Config.volumeRange / 2 : Math.min(Config.volumeRange, (Math.log(volumeMult) / Math.LN2) / Config.volumeLogScale);\n    }\n    public static noteSizeToVolumeMult(size: number): number {\n        return Math.pow(Math.max(0.0, size) / Config.noteSizeMax, 1.5);\n    }\n    public static volumeMultToNoteSize(volumeMult: number): number {\n        return Math.pow(Math.max(0.0, volumeMult), 1 / 1.5) * Config.noteSizeMax;\n    }\n\n    public static fadeInSettingToSeconds(setting: number): number {\n        return 0.0125 * (0.95 * setting + 0.05 * setting * setting);\n    }\n    public static secondsToFadeInSetting(seconds: number): number {\n        return clamp(0, Config.fadeInRange, Math.round((-0.95 + Math.sqrt(0.9025 + 0.2 * seconds / 0.0125)) / 0.1));\n    }\n    public static fadeOutSettingToTicks(setting: number): number {\n        return Config.fadeOutTicks[setting];\n    }\n    public static ticksToFadeOutSetting(ticks: number): number {\n        let lower: number = Config.fadeOutTicks[0];\n        if (ticks <= lower) return 0;\n        for (let i: number = 1; i < Config.fadeOutTicks.length; i++) {\n            let upper: number = Config.fadeOutTicks[i];\n            if (ticks <= upper) return (ticks < (lower + upper) / 2) ? i - 1 : i;\n            lower = upper;\n        }\n        return Config.fadeOutTicks.length - 1;\n    }\n\n    public static detuneToCents(detune: number): number {\n        // BeepBox formula, for reference:\n        // return detune * (Math.abs(detune) + 1) / 2;\n        return detune - Config.detuneCenter;\n    }\n    public static centsToDetune(cents: number): number {\n        // BeepBox formula, for reference:\n        // return Math.sign(cents) * (Math.sqrt(1 + 8 * Math.abs(cents)) - 1) / 2.0;\n        return cents + Config.detuneCenter;\n    }\n\n    public static getOperatorWave(waveform: number, pulseWidth: number) {\n        if (waveform != 3) {\n            return Config.operatorWaves[waveform];\n        }\n        else {\n            return Config.pwmOperatorWaves[pulseWidth];\n        }\n    }\n\n    private getSamplesPerTick(): number {\n        if (this.song == null) return 0;\n        let beatsPerMinute: number = this.song.getBeatsPerMinute();\n        if (this.isModActive(Config.modulators.dictionary[\"tempo\"].index)) {\n            beatsPerMinute = this.getModValue(Config.modulators.dictionary[\"tempo\"].index);\n        }\n        return this.getSamplesPerTickSpecificBPM(beatsPerMinute);\n    }\n\n    private getSamplesPerTickSpecificBPM(beatsPerMinute: number): number {\n        const beatsPerSecond: number = beatsPerMinute / 60.0;\n        const partsPerSecond: number = Config.partsPerBeat * beatsPerSecond;\n        const tickPerSecond: number = Config.ticksPerPart * partsPerSecond;\n        return this.samplesPerSecond / tickPerSecond;\n    }\n\n    public static fittingPowerOfTwo(x: number): number {\n        return 1 << (32 - Math.clz32(Math.ceil(x) - 1));\n    }\n\n    private sanitizeFilters(filters: DynamicBiquadFilter[]): void {\n        let reset: boolean = false;\n        for (const filter of filters) {\n            const output1: number = Math.abs(filter.output1);\n            const output2: number = Math.abs(filter.output2);\n            // If either is a large value, Infinity, or NaN, then just reset all filter history.\n            if (!(output1 < 100) || !(output2 < 100)) {\n                reset = true;\n                break;\n            }\n            if (output1 < epsilon) filter.output1 = 0.0;\n            if (output2 < epsilon) filter.output2 = 0.0;\n        }\n        if (reset) {\n            for (const filter of filters) {\n                filter.output1 = 0.0;\n                filter.output2 = 0.0;\n            }\n        }\n    }\n\n    public static sanitizeDelayLine(delayLine: Float32Array, lastIndex: number, mask: number): void {\n        while (true) {\n            lastIndex--;\n            const index: number = lastIndex & mask;\n            const sample: number = Math.abs(delayLine[index]);\n            if (Number.isFinite(sample) && (sample == 0.0 || sample >= epsilon)) break;\n            delayLine[index] = 0.0;\n        }\n    }\n\n    public static applyFilters(sample: number, input1: number, input2: number, filterCount: number, filters: DynamicBiquadFilter[]): number {\n        for (let i: number = 0; i < filterCount; i++) {\n            const filter: DynamicBiquadFilter = filters[i];\n            const output1: number = filter.output1;\n            const output2: number = filter.output2;\n            const a1: number = filter.a1;\n            const a2: number = filter.a2;\n            const b0: number = filter.b0;\n            const b1: number = filter.b1;\n            const b2: number = filter.b2;\n            sample = b0 * sample + b1 * input1 + b2 * input2 - a1 * output1 - a2 * output2;\n            filter.a1 = a1 + filter.a1Delta;\n            filter.a2 = a2 + filter.a2Delta;\n            if (filter.useMultiplicativeInputCoefficients) {\n                filter.b0 = b0 * filter.b0Delta;\n                filter.b1 = b1 * filter.b1Delta;\n                filter.b2 = b2 * filter.b2Delta;\n            } else {\n                filter.b0 = b0 + filter.b0Delta;\n                filter.b1 = b1 + filter.b1Delta;\n                filter.b2 = b2 + filter.b2Delta;\n            }\n            filter.output2 = output1;\n            filter.output1 = sample;\n            // Updating the input values is waste if the next filter doesn't exist...\n            input2 = output2;\n            input1 = output1;\n        }\n        return sample;\n    }\n}\n\n// When compiling synth.ts as a standalone module named \"beepbox\", expose these classes as members to JavaScript:\nexport { Dictionary, DictionaryArray, FilterType, EnvelopeType, InstrumentType, Transition, Chord, Envelope, Config };\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nexport class Change {\n\tprivate _noop: boolean = true;\n\t\t\n\tprotected _didSomething(): void {\n\t\tthis._noop = false;\n\t}\n\t\t\n\tpublic isNoop(): boolean {\n\t\treturn this._noop;\n\t}\n\t\t\n\tpublic commit(): void {}\n}\n\nexport class UndoableChange extends Change {\n\tprivate _reversed: boolean;\n\tprivate _doneForwards: boolean;\n\tconstructor(reversed: boolean) {\n\t\tsuper();\n\t\tthis._reversed = reversed;\n\t\tthis._doneForwards = !reversed;\n\t}\n\t\t\n\tpublic undo(): void {\n\t\tif (this._reversed) {\n\t\t\tthis._doForwards();\n\t\t\tthis._doneForwards = true;\n\t\t} else {\n\t\t\tthis._doBackwards();\n\t\t\tthis._doneForwards = false;\n\t\t}\n\t}\n\t\t\n\tpublic redo(): void {\n\t\tif (this._reversed) {\n\t\t\tthis._doBackwards();\n\t\t\tthis._doneForwards = false;\n\t\t} else {\n\t\t\tthis._doForwards();\n\t\t\tthis._doneForwards = true;\n\t\t}\n\t}\n\t\t\n\t// isDoneForwards() returns whether or not the Change was most recently \n\t// performed forwards or backwards. If the change created something, do not \n\t// delete it in the change destructor unless the Change was performed \n\t// backwards: \n\tprotected _isDoneForwards(): boolean {\n\t\treturn this._doneForwards;\n\t}\n\t\t\n\tprotected _doForwards(): void {\n\t\tthrow new Error(\"Change.doForwards(): Override me.\");\n\t}\n\t\t\n\tprotected _doBackwards(): void {\n\t\tthrow new Error(\"Change.doBackwards(): Override me.\");\n\t}\n}\n\nexport class ChangeGroup extends Change {\n\tconstructor() {\n\t\tsuper();\n\t}\n\t\t\n\tpublic append(change: Change): void {\n\t\tif (change.isNoop()) return;\n\t\tthis._didSomething();\n\t}\n}\n\nexport class ChangeSequence extends UndoableChange {\n\tprivate _changes: UndoableChange[];\n\tprivate _committed: boolean;\n\tconstructor(changes?: UndoableChange[]) {\n\t\tsuper(false);\n\t\tif (changes == undefined) {\n\t\t\tthis._changes = [];\n\t\t} else {\n\t\t\tthis._changes = changes.concat();\n\t\t}\n\t\tthis._committed = false;\n\t}\n\n\tpublic checkFirst(): UndoableChange | null {\n\t\tif (this._changes.length > 0)\n\t\t\treturn this._changes[0];\n\t\treturn null;\n    }\n\t\t\n\tpublic append(change: UndoableChange): void {\n\t\tif (change.isNoop()) return;\n\t\tthis._changes[this._changes.length] = change;\n\t\tthis._didSomething();\n\t}\n\t\t\n\tprotected _doForwards(): void {\n\t\tfor (let i: number = 0; i < this._changes.length; i++) {\n\t\t\tthis._changes[i].redo();\n\t\t}\n\t}\n\t\t\n\tprotected _doBackwards(): void {\n\t\t\tfor (let i: number = this._changes.length-1; i >= 0 ; i--) {\n\t\t\tthis._changes[i].undo();\n\t\t}\n\t}\n\n\tpublic isCommitted(): boolean {\n\t\treturn this._committed;\n\t}\n\n\tpublic commit(): void {\n\t\tthis._committed = true;\n    }\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nimport { Algorithm, Dictionary, FilterType, SustainType, InstrumentType, EffectType, AutomationTarget, Config, effectsIncludeDistortion } from \"../synth/SynthConfig\";\nimport { NotePin, Note, makeNotePin, Pattern, FilterSettings, FilterControlPoint, SpectrumWave, HarmonicsWave, Instrument, Channel, Song, Synth } from \"../synth/synth\";\nimport { Preset, PresetCategory, EditorConfig } from \"./EditorConfig\";\nimport { Change, ChangeGroup, ChangeSequence, UndoableChange } from \"./Change\";\nimport { SongDocument } from \"./SongDocument\";\nimport { ColorConfig } from \"./ColorConfig\";\nimport { Slider } from \"./HTMLWrapper\";\n\nexport function patternsContainSameInstruments(pattern1Instruments: number[], pattern2Instruments: number[]): boolean {\n    const pattern2Has1Instruments: boolean = pattern1Instruments.every(instrument => pattern2Instruments.indexOf(instrument) != -1);\n    const pattern1Has2Instruments: boolean = pattern2Instruments.every(instrument => pattern1Instruments.indexOf(instrument) != -1);\n    return pattern2Has1Instruments && pattern1Has2Instruments && pattern2Instruments.length == pattern1Instruments.length;\n}\n\nexport function discardInvalidPatternInstruments(instruments: number[], song: Song, channelIndex: number) {\n    const uniqueInstruments: Set<number> = new Set(instruments);\n    instruments.length = 0;\n    instruments.push(...uniqueInstruments);\n    for (let i: number = 0; i < instruments.length; i++) {\n        if (instruments[i] >= song.channels[channelIndex].instruments.length) {\n            instruments.splice(i, 1);\n            i--;\n        }\n    }\n    if (instruments.length > song.getMaxInstrumentsPerPattern(channelIndex)) {\n        instruments.length = song.getMaxInstrumentsPerPattern(channelIndex);\n    }\n    if (instruments.length <= 0) {\n        instruments[0] = 0;\n    }\n}\n\nexport function unionOfUsedNotes(pattern: Pattern, flags: boolean[]): void {\n    for (const note of pattern.notes) {\n        for (const pitch of note.pitches) {\n            for (const pin of note.pins) {\n                const key: number = (pitch + pin.interval) % 12;\n                if (!flags[key]) {\n                    flags[key] = true;\n                }\n            }\n        }\n    }\n}\n\nexport function generateScaleMap(oldScaleFlags: ReadonlyArray<boolean>, newScaleValue: number): number[] {\n    const newScaleFlags: ReadonlyArray<boolean> = Config.scales[newScaleValue].flags;\n    const oldScale: number[] = [];\n    const newScale: number[] = [];\n    for (let i: number = 0; i < 12; i++) {\n        if (oldScaleFlags[i]) oldScale.push(i);\n        if (newScaleFlags[i]) newScale.push(i);\n    }\n    const largerToSmaller: boolean = oldScale.length > newScale.length;\n    const smallerScale: number[] = largerToSmaller ? newScale : oldScale;\n    const largerScale: number[] = largerToSmaller ? oldScale : newScale;\n\n    const roles: string[] = [\"root\", \"second\", \"second\", \"third\", \"third\", \"fourth\", \"tritone\", \"fifth\", \"sixth\", \"sixth\", \"seventh\", \"seventh\", \"root\"];\n    let bestScore: number = Number.MAX_SAFE_INTEGER;\n    let bestIndexMap: number[] = [];\n    const stack: number[][] = [[0]]; // Root always maps to root.\n\n    while (stack.length > 0) {\n        const indexMap: number[] = stack.pop()!;\n\n        if (indexMap.length == smallerScale.length) {\n            // Score this mapping.\n            let score: number = 0;\n            for (let i: number = 0; i < indexMap.length; i++) {\n                score += Math.abs(smallerScale[i] - largerScale[indexMap[i]]);\n                if (roles[smallerScale[i]] != roles[largerScale[indexMap[i]]]) {\n                    // Penalize changing roles.\n                    score += 0.75;\n                }\n            }\n            if (bestScore > score) {\n                bestScore = score;\n                bestIndexMap = indexMap;\n            }\n        } else {\n            // Recursively choose next indices for mapping.\n            const lowIndex: number = indexMap[indexMap.length - 1] + 1;\n            const highIndex: number = largerScale.length - smallerScale.length + indexMap.length;\n            for (let i: number = lowIndex; i <= highIndex; i++) {\n                stack.push(indexMap.concat(i));\n            }\n        }\n    }\n\n    const sparsePitchMap: number[][] = [];\n    for (let i: number = 0; i < bestIndexMap.length; i++) {\n        const smallerScalePitch = smallerScale[i];\n        const largerScalePitch = largerScale[bestIndexMap[i]];\n        sparsePitchMap[i] = largerToSmaller\n            ? [largerScalePitch, smallerScalePitch]\n            : [smallerScalePitch, largerScalePitch];\n    }\n\n    // To make it easier to wrap around.\n    sparsePitchMap.push([12, 12]);\n    newScale.push(12);\n\n    let sparseIndex: number = 0;\n    const fullPitchMap: number[] = [];\n    for (let i: number = 0; i < 12; i++) {\n        const oldLow: number = sparsePitchMap[sparseIndex][0];\n        const newLow: number = sparsePitchMap[sparseIndex][1];\n        const oldHigh: number = sparsePitchMap[sparseIndex + 1][0];\n        const newHigh: number = sparsePitchMap[sparseIndex + 1][1];\n        if (i == oldHigh - 1) sparseIndex++;\n\n        const transformedPitch: number = (i - oldLow) * (newHigh - newLow) / (oldHigh - oldLow) + newLow;\n\n        let nearestPitch: number = 0;\n        let nearestPitchDistance: number = Number.MAX_SAFE_INTEGER;\n        for (const newPitch of newScale) {\n            let distance: number = Math.abs(newPitch - transformedPitch);\n            if (roles[newPitch] != roles[i]) {\n                // Again, penalize changing roles.\n                distance += 0.1;\n            }\n            if (nearestPitchDistance > distance) {\n                nearestPitchDistance = distance;\n                nearestPitch = newPitch;\n            }\n        }\n\n        fullPitchMap[i] = nearestPitch;\n    }\n\n    return fullPitchMap;\n}\n\nfunction removeRedundantPins(pins: NotePin[]): void {\n    for (let i: number = 1; i < pins.length - 1;) {\n        if (pins[i - 1].interval == pins[i].interval &&\n            pins[i].interval == pins[i + 1].interval &&\n            pins[i - 1].size == pins[i].size &&\n            pins[i].size == pins[i + 1].size) {\n            pins.splice(i, 1);\n        } else {\n            i++;\n        }\n    }\n}\n\nfunction projectNoteIntoBar(oldNote: Note, timeOffset: number, noteStartPart: number, noteEndPart: number, newNotes: Note[]): void {\n    // Create a new note, and interpret the pitch bend and size events\n    // to determine where we need to insert pins to control interval and volume.\n    const newNote: Note = new Note(-1, noteStartPart, noteEndPart, Config.noteSizeMax, false);\n    newNote.pins.length = 0;\n    newNote.pitches.length = 0;\n    const newNoteLength: number = noteEndPart - noteStartPart;\n\n    for (const pitch of oldNote.pitches) {\n        newNote.pitches.push(pitch);\n    }\n\n    for (let pinIndex: number = 0; pinIndex < oldNote.pins.length; pinIndex++) {\n        const pin: NotePin = oldNote.pins[pinIndex];\n        const newPinTime: number = pin.time + timeOffset;\n        if (newPinTime < 0) {\n            if (pinIndex + 1 >= oldNote.pins.length) throw new Error(\"Error converting pins in note overflow.\");\n            const nextPin: NotePin = oldNote.pins[pinIndex + 1];\n            const nextPinTime: number = nextPin.time + timeOffset;\n            if (nextPinTime > 0) {\n                // Insert an interpolated pin at the start of the new note.\n                const ratio: number = (-newPinTime) / (nextPinTime - newPinTime);\n                newNote.pins.push(makeNotePin(Math.round(pin.interval + ratio * (nextPin.interval - pin.interval)), 0, Math.round(pin.size + ratio * (nextPin.size - pin.size))));\n\n            }\n        } else if (newPinTime <= newNoteLength) {\n            newNote.pins.push(makeNotePin(pin.interval, newPinTime, pin.size));\n        } else {\n            if (pinIndex < 1) throw new Error(\"Error converting pins in note overflow.\");\n            const prevPin: NotePin = oldNote.pins[pinIndex - 1];\n            const prevPinTime: number = prevPin.time + timeOffset;\n            if (prevPinTime < newNoteLength) {\n                // Insert an interpolated pin at the end of the new note.\n                const ratio: number = (newNoteLength - prevPinTime) / (newPinTime - prevPinTime);\n                newNote.pins.push(makeNotePin(Math.round(prevPin.interval + ratio * (pin.interval - prevPin.interval)), newNoteLength, Math.round(prevPin.size + ratio * (pin.size - prevPin.size))));\n            }\n        }\n    }\n    \n    // Fix from Jummbus: Ensure the first pin's interval is zero, adjust pitches and pins to compensate.\n    const offsetInterval: number = newNote.pins[0].interval;\n    for (let pitchIdx: number = 0; pitchIdx < newNote.pitches.length; pitchIdx++) {\n        newNote.pitches[pitchIdx] += offsetInterval;\n    }\n    for (let pinIdx: number = 0; pinIdx < newNote.pins.length; pinIdx++) {\n        newNote.pins[pinIdx].interval -= offsetInterval;\n    }\n\n    let joinedWithPrevNote: boolean = false;\n    if (newNote.start == 0) {\n        newNote.continuesLastPattern = (timeOffset < 0 || oldNote.continuesLastPattern);\n    } else {\n        newNote.continuesLastPattern = false;\n        if (newNotes.length > 0 && oldNote.continuesLastPattern) {\n            const prevNote: Note = newNotes[newNotes.length - 1];\n            if (prevNote.end == newNote.start && Synth.adjacentNotesHaveMatchingPitches(prevNote, newNote)) {\n                joinedWithPrevNote = true;\n                const newIntervalOffset: number = prevNote.pins[prevNote.pins.length - 1].interval;\n                const newTimeOffset: number = prevNote.end - prevNote.start;\n                for (let pinIndex: number = 1; pinIndex < newNote.pins.length; pinIndex++) {\n                    const tempPin: NotePin = newNote.pins[pinIndex];\n                    const transformedPin: NotePin = makeNotePin(tempPin.interval + newIntervalOffset, tempPin.time + newTimeOffset, tempPin.size);\n                    prevNote.pins.push(transformedPin);\n                    prevNote.end = prevNote.start + transformedPin.time;\n                }\n                removeRedundantPins(prevNote.pins);\n            }\n        }\n    }\n    if (!joinedWithPrevNote) {\n        newNotes.push(newNote);\n    }\n}\n\nexport class ChangeMoveAndOverflowNotes extends ChangeGroup {\n    constructor(doc: SongDocument, newBeatsPerBar: number, partsToMove: number) {\n        super();\n\n        const pitchChannels: Channel[] = [];\n        const noiseChannels: Channel[] = [];\n        const modChannels: Channel[] = []\n\n        for (let channelIndex: number = 0; channelIndex < doc.song.getChannelCount(); channelIndex++) {\n            const oldChannel: Channel = doc.song.channels[channelIndex];\n            const newChannel: Channel = new Channel();\n\n            if (channelIndex < doc.song.pitchChannelCount) {\n                pitchChannels.push(newChannel);\n            } else if (channelIndex < doc.song.pitchChannelCount + doc.song.noiseChannelCount) {\n                noiseChannels.push(newChannel);\n            }\n            else {\n                modChannels.push(newChannel);\n            }\n\n            newChannel.muted = oldChannel.muted;\n            newChannel.octave = oldChannel.octave;\n            newChannel.name = oldChannel.name;\n\n            for (const instrument of oldChannel.instruments) {\n                newChannel.instruments.push(instrument);\n            }\n\n            const oldPartsPerBar: number = Config.partsPerBeat * doc.song.beatsPerBar;\n            const newPartsPerBar: number = Config.partsPerBeat * newBeatsPerBar;\n            let currentBar: number = -1;\n            let pattern: Pattern | null = null;\n\n            for (let oldBar: number = 0; oldBar < doc.song.barCount; oldBar++) {\n                const oldPattern: Pattern | null = doc.song.getPattern(channelIndex, oldBar);\n                if (oldPattern != null) {\n                    const oldBarStart: number = oldBar * oldPartsPerBar;\n                    for (const oldNote of oldPattern.notes) {\n\n                        const absoluteNoteStart: number = oldNote.start + oldBarStart + partsToMove;\n                        const absoluteNoteEnd: number = oldNote.end + oldBarStart + partsToMove;\n\n                        const startBar: number = Math.floor(absoluteNoteStart / newPartsPerBar);\n                        const endBar: number = Math.ceil(absoluteNoteEnd / newPartsPerBar);\n                        for (let bar: number = startBar; bar < endBar; bar++) {\n                            const barStartPart: number = bar * newPartsPerBar;\n                            const noteStartPart: number = Math.max(0, absoluteNoteStart - barStartPart);\n                            const noteEndPart: number = Math.min(newPartsPerBar, absoluteNoteEnd - barStartPart);\n\n                            if (noteStartPart < noteEndPart) {\n\n                                // Ensure a pattern exists for the current bar before inserting notes into it.\n                                if (currentBar < bar || pattern == null) {\n                                    currentBar++;\n                                    while (currentBar < bar) {\n                                        newChannel.bars[currentBar] = 0;\n                                        currentBar++;\n                                    }\n                                    pattern = new Pattern();\n                                    newChannel.patterns.push(pattern);\n                                    newChannel.bars[currentBar] = newChannel.patterns.length;\n                                    pattern.instruments.length = 0;\n                                    pattern.instruments.push(...oldPattern.instruments);\n                                }\n\n                                // This is a consideration to allow arbitrary note sequencing, e.g. for mod channels (so the pattern being used can jump around)\n                                pattern = newChannel.patterns[newChannel.bars[bar] - 1];\n\n                                projectNoteIntoBar(oldNote, absoluteNoteStart - barStartPart - noteStartPart, noteStartPart, noteEndPart, pattern.notes);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        removeDuplicatePatterns(pitchChannels);\n        removeDuplicatePatterns(noiseChannels);\n        removeDuplicatePatterns(modChannels);\n        this.append(new ChangeReplacePatterns(doc, pitchChannels, noiseChannels, modChannels));\n    }\n}\n\nclass ChangePins extends UndoableChange {\n    protected _oldStart: number;\n    protected _newStart: number;\n    protected _oldEnd: number;\n    protected _newEnd: number;\n    protected _oldPins: NotePin[];\n    protected _newPins: NotePin[];\n    protected _oldPitches: number[];\n    protected _newPitches: number[];\n    protected _oldContinuesLastPattern: boolean;\n    protected _newContinuesLastPattern: boolean;\n    constructor(protected _doc: SongDocument | null, protected _note: Note) {\n        super(false);\n        this._oldStart = this._note.start;\n        this._oldEnd = this._note.end;\n        this._newStart = this._note.start;\n        this._newEnd = this._note.end;\n        this._oldPins = this._note.pins;\n        this._newPins = [];\n        this._oldPitches = this._note.pitches;\n        this._newPitches = [];\n        this._oldContinuesLastPattern = this._note.continuesLastPattern;\n        this._newContinuesLastPattern = this._note.continuesLastPattern;\n    }\n\n    protected _finishSetup(continuesLastPattern?: boolean): void {\n        for (let i: number = 0; i < this._newPins.length - 1;) {\n            if (this._newPins[i].time >= this._newPins[i + 1].time) {\n                this._newPins.splice(i, 1);\n            } else {\n                i++;\n            }\n        }\n\n        removeRedundantPins(this._newPins);\n\n        const firstInterval: number = this._newPins[0].interval;\n        const firstTime: number = this._newPins[0].time;\n        for (let i: number = 0; i < this._oldPitches.length; i++) {\n            this._newPitches[i] = this._oldPitches[i] + firstInterval;\n        }\n        for (let i: number = 0; i < this._newPins.length; i++) {\n            this._newPins[i].interval -= firstInterval;\n            this._newPins[i].time -= firstTime;\n        }\n        this._newStart = this._oldStart + firstTime;\n        this._newEnd = this._newStart + this._newPins[this._newPins.length - 1].time;\n\n        if (continuesLastPattern != undefined) {\n            this._newContinuesLastPattern = continuesLastPattern;\n        }\n        if (this._newStart != 0) {\n            this._newContinuesLastPattern = false;\n        }\n\n        this._doForwards();\n        this._didSomething();\n    }\n\n    protected _doForwards(): void {\n        this._note.pins = this._newPins;\n        this._note.pitches = this._newPitches;\n        this._note.start = this._newStart;\n        this._note.end = this._newEnd;\n        this._note.continuesLastPattern = this._newContinuesLastPattern;\n        if (this._doc != null) this._doc.notifier.changed();\n    }\n\n    protected _doBackwards(): void {\n        this._note.pins = this._oldPins;\n        this._note.pitches = this._oldPitches;\n        this._note.start = this._oldStart;\n        this._note.end = this._oldEnd;\n        this._note.continuesLastPattern = this._oldContinuesLastPattern;\n        if (this._doc != null) this._doc.notifier.changed();\n    }\n}\n\nexport class ChangeCustomizeInstrument extends Change {\n    constructor(doc: SongDocument) {\n        super();\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\n        if (instrument.preset != instrument.type) {\n            instrument.preset = instrument.type;\n            doc.notifier.changed();\n            this._didSomething();\n        }\n    }\n}\n\nexport class ChangeCustomWave extends Change {\n    constructor(doc: SongDocument, newArray: Float32Array) {\n        super();\n        const oldArray: Float32Array = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()].customChipWave;\n        var comparisonResult: boolean = true;\n        for (let i: number = 0; i < oldArray.length; i++) {\n            if (oldArray[i] != newArray[i]) {\n                comparisonResult = false;\n                i = oldArray.length;\n            }\n        }\n        if (comparisonResult == false) {\n            let instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\n            for (let i: number = 0; i < newArray.length; i++) {\n                instrument.customChipWave[i] = newArray[i];\n            }\n\n            let sum: number = 0.0;\n            for (let i: number = 0; i < instrument.customChipWave.length; i++) {\n                sum += instrument.customChipWave[i];\n            }\n            const average: number = sum / instrument.customChipWave.length;\n\n            // Perform the integral on the wave. The chipSynth will perform the derivative to get the original wave back but with antialiasing.\n            let cumulative: number = 0;\n            let wavePrev: number = 0;\n            for (let i: number = 0; i < instrument.customChipWave.length; i++) {\n                cumulative += wavePrev;\n                wavePrev = instrument.customChipWave[i] - average;\n                instrument.customChipWaveIntegral[i] = cumulative;\n            }\n\n            instrument.customChipWaveIntegral[64] = 0.0;\n            instrument.preset = instrument.type;\n            doc.notifier.changed();\n            this._didSomething();\n        }\n    }\n}\n\nexport class ChangePreset extends Change {\n    constructor(doc: SongDocument, newValue: number) {\n        super();\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\n        const oldValue: number = instrument.preset;\n        if (oldValue != newValue) {\n            const preset: Preset | null = EditorConfig.valueToPreset(newValue);\n            if (preset != null) {\n                if (preset.customType != undefined) {\n                    instrument.type = preset.customType;\n                    if (!Config.instrumentTypeHasSpecialInterval[instrument.type] && Config.chords[instrument.chord].customInterval) {\n                        instrument.chord = 0;\n                    }\n                    instrument.clearInvalidEnvelopeTargets();\n                } else if (preset.settings != undefined) {\n                    const tempVolume: number = instrument.volume;\n                    const tempPan: number = instrument.pan;\n                    const tempPanDelay = instrument.panDelay;\n                    //const usesPanning: boolean = effectsIncludePanning(instrument.effects);\n                    instrument.fromJsonObject(preset.settings, doc.song.getChannelIsNoise(doc.channel), doc.song.getChannelIsMod(doc.channel), doc.song.rhythm == 0 || doc.song.rhythm == 2, doc.song.rhythm >= 2);\n                    instrument.volume = tempVolume;\n                    instrument.pan = tempPan;\n                    instrument.panDelay = tempPanDelay;\n                    //@jummbus - Disable this check, pan will be on by default.\n                    //if (usesPanning && instrument.pan != Config.panCenter) {\n                        instrument.effects = (instrument.effects | (1 << EffectType.panning));\n                    //}\n                }\n            }\n            instrument.preset = newValue;\n            doc.notifier.changed();\n            this._didSomething();\n        }\n    }\n}\n\nexport class ChangeRandomGeneratedInstrument extends Change {\n    constructor(doc: SongDocument) {\n        super();\n\n        interface ItemWeight<T> {\n            readonly item: T;\n            readonly weight: number;\n        }\n        function selectWeightedRandom<T>(entries: ReadonlyArray<ItemWeight<T>>): T {\n            let total: number = 0;\n            for (const entry of entries) {\n                total += entry.weight;\n            }\n            let random: number = Math.random() * total;\n            for (const entry of entries) {\n                random -= entry.weight;\n                if (random <= 0.0) return entry.item;\n            }\n            return entries[(Math.random() * entries.length) | 0].item;\n        }\n        function selectCurvedDistribution(min: number, max: number, peak: number, width: number): number {\n            const entries: Array<ItemWeight<number>> = [];\n            for (let i: number = min; i <= max; i++) {\n                entries.push({ item: i, weight: 1.0 / (Math.pow((i - peak) / width, 2.0) + 1.0) });\n            }\n            return selectWeightedRandom(entries);\n        }\n\n        class PotentialFilterPoint {\n            constructor(\n                public readonly chance: number,\n                public readonly type: FilterType,\n                public readonly minFreq: number,\n                public readonly maxFreq: number,\n                public readonly centerHz: number,\n                public readonly centerGain: number,\n            ) { };\n        }\n        function applyFilterPoints(filter: FilterSettings, potentialPoints: ReadonlyArray<PotentialFilterPoint>): void {\n            filter.reset();\n            const usedFreqs: number[] = [];\n            for (const potentialPoint of potentialPoints) {\n                if (Math.random() > potentialPoint.chance) continue;\n                const point: FilterControlPoint = new FilterControlPoint();\n                point.type = potentialPoint.type;\n                point.freq = selectCurvedDistribution(potentialPoint.minFreq, potentialPoint.maxFreq, FilterControlPoint.getRoundedSettingValueFromHz(potentialPoint.centerHz), 1.0 / Config.filterFreqStep);\n                point.gain = selectCurvedDistribution(0, Config.filterGainRange - 1, Config.filterGainCenter + potentialPoint.centerGain, 2.0 / Config.filterGainStep);\n                if (point.type == FilterType.peak && point.gain == Config.filterGainCenter) continue; // skip pointless points. :P\n                if (usedFreqs.includes(point.freq)) continue;\n                usedFreqs.push(point.freq);\n                filter.controlPoints[filter.controlPointCount] = point;\n                filter.controlPointCount++;\n            }\n        }\n\n        const isNoise: boolean = doc.song.getChannelIsNoise(doc.channel);\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\n        instrument.effects = 1 << EffectType.panning; // disable all existing effects except panning, which should always be on.\n        instrument.aliases = false;\n        instrument.envelopeCount = 0;\n\n        const midFreq: number = FilterControlPoint.getRoundedSettingValueFromHz(700.0);\n        const maxFreq: number = Config.filterFreqRange - 1;\n        applyFilterPoints(instrument.eqFilter, [\n            new PotentialFilterPoint(0.8, FilterType.lowPass, midFreq, maxFreq, 4000.0, -1),\n            new PotentialFilterPoint(0.4, FilterType.highPass, 0, midFreq - 1, 250.0, -1),\n            new PotentialFilterPoint(0.5, FilterType.peak, 0, maxFreq, 2000.0, 0),\n            new PotentialFilterPoint(0.4, FilterType.peak, 0, maxFreq, 1400.0, 0),\n            new PotentialFilterPoint(0.3, FilterType.peak, 0, maxFreq, 1000.0, 0),\n            new PotentialFilterPoint(0.2, FilterType.peak, 0, maxFreq, 500.0, 0),\n        ]);\n\n        if (isNoise) {\n            const type: InstrumentType = selectWeightedRandom([\n                { item: InstrumentType.noise, weight: 1 },\n                { item: InstrumentType.spectrum, weight: 3 },\n            ]);\n            instrument.preset = instrument.type = type;\n\n            instrument.fadeIn = (Math.random() < 0.8) ? 0 : selectCurvedDistribution(0, Config.fadeInRange - 1, 0, 2);\n            instrument.fadeOut = selectCurvedDistribution(0, Config.fadeOutTicks.length - 1, Config.fadeOutNeutral, 2);\n\n            if (Math.random() < 0.1) {\n                instrument.effects |= 1 << EffectType.transition;\n                instrument.transition = Config.transitions.dictionary[selectWeightedRandom([\n                    { item: \"normal\", weight: 30 },\n                    { item: \"interrupt\", weight: 1 },\n                    { item: \"slide\", weight: 2 },\n                ])].index;\n            }\n            if (Math.random() < 0.2) {\n                instrument.effects |= 1 << EffectType.chord;\n                instrument.chord = Config.chords.dictionary[selectWeightedRandom([\n                    { item: \"strum\", weight: 2 },\n                    { item: \"arpeggio\", weight: 1 },\n                ])].index;\n            }\n            if (Math.random() < 0.1) {\n                instrument.pitchShift = selectCurvedDistribution(0, Config.pitchShiftRange - 1, Config.pitchShiftCenter, 2);\n                if (instrument.pitchShift != Config.pitchShiftCenter) {\n                    instrument.effects |= 1 << EffectType.pitchShift;\n                    instrument.addEnvelope(Config.instrumentAutomationTargets.dictionary[\"pitchShift\"].index, 0, Config.envelopes.dictionary[selectWeightedRandom([\n                        { item: \"flare 1\", weight: 2 },\n                        { item: \"flare 2\", weight: 1 },\n                        { item: \"flare 3\", weight: 1 },\n                        { item: \"twang 1\", weight: 16 },\n                        { item: \"twang 2\", weight: 8 },\n                        { item: \"twang 3\", weight: 4 },\n                        { item: \"tremolo1\", weight: 1 },\n                        { item: \"tremolo2\", weight: 1 },\n                        { item: \"tremolo3\", weight: 1 },\n                        { item: \"decay 1\", weight: 4 },\n                        { item: \"decay 2\", weight: 2 },\n                        { item: \"decay 3\", weight: 1 },\n                    ])].index);\n                }\n            }\n            if (Math.random() < 0.1) {\n                instrument.effects |= 1 << EffectType.vibrato;\n                instrument.vibrato = selectCurvedDistribution(0, Config.echoSustainRange - 1, Config.echoSustainRange >> 1, 2);\n                instrument.vibrato = Config.vibratos.dictionary[selectWeightedRandom([\n                    { item: \"light\", weight: 2 },\n                    { item: \"delayed\", weight: 2 },\n                    { item: \"heavy\", weight: 1 },\n                    { item: \"shaky\", weight: 2 },\n                ])].index;\n            }\n            if (Math.random() < 0.8) {\n                instrument.effects |= 1 << EffectType.noteFilter;\n                applyFilterPoints(instrument.noteFilter, [\n                    new PotentialFilterPoint(1.0, FilterType.lowPass, midFreq, maxFreq, 8000.0, -1),\n                ]);\n                instrument.addEnvelope(Config.instrumentAutomationTargets.dictionary[\"noteFilterAllFreqs\"].index, 0, Config.envelopes.dictionary[selectWeightedRandom([\n                    { item: \"punch\", weight: 4 },\n                    { item: \"flare 1\", weight: 2 },\n                    { item: \"flare 2\", weight: 2 },\n                    { item: \"flare 3\", weight: 2 },\n                    { item: \"twang 1\", weight: 8 },\n                    { item: \"twang 2\", weight: 8 },\n                    { item: \"twang 3\", weight: 8 },\n                    { item: \"swell 1\", weight: 2 },\n                    { item: \"swell 2\", weight: 2 },\n                    { item: \"swell 3\", weight: 1 },\n                    { item: \"tremolo1\", weight: 1 },\n                    { item: \"tremolo2\", weight: 1 },\n                    { item: \"tremolo3\", weight: 1 },\n                    { item: \"tremolo4\", weight: 1 },\n                    { item: \"tremolo5\", weight: 1 },\n                    { item: \"tremolo6\", weight: 1 },\n                    { item: \"decay 1\", weight: 4 },\n                    { item: \"decay 2\", weight: 4 },\n                    { item: \"decay 3\", weight: 4 },\n                ])].index);\n            }\n            if (Math.random() < 0.1) {\n                instrument.effects |= 1 << EffectType.distortion;\n                instrument.distortion = selectCurvedDistribution(1, Config.distortionRange - 1, Config.distortionRange - 1, 2);\n            }\n            if (Math.random() < 0.1) {\n                instrument.effects |= 1 << EffectType.bitcrusher;\n                instrument.bitcrusherFreq = selectCurvedDistribution(0, Config.bitcrusherFreqRange - 1, Config.bitcrusherFreqRange >> 1, 2);\n                instrument.bitcrusherQuantization = selectCurvedDistribution(0, Config.bitcrusherQuantizationRange - 1, Config.bitcrusherQuantizationRange >> 1, 2);\n            }\n            if (Math.random() < 0.1) {\n                instrument.effects |= 1 << EffectType.chorus;\n                instrument.chorus = selectCurvedDistribution(1, Config.chorusRange - 1, Config.chorusRange - 1, 1);\n            }\n            if (Math.random() < 0.1) {\n                instrument.echoSustain = selectCurvedDistribution(0, Config.echoSustainRange - 1, Config.echoSustainRange >> 1, 2);\n                instrument.echoDelay = selectCurvedDistribution(0, Config.echoDelayRange - 1, Config.echoDelayRange >> 1, 2);\n                if (instrument.echoSustain != 0 || instrument.echoDelay != 0) {\n                    instrument.effects |= 1 << EffectType.echo;\n                }\n            }\n            if (Math.random() < 0.5) {\n                instrument.effects |= 1 << EffectType.reverb;\n                instrument.reverb = selectCurvedDistribution(1, Config.reverbRange - 1, 1, 1);\n            }\n\n            function normalize(harmonics: number[]): void {\n                let max: number = 0;\n                for (const value of harmonics) {\n                    if (value > max) max = value;\n                }\n                for (let i: number = 0; i < harmonics.length; i++) {\n                    harmonics[i] = Config.harmonicsMax * harmonics[i] / max;\n                }\n            }\n            switch (type) {\n                case InstrumentType.noise: {\n                    instrument.chipNoise = (Math.random() * Config.chipNoises.length) | 0;\n                } break;\n                case InstrumentType.spectrum: {\n                    const spectrumGenerators: Function[] = [\n                        (): number[] => {\n                            const spectrum: number[] = [];\n                            for (let i: number = 0; i < Config.spectrumControlPoints; i++) {\n                                spectrum[i] = (Math.random() < 0.5) ? Math.random() : 0.0;\n                            }\n                            return spectrum;\n                        },\n                        (): number[] => {\n                            let current: number = 1.0;\n                            const spectrum: number[] = [current];\n                            for (let i = 1; i < Config.spectrumControlPoints; i++) {\n                                current *= Math.pow(2, Math.random() - 0.52);\n                                spectrum[i] = current;\n                            }\n                            return spectrum;\n                        },\n                        (): number[] => {\n                            let current: number = 1.0;\n                            const spectrum: number[] = [current];\n                            for (let i = 1; i < Config.spectrumControlPoints; i++) {\n                                current *= Math.pow(2, Math.random() - 0.52);\n                                spectrum[i] = current * Math.random();\n                            }\n                            return spectrum;\n                        },\n                    ];\n                    const generator = spectrumGenerators[(Math.random() * spectrumGenerators.length) | 0];\n                    const spectrum: number[] = generator();\n                    normalize(spectrum);\n                    for (let i: number = 0; i < Config.spectrumControlPoints; i++) {\n                        instrument.spectrumWave.spectrum[i] = Math.round(spectrum[i]);\n                    }\n                    instrument.spectrumWave.markCustomWaveDirty();\n                } break;\n                default: throw new Error(\"Unhandled noise instrument type in random generator.\");\n            }\n        } else {\n            const type: InstrumentType = selectWeightedRandom([\n                { item: InstrumentType.chip, weight: 4 },\n                { item: InstrumentType.pwm, weight: 4 },\n                { item: InstrumentType.supersaw, weight: 5 },\n                // { item: InstrumentType.customChipWave, weight: 3 },\n                { item: InstrumentType.harmonics, weight: 5 },\n                { item: InstrumentType.pickedString, weight: 5 },\n                { item: InstrumentType.spectrum, weight: 1 },\n                { item: InstrumentType.fm, weight: 5 },\n            ]);\n            instrument.preset = instrument.type = type;\n\n            instrument.fadeIn = (Math.random() < 0.5) ? 0 : selectCurvedDistribution(0, Config.fadeInRange - 1, 0, 2);\n            instrument.fadeOut = selectCurvedDistribution(0, Config.fadeOutTicks.length - 1, Config.fadeOutNeutral, 2);\n            if (type == InstrumentType.chip || type == InstrumentType.harmonics || type == InstrumentType.pickedString) {\n                instrument.unison = Config.unisons.dictionary[selectWeightedRandom([\n                    { item: \"none\", weight: 10 },\n                    { item: \"shimmer\", weight: 5 },\n                    { item: \"hum\", weight: 4 },\n                    { item: \"honky tonk\", weight: 3 },\n                    { item: \"dissonant\", weight: 1 },\n                    { item: \"fifth\", weight: 1 },\n                    { item: \"octave\", weight: 2 },\n                    { item: \"bowed\", weight: 2 },\n                    { item: \"piano\", weight: 5 },\n                    { item: \"warbled\", weight: 3 },\n                ])].index;\n            }\n\n            if (Math.random() < 0.1) {\n                instrument.effects |= 1 << EffectType.transition;\n                instrument.transition = Config.transitions.dictionary[selectWeightedRandom([\n                    { item: \"interrupt\", weight: 1 },\n                    { item: \"slide\", weight: 2 },\n                ])].index;\n            }\n            if (Math.random() < 0.2) {\n                instrument.effects |= 1 << EffectType.chord;\n                instrument.chord = Config.chords.dictionary[selectWeightedRandom([\n                    { item: \"strum\", weight: 2 },\n                    { item: \"arpeggio\", weight: 1 },\n                ])].index;\n            }\n            if (Math.random() < 0.05) {\n                instrument.pitchShift = selectCurvedDistribution(0, Config.pitchShiftRange - 1, Config.pitchShiftCenter, 1);\n                if (instrument.pitchShift != Config.pitchShiftCenter) {\n                    instrument.effects |= 1 << EffectType.pitchShift;\n                    instrument.addEnvelope(Config.instrumentAutomationTargets.dictionary[\"pitchShift\"].index, 0, Config.envelopes.dictionary[selectWeightedRandom([\n                        { item: \"flare 1\", weight: 2 },\n                        { item: \"flare 2\", weight: 1 },\n                        { item: \"flare 3\", weight: 1 },\n                        { item: \"twang 1\", weight: 16 },\n                        { item: \"twang 2\", weight: 8 },\n                        { item: \"twang 3\", weight: 4 },\n                        { item: \"decay 1\", weight: 4 },\n                        { item: \"decay 2\", weight: 2 },\n                        { item: \"decay 3\", weight: 1 },\n                    ])].index);\n                }\n            }\n            if (Math.random() < 0.25) {\n                instrument.effects |= 1 << EffectType.vibrato;\n                instrument.vibrato = selectCurvedDistribution(0, Config.echoSustainRange - 1, Config.echoSustainRange >> 1, 2);\n                instrument.vibrato = Config.vibratos.dictionary[selectWeightedRandom([\n                    { item: \"light\", weight: 2 },\n                    { item: \"delayed\", weight: 2 },\n                    { item: \"heavy\", weight: 1 },\n                    { item: \"shaky\", weight: 2 },\n                ])].index;\n            }\n            if (Math.random() < 0.1) {\n                instrument.effects |= 1 << EffectType.distortion;\n                instrument.distortion = selectCurvedDistribution(1, Config.distortionRange - 1, Config.distortionRange - 1, 2);\n            }\n            if (effectsIncludeDistortion(instrument.effects) && Math.random() < 0.8) {\n                instrument.effects |= 1 << EffectType.noteFilter;\n                applyFilterPoints(instrument.noteFilter, [\n                    new PotentialFilterPoint(1.0, FilterType.lowPass, midFreq, maxFreq, 2000.0, -1),\n                    new PotentialFilterPoint(0.9, FilterType.highPass, 0, midFreq - 1, 500.0, -1),\n                    new PotentialFilterPoint(0.4, FilterType.peak, 0, maxFreq, 1400.0, 0),\n                ]);\n            } else if (Math.random() < 0.5) {\n                instrument.effects |= 1 << EffectType.noteFilter;\n                applyFilterPoints(instrument.noteFilter, [\n                    new PotentialFilterPoint(1.0, FilterType.lowPass, midFreq, maxFreq, 8000.0, -1),\n                ]);\n                instrument.addEnvelope(Config.instrumentAutomationTargets.dictionary[\"noteFilterAllFreqs\"].index, 0, Config.envelopes.dictionary[selectWeightedRandom([\n                    { item: \"punch\", weight: 6 },\n                    { item: \"flare 1\", weight: 2 },\n                    { item: \"flare 2\", weight: 4 },\n                    { item: \"flare 3\", weight: 2 },\n                    { item: \"twang 1\", weight: 2 },\n                    { item: \"twang 2\", weight: 4 },\n                    { item: \"twang 3\", weight: 4 },\n                    { item: \"swell 1\", weight: 4 },\n                    { item: \"swell 2\", weight: 2 },\n                    { item: \"swell 3\", weight: 1 },\n                    { item: \"tremolo1\", weight: 1 },\n                    { item: \"tremolo2\", weight: 1 },\n                    { item: \"tremolo3\", weight: 1 },\n                    { item: \"tremolo4\", weight: 1 },\n                    { item: \"tremolo5\", weight: 1 },\n                    { item: \"tremolo6\", weight: 1 },\n                    { item: \"decay 1\", weight: 1 },\n                    { item: \"decay 2\", weight: 2 },\n                    { item: \"decay 3\", weight: 2 },\n                ])].index);\n            }\n            if (Math.random() < 0.1) {\n                instrument.effects |= 1 << EffectType.bitcrusher;\n                instrument.bitcrusherFreq = selectCurvedDistribution(0, Config.bitcrusherFreqRange - 1, 0, 2);\n                instrument.bitcrusherQuantization = selectCurvedDistribution(0, Config.bitcrusherQuantizationRange - 1, Config.bitcrusherQuantizationRange >> 1, 2);\n            }\n            if (Math.random() < 0.1) {\n                instrument.effects |= 1 << EffectType.chorus;\n                instrument.chorus = selectCurvedDistribution(1, Config.chorusRange - 1, Config.chorusRange - 1, 1);\n            }\n            if (Math.random() < 0.1) {\n                instrument.echoSustain = selectCurvedDistribution(0, Config.echoSustainRange - 1, Config.echoSustainRange >> 1, 2);\n                instrument.echoDelay = selectCurvedDistribution(0, Config.echoDelayRange - 1, Config.echoDelayRange >> 1, 2);\n                if (instrument.echoSustain != 0 || instrument.echoDelay != 0) {\n                    instrument.effects |= 1 << EffectType.echo;\n                }\n            }\n            if (Math.random() < 0.5) {\n                instrument.effects |= 1 << EffectType.reverb;\n                instrument.reverb = selectCurvedDistribution(1, Config.reverbRange - 1, 1, 1);\n            }\n\n            function normalize(harmonics: number[]): void {\n                let max: number = 0;\n                for (const value of harmonics) {\n                    if (value > max) max = value;\n                }\n                for (let i: number = 0; i < harmonics.length; i++) {\n                    harmonics[i] = Config.harmonicsMax * harmonics[i] / max;\n                }\n            }\n            switch (type) {\n                case InstrumentType.chip: {\n                    instrument.chipWave = (Math.random() * Config.chipWaves.length) | 0;\n                } break;\n                case InstrumentType.pwm:\n                case InstrumentType.supersaw: {\n\t\t\t\t\tif (type == InstrumentType.supersaw) {\n\t\t\t\t\t\tinstrument.supersawDynamism = selectCurvedDistribution(0, Config.supersawDynamismMax, Config.supersawDynamismMax, 2);\n\t\t\t\t\t\tinstrument.supersawSpread = selectCurvedDistribution(0, Config.supersawSpreadMax, Math.ceil(Config.supersawSpreadMax / 3), 4);\n\t\t\t\t\t\tinstrument.supersawShape = selectCurvedDistribution(0, Config.supersawShapeMax, 0, 4);\n\t\t\t\t\t}\n                    instrument.pulseWidth = selectCurvedDistribution(0, Config.pulseWidthRange - 1, Config.pulseWidthRange - 1, 2);\n\n                    if (Math.random() < 0.6) {\n                        instrument.addEnvelope(Config.instrumentAutomationTargets.dictionary[\"pulseWidth\"].index, 0, Config.envelopes.dictionary[selectWeightedRandom([\n                            { item: \"punch\", weight: 6 },\n                            { item: \"flare 1\", weight: 2 },\n                            { item: \"flare 2\", weight: 4 },\n                            { item: \"flare 3\", weight: 2 },\n                            { item: \"twang 1\", weight: 2 },\n                            { item: \"twang 2\", weight: 4 },\n                            { item: \"twang 3\", weight: 4 },\n                            { item: \"swell 1\", weight: 4 },\n                            { item: \"swell 2\", weight: 2 },\n                            { item: \"swell 3\", weight: 1 },\n                            { item: \"tremolo1\", weight: 1 },\n                            { item: \"tremolo2\", weight: 1 },\n                            { item: \"tremolo3\", weight: 1 },\n                            { item: \"tremolo4\", weight: 1 },\n                            { item: \"tremolo5\", weight: 1 },\n                            { item: \"tremolo6\", weight: 1 },\n                            { item: \"decay 1\", weight: 1 },\n                            { item: \"decay 2\", weight: 2 },\n                            { item: \"decay 3\", weight: 2 },\n                        ])].index);\n                    }\n                } break;\n                case InstrumentType.pickedString:\n                case InstrumentType.harmonics: {\n                    if (type == InstrumentType.pickedString) {\n                        instrument.stringSustain = (Math.random() * Config.stringSustainRange) | 0;\n                    }\n\n                    const harmonicGenerators: Function[] = [\n                        (): number[] => {\n                            const harmonics: number[] = [];\n                            for (let i: number = 0; i < Config.harmonicsControlPoints; i++) {\n                                harmonics[i] = (Math.random() < 0.4) ? Math.random() : 0.0;\n                            }\n                            harmonics[(Math.random() * 8) | 0] = Math.pow(Math.random(), 0.25);\n                            return harmonics;\n                        },\n                        (): number[] => {\n                            let current: number = 1.0;\n                            const harmonics: number[] = [current];\n                            for (let i = 1; i < Config.harmonicsControlPoints; i++) {\n                                current *= Math.pow(2, Math.random() - 0.55);\n                                harmonics[i] = current;\n                            }\n                            return harmonics;\n                        },\n                        (): number[] => {\n                            let current: number = 1.0;\n                            const harmonics: number[] = [current];\n                            for (let i = 1; i < Config.harmonicsControlPoints; i++) {\n                                current *= Math.pow(2, Math.random() - 0.55);\n                                harmonics[i] = current * Math.random();\n                            }\n                            return harmonics;\n                        },\n                    ];\n                    const generator = harmonicGenerators[(Math.random() * harmonicGenerators.length) | 0];\n                    const harmonics: number[] = generator();\n                    normalize(harmonics);\n                    for (let i: number = 0; i < Config.harmonicsControlPoints; i++) {\n                        instrument.harmonicsWave.harmonics[i] = Math.round(harmonics[i]);\n                    }\n                    instrument.harmonicsWave.markCustomWaveDirty();\n                } break;\n                case InstrumentType.spectrum: {\n                    const spectrum: number[] = [];\n                    for (let i: number = 0; i < Config.spectrumControlPoints; i++) {\n                        const isHarmonic: boolean = i == 0 || i == 7 || i == 11 || i == 14 || i == 16 || i == 18 || i == 21;\n                        if (isHarmonic) {\n                            spectrum[i] = Math.pow(Math.random(), 0.25);\n                        } else {\n                            spectrum[i] = Math.pow(Math.random(), 3) * 0.5;\n                        }\n                    }\n                    normalize(spectrum);\n                    for (let i: number = 0; i < Config.spectrumControlPoints; i++) {\n                        instrument.spectrumWave.spectrum[i] = Math.round(spectrum[i]);\n                    }\n                    instrument.spectrumWave.markCustomWaveDirty();\n                } break;\n                case InstrumentType.fm: {\n                    instrument.algorithm = (Math.random() * Config.algorithms.length) | 0;\n                    instrument.feedbackType = (Math.random() * Config.feedbacks.length) | 0;\n                    const algorithm: Algorithm = Config.algorithms[instrument.algorithm];\n                    for (let i: number = 0; i < algorithm.carrierCount; i++) {\n                        instrument.operators[i].frequency = selectCurvedDistribution(0, Config.operatorFrequencies.length - 1, 0, 3);\n                        instrument.operators[i].amplitude = selectCurvedDistribution(0, Config.operatorAmplitudeMax, Config.operatorAmplitudeMax - 1, 2);\n                        instrument.operators[i].waveform = Config.operatorWaves.dictionary[selectWeightedRandom([\n                            { item: \"sine\", weight: 10 },\n                            { item: \"triangle\", weight: 6 },\n                            { item: \"sawtooth\", weight: 3 },\n                            { item: \"pulse width\", weight: 6 },\n                            { item: \"ramp\", weight: 3 },\n                            { item: \"trapezoid\", weight: 4 },\n                        ])].index;\n                        if (instrument.operators[i].waveform == 3/*\"pulse width\"*/) {\n                            instrument.operators[i].pulseWidth = selectWeightedRandom([\n                                { item: 0, weight: 3 },\n                                { item: 1, weight: 5 },\n                                { item: 2, weight: 7 },\n                                { item: 3, weight: 10 },\n                                { item: 4, weight: 15 },\n                                { item: 5, weight: 25 }, // 50%\n                                { item: 6, weight: 15 },\n                                { item: 7, weight: 10 },\n                                { item: 8, weight: 7 },\n                                { item: 9, weight: 5 },\n                                { item: 9, weight: 3 },\n                            ]);\n                        }\n                    }\n                    for (let i: number = algorithm.carrierCount; i < Config.operatorCount; i++) {\n                        instrument.operators[i].frequency = selectCurvedDistribution(3, Config.operatorFrequencies.length - 1, 0, 3);\n                        instrument.operators[i].amplitude = (Math.pow(Math.random(), 2) * Config.operatorAmplitudeMax) | 0;\n                        if (instrument.envelopeCount < Config.maxEnvelopeCount && Math.random() < 0.4) {\n                            instrument.addEnvelope(Config.instrumentAutomationTargets.dictionary[\"operatorAmplitude\"].index, i, Config.envelopes.dictionary[selectWeightedRandom([\n                                { item: \"punch\", weight: 2 },\n                                { item: \"flare 1\", weight: 2 },\n                                { item: \"flare 2\", weight: 2 },\n                                { item: \"flare 3\", weight: 2 },\n                                { item: \"twang 1\", weight: 2 },\n                                { item: \"twang 2\", weight: 2 },\n                                { item: \"twang 3\", weight: 2 },\n                                { item: \"swell 1\", weight: 2 },\n                                { item: \"swell 2\", weight: 2 },\n                                { item: \"swell 3\", weight: 2 },\n                                { item: \"tremolo1\", weight: 1 },\n                                { item: \"tremolo2\", weight: 1 },\n                                { item: \"tremolo3\", weight: 1 },\n                                { item: \"tremolo4\", weight: 1 },\n                                { item: \"tremolo5\", weight: 1 },\n                                { item: \"tremolo6\", weight: 1 },\n                                { item: \"decay 1\", weight: 1 },\n                                { item: \"decay 2\", weight: 1 },\n                                { item: \"decay 3\", weight: 1 },\n                            ])].index);\n                            instrument.operators[i].waveform = Config.operatorWaves.dictionary[selectWeightedRandom([\n                                { item: \"sine\", weight: 10 },\n                                { item: \"triangle\", weight: 6 },\n                                { item: \"sawtooth\", weight: 3 },\n                                { item: \"pulse width\", weight: 6 },\n                                { item: \"ramp\", weight: 3 },\n                                { item: \"trapezoid\", weight: 4 },\n                            ])].index;\n                            if (instrument.operators[i].waveform == 3) {\n                                instrument.operators[i].pulseWidth = selectWeightedRandom([\n                                    { item: 0, weight: 3 },\n                                    { item: 1, weight: 5 },\n                                    { item: 2, weight: 7 },\n                                    { item: 3, weight: 10 },\n                                    { item: 4, weight: 15 },\n                                    { item: 5, weight: 25 }, // 50%\n                                    { item: 6, weight: 15 },\n                                    { item: 7, weight: 10 },\n                                    { item: 8, weight: 7 },\n                                    { item: 9, weight: 5 },\n                                    { item: 9, weight: 3 },\n                                ]);\n                            }\n                        }\n                        if (instrument.envelopeCount < Config.maxEnvelopeCount && Math.random() < 0.05) {\n                            instrument.addEnvelope(Config.instrumentAutomationTargets.dictionary[\"operatorFrequency\"].index, i, Config.envelopes.dictionary[selectWeightedRandom([\n                                { item: \"punch\", weight: 4 },\n                                { item: \"flare 1\", weight: 4 },\n                                { item: \"flare 2\", weight: 2 },\n                                { item: \"flare 3\", weight: 1 },\n                                { item: \"twang 1\", weight: 16 },\n                                { item: \"twang 2\", weight: 2 },\n                                { item: \"twang 3\", weight: 1 },\n                                { item: \"swell 1\", weight: 4 },\n                                { item: \"swell 2\", weight: 2 },\n                                { item: \"swell 3\", weight: 1 },\n                                { item: \"decay 1\", weight: 2 },\n                                { item: \"decay 2\", weight: 1 },\n                                { item: \"decay 3\", weight: 1 },\n                            ])].index);\n                        }\n                    }\n                    instrument.feedbackAmplitude = (Math.pow(Math.random(), 3) * Config.operatorAmplitudeMax) | 0;\n                    if (instrument.envelopeCount < Config.maxEnvelopeCount && Math.random() < 0.4) {\n                        instrument.addEnvelope(Config.instrumentAutomationTargets.dictionary[\"feedbackAmplitude\"].index, 0, Config.envelopes.dictionary[selectWeightedRandom([\n                            { item: \"punch\", weight: 2 },\n                            { item: \"flare 1\", weight: 2 },\n                            { item: \"flare 2\", weight: 2 },\n                            { item: \"flare 3\", weight: 2 },\n                            { item: \"twang 1\", weight: 2 },\n                            { item: \"twang 2\", weight: 2 },\n                            { item: \"twang 3\", weight: 2 },\n                            { item: \"swell 1\", weight: 2 },\n                            { item: \"swell 2\", weight: 2 },\n                            { item: \"swell 3\", weight: 2 },\n                            { item: \"tremolo1\", weight: 1 },\n                            { item: \"tremolo2\", weight: 1 },\n                            { item: \"tremolo3\", weight: 1 },\n                            { item: \"tremolo4\", weight: 1 },\n                            { item: \"tremolo5\", weight: 1 },\n                            { item: \"tremolo6\", weight: 1 },\n                            { item: \"decay 1\", weight: 1 },\n                            { item: \"decay 2\", weight: 1 },\n                            { item: \"decay 3\", weight: 1 },\n                        ])].index);\n                    }\n                } break;\n                default: throw new Error(\"Unhandled pitched instrument type in random generator.\");\n            }\n        }\n\n        doc.notifier.changed();\n        this._didSomething();\n    }\n}\n\nexport class ChangeTransition extends Change {\n    constructor(doc: SongDocument, newValue: number) {\n        super();\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\n        const oldValue: number = instrument.transition;\n        if (oldValue != newValue) {\n            this._didSomething();\n            instrument.transition = newValue;\n            instrument.preset = instrument.type;\n            doc.notifier.changed();\n        }\n    }\n}\n\nexport class ChangeToggleEffects extends Change {\n    constructor(doc: SongDocument, toggleFlag: number, useInstrument: Instrument | null) {\n        super();\n        let instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\n        if (useInstrument != null)\n            instrument = useInstrument;\n        const oldValue: number = instrument.effects;\n        const wasSelected: boolean = ((oldValue & (1 << toggleFlag)) != 0);\n        const newValue: number = wasSelected ? (oldValue & (~(1 << toggleFlag))) : (oldValue | (1 << toggleFlag));\n        instrument.effects = newValue;\n        // As a special case, toggling the panning effect doesn't remove the preset.\n        if (toggleFlag != EffectType.panning) instrument.preset = instrument.type;\n        // Remove AA when distortion is turned off.\n        if (toggleFlag == EffectType.distortion && wasSelected)\n            instrument.aliases = false;\n        if (wasSelected) instrument.clearInvalidEnvelopeTargets();\n        this._didSomething();\n        doc.notifier.changed();\n    }\n}\n\n\nexport class ChangePatternNumbers extends Change {\n    constructor(doc: SongDocument, value: number, startBar: number, startChannel: number, width: number, height: number) {\n        super();\n        if (value > doc.song.patternsPerChannel) throw new Error(\"invalid pattern\");\n\n        for (let bar: number = startBar; bar < startBar + width; bar++) {\n            for (let channelIndex: number = startChannel; channelIndex < startChannel + height; channelIndex++) {\n                if (doc.song.channels[channelIndex].bars[bar] != value) {\n                    doc.song.channels[channelIndex].bars[bar] = value;\n                    this._didSomething();\n                }\n            }\n        }\n\n        //Make mod channels shift viewed instrument over when pattern numbers change\n        if (startChannel >= doc.song.pitchChannelCount + doc.song.noiseChannelCount) {\n            const pattern: Pattern | null = doc.getCurrentPattern();\n            if (pattern != null) {\n                doc.viewedInstrument[startChannel] = pattern.instruments[0];\n            }\n            else {\n                doc.viewedInstrument[startChannel] = 0;\n            }\n        }\n\n        doc.notifier.changed();\n    }\n}\n\nexport class ChangeBarCount extends Change {\n    constructor(doc: SongDocument, newValue: number, atBeginning: boolean) {\n        super();\n        if (doc.song.barCount != newValue) {\n            for (const channel of doc.song.channels) {\n                if (atBeginning) {\n                    while (channel.bars.length < newValue) {\n                        channel.bars.unshift(0);\n                    }\n                    if (doc.song.barCount > newValue) {\n                        channel.bars.splice(0, doc.song.barCount - newValue);\n                    }\n                } else {\n                    while (channel.bars.length < newValue) {\n                        channel.bars.push(0);\n                    }\n                    channel.bars.length = newValue;\n                }\n            }\n\n            if (atBeginning) {\n                const diff: number = newValue - doc.song.barCount;\n                doc.bar = Math.max(0, doc.bar + diff);\n                if (diff < 0 || doc.barScrollPos > 0) {\n                    doc.barScrollPos = Math.max(0, doc.barScrollPos + diff);\n                }\n                doc.song.loopStart = Math.max(0, doc.song.loopStart + diff);\n            }\n            doc.bar = Math.min(doc.bar, newValue - 1);\n            doc.song.loopLength = Math.min(newValue, doc.song.loopLength);\n            doc.song.loopStart = Math.min(newValue - doc.song.loopLength, doc.song.loopStart);\n            doc.song.barCount = newValue;\n            doc.notifier.changed();\n\n            this._didSomething();\n        }\n    }\n}\n\nexport class ChangeInsertBars extends Change {\n    constructor(doc: SongDocument, start: number, count: number) {\n        super();\n\n        const newLength: number = Math.min(Config.barCountMax, doc.song.barCount + count);\n        count = newLength - doc.song.barCount;\n        if (count == 0) return;\n\n        for (const channel of doc.song.channels) {\n            while (channel.bars.length < newLength) {\n                channel.bars.splice(start, 0, 0);\n            }\n        }\n        doc.song.barCount = newLength;\n\n        doc.bar += count;\n        doc.barScrollPos += count;\n        if (doc.song.loopStart >= start) {\n            doc.song.loopStart += count;\n        } else if (doc.song.loopStart + doc.song.loopLength >= start) {\n            doc.song.loopLength += count;\n        }\n\n        doc.notifier.changed();\n        this._didSomething();\n    }\n}\n\nexport class ChangeDeleteBars extends Change {\n    constructor(doc: SongDocument, start: number, count: number) {\n        super();\n\n        for (const channel of doc.song.channels) {\n            channel.bars.splice(start, count);\n            if (channel.bars.length == 0) channel.bars.push(0);\n        }\n        doc.song.barCount = Math.max(1, doc.song.barCount - count);\n\n        doc.bar = Math.max(0, doc.bar - count);\n\n        doc.barScrollPos = Math.max(0, doc.barScrollPos - count);\n        if (doc.song.loopStart >= start) {\n            doc.song.loopStart = Math.max(0, doc.song.loopStart - count);\n        } else if (doc.song.loopStart + doc.song.loopLength > start) {\n            doc.song.loopLength -= count;\n        }\n        doc.song.loopLength = Math.max(1, Math.min(doc.song.barCount - doc.song.loopStart, doc.song.loopLength));\n\n        doc.notifier.changed();\n        this._didSomething();\n    }\n}\n\nexport class ChangeLimiterSettings extends Change {\n    constructor(doc: SongDocument, limitRatio: number, compressionRatio: number, limitThreshold: number, compressionThreshold: number, limitRise: number, limitDecay: number, masterGain: number) {\n        super();\n\n        // This check causes issues with the state change handler because it gets superceded by whenupdated when the limiter prompt closes for some reason, causing the state to revert. I think it's because the notifier change needs to happen right as the prompt closes.\n        //if (limitRatio != doc.song.limitRatio || compressionRatio != doc.song.compressionRatio || limitThreshold != doc.song.limitThreshold || compressionThreshold != doc.song.compressionThreshold || limitRise != doc.song.limitRise || limitDecay != doc.song.limitDecay) {\n\n        doc.song.limitRatio = limitRatio;\n        doc.song.compressionRatio = compressionRatio;\n        doc.song.limitThreshold = limitThreshold;\n        doc.song.compressionThreshold = compressionThreshold;\n        doc.song.limitRise = limitRise;\n        doc.song.limitDecay = limitDecay;\n        doc.song.masterGain = masterGain;\n\n        doc.notifier.changed();\n        this._didSomething();\n        //}\n    }\n}\n\nexport class ChangeChannelOrder extends Change {\n    constructor(doc: SongDocument, selectionMin: number, selectionMax: number, offset: number) {\n        super();\n        // Change the order of two channels by swapping.\n        doc.song.channels.splice(selectionMin + offset, 0, ...doc.song.channels.splice(selectionMin, selectionMax - selectionMin + 1));\n\n        // Update mods for each channel\n        selectionMax = Math.max(selectionMax, selectionMin);\n        for (let channelIndex: number = doc.song.pitchChannelCount + doc.song.noiseChannelCount; channelIndex < doc.song.getChannelCount(); channelIndex++) {\n            for (let instrumentIdx: number = 0; instrumentIdx < doc.song.channels[channelIndex].instruments.length; instrumentIdx++) {\n                let instrument: Instrument = doc.song.channels[channelIndex].instruments[instrumentIdx];\n                for (let i: number = 0; i < Config.modCount; i++) {\n                    if (instrument.modChannels[i] >= selectionMin && instrument.modChannels[i] <= selectionMax) {\n                        instrument.modChannels[i] += offset;\n                    }\n                    else if (instrument.modChannels[i] >= selectionMin + offset && instrument.modChannels[i] <= selectionMax + offset) {\n                        instrument.modChannels[i] -= offset * (selectionMax - selectionMin + 1);\n                    }\n                }\n            }\n        }\n\n        doc.notifier.changed();\n        this._didSomething();\n\n    }\n}\n\nexport class ChangeChannelCount extends Change {\n    constructor(doc: SongDocument, newPitchChannelCount: number, newNoiseChannelCount: number, newModChannelCount: number) {\n        super();\n        if (doc.song.pitchChannelCount != newPitchChannelCount || doc.song.noiseChannelCount != newNoiseChannelCount || doc.song.modChannelCount != newModChannelCount) {\n            const newChannels: Channel[] = [];\n\n            function changeGroup(newCount: number, oldCount: number, newStart: number, oldStart: number, octave: number, isNoise: boolean, isMod: boolean): void {\n                for (let i: number = 0; i < newCount; i++) {\n                    const channelIndex = i + newStart;\n                    const oldChannel = i + oldStart;\n                    if (i < oldCount) {\n                        newChannels[channelIndex] = doc.song.channels[oldChannel];\n                    } else {\n                        newChannels[channelIndex] = new Channel();\n                        newChannels[channelIndex].octave = octave;\n                        for (let j: number = 0; j < Config.instrumentCountMin; j++) {\n                            const instrument: Instrument = new Instrument(isNoise, isMod);\n                            if (!isMod) {\n                                const presetValue: number = pickRandomPresetValue(isNoise);\n                                const preset: Preset = EditorConfig.valueToPreset(presetValue)!;\n                                instrument.fromJsonObject(preset.settings, isNoise, isMod, doc.song.rhythm == 0 || doc.song.rhythm == 2, doc.song.rhythm >= 2);\n                                instrument.effects |= (1 << EffectType.panning); // Panning is enabled by default in JB.\n                                instrument.preset = presetValue;\n                            }\n                            newChannels[channelIndex].instruments[j] = instrument;\n                        }\n                        for (let j: number = 0; j < doc.song.patternsPerChannel; j++) {\n                            newChannels[channelIndex].patterns[j] = new Pattern();\n                        }\n                        for (let j: number = 0; j < doc.song.barCount; j++) {\n                            newChannels[channelIndex].bars[j] = 0;\n                        }\n                    }\n                }\n            }\n\n            changeGroup(newPitchChannelCount, doc.song.pitchChannelCount, 0, 0, 3, false, false);\n            changeGroup(newNoiseChannelCount, doc.song.noiseChannelCount, newPitchChannelCount, doc.song.pitchChannelCount, 0, true, false);\n            changeGroup(newModChannelCount, doc.song.modChannelCount, newNoiseChannelCount + newPitchChannelCount, doc.song.pitchChannelCount + doc.song.noiseChannelCount, 0, false, true);\n\n            let oldPitchCount: number = doc.song.pitchChannelCount;\n            doc.song.pitchChannelCount = newPitchChannelCount;\n            doc.song.noiseChannelCount = newNoiseChannelCount;\n            doc.song.modChannelCount = newModChannelCount;\n\n            for (let channelIndex: number = 0; channelIndex < doc.song.getChannelCount(); channelIndex++) {\n                doc.song.channels[channelIndex] = newChannels[channelIndex];\n            }\n            doc.song.channels.length = doc.song.getChannelCount();\n\n            doc.channel = Math.min(doc.channel, newPitchChannelCount + newNoiseChannelCount + newModChannelCount - 1);\n\n            // Determine if any mod instruments now refer to an invalid channel. Unset them if so\n            for (let channelIndex: number = doc.song.pitchChannelCount + doc.song.noiseChannelCount; channelIndex < doc.song.getChannelCount(); channelIndex++) {\n                for (let instrumentIdx: number = 0; instrumentIdx < doc.song.channels[channelIndex].instruments.length; instrumentIdx++) {\n                    for (let mod: number = 0; mod < Config.modCount; mod++) {\n\n                        let instrument: Instrument = doc.song.channels[channelIndex].instruments[instrumentIdx];\n                        let modChannel: number = instrument.modChannels[mod];\n\n                        // Boundary checking\n                        if ((modChannel >= doc.song.pitchChannelCount && modChannel < oldPitchCount) || modChannel >= doc.song.pitchChannelCount + doc.song.noiseChannelCount) {\n                            instrument.modulators[mod] = Config.modulators.dictionary[\"none\"].index;\n                        }\n\n                        // Bump indices - new pitch channel added, bump all noise mods.\n                        if (modChannel >= oldPitchCount && oldPitchCount < newPitchChannelCount) {\n                            instrument.modChannels[mod] += newPitchChannelCount - oldPitchCount;\n                        }\n                    }\n                }\n            }\n\n            doc.notifier.changed();\n\n            ColorConfig.resetColors();\n\n            this._didSomething();\n        }\n    }\n}\n\nexport class ChangeAddChannel extends ChangeGroup {\n\tconstructor(doc: SongDocument, index: number, isNoise: boolean, isMod: boolean) {\n\t\tsuper();\n\t\tconst newPitchChannelCount: number = doc.song.pitchChannelCount + (isNoise || isMod ? 0 : 1);\n        const newNoiseChannelCount: number = doc.song.noiseChannelCount + (!isNoise || isMod ? 0 : 1);\n        const newModChannelCount: number = doc.song.modChannelCount + (isNoise || !isMod ? 0 : 1);\n\n        if (newPitchChannelCount <= Config.pitchChannelCountMax && newNoiseChannelCount <= Config.noiseChannelCountMax && newModChannelCount <= Config.modChannelCountMax) {\n            const addedChannelIndex: number = isNoise ? doc.song.pitchChannelCount + doc.song.noiseChannelCount : doc.song.pitchChannelCount;\n            this.append(new ChangeChannelCount(doc, newPitchChannelCount, newNoiseChannelCount, newModChannelCount));\n            if (addedChannelIndex - 1 >= index) {\n                this.append(new ChangeChannelOrder(doc, index, addedChannelIndex - 1, 1));\n            }\n\n            doc.synth.computeLatestModValues();\n            doc.recalcChannelNames = true;\n\t\t}\n\t}\n}\n\nexport class ChangeRemoveChannel extends ChangeGroup {\n\tconstructor(doc: SongDocument, minIndex: number, maxIndex: number) {\n        super();\n\n        const oldMax: number = maxIndex;\n\n        // Update modulators - if a higher index was removed, shift down\n        for (let modChannel: number = doc.song.pitchChannelCount + doc.song.noiseChannelCount; modChannel < doc.song.channels.length; modChannel++) {\n            for (let instrumentIndex: number = 0; instrumentIndex < doc.song.channels[modChannel].instruments.length; instrumentIndex++) {\n                const modInstrument: Instrument = doc.song.channels[modChannel].instruments[instrumentIndex];\n                for (let mod: number = 0; mod < Config.modCount; mod++) {\n                    if (modInstrument.modChannels[mod] >= minIndex && modInstrument.modChannels[mod] <= oldMax) {\n                        this.append(new ChangeModChannel(doc, mod, 0, modInstrument));\n                    }\n                    else if (modInstrument.modChannels[mod] > oldMax) {\n                        this.append(new ChangeModChannel(doc, mod, modInstrument.modChannels[mod] - (oldMax - minIndex + 1) + 2, modInstrument));\n                    }\n                }\n            }\n        }\n\n\t\twhile (maxIndex >= minIndex) {\n            const isNoise: boolean = doc.song.getChannelIsNoise(maxIndex);\n            const isMod: boolean = doc.song.getChannelIsMod(maxIndex);\n\t\t\tdoc.song.channels.splice(maxIndex, 1);\n            if (isNoise) {\n                doc.song.noiseChannelCount--;\n            } else if (isMod) {\n                doc.song.modChannelCount--;\n            } else {\n\t\t\t\tdoc.song.pitchChannelCount--;\n\t\t\t}\n            maxIndex--;\n\t\t}\n\t\t\n        if (doc.song.pitchChannelCount < Config.pitchChannelCountMin) {\n            this.append(new ChangeChannelCount(doc, Config.pitchChannelCountMin, doc.song.noiseChannelCount, doc.song.modChannelCount));\n        }\n\n        ColorConfig.resetColors();\n        doc.recalcChannelNames = true;\n\n\t\tthis.append(new ChangeChannelBar(doc, Math.max(0, minIndex - 1), doc.bar));\n\n        doc.synth.computeLatestModValues();\n\n\t\tthis._didSomething();\n\t\tdoc.notifier.changed();\n\t}\n}\n\nexport class ChangeChannelBar extends Change {\n    constructor(doc: SongDocument, newChannel: number, newBar: number, silently: boolean = false) {\n        super();\n        const oldChannel: number = doc.channel;\n        const oldBar: number = doc.bar;\n        doc.channel = newChannel;\n        doc.bar = newBar;\n        if (!silently) {\n            doc.selection.scrollToSelectedPattern();\n        }\n        // Mod channels always jump to viewing the active instrument for the mod.\n        if (doc.song.getChannelIsMod(doc.channel)) {\n            const pattern: Pattern | null = doc.song!.getPattern(doc.channel, doc.bar);\n            if (pattern != null)\n                doc.viewedInstrument[doc.channel] = pattern.instruments[0];\n        }\n        doc.notifier.changed();\n        if (oldChannel != newChannel || oldBar != newBar) {\n            this._didSomething();\n        }\n    }\n}\n\nexport class ChangeUnison extends Change {\n    constructor(doc: SongDocument, newValue: number) {\n        super();\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\n        const oldValue: number = instrument.unison;\n        if (oldValue != newValue) {\n            this._didSomething();\n            instrument.unison = newValue;\n            instrument.preset = instrument.type;\n            doc.notifier.changed();\n        }\n    }\n}\n\nexport class ChangeChord extends Change {\n    constructor(doc: SongDocument, newValue: number) {\n        super();\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\n        const oldValue: number = instrument.chord;\n        if (oldValue != newValue) {\n            this._didSomething();\n            instrument.chord = newValue;\n            instrument.preset = instrument.type;\n            doc.notifier.changed();\n        }\n    }\n}\n\nexport class ChangeVibrato extends Change {\n    constructor(doc: SongDocument, newValue: number) {\n        super();\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\n        const oldValue: number = instrument.vibrato;\n        if (oldValue != newValue) {\n            instrument.vibrato = newValue;\n            instrument.vibratoDepth = Config.vibratos[instrument.vibrato].amplitude;\n            instrument.vibratoDelay = Config.vibratos[instrument.vibrato].delayTicks / 2;\n            instrument.vibratoSpeed = 10; // default\n            instrument.vibratoType = Config.vibratos[instrument.vibrato].type;\n            instrument.preset = instrument.type;\n            doc.notifier.changed();\n            this._didSomething();\n        }\n    }\n}\n\nexport class ChangeVibratoDepth extends Change {\n    constructor(doc: SongDocument, oldValue: number, newValue: number) {\n        super();\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\n        let prevVibrato: number = instrument.vibrato;\n        doc.synth.unsetMod(Config.modulators.dictionary[\"vibrato depth\"].index, doc.channel, doc.getCurrentInstrument());\n\n        doc.notifier.changed();\n        if (oldValue != newValue || prevVibrato != Config.vibratos.length) {\n            instrument.vibratoDepth = newValue / 25;\n            instrument.vibrato = Config.vibratos.length; // Custom\n            doc.notifier.changed();\n            this._didSomething();\n        }\n    }\n}\n\nexport class ChangeEnvelopeSpeed extends Change {\n    constructor(doc: SongDocument, oldValue: number, newValue: number) {\n        super();\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\n        doc.synth.unsetMod(Config.modulators.dictionary[\"envelope speed\"].index, doc.channel, doc.getCurrentInstrument());\n\n        doc.notifier.changed();\n        if (oldValue != newValue) {\n            instrument.envelopeSpeed = newValue;\n            doc.notifier.changed();\n            this._didSomething();\n        }\n    }\n}\n\nexport class ChangeVibratoSpeed extends Change {\n    constructor(doc: SongDocument, oldValue: number, newValue: number) {\n        super();\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\n        let prevVibrato: number = instrument.vibrato;\n        doc.synth.unsetMod(Config.modulators.dictionary[\"vibrato speed\"].index, doc.channel, doc.getCurrentInstrument());\n\n        doc.notifier.changed();\n        if (oldValue != newValue || prevVibrato != Config.vibratos.length) {\n            instrument.vibratoSpeed = newValue;\n            instrument.vibrato = Config.vibratos.length; // Custom\n            doc.notifier.changed();\n            this._didSomething();\n        }\n    }\n}\n\nexport class ChangeVibratoDelay extends Change {\n    constructor(doc: SongDocument, oldValue: number, newValue: number) {\n        super();\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\n        let prevVibrato: number = instrument.vibrato;\n        doc.synth.unsetMod(Config.modulators.dictionary[\"vibrato delay\"].index, doc.channel, doc.getCurrentInstrument());\n\n        doc.notifier.changed();\n        if (oldValue != newValue || prevVibrato != Config.vibratos.length) {\n            instrument.vibratoDelay = newValue;\n            instrument.vibrato = Config.vibratos.length; // Custom\n            doc.notifier.changed();\n            this._didSomething();\n        }\n    }\n}\n\nexport class ChangeVibratoType extends Change {\n    constructor(doc: SongDocument, newValue: number) {\n        super();\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\n        const oldValue: number = instrument.vibratoType;\n        let prevVibrato: number = instrument.vibrato;\n\n        doc.notifier.changed();\n        if (oldValue != newValue || prevVibrato != Config.vibratos.length) {\n            instrument.vibratoType = newValue;\n            instrument.vibrato = Config.vibratos.length; // Custom\n            doc.notifier.changed();\n            this._didSomething();\n        }\n    }\n}\n\nexport class ChangeArpeggioSpeed extends Change {\n    constructor(doc: SongDocument, oldValue: number, newValue: number) {\n        super();\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\n        instrument.arpeggioSpeed = newValue;\n        doc.synth.unsetMod(Config.modulators.dictionary[\"arp speed\"].index, doc.channel, doc.getCurrentInstrument());\n\n        doc.notifier.changed();\n        if (oldValue != newValue) this._didSomething();\n    }\n}\n\nexport class ChangeFastTwoNoteArp extends Change {\n    constructor(doc: SongDocument, newValue: boolean) {\n        super();\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\n        const oldValue = instrument.fastTwoNoteArp;\n\n        doc.notifier.changed();\n        if (oldValue != newValue) {\n            instrument.fastTwoNoteArp = newValue;\n            this._didSomething();\n        }\n    }\n}\n\nexport class ChangeClicklessTransition extends Change {\n    constructor(doc: SongDocument, newValue: boolean) {\n        super();\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\n        const oldValue = instrument.clicklessTransition;\n\n        doc.notifier.changed();\n        if (oldValue != newValue) {\n            instrument.clicklessTransition = newValue;\n            this._didSomething();\n        }\n    }\n}\n\nexport class ChangeAliasing extends Change {\n    constructor(doc: SongDocument, newValue: boolean) {\n        super();\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\n        const oldValue = instrument.aliases;\n\n        doc.notifier.changed();\n        if (oldValue != newValue) {\n            instrument.aliases = newValue;\n            this._didSomething();\n        }\n    }\n}\n\nexport class ChangeDiscreteEnvelope extends Change {\n    constructor(doc: SongDocument, newValue: boolean) {\n        super();\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\n        const oldValue = instrument.discreteEnvelope;\n\n        doc.notifier.changed();\n        if (oldValue != newValue) {\n            instrument.discreteEnvelope = newValue;\n            this._didSomething();\n        }\n    }\n}\n\nexport class ChangeSpectrum extends Change {\n    constructor(doc: SongDocument, instrument: Instrument, spectrumWave: SpectrumWave) {\n        super();\n        spectrumWave.markCustomWaveDirty();\n        instrument.preset = instrument.type;\n        doc.notifier.changed();\n        this._didSomething();\n    }\n}\n\nexport class ChangeHarmonics extends Change {\n    constructor(doc: SongDocument, instrument: Instrument, harmonicsWave: HarmonicsWave) {\n        super();\n        harmonicsWave.markCustomWaveDirty();\n        instrument.preset = instrument.type;\n        doc.notifier.changed();\n        this._didSomething();\n    }\n}\n\nexport class ChangeDrumsetEnvelope extends Change {\n    constructor(doc: SongDocument, drumIndex: number, newValue: number) {\n        super();\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\n        const oldValue: number = instrument.drumsetEnvelopes[drumIndex];\n        if (oldValue != newValue) {\n            instrument.drumsetEnvelopes[drumIndex] = newValue;\n            instrument.preset = instrument.type;\n            doc.notifier.changed();\n            this._didSomething();\n        }\n    }\n}\n\nclass ChangeInstrumentSlider extends Change {\n    protected _instrument: Instrument;\n    constructor(private _doc: SongDocument) {\n        super();\n        this._instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\n    }\n\n    public commit(): void {\n        if (!this.isNoop()) {\n            this._instrument.preset = this._instrument.type;\n            this._doc.notifier.changed();\n        }\n    }\n}\n\nexport class ChangePulseWidth extends ChangeInstrumentSlider {\n    constructor(doc: SongDocument, oldValue: number, newValue: number) {\n        super(doc);\n        this._instrument.pulseWidth = newValue;\n        doc.synth.unsetMod(Config.modulators.dictionary[\"pulse width\"].index, doc.channel, doc.getCurrentInstrument());\n        doc.notifier.changed();\n        if (oldValue != newValue) this._didSomething();\n    }\n}\n\nexport class ChangeSupersawDynamism extends ChangeInstrumentSlider {\n\tconstructor(doc: SongDocument, oldValue: number, newValue: number) {\n\t\tsuper(doc);\n\t\tthis._instrument.supersawDynamism = newValue;\n        doc.synth.unsetMod(Config.modulators.dictionary[\"dynamism\"].index, doc.channel, doc.getCurrentInstrument());\n\t\tdoc.notifier.changed();\n\t\tif (oldValue != newValue) this._didSomething();\n\t}\n}\nexport class ChangeSupersawSpread extends ChangeInstrumentSlider {\n\tconstructor(doc: SongDocument, oldValue: number, newValue: number) {\n\t\tsuper(doc);\n\t\tthis._instrument.supersawSpread = newValue;\n        doc.synth.unsetMod(Config.modulators.dictionary[\"spread\"].index, doc.channel, doc.getCurrentInstrument());\n\t\tdoc.notifier.changed();\n\t\tif (oldValue != newValue) this._didSomething();\n\t}\n}\nexport class ChangeSupersawShape extends ChangeInstrumentSlider {\n\tconstructor(doc: SongDocument, oldValue: number, newValue: number) {\n\t\tsuper(doc);\n\t\tthis._instrument.supersawShape = newValue;\n        doc.synth.unsetMod(Config.modulators.dictionary[\"saw shape\"].index, doc.channel, doc.getCurrentInstrument());\n\t\tdoc.notifier.changed();\n\t\tif (oldValue != newValue) this._didSomething();\n\t}\n}\n\nexport class ChangePitchShift extends ChangeInstrumentSlider {\n    constructor(doc: SongDocument, oldValue: number, newValue: number) {\n        super(doc);\n        this._instrument.pitchShift = newValue;\n        doc.notifier.changed();\n        if (oldValue != newValue) this._didSomething();\n    }\n}\n\nexport class ChangeDetune extends ChangeInstrumentSlider {\n    constructor(doc: SongDocument, oldValue: number, newValue: number) {\n        super(doc);\n        this._instrument.detune = newValue + Config.detuneCenter;\n        doc.notifier.changed();\n        doc.synth.unsetMod(Config.modulators.dictionary[\"detune\"].index, doc.channel, doc.getCurrentInstrument());\n        if (oldValue != newValue) this._didSomething();\n    }\n}\n\nexport class ChangeDistortion extends ChangeInstrumentSlider {\n    constructor(doc: SongDocument, oldValue: number, newValue: number) {\n        super(doc);\n        this._instrument.distortion = newValue;\n        doc.notifier.changed();\n        doc.synth.unsetMod(Config.modulators.dictionary[\"distortion\"].index, doc.channel, doc.getCurrentInstrument());\n        if (oldValue != newValue) this._didSomething();\n    }\n}\n\nexport class ChangeBitcrusherFreq extends ChangeInstrumentSlider {\n    constructor(doc: SongDocument, oldValue: number, newValue: number) {\n        super(doc);\n        this._instrument.bitcrusherFreq = newValue;\n        //doc.synth.unsetMod(Config.modulators.dictionary[\"bit crush\"].index, doc.channel, doc.getCurrentInstrument());\n        doc.notifier.changed();\n        if (oldValue != newValue) this._didSomething();\n    }\n}\n\nexport class ChangeBitcrusherQuantization extends ChangeInstrumentSlider {\n    constructor(doc: SongDocument, oldValue: number, newValue: number) {\n        super(doc);\n        //doc.synth.unsetMod(Config.modulators.dictionary[\"freq crush\"].index, doc.channel, doc.getCurrentInstrument());\n        this._instrument.bitcrusherQuantization = newValue;\n        doc.notifier.changed();\n        if (oldValue != newValue) this._didSomething();\n    }\n}\n\nexport class ChangeStringSustain extends ChangeInstrumentSlider {\n    constructor(doc: SongDocument, oldValue: number, newValue: number) {\n        super(doc);\n        this._instrument.stringSustain = newValue;\n        doc.synth.unsetMod(Config.modulators.dictionary[\"sustain\"].index, doc.channel, doc.getCurrentInstrument());\n        doc.notifier.changed();\n        if (oldValue != newValue) this._didSomething();\n    }\n}\n\nexport class ChangeStringSustainType extends Change {\n\tconstructor(doc: SongDocument, newValue: SustainType) {\n\t\tsuper();\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\n\t\tconst oldValue: SustainType = instrument.stringSustainType;\n\t\tif (oldValue != newValue) {\n\t\t\tinstrument.stringSustainType = newValue;\n\t\t\tinstrument.preset = instrument.type;\n\t\t\tdoc.notifier.changed();\n\t\t\tthis._didSomething();\n\t\t}\n\t}\n}\n\nexport class ChangeEQFilterType extends Change {\n    constructor(doc: SongDocument, instrument: Instrument, newValue: boolean) {\n        super();\n        instrument.eqFilterType = newValue;\n        if (newValue == true) { // To Simple - clear eq filter\n            instrument.eqFilter.reset();\n            instrument.tmpEqFilterStart = instrument.eqFilter;\n            instrument.tmpEqFilterEnd = null;\n        }\n        else {\n            // To Advanced - convert filter\n            instrument.eqFilter.convertLegacySettings(instrument.eqFilterSimpleCut, instrument.eqFilterSimplePeak, Config.envelopes.dictionary[\"none\"]);\n            instrument.tmpEqFilterStart = instrument.eqFilter;\n            instrument.tmpEqFilterEnd = null;\n        }\n        instrument.clearInvalidEnvelopeTargets();\n        doc.notifier.changed();\n        this._didSomething();\n    }\n}\n\nexport class ChangeNoteFilterType extends Change {\n    constructor(doc: SongDocument, instrument: Instrument, newValue: boolean) {\n        super();\n        instrument.noteFilterType = newValue;\n        if (newValue == true) { // To Simple - clear note filter, kill modulators\n            instrument.noteFilter.reset();\n            instrument.tmpNoteFilterStart = instrument.noteFilter;\n            instrument.tmpNoteFilterEnd = null;\n        }\n        else {\n            // To Advanced - convert filter, kill modulators\n            instrument.noteFilter.convertLegacySettings(instrument.noteFilterSimpleCut, instrument.noteFilterSimplePeak, Config.envelopes.dictionary[\"none\"]);\n            instrument.tmpNoteFilterStart = instrument.noteFilter;\n            instrument.tmpNoteFilterEnd = null;\n        }\n        instrument.clearInvalidEnvelopeTargets();\n        doc.notifier.changed();\n        this._didSomething();\n    }\n}\n\nexport class ChangeEQFilterSimpleCut extends ChangeInstrumentSlider {\n    constructor(doc: SongDocument, oldValue: number, newValue: number) {\n        super(doc);\n        this._instrument.eqFilterSimpleCut = newValue;\n        doc.synth.unsetMod(Config.modulators.dictionary[\"eq filt cut\"].index, doc.channel, doc.getCurrentInstrument());\n        doc.notifier.changed();\n        if (oldValue != newValue) this._didSomething();\n    }\n}\n\nexport class ChangeEQFilterSimplePeak extends ChangeInstrumentSlider {\n    constructor(doc: SongDocument, oldValue: number, newValue: number) {\n        super(doc);\n        this._instrument.eqFilterSimplePeak = newValue;\n        doc.synth.unsetMod(Config.modulators.dictionary[\"eq filt peak\"].index, doc.channel, doc.getCurrentInstrument());\n        doc.notifier.changed();\n        if (oldValue != newValue) this._didSomething();\n    }\n}\n\nexport class ChangeNoteFilterSimpleCut extends ChangeInstrumentSlider {\n    constructor(doc: SongDocument, oldValue: number, newValue: number) {\n        super(doc);\n        this._instrument.noteFilterSimpleCut = newValue;\n        doc.synth.unsetMod(Config.modulators.dictionary[\"note filt cut\"].index, doc.channel, doc.getCurrentInstrument());\n        doc.notifier.changed();\n        if (oldValue != newValue) this._didSomething();\n    }\n}\n\nexport class ChangeNoteFilterSimplePeak extends ChangeInstrumentSlider {\n    constructor(doc: SongDocument, oldValue: number, newValue: number) {\n        super(doc);\n        this._instrument.noteFilterSimplePeak = newValue;\n        doc.synth.unsetMod(Config.modulators.dictionary[\"note filt peak\"].index, doc.channel, doc.getCurrentInstrument());\n        doc.notifier.changed();\n        if (oldValue != newValue) this._didSomething();\n    }\n}\n\nexport class ChangeFilterAddPoint extends UndoableChange {\n    private _doc: SongDocument;\n    private _instrument: Instrument;\n    private _instrumentPrevPreset: number;\n    private _instrumentNextPreset: number;\n    private _filterSettings: FilterSettings;\n    private _point: FilterControlPoint;\n    private _index: number;\n    private _envelopeTargetsAdd: number[] = [];\n    private _envelopeIndicesAdd: number[] = [];\n    private _envelopeTargetsRemove: number[] = [];\n    private _envelopeIndicesRemove: number[] = [];\n    constructor(doc: SongDocument, filterSettings: FilterSettings, point: FilterControlPoint, index: number, isNoteFilter: boolean, deletion: boolean = false) {\n        super(deletion);\n        this._doc = doc;\n        this._instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\n        this._instrumentNextPreset = deletion ? this._instrument.preset : this._instrument.type;\n        this._instrumentPrevPreset = deletion ? this._instrument.type : this._instrument.preset;\n        this._filterSettings = filterSettings;\n        this._point = point;\n        this._index = index;\n\n        for (let envelopeIndex: number = 0; envelopeIndex < this._instrument.envelopeCount; envelopeIndex++) {\n            let target: number = this._instrument.envelopes[envelopeIndex].target;\n            let targetIndex: number = this._instrument.envelopes[envelopeIndex].index;\n            this._envelopeTargetsAdd.push(target);\n            this._envelopeIndicesAdd.push(targetIndex);\n            if (deletion) {\n                // When deleting a filter control point, find all envelopes that targeted that\n                // point and clear them, and all envelopes that targeted later points and\n                // decrement those to keep them in sync with the new list of points.\n                const automationTarget: AutomationTarget = Config.instrumentAutomationTargets[target];\n                if (automationTarget.isFilter && (automationTarget.effect == EffectType.noteFilter) == isNoteFilter) {\n                    if (automationTarget.maxCount == Config.filterMaxPoints) {\n                        if (targetIndex == index) {\n                            target = Config.instrumentAutomationTargets.dictionary[\"none\"].index;\n                            targetIndex = 0;\n                        } else if (targetIndex > index) {\n                            targetIndex--;\n                        }\n                    } else {\n                        if (filterSettings.controlPointCount <= 1) {\n                            target = Config.instrumentAutomationTargets.dictionary[\"none\"].index;\n                            targetIndex = 0;\n                        }\n                    }\n                }\n            }\n            this._envelopeTargetsRemove.push(target);\n            this._envelopeIndicesRemove.push(targetIndex);\n        }\n\n        this._didSomething();\n        this.redo();\n    }\n\n    protected _doForwards(): void {\n        this._filterSettings.controlPoints.splice(this._index, 0, this._point);\n        this._filterSettings.controlPointCount++;\n        this._filterSettings.controlPoints.length = this._filterSettings.controlPointCount;\n        this._instrument.preset = this._instrumentNextPreset;\n        for (let envelopeIndex: number = 0; envelopeIndex < this._instrument.envelopeCount; envelopeIndex++) {\n            this._instrument.envelopes[envelopeIndex].target = this._envelopeTargetsAdd[envelopeIndex];\n            this._instrument.envelopes[envelopeIndex].index = this._envelopeIndicesAdd[envelopeIndex];\n        }\n        this._instrument.tmpEqFilterStart = this._instrument.eqFilter;\n        this._instrument.tmpEqFilterEnd = null;\n        this._instrument.tmpNoteFilterStart = this._instrument.noteFilter;\n        this._instrument.tmpNoteFilterEnd = null;\n        this._doc.notifier.changed();\n    }\n\n    protected _doBackwards(): void {\n        this._filterSettings.controlPoints.splice(this._index, 1);\n        this._filterSettings.controlPointCount--;\n        this._filterSettings.controlPoints.length = this._filterSettings.controlPointCount;\n        this._instrument.preset = this._instrumentPrevPreset;\n        for (let envelopeIndex: number = 0; envelopeIndex < this._instrument.envelopeCount; envelopeIndex++) {\n            this._instrument.envelopes[envelopeIndex].target = this._envelopeTargetsRemove[envelopeIndex];\n            this._instrument.envelopes[envelopeIndex].index = this._envelopeIndicesRemove[envelopeIndex];\n        }\n        this._instrument.tmpEqFilterStart = this._instrument.eqFilter;\n        this._instrument.tmpEqFilterEnd = null;\n        this._instrument.tmpNoteFilterStart = this._instrument.noteFilter;\n        this._instrument.tmpNoteFilterEnd = null;\n        this._doc.notifier.changed();\n    }\n}\n\nexport class FilterMoveData {\n    public point: FilterControlPoint;\n    public freq: number;\n    public gain: number;\n\n    constructor(usePoint: FilterControlPoint, useFreq: number, useGain: number) {\n        this.point = usePoint;\n        this.freq = useFreq;\n        this.gain = useGain;\n    }\n}\n\nexport class ChangeFilterMovePoint extends UndoableChange {\n    private _doc: SongDocument;\n    private _instrument: Instrument;\n    private _instrumentPrevPreset: number;\n    private _instrumentNextPreset: number;\n    private _point: FilterControlPoint;\n    private _oldFreq: number;\n    private _newFreq: number;\n    private _oldGain: number;\n    private _newGain: number;\n    public useNoteFilter: boolean;\n    public pointIndex: number;\n    public pointType: FilterType;\n    constructor(doc: SongDocument, point: FilterControlPoint, oldFreq: number, newFreq: number, oldGain: number, newGain: number, useNoteFilter: boolean, pointIndex: number) {\n        super(false);\n        this._doc = doc;\n        this._instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\n        this._instrumentNextPreset = this._instrument.type;\n        this._instrumentPrevPreset = this._instrument.preset;\n        this._point = point;\n        this._oldFreq = oldFreq;\n        this._newFreq = newFreq;\n        this._oldGain = oldGain;\n        this._newGain = newGain;\n        this.useNoteFilter = useNoteFilter;\n        this.pointIndex = pointIndex;\n        this.pointType = point.type;\n        this._didSomething();\n        this.redo();\n    }\n\n    public getMoveData(beforeChange: boolean): FilterMoveData {\n        if (beforeChange) {\n            return new FilterMoveData(this._point, this._oldFreq, this._oldGain);\n        }\n        return new FilterMoveData(this._point, this._newFreq, this._newGain);\n    }\n\n    protected _doForwards(): void {\n        this._point.freq = this._newFreq;\n        this._point.gain = this._newGain;\n        this._instrument.preset = this._instrumentNextPreset;\n        this._doc.notifier.changed();\n    }\n\n    protected _doBackwards(): void {\n        this._point.freq = this._oldFreq;\n        this._point.gain = this._oldGain;\n        this._instrument.preset = this._instrumentPrevPreset;\n        this._doc.notifier.changed();\n    }\n}\n\nexport class ChangeFilterSettings extends UndoableChange {\n    private _doc: SongDocument;\n    private _instrument: Instrument;\n    private _instrumentPrevPreset: number;\n    private _instrumentNextPreset: number;\n    private _filterSettings: FilterSettings;\n    private _subFilters: (FilterSettings | null)[];\n    private _oldSubFilters: (FilterSettings | null)[];\n    private _oldSettings: FilterSettings;\n    private _useNoteFilter: boolean;\n    constructor(doc: SongDocument, settings: FilterSettings, oldSettings: FilterSettings, useNoteFilter: boolean, subFilters: (FilterSettings | null)[] | null = null, oldSubFilters: (FilterSettings | null)[] | null = null) {\n        super(false);\n        this._doc = doc;\n        this._instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\n        this._instrumentNextPreset = this._instrument.type;\n        this._instrumentPrevPreset = this._instrument.preset;\n        this._oldSettings = oldSettings;\n        this._useNoteFilter = useNoteFilter;\n        this._filterSettings = settings;\n        if (subFilters != null && oldSubFilters != null) {\n            this._subFilters = subFilters;\n            this._oldSubFilters = oldSubFilters;\n        }\n        this._instrument.clearInvalidEnvelopeTargets();\n        this._didSomething();\n        this.redo();\n    }\n\n    protected _doForwards(): void {\n\n        if (this._useNoteFilter) {\n            this._instrument.noteFilter = this._filterSettings;\n            if (this._subFilters != null)\n                this._instrument.noteSubFilters = this._subFilters;\n            this._instrument.tmpNoteFilterStart = this._instrument.noteFilter;\n            this._instrument.tmpNoteFilterEnd = null;\n        } else {\n            this._instrument.eqFilter = this._filterSettings;\n            if (this._subFilters != null)\n                this._instrument.eqSubFilters = this._subFilters;\n            this._instrument.tmpEqFilterStart = this._instrument.eqFilter;\n            this._instrument.tmpEqFilterEnd = null;\n        }\n\n        this._instrument.preset = this._instrumentNextPreset;\n        this._instrument.clearInvalidEnvelopeTargets();\n        this._doc.notifier.changed();\n    }\n\n    protected _doBackwards(): void {\n        if (this._useNoteFilter) {\n            this._instrument.noteFilter = this._oldSettings;\n            if (this._oldSubFilters != null)\n                this._instrument.noteSubFilters = this._oldSubFilters;\n            this._instrument.tmpNoteFilterStart = this._instrument.noteFilter;\n            this._instrument.tmpNoteFilterEnd = null;\n        } else {\n            this._instrument.eqFilter = this._oldSettings;\n            if (this._oldSubFilters != null)\n                this._instrument.eqSubFilters = this._oldSubFilters;\n            this._instrument.tmpEqFilterStart = this._instrument.eqFilter;\n            this._instrument.tmpEqFilterEnd = null;\n        }\n        this._instrument.preset = this._instrumentPrevPreset;\n        this._instrument.clearInvalidEnvelopeTargets();\n        this._doc.notifier.changed();\n    }\n}\n\nexport class ChangeFadeInOut extends UndoableChange {\n    private _doc: SongDocument;\n    private _instrument: Instrument;\n    private _instrumentPrevPreset: number;\n    private _instrumentNextPreset: number;\n    private _oldFadeIn: number;\n    private _oldFadeOut: number;\n    private _newFadeIn: number;\n    private _newFadeOut: number;\n    constructor(doc: SongDocument, fadeIn: number, fadeOut: number) {\n        super(false);\n        this._doc = doc;\n        this._instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\n        this._instrumentNextPreset = this._instrument.type;\n        this._instrumentPrevPreset = this._instrument.preset;\n        this._oldFadeIn = this._instrument.fadeIn;\n        this._oldFadeOut = this._instrument.fadeOut;\n        this._newFadeIn = fadeIn;\n        this._newFadeOut = fadeOut;\n        this._didSomething();\n        this.redo();\n    }\n\n    protected _doForwards(): void {\n        this._instrument.fadeIn = this._newFadeIn;\n        this._instrument.fadeOut = this._newFadeOut;\n        this._instrument.preset = this._instrumentNextPreset;\n        this._doc.notifier.changed();\n    }\n\n    protected _doBackwards(): void {\n        this._instrument.fadeIn = this._oldFadeIn;\n        this._instrument.fadeOut = this._oldFadeOut;\n        this._instrument.preset = this._instrumentPrevPreset;\n        this._doc.notifier.changed();\n    }\n}\n\nexport class ChangeAlgorithm extends Change {\n    constructor(doc: SongDocument, newValue: number) {\n        super();\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\n        const oldValue: number = instrument.algorithm;\n        if (oldValue != newValue) {\n            instrument.algorithm = newValue;\n            instrument.preset = instrument.type;\n            doc.notifier.changed();\n            this._didSomething();\n        }\n    }\n}\n\nexport class ChangeFeedbackType extends Change {\n    constructor(doc: SongDocument, newValue: number) {\n        super();\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\n        const oldValue: number = instrument.feedbackType;\n        if (oldValue != newValue) {\n            instrument.feedbackType = newValue;\n            instrument.preset = instrument.type;\n            doc.notifier.changed();\n            this._didSomething();\n        }\n    }\n}\n\n\n\nexport class ChangeOperatorWaveform extends Change {\n    constructor(doc: SongDocument, operatorIndex: number, newValue: number) {\n        super();\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\n        const oldValue: number = instrument.operators[operatorIndex].waveform;\n        if (oldValue != newValue) {\n            instrument.operators[operatorIndex].waveform = newValue;\n            instrument.preset = instrument.type;\n            doc.notifier.changed();\n            this._didSomething();\n        }\n    }\n}\n\nexport class ChangeOperatorPulseWidth extends Change {\n    constructor(doc: SongDocument, operatorIndex: number, oldValue: number, newValue: number) {\n        super();\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\n        instrument.operators[operatorIndex].pulseWidth = newValue;\n        instrument.preset = instrument.type;\n        doc.notifier.changed();\n        if (oldValue != newValue) {\n            this._didSomething();\n        }\n    }\n}\n\nexport class ChangeOperatorFrequency extends Change {\n    constructor(doc: SongDocument, operatorIndex: number, newValue: number) {\n        super();\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\n        const oldValue: number = instrument.operators[operatorIndex].frequency;\n        if (oldValue != newValue) {\n            instrument.operators[operatorIndex].frequency = newValue;\n            instrument.preset = instrument.type;\n            doc.notifier.changed();\n            this._didSomething();\n        }\n    }\n}\n\nexport class ChangeOperatorAmplitude extends ChangeInstrumentSlider {\n    public operatorIndex: number = 0;\n    constructor(doc: SongDocument, operatorIndex: number, oldValue: number, newValue: number) {\n        super(doc);\n        this.operatorIndex = operatorIndex;\n        this._instrument.operators[operatorIndex].amplitude = newValue;\n        // Not used currently as mod is implemented as multiplicative\n        //doc.synth.unsetMod(ModSetting.mstFMSlider1 + operatorIndex, doc.channel, doc.getCurrentInstrument());\n        doc.notifier.changed();\n        if (oldValue != newValue) this._didSomething();\n    }\n}\n\nexport class ChangeFeedbackAmplitude extends ChangeInstrumentSlider {\n    constructor(doc: SongDocument, oldValue: number, newValue: number) {\n        super(doc);\n        this._instrument.feedbackAmplitude = newValue;\n        // Not used currently as mod is implemented as multiplicative\n        //doc.synth.unsetMod(ModSetting.mstFMFeedback, doc.channel, doc.getCurrentInstrument());\n        doc.notifier.changed();\n        if (oldValue != newValue) this._didSomething();\n    }\n}\n\nexport class ChangeAddChannelInstrument extends Change {\n    constructor(doc: SongDocument) {\n        super();\n        const channel: Channel = doc.song.channels[doc.channel];\n        const isNoise: boolean = doc.song.getChannelIsNoise(doc.channel);\n        const isMod: boolean = doc.song.getChannelIsMod(doc.channel);\n        const maxInstruments: number = doc.song.getMaxInstrumentsPerChannel();\n        if (channel.instruments.length >= maxInstruments) return;\n        const presetValue: number = pickRandomPresetValue(isNoise);\n        const preset: Preset = EditorConfig.valueToPreset(presetValue)!;\n        const instrument: Instrument = new Instrument(isNoise, isMod);\n        instrument.fromJsonObject(preset.settings, isNoise, isMod, false, false, 1);\n        instrument.effects |= (1 << EffectType.panning); // Panning is enabled by default in JB.\n        instrument.preset = presetValue;\n        instrument.volume = 0;\n        channel.instruments.push(instrument);\n        if (!isMod) { // Mod channels lose information when changing set instrument\n            doc.viewedInstrument[doc.channel] = channel.instruments.length - 1;\n        }\n\n        // Determine if any mod instruments were setting 'all' or 'active'. If so, bump indices since there is now a new instrument in the list.\n        for (let channelIndex: number = doc.song.pitchChannelCount + doc.song.noiseChannelCount; channelIndex < doc.song.getChannelCount(); channelIndex++) {\n            for (let instrumentIndex: number = 0; instrumentIndex < doc.song.channels[channelIndex].instruments.length; instrumentIndex++) {\n                for (let mod: number = 0; mod < Config.modCount; mod++) {\n\n                    let instrument: Instrument = doc.song.channels[channelIndex].instruments[instrumentIndex];\n                    let modInstrument: number = instrument.modInstruments[mod];\n                    let modChannel: number = instrument.modChannels[mod];\n\n                    if (modChannel == doc.channel && modInstrument >= doc.song.channels[modChannel].instruments.length-1 ) {\n                        instrument.modInstruments[mod]++;\n                    }\n                }\n            }\n        }\n        // Also, make synth re-compute mod values, since 'all'/'active' mods now retroactively apply to this new instrument.\n        doc.synth.computeLatestModValues();\n\n        doc.notifier.changed();\n        this._didSomething();\n    }\n}\n\nexport class ChangeRemoveChannelInstrument extends Change {\n    constructor(doc: SongDocument) {\n        super();\n        const channel: Channel = doc.song.channels[doc.channel];\n        if (channel.instruments.length <= Config.instrumentCountMin) return;\n        const removedIndex: number = doc.viewedInstrument[doc.channel];\n        channel.instruments.splice(removedIndex, 1);\n        if (doc.song.patternInstruments) {\n            for (const pattern of channel.patterns) {\n                for (let i: number = 0; i < pattern.instruments.length; i++) {\n                    if (pattern.instruments[i] == removedIndex) {\n                        pattern.instruments.splice(i, 1);\n                        i--;\n                    } else if (pattern.instruments[i] > removedIndex) {\n                        pattern.instruments[i]--;\n                    }\n                }\n                if (pattern.instruments.length <= 0) {\n                    pattern.instruments[0] = 0;\n                }\n            }\n        }\n\n        // Determine if any mod instruments now refer to an invalid instrument number. Unset them if so\n        for (let channelIndex: number = doc.song.pitchChannelCount + doc.song.noiseChannelCount; channelIndex < doc.song.getChannelCount(); channelIndex++) {\n            for (let instrumentIdx: number = 0; instrumentIdx < doc.song.channels[channelIndex].instruments.length; instrumentIdx++) {\n                for (let mod: number = 0; mod < Config.modCount; mod++) {\n\n                    let instrument: Instrument = doc.song.channels[channelIndex].instruments[instrumentIdx];\n                    let modInstrument: number = instrument.modInstruments[mod];\n                    let modChannel: number = instrument.modChannels[mod];\n\n                    if (modChannel == doc.channel) {\n                        // Boundary checking - check if setting was previously higher index\n                        if (modInstrument > removedIndex) {\n                            instrument.modInstruments[mod]--;\n                        }\n                        // Boundary checking - check if setting was set to the last instrument before splice\n                        else if (modInstrument == removedIndex) {\n                            instrument.modInstruments[mod] = 0;\n                            instrument.modulators[mod] = 0;\n                        }\n                    }\n\n                }\n            }\n        }\n\n        doc.notifier.changed();\n        this._didSomething();\n    }\n}\n\nexport class ChangeViewInstrument extends Change {\n    constructor(doc: SongDocument, index: number) {\n        super();\n        if (doc.viewedInstrument[doc.channel] != index) {\n            doc.viewedInstrument[doc.channel] = index;\n            if ( doc.channel >= doc.song.pitchChannelCount + doc.song.noiseChannelCount )\n                doc.recentPatternInstruments[doc.channel] = [index];\n            doc.notifier.changed();\n            this._didSomething();\n        }\n    }\n}\n\nexport class ChangeInstrumentsFlags extends Change {\n    constructor(doc: SongDocument, newLayeredInstruments: boolean, newPatternInstruments: boolean) {\n        super();\n        const oldLayeredInstruments: boolean = doc.song.layeredInstruments;\n        const oldPatternInstruments: boolean = doc.song.patternInstruments;\n        if (oldLayeredInstruments == newLayeredInstruments && oldPatternInstruments == newPatternInstruments) return;\n        doc.song.layeredInstruments = newLayeredInstruments;\n        doc.song.patternInstruments = newPatternInstruments;\n\n        for (let channelIndex: number = 0; channelIndex < doc.song.getChannelCount(); channelIndex++) {\n            const channel: Channel = doc.song.channels[channelIndex];\n            if (channel.instruments.length > doc.song.getMaxInstrumentsPerChannel()) {\n                channel.instruments.length = doc.song.getMaxInstrumentsPerChannel();\n            }\n            for (let j: number = 0; j < doc.song.patternsPerChannel; j++) {\n                const pattern: Pattern = channel.patterns[j];\n                if (!oldPatternInstruments && newPatternInstruments) {\n                    // patternInstruments was enabled, set up pattern instruments as appropriate.\n                    for (let i: number = 0; i < channel.instruments.length; i++) {\n                        pattern.instruments[i] = i;\n                    }\n                    pattern.instruments.length = channel.instruments.length;\n                }\n                discardInvalidPatternInstruments(pattern.instruments, doc.song, channelIndex);\n            }\n        }\n\n\n\n        doc.notifier.changed();\n        this._didSomething();\n    }\n}\n\n\nexport class ChangeKey extends Change {\n    constructor(doc: SongDocument, newValue: number) {\n        super();\n        if (doc.song.key != newValue) {\n            doc.song.key = newValue;\n            doc.notifier.changed();\n            this._didSomething();\n        }\n    }\n}\n\nexport class ChangeLoop extends Change {\n    constructor(private _doc: SongDocument, public oldStart: number, public oldLength: number, public newStart: number, public newLength: number) {\n        super();\n        this._doc.song.loopStart = this.newStart;\n        this._doc.song.loopLength = this.newLength;\n        this._doc.notifier.changed();\n        if (this.oldStart != this.newStart || this.oldLength != this.newLength) {\n            this._didSomething();\n        }\n    }\n}\n\nexport class ChangePitchAdded extends UndoableChange {\n    private _doc: SongDocument;\n    private _note: Note;\n    private _pitch: number;\n    private _index: number;\n    constructor(doc: SongDocument, note: Note, pitch: number, index: number, deletion: boolean = false) {\n        super(deletion);\n        this._doc = doc;\n        this._note = note;\n        this._pitch = pitch;\n        this._index = index;\n        this._didSomething();\n        this.redo();\n    }\n\n    protected _doForwards(): void {\n        this._note.pitches.splice(this._index, 0, this._pitch);\n        this._doc.notifier.changed();\n    }\n\n    protected _doBackwards(): void {\n        this._note.pitches.splice(this._index, 1);\n        this._doc.notifier.changed();\n    }\n}\n\nexport class ChangeOctave extends Change {\n    constructor(doc: SongDocument, public oldValue: number, newValue: number) {\n        super();\n        doc.song.channels[doc.channel].octave = newValue;\n        doc.notifier.changed();\n        if (oldValue != newValue) this._didSomething();\n    }\n}\n\nexport class ChangeRhythm extends ChangeGroup {\n    constructor(doc: SongDocument, newValue: number) {\n        super();\n\n        if (doc.song.rhythm != newValue) {\n            doc.song.rhythm = newValue;\n            doc.notifier.changed();\n            this._didSomething();\n        }\n    }\n}\n\nexport class ChangePaste extends ChangeGroup {\n    constructor(doc: SongDocument, pattern: Pattern, notes: any[], selectionStart: number, selectionEnd: number, oldPartDuration: number) {\n        super();\n\n        // Erase the current contents of the selection:\n        this.append(new ChangeNoteTruncate(doc, pattern, selectionStart, selectionEnd, null, true));\n\n        // Mods don't follow this sequence, so skipping for now.\n        let noteInsertionIndex: number = 0;\n        if (!doc.song.getChannelIsMod(doc.channel)) {\n            for (let i: number = 0; i < pattern.notes.length; i++) {\n                if (pattern.notes[i].start < selectionStart) {\n                    if (pattern.notes[i].end > selectionStart) throw new Error();\n\n                    noteInsertionIndex = i + 1;\n                } else if (pattern.notes[i].start < selectionEnd) {\n                    throw new Error();\n                }\n            }\n        }\n        else {\n            noteInsertionIndex = pattern.notes.length;\n        }\n\n        while (selectionStart < selectionEnd) {\n            for (const noteObject of notes) {\n                const noteStart: number = noteObject[\"start\"] + selectionStart;\n                const noteEnd: number = noteObject[\"end\"] + selectionStart;\n                if (noteStart >= selectionEnd) break;\n                const note: Note = new Note(noteObject[\"pitches\"][0], noteStart, noteEnd, noteObject[\"pins\"][0][\"size\"], false);\n                note.pitches.length = 0;\n                for (const pitch of noteObject[\"pitches\"]) {\n                    note.pitches.push(pitch);\n                }\n                note.pins.length = 0;\n                for (const pin of noteObject[\"pins\"]) {\n                    note.pins.push(makeNotePin(pin.interval, pin.time, pin.size));\n                }\n                note.continuesLastPattern = (noteObject[\"continuesLastPattern\"] === true) && (note.start == 0);\n                pattern.notes.splice(noteInsertionIndex++, 0, note);\n                if (note.end > selectionEnd) {\n                    this.append(new ChangeNoteLength(doc, note, note.start, selectionEnd));\n                }\n            }\n\n            selectionStart += oldPartDuration;\n        }\n\n        // Need to re-sort the notes by start time as they might change order because of paste.\n        if (pattern != null && doc.song.getChannelIsMod(doc.channel)) pattern.notes.sort(function (a, b) { return (a.start == b.start) ? a.pitches[0] - b.pitches[0] : a.start - b.start; });\n\n\n        doc.notifier.changed();\n        this._didSomething();\n    }\n}\n\nexport class ChangePasteInstrument extends ChangeGroup {\n    constructor(doc: SongDocument, instrument: Instrument, instrumentCopy: any) {\n        super();\n        instrument.fromJsonObject(instrumentCopy, instrumentCopy[\"isDrum\"], instrumentCopy[\"isMod\"], false, false);\n        doc.notifier.changed();\n        this._didSomething();\n    }\n}\n\nexport class ChangeSetPatternInstruments extends Change {\n    constructor(doc: SongDocument, channelIndex: number, instruments: number[], pattern: Pattern) {\n        super();\n        if (!patternsContainSameInstruments(instruments, pattern.instruments)) {\n            pattern.instruments.length = 0;\n            pattern.instruments.push(...instruments);\n            discardInvalidPatternInstruments(pattern.instruments, doc.song, channelIndex);\n            this._didSomething();\n            doc.notifier.changed();\n        }\n    }\n}\n\nexport class ChangeModChannel extends Change {\n    constructor(doc: SongDocument, mod: number, index: number, useInstrument?: Instrument) {\n        super();\n        let instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\n        if (useInstrument != undefined)\n            instrument = useInstrument;\n\n        // None, or swapping from song to instrument/vice-versa\n        if (index == 0 || (Config.modulators[instrument.modulators[mod]].forSong && index >= 2) || (!Config.modulators[instrument.modulators[mod]].forSong && index < 2)) {\n            instrument.modulators[mod] = Config.modulators.dictionary[\"none\"].index;\n        }\n\n        instrument.modChannels[mod] = index - 2;\n\n        doc.notifier.changed();\n        this._didSomething();\n    }\n}\n\nexport class ChangeModInstrument extends Change {\n    constructor(doc: SongDocument, mod: number, tgtInstrument: number) {\n        super();\n\n        let instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\n\n        if (instrument.modInstruments[mod] != tgtInstrument) {\n            instrument.modInstruments[mod] = tgtInstrument;\n\n            doc.notifier.changed();\n            this._didSomething();\n        }\n    }\n}\n\nexport class ChangeModSetting extends Change {\n    constructor(doc: SongDocument, mod: number, text: string) {\n        super();\n\n        let instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\n\n        // Populate all instruments that could be targeted by this mod setting.\n        let tgtChannel: number = instrument.modChannels[mod];\n        let usedInstruments: Instrument[] = [];\n        if (tgtChannel >= 0) { // Ignore song/none.\n            if (instrument.modInstruments[mod] == doc.song.channels[tgtChannel].instruments.length) {\n                // All - Populate list of all instruments\n                usedInstruments = usedInstruments.concat(doc.song.channels[tgtChannel].instruments);\n            } else if (instrument.modInstruments[mod] > doc.song.channels[tgtChannel].instruments.length) {\n                // Active - Populate list of only used instruments\n                let tgtPattern: Pattern | null = doc.song.getPattern(tgtChannel, doc.bar);\n                if (tgtPattern != null) {\n                    for (let i: number = 0; i < tgtPattern.instruments.length; i++) {\n                        usedInstruments.push(doc.song.channels[tgtChannel].instruments[tgtPattern.instruments[i]]);\n                    }\n                }\n            }\n            else {\n                // Single instrument used.\n                usedInstruments.push(doc.song.channels[tgtChannel].instruments[instrument.modInstruments[mod]]);\n            }\n        }\n\n        // Check if a new effect is being added - if so add the proper associated effect to the instrument(s), and truncate \"+ \" from start of text.\n        if (text.startsWith(\"+ \")) {\n            text = text.substr(2);\n            for (let i: number = 0; i < usedInstruments.length; i++) {\n                const tgtInstrument: Instrument = usedInstruments[i];\n                if (!(tgtInstrument.effects & (1 << Config.modulators.dictionary[text].associatedEffect))) {\n                    doc.record(new ChangeToggleEffects(doc, Config.modulators.dictionary[text].associatedEffect, tgtInstrument));\n                }\n            }\n        }\n\n        let setting: number = Config.modulators.dictionary[text].index;\n\n        if (instrument.modulators[mod] != setting) {\n\n            instrument.modulators[mod] = setting;\n\n            // Go through each pattern where this instrument is set, and clean up any notes that are out of bounds\n            let cap: number = Config.modulators[setting].maxRawVol;\n\n            for (let i: number = 0; i < doc.song.patternsPerChannel; i++) {\n                const pattern: Pattern = doc.song.channels[doc.channel].patterns[i];\n                if (pattern.instruments[0] == doc.getCurrentInstrument()) {\n                    for (let j: number = 0; j < pattern.notes.length; j++) {\n                        const note: Note = pattern.notes[j];\n                        if (note.pitches[0] == Config.modCount - mod - 1) {\n                            for (let k: number = 0; k < note.pins.length; k++) {\n                                const pin: NotePin = note.pins[k];\n                                if (pin.size > cap)\n                                    pin.size = cap;\n                            }\n                        }\n                    }\n                }\n            }\n\n            doc.notifier.changed();\n            this._didSomething();\n        }\n    }\n}\n\nexport class ChangeModFilter extends Change {\n    constructor(doc: SongDocument, mod: number, type: number) {\n        super();\n\n        let instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\n\n        if (instrument.modFilterTypes[mod] != type) {\n\n            instrument.modFilterTypes[mod] = type;\n\n            // Go through each pattern where this instrument is set, and clean up any notes that are out of bounds\n            let cap: number = doc.song.getVolumeCapForSetting(true, instrument.modulators[mod], instrument.modFilterTypes[mod]);\n\n            for (let i: number = 0; i < doc.song.patternsPerChannel; i++) {\n                const pattern: Pattern = doc.song.channels[doc.channel].patterns[i];\n                if (pattern.instruments[0] == doc.getCurrentInstrument()) {\n                    for (let j: number = 0; j < pattern.notes.length; j++) {\n                        const note: Note = pattern.notes[j];\n                        if (note.pitches[0] == Config.modCount - mod - 1) {\n                            for (let k: number = 0; k < note.pins.length; k++) {\n                                const pin: NotePin = note.pins[k];\n                                if (pin.size > cap)\n                                    pin.size = cap;\n                            }\n                        }\n                    }\n                }\n            }\n\n            doc.notifier.changed();\n            this._didSomething();\n        }\n    }\n}\n\nexport class ChangePatternsPerChannel extends Change {\n    constructor(doc: SongDocument, newValue: number) {\n        super();\n        if (doc.song.patternsPerChannel != newValue) {\n            for (let i: number = 0; i < doc.song.getChannelCount(); i++) {\n                const channelBars: number[] = doc.song.channels[i].bars;\n                const channelPatterns: Pattern[] = doc.song.channels[i].patterns;\n                for (let j: number = 0; j < channelBars.length; j++) {\n                    if (channelBars[j] > newValue) channelBars[j] = 0;\n                }\n                for (let j: number = channelPatterns.length; j < newValue; j++) {\n                    channelPatterns[j] = new Pattern();\n                }\n                channelPatterns.length = newValue;\n            }\n            doc.song.patternsPerChannel = newValue;\n            doc.notifier.changed();\n            this._didSomething();\n        }\n    }\n}\n\nexport class ChangeEnsurePatternExists extends UndoableChange {\n    private _doc: SongDocument;\n    private _bar: number;\n    private _channelIndex: number;\n    private _patternIndex: number;\n    private _patternOldNotes: Note[] | null = null;\n    private _oldPatternCount: number;\n    private _newPatternCount: number;\n    private _oldPatternInstruments: number[] | null = null;\n    private _newPatternInstruments: number[];\n\n    constructor(doc: SongDocument, channelIndex: number, bar: number) {\n        super(false);\n        const song: Song = doc.song;\n        if (song.channels[channelIndex].bars[bar] != 0) return;\n\n        this._doc = doc;\n        this._bar = bar;\n        this._channelIndex = channelIndex;\n        this._oldPatternCount = song.patternsPerChannel;\n        this._newPatternCount = song.patternsPerChannel;\n        if (channelIndex < doc.song.pitchChannelCount + doc.song.noiseChannelCount)\n            this._newPatternInstruments = doc.recentPatternInstruments[channelIndex].concat();\n        else\n            this._newPatternInstruments = [doc.viewedInstrument[channelIndex]];\n\n        let firstEmptyUnusedIndex: number | null = null;\n        let firstUnusedIndex: number | null = null;\n        for (let patternIndex: number = 1; patternIndex <= song.patternsPerChannel; patternIndex++) {\n            let used = false;\n            for (let barIndex: number = 0; barIndex < song.barCount; barIndex++) {\n                if (song.channels[channelIndex].bars[barIndex] == patternIndex) {\n                    used = true;\n                    break;\n                }\n            }\n            if (used) continue;\n            if (firstUnusedIndex == null) {\n                firstUnusedIndex = patternIndex;\n            }\n            const pattern: Pattern = song.channels[channelIndex].patterns[patternIndex - 1];\n            if (pattern.notes.length == 0) {\n                firstEmptyUnusedIndex = patternIndex;\n                break;\n            }\n        }\n\n        if (firstEmptyUnusedIndex != null) {\n            this._patternIndex = firstEmptyUnusedIndex;\n            this._oldPatternInstruments = song.channels[channelIndex].patterns[firstEmptyUnusedIndex - 1].instruments.concat();\n        } else if (song.patternsPerChannel < song.barCount) {\n            this._newPatternCount = song.patternsPerChannel + 1;\n            this._patternIndex = song.patternsPerChannel + 1;\n        } else if (firstUnusedIndex != null) {\n            this._patternIndex = firstUnusedIndex;\n            this._patternOldNotes = song.channels[channelIndex].patterns[firstUnusedIndex - 1].notes;\n            this._oldPatternInstruments = song.channels[channelIndex].patterns[firstUnusedIndex - 1].instruments.concat();\n        } else {\n            throw new Error();\n        }\n\n        this._didSomething();\n        this._doForwards();\n    }\n\n    protected _doForwards(): void {\n        const song: Song = this._doc.song;\n        for (let j: number = song.patternsPerChannel; j < this._newPatternCount; j++) {\n            for (let i: number = 0; i < song.getChannelCount(); i++) {\n                song.channels[i].patterns[j] = new Pattern();\n            }\n        }\n        song.patternsPerChannel = this._newPatternCount;\n        const pattern: Pattern = song.channels[this._channelIndex].patterns[this._patternIndex - 1];\n        pattern.notes = [];\n        pattern.instruments.length = 0;\n        pattern.instruments.push(...this._newPatternInstruments);\n        song.channels[this._channelIndex].bars[this._bar] = this._patternIndex;\n        this._doc.notifier.changed();\n    }\n\n    protected _doBackwards(): void {\n        const song: Song = this._doc.song;\n        const pattern: Pattern = song.channels[this._channelIndex].patterns[this._patternIndex - 1];\n        if (this._patternOldNotes != null) pattern.notes = this._patternOldNotes;\n        if (this._oldPatternInstruments != null) {\n            pattern.instruments.length = 0;\n            pattern.instruments.push(...this._oldPatternInstruments);\n        }\n        song.channels[this._channelIndex].bars[this._bar] = 0;\n        for (let i: number = 0; i < song.getChannelCount(); i++) {\n            song.channels[i].patterns.length = this._oldPatternCount;\n        }\n        song.patternsPerChannel = this._oldPatternCount;\n        this._doc.notifier.changed();\n    }\n}\n\nexport class ChangePinTime extends ChangePins {\n    constructor(doc: SongDocument | null, note: Note, pinIndex: number, shiftedTime: number, continuesLastPattern: boolean) {\n        super(doc, note);\n\n        shiftedTime -= this._oldStart;\n        const originalTime: number = this._oldPins[pinIndex].time;\n        const skipStart: number = Math.min(originalTime, shiftedTime);\n        const skipEnd: number = Math.max(originalTime, shiftedTime);\n        let setPin: boolean = false;\n        for (let i: number = 0; i < this._oldPins.length; i++) {\n            const oldPin: NotePin = note.pins[i];\n            const time: number = oldPin.time;\n            if (time < skipStart) {\n                this._newPins.push(makeNotePin(oldPin.interval, time, oldPin.size));\n            } else if (time > skipEnd) {\n                if (!setPin) {\n                    if (this._newPins.length > 0) continuesLastPattern = note.continuesLastPattern;\n                    this._newPins.push(makeNotePin(this._oldPins[pinIndex].interval, shiftedTime, this._oldPins[pinIndex].size));\n                    setPin = true;\n                }\n                this._newPins.push(makeNotePin(oldPin.interval, time, oldPin.size));\n            }\n        }\n        if (!setPin) {\n            continuesLastPattern = note.continuesLastPattern;\n            this._newPins.push(makeNotePin(this._oldPins[pinIndex].interval, shiftedTime, this._oldPins[pinIndex].size));\n        }\n\n        this._finishSetup(continuesLastPattern);\n    }\n}\n\nexport class ChangePitchBend extends ChangePins {\n    constructor(doc: SongDocument | null, note: Note, bendStart: number, bendEnd: number, bendTo: number, pitchIndex: number) {\n        super(doc, note);\n\n        bendStart -= this._oldStart;\n        bendEnd -= this._oldStart;\n        bendTo -= note.pitches[pitchIndex];\n\n        let setStart: boolean = false;\n        let setEnd: boolean = false;\n        let prevInterval: number = 0;\n        let prevSize: number = Config.noteSizeMax;\n        let persist: boolean = true;\n        let i: number;\n        let direction: number;\n        let stop: number;\n        let push: (item: NotePin) => void;\n        if (bendEnd > bendStart) {\n            i = 0;\n            direction = 1;\n            stop = note.pins.length;\n            push = (item: NotePin) => { this._newPins.push(item); };\n        } else {\n            i = note.pins.length - 1;\n            direction = -1;\n            stop = -1;\n            push = (item: NotePin) => { this._newPins.unshift(item); };\n        }\n        for (; i != stop; i += direction) {\n            const oldPin: NotePin = note.pins[i];\n            const time: number = oldPin.time;\n            for (; ;) {\n                if (!setStart) {\n                    if (time * direction <= bendStart * direction) {\n                        prevInterval = oldPin.interval;\n                        prevSize = oldPin.size;\n                    }\n                    if (time * direction < bendStart * direction) {\n                        push(makeNotePin(oldPin.interval, time, oldPin.size));\n                        break;\n                    } else {\n                        push(makeNotePin(prevInterval, bendStart, prevSize));\n                        setStart = true;\n                    }\n                } else if (!setEnd) {\n                    if (time * direction <= bendEnd * direction) {\n                        prevInterval = oldPin.interval;\n                        prevSize = oldPin.size;\n                    }\n                    if (time * direction < bendEnd * direction) {\n                        break;\n                    } else {\n                        push(makeNotePin(bendTo, bendEnd, prevSize));\n                        setEnd = true;\n                    }\n                } else {\n                    if (time * direction == bendEnd * direction) {\n                        break;\n                    } else {\n                        if (oldPin.interval != prevInterval) persist = false;\n                        push(makeNotePin(persist ? bendTo : oldPin.interval, time, oldPin.size));\n                        break;\n                    }\n                }\n            }\n        }\n        if (!setEnd) {\n            push(makeNotePin(bendTo, bendEnd, prevSize));\n        }\n\n        this._finishSetup();\n    }\n}\n\nexport class ChangePatternRhythm extends ChangeSequence {\n    constructor(doc: SongDocument, pattern: Pattern) {\n        super();\n        const minDivision: number = Config.partsPerBeat / Config.rhythms[doc.song.rhythm].stepsPerBeat;\n\n        const changeRhythm: (oldTime: number) => number = function (oldTime: number): number {\n            let thresholds: number[] | null = Config.rhythms[doc.song.rhythm].roundUpThresholds;\n            if (thresholds != null) {\n                const beatStart: number = Math.floor(oldTime / Config.partsPerBeat) * Config.partsPerBeat;\n                const remainder: number = oldTime - beatStart;\n                let newTime: number = beatStart;\n                for (const threshold of thresholds) {\n                    if (remainder >= threshold) {\n                        newTime += minDivision;\n                    } else {\n                        break;\n                    }\n                }\n                return newTime;\n            } else {\n                return Math.round(oldTime / minDivision) * minDivision;\n            }\n        };\n\n        let i: number = 0;\n        while (i < pattern.notes.length) {\n            const note: Note = pattern.notes[i];\n            if (changeRhythm(note.start) >= changeRhythm(note.end)) {\n                this.append(new ChangeNoteAdded(doc, pattern, note, i, true));\n            } else {\n                this.append(new ChangeRhythmNote(doc, note, changeRhythm));\n                i++;\n            }\n        }\n    }\n}\n\nclass ChangeRhythmNote extends ChangePins {\n    constructor(doc: SongDocument | null, note: Note, changeRhythm: (oldTime: number) => number) {\n        super(doc, note);\n\n        for (const oldPin of this._oldPins) {\n            this._newPins.push(makeNotePin(oldPin.interval, changeRhythm(oldPin.time + this._oldStart) - this._oldStart, oldPin.size));\n        }\n\n        this._finishSetup();\n    }\n}\n\nexport class ChangeMoveNotesSideways extends ChangeGroup {\n    constructor(doc: SongDocument, beatsToMove: number, strategy: string) {\n        super();\n        let partsToMove: number = Math.round((beatsToMove % doc.song.beatsPerBar) * Config.partsPerBeat);\n        if (partsToMove < 0) partsToMove += doc.song.beatsPerBar * Config.partsPerBeat;\n        if (partsToMove == 0.0) return;\n\n        switch (strategy) {\n            case \"wrapAround\": {\n                const partsPerBar: number = Config.partsPerBeat * doc.song.beatsPerBar;\n                for (const channel of doc.song.channels) {\n                    for (const pattern of channel.patterns) {\n                        const newNotes: Note[] = [];\n\n                        for (let bar: number = 1; bar >= 0; bar--) {\n                            const barStartPart: number = bar * partsPerBar;\n\n                            for (const oldNote of pattern.notes) {\n                                const absoluteNoteStart: number = oldNote.start + partsToMove;\n                                const absoluteNoteEnd: number = oldNote.end + partsToMove;\n                                const noteStartPart: number = Math.max(0, absoluteNoteStart - barStartPart);\n                                const noteEndPart: number = Math.min(partsPerBar, absoluteNoteEnd - barStartPart);\n\n                                if (noteStartPart < noteEndPart) {\n                                    projectNoteIntoBar(oldNote, absoluteNoteStart - barStartPart - noteStartPart, noteStartPart, noteEndPart, newNotes);\n                                }\n                            }\n                        }\n\n                        pattern.notes = newNotes;\n                    }\n                }\n            } break;\n            case \"overflow\": {\n                let originalBarCount: number = doc.song.barCount;\n                let originalLoopStart: number = doc.song.loopStart;\n                let originalLoopLength: number = doc.song.loopLength;\n\n                this.append(new ChangeMoveAndOverflowNotes(doc, doc.song.beatsPerBar, partsToMove));\n\n                if (beatsToMove < 0) {\n                    let firstBarIsEmpty: boolean = true;\n                    for (const channel of doc.song.channels) {\n                        if (channel.bars[0] != 0) firstBarIsEmpty = false;\n                    }\n                    if (firstBarIsEmpty) {\n                        for (const channel of doc.song.channels) {\n                            channel.bars.shift();\n                        }\n                        doc.song.barCount--;\n                    } else {\n                        originalBarCount++;\n                        originalLoopStart++;\n                        doc.bar++;\n                    }\n                }\n                while (doc.song.barCount < originalBarCount) {\n                    for (const channel of doc.song.channels) {\n                        channel.bars.push(0);\n                    }\n                    doc.song.barCount++;\n                }\n                doc.song.loopStart = originalLoopStart;\n                doc.song.loopLength = originalLoopLength;\n            } break;\n            default: throw new Error(\"Unrecognized beats-per-bar conversion strategy.\");\n        }\n\n        doc.notifier.changed();\n        this._didSomething();\n    }\n}\n\nexport class ChangeBeatsPerBar extends ChangeGroup {\n    constructor(doc: SongDocument, newValue: number, strategy: string) {\n        super();\n        if (doc.song.beatsPerBar != newValue) {\n            switch (strategy) {\n                case \"splice\": {\n                    if (doc.song.beatsPerBar > newValue) {\n                        const sequence: ChangeSequence = new ChangeSequence();\n                        for (let i: number = 0; i < doc.song.getChannelCount(); i++) {\n                            for (let j: number = 0; j < doc.song.channels[i].patterns.length; j++) {\n                                sequence.append(new ChangeNoteTruncate(doc, doc.song.channels[i].patterns[j], newValue * Config.partsPerBeat, doc.song.beatsPerBar * Config.partsPerBeat, null, true));\n                            }\n                        }\n                    }\n                } break;\n                case \"stretch\": {\n                    const changeRhythm = function (oldTime: number): number {\n                        return Math.round(oldTime * newValue / doc.song.beatsPerBar);\n                    };\n                    for (let channelIndex: number = 0; channelIndex < doc.song.getChannelCount(); channelIndex++) {\n                        for (let patternIndex: number = 0; patternIndex < doc.song.channels[channelIndex].patterns.length; patternIndex++) {\n                            const pattern: Pattern = doc.song.channels[channelIndex].patterns[patternIndex];\n                            let noteIndex: number = 0;\n                            while (noteIndex < pattern.notes.length) {\n                                const note: Note = pattern.notes[noteIndex];\n                                if (changeRhythm(note.start) >= changeRhythm(note.end)) {\n                                    this.append(new ChangeNoteAdded(doc, pattern, note, noteIndex, true));\n                                } else {\n                                    this.append(new ChangeRhythmNote(doc, note, changeRhythm));\n                                    noteIndex++;\n                                }\n                            }\n                        }\n                    }\n                    this.append(new ChangeTempo(doc, doc.song.tempo, doc.song.tempo * newValue / doc.song.beatsPerBar));\n                } break;\n                case \"overflow\": {\n                    this.append(new ChangeMoveAndOverflowNotes(doc, newValue, 0));\n                    doc.song.loopStart = 0;\n                    doc.song.loopLength = doc.song.barCount;\n                } break;\n                default: throw new Error(\"Unrecognized beats-per-bar conversion strategy.\");\n            }\n\n            doc.song.beatsPerBar = newValue;\n            doc.notifier.changed();\n            this._didSomething();\n        }\n    }\n}\n\nexport class ChangeScale extends ChangeGroup {\n    constructor(doc: SongDocument, newValue: number) {\n        super();\n        if (doc.song.scale != newValue) {\n            doc.song.scale = newValue;\n            doc.notifier.changed();\n            this._didSomething();\n        }\n    }\n}\n\nexport class ChangeDetectKey extends ChangeGroup {\n    constructor(doc: SongDocument) {\n        super();\n        const song: Song = doc.song;\n        const basePitch: number = Config.keys[song.key].basePitch;\n        const keyWeights: number[] = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n        for (let channelIndex: number = 0; channelIndex < song.pitchChannelCount; channelIndex++) {\n            for (let barIndex: number = 0; barIndex < song.barCount; barIndex++) {\n                const pattern: Pattern | null = song.getPattern(channelIndex, barIndex);\n                if (pattern != null) {\n                    for (const note of pattern.notes) {\n                        const prevPin: NotePin = note.pins[0];\n                        for (let pinIndex: number = 1; pinIndex < note.pins.length; pinIndex++) {\n                            const nextPin: NotePin = note.pins[pinIndex];\n                            if (prevPin.interval == nextPin.interval) {\n                                let weight: number = nextPin.time - prevPin.time;\n                                weight += Math.max(0, Math.min(Config.partsPerBeat, nextPin.time + note.start) - (prevPin.time + note.start));\n                                weight *= nextPin.size + prevPin.size;\n                                for (const pitch of note.pitches) {\n                                    const key = (basePitch + prevPin.interval + pitch) % 12;\n                                    keyWeights[key] += weight;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        let bestKey: number = 0;\n        let bestKeyWeight: number = 0;\n        for (let key: number = 0; key < 12; key++) {\n            // Look for the root of the most prominent major or minor chord.\n            const keyWeight: number = keyWeights[key] * (3 * keyWeights[(key + 7) % 12] + keyWeights[(key + 4) % 12] + keyWeights[(key + 3) % 12]);\n            if (bestKeyWeight < keyWeight) {\n                bestKeyWeight = keyWeight;\n                bestKey = key;\n            }\n        }\n\n        if (bestKey != song.key) {\n            const diff: number = song.key - bestKey;\n            const absoluteDiff: number = Math.abs(diff);\n\n            for (let channelIndex: number = 0; channelIndex < song.pitchChannelCount; channelIndex++) {\n                for (const pattern of song.channels[channelIndex].patterns) {\n                    for (let i: number = 0; i < absoluteDiff; i++) {\n                        this.append(new ChangeTranspose(doc, channelIndex, pattern, diff > 0, true));\n                    }\n                }\n            }\n\n            song.key = bestKey;\n            doc.notifier.changed();\n            this._didSomething();\n        }\n    }\n}\n\nexport function pickRandomPresetValue(isNoise: boolean): number {\n    const eligiblePresetValues: number[] = [];\n    for (let categoryIndex: number = 0; categoryIndex < EditorConfig.presetCategories.length; categoryIndex++) {\n        const category: PresetCategory = EditorConfig.presetCategories[categoryIndex];\n        if (category.name == \"Novelty Presets\") continue;\n        for (let presetIndex: number = 0; presetIndex < category.presets.length; presetIndex++) {\n            const preset: Preset = category.presets[presetIndex];\n            if (preset.settings != undefined && (preset.isNoise == true) == isNoise) {\n                eligiblePresetValues.push((categoryIndex << 6) + presetIndex);\n            }\n        }\n    }\n    return eligiblePresetValues[(Math.random() * eligiblePresetValues.length) | 0];\n}\n\nexport function setDefaultInstruments(song: Song): void {\n    for (let channelIndex: number = 0; channelIndex < song.channels.length; channelIndex++) {\n        for (const instrument of song.channels[channelIndex].instruments) {\n            const isNoise: boolean = song.getChannelIsNoise(channelIndex);\n            const isMod: boolean = song.getChannelIsMod(channelIndex);\n            const presetValue: number = (channelIndex == song.pitchChannelCount) ? EditorConfig.nameToPresetValue(Math.random() > 0.5 ? \"chip noise\" : \"standard drumset\")! : pickRandomPresetValue(isNoise);\n            const preset: Preset = EditorConfig.valueToPreset(presetValue)!;\n            instrument.fromJsonObject(preset.settings, isNoise, isMod, song.rhythm == 0 || song.rhythm == 2, song.rhythm >= 2, 1);\n            instrument.effects |= (1 << EffectType.panning); // Panning enabled by default in JB.\n            instrument.preset = presetValue;\n        }\n    }\n}\n\nexport class ChangeSong extends ChangeGroup {\n    constructor(doc: SongDocument, newHash: string) {\n        super();\n        let pitchChannelCount = doc.song.pitchChannelCount;\n        let noiseChannelCount = doc.song.noiseChannelCount;\n        let modChannelCount = doc.song.modChannelCount;\n        doc.song.fromBase64String(newHash);\n        if (pitchChannelCount != doc.song.pitchChannelCount || noiseChannelCount != doc.song.noiseChannelCount || modChannelCount != doc.song.modChannelCount) {\n            ColorConfig.resetColors();\n        }\n        if (newHash == \"\") {\n            this.append(new ChangePatternSelection(doc, 0, 0));\n            doc.selection.resetBoxSelection();\n            setDefaultInstruments(doc.song);\n            doc.song.scale = doc.prefs.defaultScale;\n\n            for (let i: number = 0; i <= doc.song.channels.length; i++) {\n                doc.viewedInstrument[i] = 0;\n                doc.recentPatternInstruments[i] = [0];\n            }\n            doc.viewedInstrument.length = doc.song.channels.length;\n        } else {\n            this.append(new ChangeValidateTrackSelection(doc));\n        }\n        doc.synth.computeLatestModValues();\n        doc.notifier.changed();\n        this._didSomething();\n    }\n}\n\nexport class ChangeValidateTrackSelection extends Change {\n    constructor(doc: SongDocument) {\n        super();\n        const channelIndex: number = Math.min(doc.channel, doc.song.getChannelCount() - 1);\n        const bar: number = Math.max(0, Math.min(doc.song.barCount - 1, doc.bar));\n        if (doc.channel != channelIndex || doc.bar != bar) {\n\t\t\tdoc.bar = bar;\n\t\t\tdoc.channel = channelIndex;\n\t\t\tthis._didSomething();\n\t\t}\n\t\tdoc.selection.scrollToSelectedPattern();\n\t\tdoc.notifier.changed();\n    }\n}\n\nexport class ChangeReplacePatterns extends ChangeGroup {\n    constructor(doc: SongDocument, pitchChannels: Channel[], noiseChannels: Channel[], modChannels: Channel[]) {\n        super();\n\n        const song: Song = doc.song;\n\n        function removeExtraSparseChannels(channels: Channel[], maxLength: number): void {\n            while (channels.length > maxLength) {\n                let sparsestIndex: number = channels.length - 1;\n                let mostZeroes: number = 0;\n                for (let channelIndex: number = 0; channelIndex < channels.length - 1; channelIndex++) {\n                    let zeroes: number = 0;\n                    for (const bar of channels[channelIndex].bars) {\n                        if (bar == 0) zeroes++;\n                    }\n                    if (zeroes >= mostZeroes) {\n                        sparsestIndex = channelIndex;\n                        mostZeroes = zeroes;\n                    }\n                }\n                channels.splice(sparsestIndex, 1);\n            }\n        }\n\n        removeExtraSparseChannels(pitchChannels, Config.pitchChannelCountMax);\n        removeExtraSparseChannels(noiseChannels, Config.noiseChannelCountMax);\n        removeExtraSparseChannels(modChannels, Config.modChannelCountMax);\n\n        while (pitchChannels.length < Config.pitchChannelCountMin) pitchChannels.push(new Channel());\n        while (noiseChannels.length < Config.noiseChannelCountMin) noiseChannels.push(new Channel());\n        while (modChannels.length < Config.modChannelCountMin) modChannels.push(new Channel());\n\n        // Set minimum counts.\n        song.barCount = 1;\n        song.patternsPerChannel = 8;\n        const combinedChannels: Channel[] = pitchChannels.concat(noiseChannels.concat(modChannels));\n        for (let channelIndex: number = 0; channelIndex < combinedChannels.length; channelIndex++) {\n            const channel: Channel = combinedChannels[channelIndex];\n            song.barCount = Math.max(song.barCount, channel.bars.length);\n            song.patternsPerChannel = Math.max(song.patternsPerChannel, channel.patterns.length);\n            song.channels[channelIndex] = channel;\n        }\n        song.channels.length = combinedChannels.length;\n        song.pitchChannelCount = pitchChannels.length;\n        song.noiseChannelCount = noiseChannels.length;\n        song.modChannelCount = modChannels.length;\n\n        song.barCount = Math.min(Config.barCountMax, song.barCount);\n        song.patternsPerChannel = Math.min(Config.barCountMax, song.patternsPerChannel);\n        for (let channelIndex: number = 0; channelIndex < song.channels.length; channelIndex++) {\n            const channel: Channel = song.channels[channelIndex];\n\n            for (let barIndex: number = 0; barIndex < channel.bars.length; barIndex++) {\n                if (channel.bars[barIndex] > song.patternsPerChannel || channel.bars[barIndex] < 0) {\n                    channel.bars[barIndex] = 0;\n                }\n            }\n            while (channel.bars.length < song.barCount) {\n                channel.bars.push(0);\n            }\n            channel.bars.length = song.barCount;\n\n            if (channel.instruments.length > song.getMaxInstrumentsPerChannel()) {\n                channel.instruments.length = song.getMaxInstrumentsPerChannel();\n            }\n\n            for (const pattern of channel.patterns) {\n                discardInvalidPatternInstruments(pattern.instruments, song, channelIndex);\n            }\n            while (channel.patterns.length < song.patternsPerChannel) {\n                channel.patterns.push(new Pattern());\n            }\n\n            channel.patterns.length = song.patternsPerChannel;\n        }\n\n        song.loopStart = Math.max(0, Math.min(song.barCount - 1, song.loopStart));\n        song.loopLength = Math.min(song.barCount - song.loopStart, song.loopLength);\n\n        this.append(new ChangeValidateTrackSelection(doc));\n        doc.notifier.changed();\n        this._didSomething();\n\n        ColorConfig.resetColors();\n    }\n}\n\nexport function comparePatternNotes(a: Note[], b: Note[]): boolean {\n    if (a.length != b.length) return false;\n\n    for (let noteIndex: number = 0; noteIndex < a.length; noteIndex++) {\n        const oldNote: Note = a[noteIndex];\n        const newNote: Note = b[noteIndex];\n        if (newNote.start != oldNote.start || newNote.end != oldNote.end || newNote.pitches.length != oldNote.pitches.length || newNote.pins.length != oldNote.pins.length) {\n            return false;\n        }\n\n        for (let pitchIndex: number = 0; pitchIndex < oldNote.pitches.length; pitchIndex++) {\n            if (newNote.pitches[pitchIndex] != oldNote.pitches[pitchIndex]) {\n                return false;\n            }\n        }\n\n        for (let pinIndex: number = 0; pinIndex < oldNote.pins.length; pinIndex++) {\n            if (newNote.pins[pinIndex].interval != oldNote.pins[pinIndex].interval || newNote.pins[pinIndex].time != oldNote.pins[pinIndex].time || newNote.pins[pinIndex].size != oldNote.pins[pinIndex].size) {\n                return false;\n            }\n        }\n    }\n\n    return true;\n}\n\nexport function removeDuplicatePatterns(channels: Channel[]): void {\n    for (const channel of channels) {\n        const newPatterns: Pattern[] = [];\n        for (let bar: number = 0; bar < channel.bars.length; bar++) {\n            if (channel.bars[bar] == 0) continue;\n\n            const oldPattern: Pattern = channel.patterns[channel.bars[bar] - 1];\n\n            let foundMatchingPattern: boolean = false;\n            for (let newPatternIndex: number = 0; newPatternIndex < newPatterns.length; newPatternIndex++) {\n                const newPattern: Pattern = newPatterns[newPatternIndex];\n\n                if (!patternsContainSameInstruments(oldPattern.instruments, newPattern.instruments) || newPattern.notes.length != oldPattern.notes.length) {\n                    continue;\n                }\n\n                if (comparePatternNotes(oldPattern.notes, newPattern.notes)) {\n                    foundMatchingPattern = true;\n                    channel.bars[bar] = newPatternIndex + 1;\n                    break;\n                }\n            }\n\n            if (!foundMatchingPattern) {\n                newPatterns.push(oldPattern);\n                channel.bars[bar] = newPatterns.length;\n            }\n        }\n\n        for (let patternIndex: number = 0; patternIndex < newPatterns.length; patternIndex++) {\n            channel.patterns[patternIndex] = newPatterns[patternIndex];\n        }\n        channel.patterns.length = newPatterns.length;\n    }\n}\n\nexport class ChangeTempo extends Change {\n    constructor(doc: SongDocument, oldValue: number, newValue: number) {\n        super();\n        doc.song.tempo = Math.max(Config.tempoMin, Math.min(Config.tempoMax, Math.round(newValue)));\n        doc.synth.unsetMod(Config.modulators.dictionary[\"tempo\"].index);\n        doc.notifier.changed();\n        if (oldValue != newValue) this._didSomething();\n    }\n}\n\nexport class ChangeEchoDelay extends ChangeInstrumentSlider {\n    constructor(doc: SongDocument, oldValue: number, newValue: number) {\n        super(doc);\n        this._instrument.echoDelay = newValue;\n        doc.synth.unsetMod(Config.modulators.dictionary[\"echo delay\"].index, doc.channel, doc.getCurrentInstrument());\n        doc.notifier.changed();\n        if (oldValue != newValue) this._didSomething();\n    }\n}\n\nexport class ChangeEchoSustain extends ChangeInstrumentSlider {\n    constructor(doc: SongDocument, oldValue: number, newValue: number) {\n        super(doc);\n        this._instrument.echoSustain = newValue;\n        doc.synth.unsetMod(Config.modulators.dictionary[\"echo\"].index, doc.channel, doc.getCurrentInstrument());\n        doc.notifier.changed();\n        if (oldValue != newValue) this._didSomething();\n    }\n}\n\nexport class ChangeChorus extends ChangeInstrumentSlider {\n    constructor(doc: SongDocument, oldValue: number, newValue: number) {\n        super(doc);\n        this._instrument.chorus = newValue;\n        doc.notifier.changed();\n        if (oldValue != newValue) this._didSomething();\n    }\n}\n\nexport class ChangeReverb extends ChangeInstrumentSlider {\n    constructor(doc: SongDocument, oldValue: number, newValue: number) {\n        super(doc);\n        this._instrument.reverb = newValue;\n        doc.synth.unsetMod(Config.modulators.dictionary[\"reverb\"].index, doc.channel, doc.getCurrentInstrument());\n        doc.notifier.changed();\n        if (oldValue != newValue) this._didSomething();\n    }\n}\n\nexport class ChangeSongReverb extends Change {\n    constructor(doc: SongDocument, oldValue: number, newValue: number) {\n        super();\n        doc.song.reverb = newValue;\n        doc.synth.unsetMod(Config.modulators.dictionary[\"song reverb\"].index);\n        doc.notifier.changed();\n        if (oldValue != newValue) this._didSomething();\n    }\n}\n\nexport class ChangeNoteAdded extends UndoableChange {\n    private _doc: SongDocument;\n    private _pattern: Pattern;\n    private _note: Note;\n    private _index: number;\n    constructor(doc: SongDocument, pattern: Pattern, note: Note, index: number, deletion: boolean = false) {\n        super(deletion);\n        this._doc = doc;\n        this._pattern = pattern;\n        this._note = note;\n        this._index = index;\n        this._didSomething();\n        this.redo();\n    }\n\n    protected _doForwards(): void {\n        this._pattern.notes.splice(this._index, 0, this._note);\n        this._doc.notifier.changed();\n    }\n\n    protected _doBackwards(): void {\n        this._pattern.notes.splice(this._index, 1);\n        this._doc.notifier.changed();\n    }\n}\n\nexport class ChangeNoteLength extends ChangePins {\n    constructor(doc: SongDocument | null, note: Note, truncStart: number, truncEnd: number) {\n        super(doc, note);\n        const continuesLastPattern: boolean = ((this._oldStart < 0 || note.continuesLastPattern) && truncStart == 0);\n\n        truncStart -= this._oldStart;\n        truncEnd -= this._oldStart;\n        let setStart: boolean = false;\n        let prevSize: number = this._oldPins[0].size;\n        let prevInterval: number = this._oldPins[0].interval;\n        let pushLastPin: boolean = true;\n        let i: number;\n        for (i = 0; i < this._oldPins.length; i++) {\n            const oldPin: NotePin = this._oldPins[i];\n            if (oldPin.time < truncStart) {\n                prevSize = oldPin.size;\n                prevInterval = oldPin.interval;\n            } else {\n                if (oldPin.time > truncStart && !setStart) {\n                    this._newPins.push(makeNotePin(prevInterval, truncStart, prevSize));\n                    setStart = true;\n                }\n                if (oldPin.time <= truncEnd) {\n                    this._newPins.push(makeNotePin(oldPin.interval, oldPin.time, oldPin.size));\n                    if (oldPin.time == truncEnd) {\n                        pushLastPin = false;\n                        break;\n                    }\n                } else {\n                    break;\n                }\n\n            }\n\n        }\n\n        if (pushLastPin) this._newPins.push(makeNotePin(this._oldPins[i].interval, truncEnd, this._oldPins[i].size));\n\n        this._finishSetup(continuesLastPattern);\n    }\n}\n\nexport class ChangeNoteTruncate extends ChangeSequence {\n    constructor(doc: SongDocument, pattern: Pattern, start: number, end: number, skipNote: Note | null = null, force: boolean = false) {\n        super();\n        let i: number = 0;\n        while (i < pattern.notes.length) {\n            const note: Note = pattern.notes[i];\n            if (note == skipNote && skipNote != null) {\n                i++;\n            } else if (note.end <= start) {\n                i++;\n            } else if (note.start >= end) {\n                // Allow out-of-order notes for mods so that all get checked.\n                if (!doc.song.getChannelIsMod(doc.channel)) {\n                    break;\n                } else {\n                    i++;\n                }\n            } else if (note.start < start && note.end > end) {\n                if (!doc.song.getChannelIsMod(doc.channel) || force || (skipNote != null && note.pitches[0] == skipNote.pitches[0])) {\n                    const copy: Note = note.clone();\n                    this.append(new ChangeNoteLength(doc, note, note.start, start));\n                    i++;\n                    this.append(new ChangeNoteAdded(doc, pattern, copy, i, false));\n                    this.append(new ChangeNoteLength(doc, copy, end, copy.end));\n                }\n                i++;\n            } else if (note.start < start) {\n                if (!doc.song.getChannelIsMod(doc.channel) || force || (skipNote != null && note.pitches[0] == skipNote.pitches[0]))\n                    this.append(new ChangeNoteLength(doc, note, note.start, start));\n                i++;\n            } else if (note.end > end) {\n                if (!doc.song.getChannelIsMod(doc.channel) || force || (skipNote != null && note.pitches[0] == skipNote.pitches[0]))\n                    this.append(new ChangeNoteLength(doc, note, end, note.end));\n                i++;\n            } else {\n                if (!doc.song.getChannelIsMod(doc.channel) || force || (skipNote != null && note.pitches[0] == skipNote.pitches[0]))\n                    this.append(new ChangeNoteAdded(doc, pattern, note, i, true));\n                else\n                    i++;\n            }\n        }\n    }\n}\n\nclass ChangeSplitNotesAtSelection extends ChangeSequence {\n    constructor(doc: SongDocument, pattern: Pattern) {\n        super();\n        let i: number = 0;\n        while (i < pattern.notes.length) {\n            const note: Note = pattern.notes[i];\n            if (note.start < doc.selection.patternSelectionStart && doc.selection.patternSelectionStart < note.end) {\n                const copy: Note = note.clone();\n                this.append(new ChangeNoteLength(doc, note, note.start, doc.selection.patternSelectionStart));\n                i++;\n                this.append(new ChangeNoteAdded(doc, pattern, copy, i, false));\n                this.append(new ChangeNoteLength(doc, copy, doc.selection.patternSelectionStart, copy.end));\n                // i++; // The second note might be split again at the end of the selection. Check it again.\n            } else if (note.start < doc.selection.patternSelectionEnd && doc.selection.patternSelectionEnd < note.end) {\n                const copy: Note = note.clone();\n                this.append(new ChangeNoteLength(doc, note, note.start, doc.selection.patternSelectionEnd));\n                i++;\n                this.append(new ChangeNoteAdded(doc, pattern, copy, i, false));\n                this.append(new ChangeNoteLength(doc, copy, doc.selection.patternSelectionEnd, copy.end));\n                i++;\n            } else {\n                i++;\n            }\n        }\n    }\n}\n\nclass ChangeTransposeNote extends UndoableChange {\n    protected _doc: SongDocument;\n    protected _note: Note;\n    protected _oldStart: number;\n    protected _newStart: number;\n    protected _oldEnd: number;\n    protected _newEnd: number;\n    protected _oldPins: NotePin[];\n    protected _newPins: NotePin[];\n    protected _oldPitches: number[];\n    protected _newPitches: number[];\n    constructor(doc: SongDocument, channelIndex: number, note: Note, upward: boolean, ignoreScale: boolean = false, octave: boolean = false) {\n        super(false);\n        this._doc = doc;\n        this._note = note;\n        this._oldPins = note.pins;\n        this._newPins = [];\n        this._oldPitches = note.pitches;\n        this._newPitches = [];\n\n        // I'm disabling pitch transposing for noise channels to avoid\n        // accidentally messing up noise channels when pitch shifting all\n        // channels at once.\n        const isNoise: boolean = doc.song.getChannelIsNoise(channelIndex);\n        if (isNoise != doc.song.getChannelIsNoise(doc.channel)) return;\n\n        // Can't transpose mods\n        if (doc.song.getChannelIsMod(doc.channel)) return;\n\n        const maxPitch: number = (isNoise ? Config.drumCount - 1 : Config.maxPitch);\n\n        for (let i: number = 0; i < this._oldPitches.length; i++) {\n            let pitch: number = this._oldPitches[i];\n            if (octave && !isNoise) {\n                if (upward) {\n                    pitch = Math.min(maxPitch, pitch + 12);\n                } else {\n                    pitch = Math.max(0, pitch - 12);\n                }\n            } else {\n                if (upward) {\n                    for (let j: number = pitch + 1; j <= maxPitch; j++) {\n                        if (isNoise || ignoreScale || Config.scales[doc.song.scale].flags[j % 12]) {\n                            pitch = j;\n                            break;\n                        }\n                    }\n                } else {\n                    for (let j: number = pitch - 1; j >= 0; j--) {\n                        if (isNoise || ignoreScale || Config.scales[doc.song.scale].flags[j % 12]) {\n                            pitch = j;\n                            break;\n                        }\n                    }\n                }\n            }\n\n            let foundMatch: boolean = false;\n            for (let j: number = 0; j < this._newPitches.length; j++) {\n                if (this._newPitches[j] == pitch) {\n                    foundMatch = true;\n                    break;\n                }\n            }\n            if (!foundMatch) this._newPitches.push(pitch);\n        }\n\n        let min: number = 0;\n        let max: number = maxPitch;\n\n        for (let i: number = 1; i < this._newPitches.length; i++) {\n            const diff: number = this._newPitches[0] - this._newPitches[i];\n            if (min < diff) min = diff;\n            if (max > diff + maxPitch) max = diff + maxPitch;\n        }\n\n        for (const oldPin of this._oldPins) {\n            let interval: number = oldPin.interval + this._oldPitches[0];\n\n            if (interval < min) interval = min;\n            if (interval > max) interval = max;\n            if (octave && !isNoise) {\n                if (upward) {\n                    interval = Math.min(max, interval + 12);\n                } else {\n                    interval = Math.max(min, interval - 12);\n                }\n            } else {\n                if (upward) {\n                    for (let i: number = interval + 1; i <= max; i++) {\n                        if (isNoise || ignoreScale || Config.scales[doc.song.scale].flags[i % 12]) {\n                            interval = i;\n                            break;\n                        }\n                    }\n                } else {\n                    for (let i: number = interval - 1; i >= min; i--) {\n                        if (isNoise || ignoreScale || Config.scales[doc.song.scale].flags[i % 12]) {\n                            interval = i;\n                            break;\n                        }\n                    }\n                }\n            }\n            interval -= this._newPitches[0];\n            this._newPins.push(makeNotePin(interval, oldPin.time, oldPin.size));\n        }\n\n        if (this._newPins[0].interval != 0) throw new Error(\"wrong pin start interval\");\n\n        for (let i: number = 1; i < this._newPins.length - 1;) {\n            if (this._newPins[i - 1].interval == this._newPins[i].interval &&\n                this._newPins[i].interval == this._newPins[i + 1].interval &&\n                this._newPins[i - 1].size == this._newPins[i].size &&\n                this._newPins[i].size == this._newPins[i + 1].size) {\n                this._newPins.splice(i, 1);\n            } else {\n                i++;\n            }\n        }\n\n        this._doForwards();\n        this._didSomething();\n    }\n\n    protected _doForwards(): void {\n        this._note.pins = this._newPins;\n        this._note.pitches = this._newPitches;\n        this._doc.notifier.changed();\n    }\n\n    protected _doBackwards(): void {\n        this._note.pins = this._oldPins;\n        this._note.pitches = this._oldPitches;\n        this._doc.notifier.changed();\n    }\n}\n\nexport class ChangeTranspose extends ChangeSequence {\n    constructor(doc: SongDocument, channelIndex: number, pattern: Pattern, upward: boolean, ignoreScale: boolean = false, octave: boolean = false) {\n        super();\n        if (doc.selection.patternSelectionActive) {\n            this.append(new ChangeSplitNotesAtSelection(doc, pattern));\n        }\n        for (const note of pattern.notes) {\n            if (doc.selection.patternSelectionActive && (note.end <= doc.selection.patternSelectionStart || note.start >= doc.selection.patternSelectionEnd)) {\n                continue;\n            }\n            this.append(new ChangeTransposeNote(doc, channelIndex, note, upward, ignoreScale, octave));\n        }\n    }\n}\n\nexport class ChangeTrackSelection extends Change {\n    constructor(doc: SongDocument, newX0: number, newX1: number, newY0: number, newY1: number) {\n        super();\n        doc.selection.boxSelectionX0 = newX0;\n        doc.selection.boxSelectionX1 = newX1;\n        doc.selection.boxSelectionY0 = newY0;\n        doc.selection.boxSelectionY1 = newY1;\n        doc.notifier.changed();\n        this._didSomething();\n    }\n}\n\nexport class ChangePatternSelection extends UndoableChange {\n    private _doc: SongDocument;\n    private _oldStart: number;\n    private _oldEnd: number;\n    private _oldActive: boolean;\n    private _newStart: number;\n    private _newEnd: number;\n    private _newActive: boolean;\n\n    constructor(doc: SongDocument, newStart: number, newEnd: number) {\n        super(false);\n        this._doc = doc;\n        this._oldStart = doc.selection.patternSelectionStart;\n        this._oldEnd = doc.selection.patternSelectionEnd;\n        this._oldActive = doc.selection.patternSelectionActive;\n        this._newStart = newStart;\n        this._newEnd = newEnd;\n        this._newActive = newStart < newEnd;\n        this._doForwards();\n        this._didSomething();\n    }\n\n    protected _doForwards(): void {\n        this._doc.selection.patternSelectionStart = this._newStart;\n        this._doc.selection.patternSelectionEnd = this._newEnd;\n        this._doc.selection.patternSelectionActive = this._newActive;\n        this._doc.notifier.changed();\n    }\n\n    protected _doBackwards(): void {\n        this._doc.selection.patternSelectionStart = this._oldStart;\n        this._doc.selection.patternSelectionEnd = this._oldEnd;\n        this._doc.selection.patternSelectionActive = this._oldActive;\n        this._doc.notifier.changed();\n    }\n}\n\nexport class ChangeDragSelectedNotes extends ChangeSequence {\n    constructor(doc: SongDocument, channelIndex: number, pattern: Pattern, parts: number, transpose: number) {\n        super();\n\n        if (parts == 0 && transpose == 0) return;\n\n        if (doc.selection.patternSelectionActive) {\n            this.append(new ChangeSplitNotesAtSelection(doc, pattern));\n        }\n\n        const oldStart: number = doc.selection.patternSelectionStart;\n        const oldEnd: number = doc.selection.patternSelectionEnd;\n        const newStart: number = Math.max(0, Math.min(doc.song.beatsPerBar * Config.partsPerBeat, oldStart + parts));\n        const newEnd: number = Math.max(0, Math.min(doc.song.beatsPerBar * Config.partsPerBeat, oldEnd + parts));\n        if (newStart == newEnd) {\n            // Just erase the current contents of the selection:\n            this.append(new ChangeNoteTruncate(doc, pattern, oldStart, oldEnd, null, true));\n        } else if (parts < 0) {\n            // Clear space for the dragged notes:\n            this.append(new ChangeNoteTruncate(doc, pattern, newStart, Math.min(oldStart, newEnd), null, true));\n        } else {\n            // Clear space for the dragged notes:\n            this.append(new ChangeNoteTruncate(doc, pattern, Math.max(oldEnd, newStart), newEnd, null, true));\n        }\n\n        this.append(new ChangePatternSelection(doc, newStart, newEnd));\n        const draggedNotes = [];\n        let noteInsertionIndex: number = 0;\n        let i: number = 0;\n        while (i < pattern.notes.length) {\n            const note: Note = pattern.notes[i];\n            if (note.end <= oldStart || note.start >= oldEnd) {\n                i++;\n                if (note.end <= newStart) noteInsertionIndex = i;\n            } else {\n                draggedNotes.push(note.clone());\n                this.append(new ChangeNoteAdded(doc, pattern, note, i, true));\n            }\n        }\n\n        for (const note of draggedNotes) {\n            note.start += parts;\n            note.end += parts;\n            if (note.end <= newStart) continue;\n            if (note.start >= newEnd) continue;\n\n            this.append(new ChangeNoteAdded(doc, pattern, note, noteInsertionIndex++, false));\n\n            this.append(new ChangeNoteLength(doc, note, Math.max(note.start, newStart), Math.min(newEnd, note.end)));\n\n            for (let i: number = 0; i < Math.abs(transpose); i++) {\n                this.append(new ChangeTransposeNote(doc, channelIndex, note, transpose > 0, doc.prefs.notesOutsideScale));\n            }\n\n        }\n    }\n}\n\nexport class ChangeHoldingModRecording extends Change {\n    public storedChange: Change | null;\n    public storedValues: number[] | null;\n    public storedSlider: Slider | null;\n    constructor(doc: SongDocument, storedChange: Change | null, storedValues: number[] | null, slider: Slider | null) {\n        super();\n        this.storedChange = storedChange;\n        this.storedValues = storedValues;\n        this.storedSlider = slider;\n        this._didSomething();\n    }\n}\n\nexport class ChangeDuplicateSelectedReusedPatterns extends ChangeGroup {\n    constructor(doc: SongDocument, barStart: number, barWidth: number, channelStart: number, channelHeight: number) {\n        super();\n        for (let channelIndex: number = channelStart; channelIndex < channelStart + channelHeight; channelIndex++) {\n            const reusablePatterns: Dictionary<number> = {};\n\n            for (let bar: number = barStart; bar < barStart + barWidth; bar++) {\n                const currentPatternIndex: number = doc.song.channels[channelIndex].bars[bar];\n                if (currentPatternIndex == 0) continue;\n\n                if (reusablePatterns[String(currentPatternIndex)] == undefined) {\n                    let isUsedElsewhere = false;\n                    for (let bar2: number = 0; bar2 < doc.song.barCount; bar2++) {\n                        if (bar2 < barStart || bar2 >= barStart + barWidth) {\n                            if (doc.song.channels[channelIndex].bars[bar2] == currentPatternIndex) {\n                                isUsedElsewhere = true;\n                                break;\n                            }\n                        }\n                    }\n                    if (isUsedElsewhere) {\n                        // Need to duplicate the pattern.\n                        const copiedPattern: Pattern = doc.song.getPattern(channelIndex, bar)!;\n                        this.append(new ChangePatternNumbers(doc, 0, bar, channelIndex, 1, 1));\n                        this.append(new ChangeEnsurePatternExists(doc, channelIndex, bar));\n                        const newPattern: Pattern | null = doc.song.getPattern(channelIndex, bar);\n                        if (newPattern == null) throw new Error();\n                        this.append(new ChangePaste(doc, newPattern, copiedPattern.notes, 0, Config.partsPerBeat * doc.song.beatsPerBar, Config.partsPerBeat * doc.song.beatsPerBar));\n\n                        // Copy the instruments into the new pattern.\n                        newPattern.instruments.length = 0;\n                        newPattern.instruments.push(...copiedPattern.instruments);\n\n                        reusablePatterns[String(currentPatternIndex)] = doc.song.channels[channelIndex].bars[bar];\n                    } else {\n                        reusablePatterns[String(currentPatternIndex)] = currentPatternIndex;\n                    }\n                }\n\n                this.append(new ChangePatternNumbers(doc, reusablePatterns[String(currentPatternIndex)], bar, channelIndex, 1, 1));\n            }\n        }\n    }\n}\n\nexport class ChangePatternScale extends Change {\n    constructor(doc: SongDocument, pattern: Pattern, scaleMap: number[]) {\n        super();\n        if (doc.selection.patternSelectionActive) {\n            new ChangeSplitNotesAtSelection(doc, pattern);\n        }\n        const maxPitch: number = Config.maxPitch;\n        for (const note of pattern.notes) {\n            if (doc.selection.patternSelectionActive && (note.end <= doc.selection.patternSelectionStart || note.start >= doc.selection.patternSelectionEnd)) {\n                continue;\n            }\n\n            const newPitches: number[] = [];\n            const newPins: NotePin[] = [];\n            for (let i: number = 0; i < note.pitches.length; i++) {\n                const pitch: number = note.pitches[i];\n                const transformedPitch: number = scaleMap[pitch % 12] + (pitch - (pitch % 12));\n                if (newPitches.indexOf(transformedPitch) == -1) {\n                    newPitches.push(transformedPitch);\n                }\n            }\n\n            let min: number = 0;\n            let max: number = maxPitch;\n\n            for (let i: number = 1; i < newPitches.length; i++) {\n                const diff: number = newPitches[0] - newPitches[i];\n                if (min < diff) min = diff;\n                if (max > diff + maxPitch) max = diff + maxPitch;\n            }\n\n            for (const oldPin of note.pins) {\n                let interval: number = oldPin.interval + note.pitches[0];\n                if (interval < min) interval = min;\n                if (interval > max) interval = max;\n                const transformedInterval: number = scaleMap[interval % 12] + (interval - (interval % 12));\n                newPins.push(makeNotePin(transformedInterval - newPitches[0], oldPin.time, oldPin.size));\n            }\n\n            if (newPins[0].interval != 0) throw new Error(\"wrong pin start interval\");\n\n            for (let i: number = 1; i < newPins.length - 1;) {\n                if (newPins[i - 1].interval == newPins[i].interval &&\n                    newPins[i].interval == newPins[i + 1].interval &&\n                    newPins[i - 1].size == newPins[i].size &&\n                    newPins[i].size == newPins[i + 1].size) {\n                    newPins.splice(i, 1);\n                } else {\n                    i++;\n                }\n            }\n\n            note.pitches = newPitches;\n            note.pins = newPins;\n        }\n        this._didSomething();\n        doc.notifier.changed();\n    }\n}\n\nexport class ChangeVolume extends Change {\n    constructor(doc: SongDocument, oldValue: number, newValue: number) {\n        super();\n        doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()].volume = newValue;\n        // Not used currently as mod is implemented as multiplicative.\n        //doc.synth.unsetMod(ModSetting.mstInsVolume, doc.channel, doc.getCurrentInstrument());\n        doc.notifier.changed();\n        if (oldValue != newValue) this._didSomething();\n    }\n}\n\nexport class ChangeSongTitle extends Change {\n    constructor(doc: SongDocument, oldValue: string, newValue: string) {\n        super();\n        if (newValue.length > 30) {\n            newValue = newValue.substring(0, 30);\n        }\n\n        doc.song.title = newValue;\n        document.title = newValue + \" - \" + EditorConfig.versionDisplayName;\n        doc.notifier.changed();\n        if (oldValue != newValue) this._didSomething();\n    }\n}\n\nexport class ChangeChannelName extends Change {\n    constructor(doc: SongDocument, oldValue: string, newValue: string) {\n        super();\n        if (newValue.length > 15) {\n            newValue = newValue.substring(0, 15);\n        }\n\n        doc.song.channels[doc.muteEditorChannel].name = newValue;\n        doc.recalcChannelNames = true;\n\n        doc.notifier.changed();\n        if (oldValue != newValue) this._didSomething();\n    }\n}\n\nexport class ChangePan extends Change {\n    constructor(doc: SongDocument, oldValue: number, newValue: number) {\n        super();\n        doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()].pan = newValue;\n        doc.synth.unsetMod(Config.modulators.dictionary[\"pan\"].index, doc.channel, doc.getCurrentInstrument());\n        doc.notifier.changed();\n        if (oldValue != newValue) this._didSomething();\n    }\n}\n\nexport class ChangePanDelay extends Change {\n    constructor(doc: SongDocument, oldValue: number, newValue: number) {\n        super();\n        doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()].panDelay = newValue;\n        doc.notifier.changed();\n        if (oldValue != newValue) this._didSomething();\n    }\n}\n\nexport class ChangeSizeBend extends UndoableChange {\n    private _doc: SongDocument;\n    private _note: Note;\n    private _oldPins: NotePin[];\n    private _newPins: NotePin[];\n    constructor(doc: SongDocument, note: Note, bendPart: number, bendSize: number, bendInterval: number, uniformSize: boolean) {\n        super(false);\n        this._doc = doc;\n        this._note = note;\n        this._oldPins = note.pins;\n        this._newPins = [];\n\n        let inserted: boolean = false;\n\n        for (const pin of note.pins) {\n            if (pin.time < bendPart) {\n                if (uniformSize) {\n                    this._newPins.push(makeNotePin(pin.interval, pin.time, bendSize));\n                } else {\n                    this._newPins.push(pin);\n                }\n            } else if (pin.time == bendPart) {\n                this._newPins.push(makeNotePin(bendInterval, bendPart, bendSize));\n                inserted = true;\n            } else {\n                if (!uniformSize && !inserted) {\n                    this._newPins.push(makeNotePin(bendInterval, bendPart, bendSize));\n                    inserted = true;\n                }\n                if (uniformSize) {\n                    this._newPins.push(makeNotePin(pin.interval, pin.time, bendSize));\n                } else {\n                    this._newPins.push(pin);\n                }\n            }\n        }\n\n        removeRedundantPins(this._newPins);\n\n        this._doForwards();\n        this._didSomething();\n    }\n\n    protected _doForwards(): void {\n        this._note.pins = this._newPins;\n        this._doc.notifier.changed();\n    }\n\n    protected _doBackwards(): void {\n        this._note.pins = this._oldPins;\n        this._doc.notifier.changed();\n    }\n}\n\nexport class ChangeChipWave extends Change {\n    constructor(doc: SongDocument, newValue: number) {\n        super();\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\n        if (instrument.chipWave != newValue) {\n            instrument.chipWave = newValue;\n            instrument.preset = instrument.type;\n            doc.notifier.changed();\n            this._didSomething();\n        }\n    }\n}\n\nexport class ChangeNoiseWave extends Change {\n    constructor(doc: SongDocument, newValue: number) {\n        super();\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\n        if (instrument.chipNoise != newValue) {\n            instrument.chipNoise = newValue;\n            instrument.preset = instrument.type;\n            doc.notifier.changed();\n            this._didSomething();\n        }\n    }\n}\n\nexport class ChangeAddEnvelope extends Change {\n    constructor(doc: SongDocument) {\n        super();\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\n        instrument.addEnvelope(0, 0, 0);\n        instrument.preset = instrument.type;\n        doc.notifier.changed();\n        this._didSomething();\n    }\n}\n\nexport class ChangeRemoveEnvelope extends Change {\n    constructor(doc: SongDocument, index: number) {\n        super();\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\n        instrument.envelopeCount--;\n        for (let i: number = index; i < instrument.envelopeCount; i++) {\n            instrument.envelopes[i].target = instrument.envelopes[i + 1].target;\n            instrument.envelopes[i].index = instrument.envelopes[i + 1].index;\n            instrument.envelopes[i].envelope = instrument.envelopes[i + 1].envelope;\n        }\n        // TODO: Shift any envelopes that were targeting other envelope indices after the removed one.\n        instrument.preset = instrument.type;\n        doc.notifier.changed();\n        this._didSomething();\n    }\n}\n\nexport class ChangeSetEnvelopeTarget extends Change {\n    constructor(doc: SongDocument, envelopeIndex: number, target: number, targetIndex: number) {\n        super();\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\n        const oldTarget: number = instrument.envelopes[envelopeIndex].target;\n        const oldIndex: number = instrument.envelopes[envelopeIndex].index;\n        if (oldTarget != target || oldIndex != targetIndex) {\n            instrument.envelopes[envelopeIndex].target = target;\n            instrument.envelopes[envelopeIndex].index = targetIndex;\n            instrument.preset = instrument.type;\n            doc.notifier.changed();\n            this._didSomething();\n        }\n    }\n}\n\nexport class ChangeSetEnvelopeType extends Change {\n    constructor(doc: SongDocument, envelopeIndex: number, newValue: number) {\n        super();\n        const instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\n        const oldValue: number = instrument.envelopes[envelopeIndex].envelope;\n        if (oldValue != newValue) {\n            instrument.envelopes[envelopeIndex].envelope = newValue;\n            instrument.preset = instrument.type;\n            doc.notifier.changed();\n            this._didSomething();\n        }\n    }\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nimport { Config } from \"../synth/SynthConfig\";\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\nimport { SongDocument } from \"./SongDocument\";\nimport { Prompt } from \"./Prompt\";\nimport { ChangeBeatsPerBar } from \"./changes\";\n\n\tconst {button, div, span, h2, input, br, select, option} = HTML;\n\nexport class BeatsPerBarPrompt implements Prompt {\n\tprivate readonly _beatsStepper: HTMLInputElement = input({style: \"width: 3em; margin-left: 1em;\", type: \"number\", step: \"1\"});\n\tprivate readonly _conversionStrategySelect: HTMLSelectElement = select({style: \"width: 100%;\"},\n\t\toption({value: \"splice\"}, \"Splice beats at end of bars.\"),\n\t\toption({value: \"stretch\"}, \"Stretch notes to fit in bars.\"),\n\t\toption({value: \"overflow\"}, \"Overflow notes across bars.\"),\n\t);\n\tprivate readonly _cancelButton: HTMLButtonElement = button({class: \"cancelButton\"});\n\tprivate readonly _okayButton: HTMLButtonElement = button({class: \"okayButton\", style: \"width:45%;\"}, \"Okay\");\n\t\n\tpublic readonly container: HTMLDivElement = div({class: \"prompt noSelection\", style: \"width: 250px;\"},\n\t\th2(\"Beats Per Bar\"),\n\t\tdiv({style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\"},\n\t\t\tdiv({style: \"text-align: right;\"},\n\t\t\t\t\"Beats per bar:\",\n\t\t\t\tbr(),\n\t\t\t\tspan({ style: \"font-size: smaller; color: ${ColorConfig.secondaryText};\" }, \"(Multiples of 3 or 4 are recommended)\"),\n\t\t\t),\n\t\t\tthis._beatsStepper,\n\t\t),\n\t\tdiv({style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\"},\n\t\t\tdiv({class: \"selectContainer\", style: \"width: 100%;\"}, this._conversionStrategySelect),\n\t\t),\n\t\tdiv({style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\"},\n\t\t\tthis._okayButton,\n\t\t),\n\t\tthis._cancelButton,\n\t);\n\t\t\n\tconstructor(private _doc: SongDocument) {\n\t\tthis._beatsStepper.value = this._doc.song.beatsPerBar + \"\";\n\t\tthis._beatsStepper.min = Config.beatsPerBarMin + \"\";\n\t\tthis._beatsStepper.max = Config.beatsPerBarMax + \"\";\n\t\t\t\n\t\tconst lastStrategy: string | null = window.localStorage.getItem(\"beatCountStrategy\");\n\t\tif (lastStrategy != null) {\n\t\t\tthis._conversionStrategySelect.value = lastStrategy;\n\t\t}\n\t\t\t\n\t\tthis._beatsStepper.select();\n\t\t\tsetTimeout(()=>this._beatsStepper.focus());\n\t\t\t\n\t\tthis._okayButton.addEventListener(\"click\", this._saveChanges);\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\n\t\tthis._beatsStepper.addEventListener(\"keypress\", BeatsPerBarPrompt._validateKey);\n\t\tthis._beatsStepper.addEventListener(\"blur\", BeatsPerBarPrompt._validateNumber);\n\t\tthis.container.addEventListener(\"keydown\", this._whenKeyPressed);\n\t}\n\t\t\n\t\tprivate _close = (): void => { \n\t\tthis._doc.undo();\n\t}\n\t\t\n\t\tpublic cleanUp = (): void => { \n\t\tthis._okayButton.removeEventListener(\"click\", this._saveChanges);\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\n\t\tthis._beatsStepper.removeEventListener(\"keypress\", BeatsPerBarPrompt._validateKey);\n\t\tthis._beatsStepper.removeEventListener(\"blur\", BeatsPerBarPrompt._validateNumber);\n\t\tthis.container.removeEventListener(\"keydown\", this._whenKeyPressed);\n\t}\n\t\t\n\tprivate _whenKeyPressed = (event: KeyboardEvent): void => {\n\t\t\tif ((<Element> event.target).tagName != \"BUTTON\" && event.keyCode == 13) { // Enter key\n\t\t\tthis._saveChanges();\n\t\t}\n\t}\n\t\t\n\tprivate static _validateKey(event: KeyboardEvent): boolean {\n\t\tconst charCode = (event.which) ? event.which : event.keyCode;\n\t\tif (charCode != 46 && charCode > 31 && (charCode < 48 || charCode > 57)) {\n\t\t\tevent.preventDefault();\n\t\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\t\t\n\tprivate static _validateNumber(event: Event): void {\n\t\tconst input: HTMLInputElement = <HTMLInputElement>event.target;\n\t\tinput.value = String(BeatsPerBarPrompt._validate(input));\n\t}\n\t\t\n\tprivate static _validate(input: HTMLInputElement): number {\n\t\treturn Math.floor(Math.max(Number(input.min), Math.min(Number(input.max), Number(input.value))));\n\t}\n\t\t\n\tprivate _saveChanges = (): void => {\n\t\twindow.localStorage.setItem(\"beatCountStrategy\", this._conversionStrategySelect.value);\n\t\tthis._doc.prompt = null;\n\t\tthis._doc.record(new ChangeBeatsPerBar(this._doc, BeatsPerBarPrompt._validate(this._beatsStepper), this._conversionStrategySelect.value), true);\n\t}\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nimport { Config } from \"../synth/SynthConfig\";\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\nimport { SongDocument } from \"./SongDocument\";\nimport { Prompt } from \"./Prompt\";\nimport { ChangeGroup } from \"./Change\";\nimport {ChangePatternsPerChannel, ChangeInstrumentsFlags, ChangeChannelCount} from \"./changes\";\n\nconst {button, div, label, br, h2, input} = HTML;\n\nexport class ChannelSettingsPrompt implements Prompt {\n\t\tprivate readonly _patternsStepper: HTMLInputElement = input({style: \"width: 3em; margin-left: 1em;\", type: \"number\", step: \"1\"});\n\t\tprivate readonly _pitchChannelStepper: HTMLInputElement = input({style: \"width: 3em; margin-left: 1em;\", type: \"number\", step: \"1\"});\n\t\tprivate readonly _drumChannelStepper: HTMLInputElement = input({style: \"width: 3em; margin-left: 1em;\", type: \"number\", step: \"1\"});\n\t\tprivate readonly _modChannelStepper: HTMLInputElement = input({ style: \"width: 3em; margin-left: 1em;\", type: \"number\", step: \"1\" });\n\t\tprivate readonly _layeredInstrumentsBox: HTMLInputElement = input({style: \"width: 3em; margin-left: 1em;\", type: \"checkbox\"});\n\t\tprivate readonly _patternInstrumentsBox: HTMLInputElement = input({style: \"width: 3em; margin-left: 1em;\", type: \"checkbox\"});\n\n\t\tprivate readonly _cancelButton: HTMLButtonElement = button({class: \"cancelButton\"});\n\t\tprivate readonly _okayButton: HTMLButtonElement = button({class: \"okayButton\", style: \"width:45%;\"}, \"Okay\");\n\t\t\n\tpublic readonly container: HTMLDivElement = div({class: \"prompt noSelection\", style: \"width: 250px; text-align: right;\"},\n\t\th2(\"Channel Settings\"),\n\t\tlabel({style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\"},\n\t\t\t\"Pitch channels:\",\n\t\t\tthis._pitchChannelStepper,\n\t\t),\n\t\tlabel({style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\"},\n\t\t\t\"Drum channels:\",\n\t\t\tthis._drumChannelStepper,\n\t\t),\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\n\t\t\t\"Mod channels:\",\n\t\t\tthis._modChannelStepper,\n\t\t),\n\t\tlabel({style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\"},\n\t\t\t\"Available patterns per channel:\",\n\t\t\tthis._patternsStepper,\n\t\t),\n\t\tlabel({style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\"},\n\t\t\t\"Simultaneous instruments\",\n\t\t\tbr(),\n\t\t\t\"per channel:\",\n\t\t\tthis._layeredInstrumentsBox,\n\t\t),\n\t\tlabel({style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\"},\n\t\t\t\"Different instruments\",\n\t\t\tbr(),\n\t\t\t\"per pattern:\",\n\t\t\tthis._patternInstrumentsBox,\n\t\t),\n\t\tdiv({style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\"},\n\t\t\tthis._okayButton,\n\t\t),\n\t\tthis._cancelButton,\n\t);\n\t\t\n\tconstructor(private _doc: SongDocument) {\n\t\tthis._patternsStepper.value = this._doc.song.patternsPerChannel + \"\";\n\t\tthis._patternsStepper.min = \"1\";\n\t\tthis._patternsStepper.max = Config.barCountMax + \"\";\n\t\t\t\n\t\t\t\n\t\tthis._pitchChannelStepper.value = this._doc.song.pitchChannelCount + \"\";\n\t\tthis._pitchChannelStepper.min = Config.pitchChannelCountMin + \"\";\n\t\tthis._pitchChannelStepper.max = Config.pitchChannelCountMax + \"\";\n\t\t\t\n\t\tthis._drumChannelStepper.value = this._doc.song.noiseChannelCount + \"\";\n\t\tthis._drumChannelStepper.min = Config.noiseChannelCountMin + \"\";\n\t\tthis._drumChannelStepper.max = Config.noiseChannelCountMax + \"\";\n\t\t\t\n\t\tthis._modChannelStepper.value = this._doc.song.modChannelCount + \"\";\n\t\tthis._modChannelStepper.min = Config.modChannelCountMin + \"\";\n\t\tthis._modChannelStepper.max = Config.modChannelCountMax + \"\";\n\t\t\n\t\tthis._layeredInstrumentsBox.checked = this._doc.song.layeredInstruments;\n\t\tthis._patternInstrumentsBox.checked = this._doc.song.patternInstruments;\n\t\tthis._pitchChannelStepper.select();\n\t\t\tsetTimeout(()=>this._pitchChannelStepper.focus());\n\t\t\t\n\t\tthis._okayButton.addEventListener(\"click\", this._saveChanges);\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\n\t\tthis._patternsStepper.addEventListener(\"keypress\", ChannelSettingsPrompt._validateKey);\n\t\tthis._pitchChannelStepper.addEventListener(\"keypress\", ChannelSettingsPrompt._validateKey);\n\t\tthis._drumChannelStepper.addEventListener(\"keypress\", ChannelSettingsPrompt._validateKey);\n\t\tthis._modChannelStepper.addEventListener(\"keypress\", ChannelSettingsPrompt._validateKey);\n\t\tthis._patternsStepper.addEventListener(\"blur\", this._validateNumber);\n\t\tthis._pitchChannelStepper.addEventListener(\"blur\", this._validateNumber);\n\t\tthis._drumChannelStepper.addEventListener(\"blur\", this._validateNumber);\n\t\tthis._modChannelStepper.addEventListener(\"blur\", this._validateNumber);\n\t\tthis.container.addEventListener(\"keydown\", this._whenKeyPressed);\n\t}\n\t\t\n\t\tprivate _close = (): void => { \n\t\tthis._doc.undo();\n\t}\n\t\t\n\t\tpublic cleanUp = (): void => { \n\t\tthis._okayButton.removeEventListener(\"click\", this._saveChanges);\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\n\t\tthis._patternsStepper.removeEventListener(\"keypress\", ChannelSettingsPrompt._validateKey);\n\t\tthis._pitchChannelStepper.removeEventListener(\"keypress\", ChannelSettingsPrompt._validateKey);\n\t\tthis._drumChannelStepper.removeEventListener(\"keypress\", ChannelSettingsPrompt._validateKey);\n\t\tthis._modChannelStepper.removeEventListener(\"keypress\", ChannelSettingsPrompt._validateKey);\n\t\tthis._patternsStepper.removeEventListener(\"blur\", this._validateNumber);\n\t\tthis._pitchChannelStepper.removeEventListener(\"blur\", this._validateNumber);\n\t\tthis._drumChannelStepper.removeEventListener(\"blur\", this._validateNumber);\n\t\tthis._modChannelStepper.removeEventListener(\"blur\", this._validateNumber);\n\t\tthis.container.removeEventListener(\"keydown\", this._whenKeyPressed);\n\t}\n\t\t\n\tprivate _whenKeyPressed = (event: KeyboardEvent): void => {\n\t\t\tif ((<Element> event.target).tagName != \"BUTTON\" && event.keyCode == 13) { // Enter key\n\t\t\tthis._saveChanges();\n\t\t}\n\t}\n\t\t\n\tprivate static _validateKey(event: KeyboardEvent): boolean {\n\t\tconst charCode = (event.which) ? event.which : event.keyCode;\n\t\tif (charCode != 46 && charCode > 31 && (charCode < 48 || charCode > 57)) {\n\t\t\tevent.preventDefault();\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\t\t\n\tprivate _validateNumber = (event: Event): void => {\n\t\tconst input: HTMLInputElement = <HTMLInputElement>event.target;\n\t\tinput.value = String(ChannelSettingsPrompt._validate(input));\n\t}\n\t\t\n\tprivate static _validate(input: HTMLInputElement): number {\n\t\treturn Math.floor(Math.max(Number(input.min), Math.min(Number(input.max), Number(input.value))));\n\t}\n\t\t\n\tprivate _saveChanges = (): void => {\n\t\tconst group: ChangeGroup = new ChangeGroup();\n\t\tgroup.append(new ChangeInstrumentsFlags(this._doc, this._layeredInstrumentsBox.checked, this._patternInstrumentsBox.checked));\n\t\tgroup.append(new ChangePatternsPerChannel(this._doc, ChannelSettingsPrompt._validate(this._patternsStepper)));\n\t\tgroup.append(new ChangeChannelCount(this._doc, ChannelSettingsPrompt._validate(this._pitchChannelStepper), ChannelSettingsPrompt._validate(this._drumChannelStepper), ChannelSettingsPrompt._validate(this._modChannelStepper)));\n\t\tthis._doc.prompt = null;\n\t\tthis._doc.record(group, true);\n\t}\n}\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\n\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\nimport { Prompt } from \"./Prompt\";\nimport { SongDocument } from \"./SongDocument\";\nimport { ColorConfig } from \"./ColorConfig\";\nimport { ChangeCustomWave } from \"./changes\";\nimport { SongEditor } from \"./SongEditor\";\n\n//namespace beepbox {\nconst { button, div, h2 } = HTML;\n\nexport class CustomChipPromptCanvas {\n\tprivate readonly _doc: SongDocument;\n\tprivate _mouseX: number = 0;\n\tprivate _mouseY: number = 0;\n\tprivate _lastIndex: number = 0;\n\tprivate _lastAmp: number = 0;\n\tprivate _mouseDown: boolean = false;\n\tpublic chipData: Float32Array = new Float32Array(64);\n\tpublic startingChipData: Float32Array = new Float32Array(64);\n\tprivate _undoHistoryState: number = 0;\n\tprivate _changeQueue: Float32Array[] = [];\n\tprivate readonly _editorWidth: number = 768; // 64*12\n\tprivate readonly _editorHeight: number = 294; // 49*6\n\tprivate readonly _fill: SVGPathElement = SVG.path({ fill: ColorConfig.uiWidgetBackground, \"pointer-events\": \"none\" });\n\tprivate readonly _ticks: SVGSVGElement = SVG.svg({ \"pointer-events\": \"none\" });\n\tprivate readonly _subticks: SVGSVGElement = SVG.svg({ \"pointer-events\": \"none\" });\n\tprivate readonly _blocks: SVGSVGElement = SVG.svg({ \"pointer-events\": \"none\" });\n\tprivate readonly _svg: SVGSVGElement = SVG.svg({ style: `background-color: ${ColorConfig.editorBackground}; touch-action: none; overflow: visible;`, width: \"100%\", height: \"100%\", viewBox: \"0 0 \" + this._editorWidth + \" \" + this._editorHeight, preserveAspectRatio: \"none\" },\n\t\tthis._fill,\n\t\tthis._ticks,\n\t\tthis._subticks,\n\t\tthis._blocks,\n\t);\n\n\tpublic readonly container: HTMLElement = HTML.div({ class: \"\", style: \"height: 294px; width: 768px; padding-bottom: 1.5em;\" }, this._svg);\n\n\tconstructor(doc: SongDocument) {\n\n\t\tthis._doc = doc;\n\n\t\tfor (let i: number = 0; i <= 4; i += 2) {\n\t\t\tthis._ticks.appendChild(SVG.rect({ fill: ColorConfig.tonic, x: (i * this._editorWidth / 4) - 1, y: 0, width: 2, height: this._editorHeight }));\n\t\t}\n\t\tfor (let i: number = 1; i <= 8; i++) {\n\t\t\tthis._subticks.appendChild(SVG.rect({ fill: ColorConfig.fifthNote, x: (i * this._editorWidth / 8) - 1, y: 0, width: 1, height: this._editorHeight }));\n\t\t}\n\n\t\t// Horiz. ticks\n\t\tthis._ticks.appendChild(SVG.rect({ fill: ColorConfig.tonic, x: 0, y: (this._editorHeight / 2) - 1, width: this._editorWidth, height: 2 }));\n\t\tfor (let i: number = 0; i < 3; i++) {\n\t\t\tthis._subticks.appendChild(SVG.rect({ fill: ColorConfig.fifthNote, x: 0, y: i * 8 * (this._editorHeight / 49), width: this._editorWidth, height: 1 }));\n\t\t\tthis._subticks.appendChild(SVG.rect({ fill: ColorConfig.fifthNote, x: 0, y: this._editorHeight - 1 - i * 8 * (this._editorHeight / 49), width: this._editorWidth, height: 1 }));\n\t\t}\n\n\n\t\tlet col: string = ColorConfig.getChannelColor(this._doc.song, this._doc.channel).primaryNote;\n\n\t\tfor (let i: number = 0; i <= 64; i++) {\n\t\t\tlet val: number = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()].customChipWave[i];\n\t\t\tthis.chipData[i] = val;\n\t\t\tthis.startingChipData[i] = val;\n\t\t\tthis._blocks.appendChild(SVG.rect({ fill: col, x: (i * this._editorWidth / 64), y: (val + 24) * (this._editorHeight / 49), width: this._editorWidth / 64, height: this._editorHeight / 49 }));\n\t\t}\n\n\t\t// Record initial state of the chip data queue\n\t\tthis._storeChange();\n\n\t\tthis.container.addEventListener(\"mousedown\", this._whenMousePressed);\n\t\tdocument.addEventListener(\"mousemove\", this._whenMouseMoved);\n\t\tdocument.addEventListener(\"mouseup\", this._whenCursorReleased);\n\n\t\tthis.container.addEventListener(\"touchstart\", this._whenTouchPressed);\n\t\tthis.container.addEventListener(\"touchmove\", this._whenTouchMoved);\n\t\tthis.container.addEventListener(\"touchend\", this._whenCursorReleased);\n\t\tthis.container.addEventListener(\"touchcancel\", this._whenCursorReleased);\n\n\t\tthis._svg.addEventListener(\"keydown\", this._whenKeyPressed);\n\t\tthis.container.addEventListener(\"keydown\", this._whenKeyPressed);\n\n\t}\n\n\tprivate _storeChange = (): void => {\n\t\t// Check if change is unique compared to the current history state\n\t\tvar sameCheck = true;\n\t\tif (this._changeQueue.length > 0) {\n\t\t\tfor (var i = 0; i < 64; i++) {\n\t\t\t\tif (this._changeQueue[this._undoHistoryState][i] != this.chipData[i]) {\n\t\t\t\t\tsameCheck = false; i = 64;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (sameCheck == false || this._changeQueue.length == 0) {\n\n\t\t\t// Create new branch in history, removing all after this in time\n\t\t\tthis._changeQueue.splice(0, this._undoHistoryState);\n\n\t\t\tthis._undoHistoryState = 0;\n\n\t\t\tthis._changeQueue.unshift(this.chipData.slice());\n\n\t\t\t// 32 undo max\n\t\t\tif (this._changeQueue.length > 32) {\n\t\t\t\tthis._changeQueue.pop();\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tpublic undo = (): void => {\n\t\t// Go backward, if there is a change to go back to\n\t\tif (this._undoHistoryState < this._changeQueue.length - 1) {\n\t\t\tthis._undoHistoryState++;\n\t\t\tthis.chipData = this._changeQueue[this._undoHistoryState].slice();\n\t\t\tnew ChangeCustomWave(this._doc, this.chipData);\n\t\t\tthis.render();\n\t\t}\n\n\t}\n\n\tpublic redo = (): void => {\n\t\t// Go forward, if there is a change to go to\n\t\tif (this._undoHistoryState > 0) {\n\t\t\tthis._undoHistoryState--;\n\t\t\tthis.chipData = this._changeQueue[this._undoHistoryState].slice();\n\t\t\tnew ChangeCustomWave(this._doc, this.chipData);\n\t\t\tthis.render();\n\t\t}\n\n\t}\n\n\tprivate _whenKeyPressed = (event: KeyboardEvent): void => {\n\t\tif (event.keyCode == 90) { // z\n\t\t\tthis.undo();\n\t\t\tevent.stopPropagation();\n\t\t}\n\t\telse if (event.keyCode == 89) { // y\n\t\t\tthis.redo();\n\t\t\tevent.stopPropagation();\n\t\t}\n\t}\n\n\tprivate _whenMousePressed = (event: MouseEvent): void => {\n\t\tevent.preventDefault();\n\t\tthis._mouseDown = true;\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\n\t\tthis._mouseX = ((event.clientX || event.pageX) - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\n\t\tthis._lastIndex = -1;\n\n\t\tthis._whenCursorMoved();\n\t}\n\n\tprivate _whenTouchPressed = (event: TouchEvent): void => {\n\t\tevent.preventDefault();\n\t\tthis._mouseDown = true;\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\n\t\tthis._mouseX = (event.touches[0].clientX - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\n\t\tthis._lastIndex = -1;\n\n\t\tthis._whenCursorMoved();\n\t}\n\n\tprivate _whenMouseMoved = (event: MouseEvent): void => {\n\t\tif (this.container.offsetParent == null) return;\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\n\t\tthis._mouseX = ((event.clientX || event.pageX) - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\n\t\tthis._whenCursorMoved();\n\t}\n\n\tprivate _whenTouchMoved = (event: TouchEvent): void => {\n\t\tif (this.container.offsetParent == null) return;\n\t\tif (!this._mouseDown) return;\n\t\tevent.preventDefault();\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\n\t\tthis._mouseX = (event.touches[0].clientX - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\n\t\tthis._whenCursorMoved();\n\t}\n\n\tprivate _whenCursorMoved(): void {\n\t\tif (this._mouseDown) {\n\t\t\tconst index: number = Math.min(63, Math.max(0, Math.floor(this._mouseX * 64 / this._editorWidth)));\n\t\t\tconst amp: number = Math.min(48, Math.max(0, Math.floor(this._mouseY * 49 / this._editorHeight)));\n\n\t\t\t// Paint between mouse drag indices unless a click just happened.\n\t\t\tif (this._lastIndex != -1 && this._lastIndex != index) {\n\t\t\t\tvar lowest = index;\n\t\t\t\tvar highest = this._lastIndex;\n\t\t\t\tvar startingAmp = amp;\n\t\t\t\tvar endingAmp = this._lastAmp;\n\t\t\t\tif (this._lastIndex < index) {\n\t\t\t\t\tlowest = this._lastIndex;\n\t\t\t\t\thighest = index;\n\t\t\t\t\tstartingAmp = this._lastAmp;\n\t\t\t\t\tendingAmp = amp;\n\t\t\t\t}\n\t\t\t\tfor (var i = lowest; i <= highest; i++) {\n\t\t\t\t\tconst medAmp: number = Math.round(startingAmp + (endingAmp - startingAmp) * ((i - lowest) / (highest - lowest)));\n\t\t\t\t\tthis.chipData[i] = medAmp - 24;\n\t\t\t\t\tthis._blocks.children[i].setAttribute(\"y\", \"\" + (medAmp * (this._editorHeight / 49)));\n\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.chipData[index] = amp - 24;\n\t\t\t\tthis._blocks.children[index].setAttribute(\"y\", \"\" + (amp * (this._editorHeight / 49)));\n\n\t\t\t}\n\n\n\t\t\t// Make a change to the data but don't record it, since this prompt uses its own undo/redo queue\n\t\t\tnew ChangeCustomWave(this._doc, this.chipData);\n\n\t\t\tthis._lastIndex = index;\n\t\t\tthis._lastAmp = amp;\n\n\t\t}\n\t}\n\n\tprivate _whenCursorReleased = (event: Event): void => {\n\t\t// Add current data into queue, if it is unique from last data\n\t\tthis._storeChange();\n\t\tthis._mouseDown = false;\n\t}\n\n\tpublic render(): void {\n\t\tfor (var i = 0; i < 64; i++) {\n\t\t\tthis._blocks.children[i].setAttribute(\"y\", \"\" + ((this.chipData[i] + 24) * (this._editorHeight / 49)));\n\t\t}\n\t}\n}\n\nexport class CustomChipPrompt implements Prompt {\n\n\tpublic customChipCanvas: CustomChipPromptCanvas = new CustomChipPromptCanvas(this._doc);\n\n\tpublic readonly _playButton: HTMLButtonElement = button({ style: \"width: 55%;\", type: \"button\" });\n\n\tprivate readonly _cancelButton: HTMLButtonElement = button({ class: \"cancelButton\" });\n\tprivate readonly _okayButton: HTMLButtonElement = button({ class: \"okayButton\", style: \"width:45%;\" }, \"Okay\");\n\n\tpublic readonly container: HTMLDivElement = div({ class: \"prompt noSelection\", style: \"width: 600px;\" },\n\t\th2(\"Edit Custom Chip Instrument\"),\n\t\tdiv({ style: \"display: flex; width: 55%; align-self: center; flex-direction: row; align-items: center; justify-content: center;\" },\n\t\t\tthis._playButton,\n\t\t),\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; justify-content: center;\" },\n\t\t\tthis.customChipCanvas.container,\n\t\t),\n\t\tdiv({ style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\" },\n\t\t\tthis._okayButton,\n\t\t),\n\t\tthis._cancelButton,\n\t);\n\n\tconstructor(private _doc: SongDocument, private _songEditor: SongEditor) {\n\n\t\tthis._okayButton.addEventListener(\"click\", this._saveChanges);\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\n\t\tthis.container.addEventListener(\"keydown\", this.whenKeyPressed);\n\t\tthis._playButton.addEventListener(\"click\", this._togglePlay);\n\t\tthis.updatePlayButton();\n\n\t\tsetTimeout(() => this._playButton.focus());\n\n\n\t\tthis.customChipCanvas.render();\n\t}\n\n\tprivate _togglePlay = (): void => {\n\t\tthis._songEditor.togglePlay();\n\t\tthis.updatePlayButton();\n\t}\n\n\tpublic updatePlayButton(): void {\n\t\tif (this._doc.synth.playing) {\n\t\t\tthis._playButton.classList.remove(\"playButton\");\n\t\t\tthis._playButton.classList.add(\"pauseButton\");\n\t\t\tthis._playButton.title = \"Pause (Space)\";\n\t\t\tthis._playButton.innerText = \"Pause\";\n\t\t} else {\n\t\t\tthis._playButton.classList.remove(\"pauseButton\");\n\t\t\tthis._playButton.classList.add(\"playButton\");\n\t\t\tthis._playButton.title = \"Play (Space)\";\n\t\t\tthis._playButton.innerText = \"Play\";\n\t\t}\n\t}\n\n\tprivate _close = (): void => {\n\t\tthis._doc.prompt = null;\n\t\tthis._doc.undo();\n\t}\n\n\tpublic cleanUp = (): void => {\n\t\tthis._okayButton.removeEventListener(\"click\", this._saveChanges);\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\n\t\tthis.container.removeEventListener(\"keydown\", this.whenKeyPressed);\n\n\t\tthis._playButton.removeEventListener(\"click\", this._togglePlay);\n\t}\n\n\tpublic whenKeyPressed = (event: KeyboardEvent): void => {\n\t\tif ((<Element>event.target).tagName != \"BUTTON\" && event.keyCode == 13) { // Enter key\n\t\t\tthis._saveChanges();\n\t\t}\n\t\telse if (event.keyCode == 32) {\n\t\t\tthis._togglePlay();\n\t\t\tevent.preventDefault();\n\t\t}\n\t\telse if (event.keyCode == 90) { // z\n\t\t\tthis.customChipCanvas.undo();\n\t\t\tevent.stopPropagation();\n\t\t}\n\t\telse if (event.keyCode == 89) { // y\n\t\t\tthis.customChipCanvas.redo();\n\t\t\tevent.stopPropagation();\n\t\t}\n\t\telse if (event.keyCode == 219) { // [\n\t\t\tthis._doc.synth.goToPrevBar();\n\t\t}\n\t\telse if (event.keyCode == 221) { // ]\n\t\t\tthis._doc.synth.goToNextBar();\n\t\t}\n\t}\n\n\tprivate _saveChanges = (): void => {\n\t\tthis._doc.prompt = null;\n\t\t// Restore custom chip to starting values\n\t\tnew ChangeCustomWave(this._doc, this.customChipCanvas.startingChipData);\n\t\tthis._doc.record(new ChangeCustomWave(this._doc, this.customChipCanvas.chipData), true);\n\t}\n}\n//}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nimport { FilterCoefficients, FrequencyResponse } from \"../synth/filtering\";\nimport { FilterType, Config } from \"../synth/SynthConfig\";\nimport { FilterSettings, FilterControlPoint, Instrument } from \"../synth/synth\";\nimport { SongDocument } from \"./SongDocument\";\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\nimport { ColorConfig } from \"./ColorConfig\";\nimport { ChangeSequence, UndoableChange } from \"./Change\";\nimport { ChangeFilterAddPoint, ChangeFilterMovePoint, ChangeFilterSettings, FilterMoveData } from \"./changes\";\nimport { prettyNumber } from \"./EditorConfig\";\n\nexport class FilterEditor {\n    private _editorWidth: number = 120;\n    private _editorHeight: number = 26;\n    private readonly _responsePath: SVGPathElement = SVG.path({ fill: ColorConfig.uiWidgetBackground, \"pointer-events\": \"none\" });\n    //private readonly _octaves: SVGSVGElement = SVG.svg({\"pointer-events\": \"none\", overflow: \"visible\"});\n    private _indicators: SVGTextElement[] = [];\n    private _subFilters: FilterSettings[] = [];\n    private _writingMods: boolean = false;\n    private readonly _controlPointPath: SVGPathElement = SVG.path({ fill: \"currentColor\", \"pointer-events\": \"none\" });\n    private readonly _dottedLinePath: SVGPathElement = SVG.path({ fill: \"none\", stroke: \"currentColor\", \"stroke-width\": 1, \"stroke-dasharray\": \"3, 2\", \"pointer-events\": \"none\" });\n    private readonly _highlight: SVGCircleElement = SVG.circle({ fill: \"white\", stroke: \"none\", \"pointer-events\": \"none\", r: 4 });\n    private readonly _svg: SVGSVGElement = SVG.svg({ style: `background-color: ${ColorConfig.editorBackground}; touch-action: none;`, width: \"100%\", height: \"100%\", viewBox: \"0 0 \" + this._editorWidth + \" \" + this._editorHeight, preserveAspectRatio: \"none\" },\n        this._responsePath,\n        //this._octaves,\n        this._dottedLinePath,\n        this._highlight,\n        this._controlPointPath,\n    );\n    private selfUndoSettings: String[] = [];\n    private selfUndoHistoryPos: number = 0;\n    private readonly _label: HTMLDivElement = HTML.div({ style: \"position: absolute; bottom: 0; left: 2px; font-size: 8px; line-height: 1; pointer-events: none;\" });\n\n    public coordText: HTMLElement | null = null;\n    public readonly container: HTMLElement = HTML.div({ class: \"filterEditor\", style: \"height: 100%; position: relative;\" },\n        this._svg,\n        this._label,\n    );\n    private _pointRadius: number = 2;\n\n    private _useNoteFilter: boolean = false;\n    private _larger: boolean = false;\n    private _touchMode: boolean = false;\n    private _mouseX: number = 0;\n    private _mouseY: number = 0;\n    private _mouseOver: boolean = false;\n    private _mouseDown: boolean = false;\n    private _mouseDragging: boolean = false;\n    private _addingPoint: boolean = false;\n    private _deletingPoint: boolean = false;\n    private _addedType: FilterType = FilterType.peak;\n    private _selectedIndex: number = 0;\n    private _freqStart: number = 0;\n    private _gainStart: number = 0;\n    private _dragChange: UndoableChange | null = null;\n    private _subfilterIndex: number = 0;\n\n    private _filterSettings: FilterSettings;\n    private _useFilterSettings: FilterSettings;\n    private _renderedSelectedIndex: number = -1;\n    private _renderedPointCount: number = -1;\n    private _renderedPointTypes: number = -1;\n    private _renderedPointFreqs: number = -1;\n    private _renderedPointGains: number = -1;\n    //private _renderedKey: number = -1;\n\n    constructor(private _doc: SongDocument, useNoteFilter: boolean = false, larger: boolean = false) {\n        this._useNoteFilter = useNoteFilter;\n        this._larger = larger;\n\n        if (this._larger) {\n            this.container.addEventListener(\"keydown\", this._whenKeyPressed)\n            this._editorWidth = 1200;\n            this._editorHeight = 260;\n            this._pointRadius = 14;\n            // A bit of vertical spacing on viewBox so that numbers will show.\n            this._svg.setAttribute(\"viewBox\", \"0 -20 \" + this._editorWidth + \" \" + (this._editorHeight + 30));\n            this._label.style.setProperty(\"font-size\", \"16px\");\n            this._label.style.setProperty(\"position\", \"\");\n            this._label.style.setProperty(\"bottom\", \"-16px\");\n            this._label.style.setProperty(\"min-height\", \"1em\");\n            this._dottedLinePath.style.setProperty(\"stroke-width\", \"3\");\n            this._dottedLinePath.style.setProperty(\"stroke-dasharray\", \"6, 4\");\n            this._dottedLinePath.setAttribute(\"color\", ColorConfig.getChannelColor(this._doc.song, this._doc.channel).primaryNote);\n            this.container.style.setProperty(\"width\", \"85%\");\n            this._highlight.setAttribute(\"r\", \"20\");\n            this._controlPointPath.setAttribute(\"fill\", ColorConfig.getChannelColor(this._doc.song, this._doc.channel).primaryNote);\n\n            for (let i: number = 0; i < Config.filterMaxPoints; i++) {\n                this._indicators[i] = SVG.text();\n                this._indicators[i].setAttribute(\"fill\", ColorConfig.invertedText);\n                this._indicators[i].setAttribute(\"text-anchor\", \"start\");\n                this._indicators[i].setAttribute(\"dominant-baseline\", \"central\");\n                this._indicators[i].setAttribute(\"pointer-events\", \"none\");\n                this._indicators[i].setAttribute(\"font-weight\", \"bolder\");\n                this._indicators[i].textContent = \"\" + (i + 1);\n                this._indicators[i].style.setProperty(\"display\", \"none\");\n                this._indicators[i].style.setProperty(\"font-size\", \"24px\");\n                this._svg.appendChild(this._indicators[i]);\n            }\n\n            // Push initial state\n            const instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\n            const filterSettings: FilterSettings = this._useNoteFilter ? instrument.noteFilter : instrument.eqFilter;\n            this.selfUndoSettings.push(JSON.stringify(filterSettings.toJsonObject()));\n\n            this._subFilters[0] = filterSettings;\n            for (let i: number = 1; i < Config.filterMorphCount; i++) {\n                const subFilter: FilterSettings | null = this._useNoteFilter ? instrument.noteSubFilters[i] : instrument.eqSubFilters[i];\n                if (subFilter != null) {\n                    let parsedFilter: FilterSettings = new FilterSettings();\n                    parsedFilter.fromJsonObject(subFilter.toJsonObject());\n                    this._subFilters[i] = parsedFilter;\n                }\n            }\n        }\n\n        this.container.addEventListener(\"mousedown\", this._whenMousePressed);\n        this.container.addEventListener(\"mouseover\", this._whenMouseOver);\n        this.container.addEventListener(\"mouseout\", this._whenMouseOut);\n        document.addEventListener(\"mousemove\", this._whenMouseMoved);\n        document.addEventListener(\"mouseup\", this._whenCursorReleased);\n\n        this.container.addEventListener(\"touchstart\", this._whenTouchPressed);\n        this.container.addEventListener(\"touchmove\", this._whenTouchMoved);\n        this.container.addEventListener(\"touchend\", this._whenCursorReleased);\n        this.container.addEventListener(\"touchcancel\", this._whenCursorReleased);\n    }\n\n    private _whenKeyPressed = (event: KeyboardEvent): void => {\n        if (event.keyCode == 90) { // z\n            this.undo();\n            event.stopPropagation();\n        }\n        if (event.keyCode == 89) { // y\n            this.redo();\n            event.stopPropagation();\n        }\n    }\n\n    private _xToFreq(x: number): number {\n        return Config.filterFreqRange * x / this._editorWidth - 0.5;\n    }\n    private _freqToX(freq: number): number {\n        return this._editorWidth * (freq + 0.5) / Config.filterFreqRange;\n    }\n    private _yToGain(y: number): number {\n        return (Config.filterGainRange - 1) * (1 - (y - .5) / (this._editorHeight - 1));\n    }\n    private _gainToY(gain: number): number {\n        return (this._editorHeight - 1) * (1 - gain / (Config.filterGainRange - 1)) + .5;\n    }\n\n    private _whenMouseOver = (event: MouseEvent): void => {\n        this._mouseOver = true;\n\n        if (!this._larger)\n            this._controlPointPath.style.setProperty(\"fill\", \"currentColor\");\n    }\n\n    private _whenMouseOut = (event: MouseEvent): void => {\n        this._mouseOver = false;\n        this._updatePath();\n\n        if (this.coordText != null) {\n            this.coordText.innerText = \"\";\n        }\n    }\n\n    private _whenMousePressed = (event: MouseEvent): void => {\n        event.preventDefault();\n        this._touchMode = false;\n        const boundingRect: ClientRect = this._svg.getBoundingClientRect();\n        this._mouseX = ((event.clientX || event.pageX) - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\n        this._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\n        if (isNaN(this._mouseX)) this._mouseX = 0;\n        if (isNaN(this._mouseY)) this._mouseY = 0;\n        this._whenCursorPressed();\n    }\n\n    private _whenTouchPressed = (event: TouchEvent): void => {\n        event.preventDefault();\n        this._touchMode = true;\n        const boundingRect: ClientRect = this._svg.getBoundingClientRect();\n        this._mouseX = (event.touches[0].clientX - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\n        this._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\n        if (isNaN(this._mouseX)) this._mouseX = 0;\n        if (isNaN(this._mouseY)) this._mouseY = 0;\n        this._whenCursorPressed();\n    }\n\n    private _whenMouseMoved = (event: MouseEvent): void => {\n        if (this.container.offsetParent == null) return;\n        const boundingRect: ClientRect = this._svg.getBoundingClientRect();\n        this._mouseX = ((event.clientX || event.pageX) - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\n        this._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\n        if (isNaN(this._mouseX)) this._mouseX = 0;\n        if (isNaN(this._mouseY)) this._mouseY = 0;\n        if (!this._mouseDown) this._updateCursor();\n\n        this._whenCursorMoved();\n    }\n\n    private _whenTouchMoved = (event: TouchEvent): void => {\n        if (this.container.offsetParent == null) return;\n        if (this._mouseDown) event.preventDefault();\n        const boundingRect: ClientRect = this._svg.getBoundingClientRect();\n        this._mouseX = (event.touches[0].clientX - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\n        this._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\n        if (isNaN(this._mouseX)) this._mouseX = 0;\n        if (isNaN(this._mouseY)) this._mouseY = 0;\n        if (!this._mouseDown) this._updateCursor();\n        this._whenCursorMoved();\n    }\n\n    private _whenCursorPressed(): void {\n        this._mouseDown = true;\n        const sequence: ChangeSequence = new ChangeSequence();\n        this._dragChange = sequence;\n        this._doc.setProspectiveChange(this._dragChange);\n        this._updateCursor();\n        this._whenCursorMoved();\n    }\n\n    private _updateCursor(): void {\n        this._freqStart = this._xToFreq(this._mouseX);\n        this._gainStart = this._yToGain(this._mouseY);\n\n        this._addingPoint = true;\n        this._selectedIndex = -1;\n        let nearestDistance: number = Number.POSITIVE_INFINITY;\n        for (let i: number = 0; i < this._useFilterSettings.controlPointCount; i++) {\n            const point: FilterControlPoint = this._useFilterSettings.controlPoints[i];\n            const distance: number = Math.sqrt(Math.pow(this._freqToX(point.freq) - this._mouseX, 2) + Math.pow(this._gainToY(point.gain) - this._mouseY, 2));\n            if ((distance <= 13 * (1 + +this._larger) || this._useFilterSettings.controlPointCount >= Config.filterMaxPoints) && distance < nearestDistance) {\n                nearestDistance = distance;\n                this._selectedIndex = i;\n                this._addingPoint = false;\n            }\n        }\n        if (this._addingPoint) {\n            const ratio: number = this._mouseX / this._editorWidth;\n            if (ratio < 0.2) {\n                this._addedType = FilterType.highPass;\n            } else if (ratio < 0.8) {\n                this._addedType = FilterType.peak;\n            } else {\n                this._addedType = FilterType.lowPass;\n            }\n        }\n    }\n\n    private _whenCursorMoved(): void {\n        if (this._writingMods) {\n            const instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\n            this._useFilterSettings = this._getTargetFilterSettings(instrument);\n            if (this._dragChange != null) {\n                if (this._dragChange instanceof ChangeSequence && this._dragChange.checkFirst() instanceof ChangeFilterMovePoint) {\n                    const data: FilterMoveData = ((this._dragChange as ChangeSequence).checkFirst() as ChangeFilterMovePoint).getMoveData(true);\n                    const newPoint: FilterControlPoint | null = this._useFilterSettings.controlPoints[this._selectedIndex];\n\n                    if (newPoint == null || newPoint.type != data.point.type) {\n                        this._dragChange = null;\n                        this._writingMods = false;\n                        this._mouseDown = false;\n                    }\n                    else {\n                        newPoint.freq = data.freq;\n                        newPoint.gain = data.gain;\n                    }\n                } else {\n                    this._dragChange = null;\n                    this._writingMods = false;\n                    this._mouseDown = false;\n                }\n            }\n        }\n\n        if (this._dragChange != null && (this._doc.lastChangeWas(this._dragChange) || this._writingMods )) {\n            this._dragChange.undo();\n        } else {\n            this._mouseDown = false;\n        }\n        this._dragChange = null;\n        this._deletingPoint = false;\n\n        if (this.coordText != null && !this._mouseDown) {\n            let gain: number = Math.round(this._yToGain(this._mouseY));\n            let freq: number = Math.round(this._xToFreq(this._mouseX));\n            if (freq >= 0 && freq < Config.filterFreqRange && gain >= 0 && gain < Config.filterGainRange)\n                this.coordText.innerText = \"(\" + freq + \", \" + gain + \")\";\n            else\n                this.coordText.innerText = \"\";\n        }\n\n        if (this._mouseDown) {\n            const sequence: ChangeSequence = new ChangeSequence();\n            this._dragChange = sequence;\n            this._doc.setProspectiveChange(this._dragChange);\n\n            if (this._addingPoint) {\n                const gain: number = Math.max(0, Math.min(Config.filterGainRange - 1, Math.round(this._yToGain(this._mouseY))));\n                const freq: number = this._findNearestFreqSlot(this._useFilterSettings, this._xToFreq(this._mouseX), -1);\n                if (freq >= 0 && freq < Config.filterFreqRange) {\n                    const point: FilterControlPoint = new FilterControlPoint();\n                    point.type = this._addedType;\n                    point.freq = freq;\n                    point.gain = gain;\n                    sequence.append(new ChangeFilterAddPoint(this._doc, this._useFilterSettings, point, this._useFilterSettings.controlPointCount, this._useNoteFilter));\n\n                    if (this.coordText != null) {\n                        this.coordText.innerText = \"(\" + freq + \", \" + gain + \")\";\n                    }\n                } else {\n                    this._deletingPoint = true;\n                }\n            } else if (this._selectedIndex >= this._useFilterSettings.controlPointCount || this._selectedIndex == -1) {\n                this._dragChange = null;\n                this._mouseDown = false;\n            } else {\n                const freqDelta: number = this._xToFreq(this._mouseX) - this._freqStart;\n                const gainDelta: number = this._yToGain(this._mouseY) - this._gainStart;\n                let point: FilterControlPoint = this._useFilterSettings.controlPoints[this._selectedIndex];\n                const gain: number = Math.max(0, Math.min(Config.filterGainRange - 1, Math.round(point.gain + gainDelta)));\n                const freq: number = this._findNearestFreqSlot(this._useFilterSettings, point.freq + freqDelta, this._selectedIndex);\n\n                if (Math.round(freqDelta) != 0.0 || Math.round(gainDelta) != 0.0 || freq != point.freq || gain != point.gain) {\n                    this._mouseDragging = true;\n                }\n\n                if (freq >= 0 && freq < Config.filterFreqRange) {\n                    sequence.append(new ChangeFilterMovePoint(this._doc, point, point.freq, freq, point.gain, gain, this._useNoteFilter, this._selectedIndex));\n                    if (this.coordText != null) {\n                        this.coordText.innerText = \"(\" + freq + \", \" + gain + \")\";\n                        if (!this._writingMods) {\n                            const instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\n                            instrument.tmpEqFilterStart = instrument.eqFilter;\n                            instrument.tmpEqFilterEnd = null;\n                            instrument.tmpNoteFilterStart = instrument.noteFilter;\n                            instrument.tmpNoteFilterEnd = null;\n                        }\n                    }\n                } else {\n                    sequence.append(new ChangeFilterAddPoint(this._doc, this._useFilterSettings, point, this._selectedIndex, this._useNoteFilter, true));\n                    this._deletingPoint = true;\n                }\n            }\n        }\n        if (this._mouseDown || this._mouseOver) {\n            this._updatePath();\n        }\n    }\n\n    private _whenCursorReleased = (event: Event): void => {\n        if (this._writingMods) {\n            const instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\n            this._useFilterSettings = this._getTargetFilterSettings(instrument);\n        }\n\n        if (this.container.offsetParent == null) return;\n        if (this._mouseDown && (this._doc.lastChangeWas(this._dragChange) || this._writingMods ) && this._dragChange != null) {\n            if (!this._addingPoint && !this._mouseDragging && !this._touchMode) {\n                if (this._selectedIndex < this._useFilterSettings.controlPointCount && this._selectedIndex != -1) {\n                    const point: FilterControlPoint = this._useFilterSettings.controlPoints[this._selectedIndex];\n                    let change: ChangeFilterAddPoint = new ChangeFilterAddPoint(this._doc, this._useFilterSettings, point, this._selectedIndex, this._useNoteFilter, true);\n                    if (!this._larger) {\n                        this._doc.record(change);\n                    }\n                }\n            } else if (!this._larger) {\n                this._doc.record(this._dragChange);\n            }\n            this._updatePath();\n            if (this._larger) {\n                this.selfUndoSettings.length = this.selfUndoHistoryPos+1;\n                this.selfUndoSettings.push(JSON.stringify(this._filterSettings.toJsonObject()));\n                this.selfUndoHistoryPos++;\n            }\n        }\n        this._dragChange = null;\n        this._mouseDragging = false;\n        this._deletingPoint = false;\n        this._mouseDown = false;\n        this._writingMods = false;\n        this._updateCursor();\n    }\n\n    private _findNearestFreqSlot(filterSettings: FilterSettings, targetFreq: number, ignoreIndex: number): number {\n        const roundedFreq: number = Math.round(targetFreq);\n        let lowerFreq: number = roundedFreq;\n        let upperFreq: number = roundedFreq;\n        let tryingLower: boolean = (roundedFreq <= targetFreq);\n        while (true) {\n            let foundConflict: boolean = false;\n            const currentFreq: number = tryingLower ? lowerFreq : upperFreq;\n            for (let i: number = 0; i < filterSettings.controlPointCount; i++) {\n                if (i == ignoreIndex) continue;\n                if (filterSettings.controlPoints[i].freq == currentFreq) {\n                    foundConflict = true;\n                    break;\n                }\n            }\n            if (!foundConflict) return currentFreq;\n            tryingLower = !tryingLower;\n            if (tryingLower) lowerFreq--;\n            if (!tryingLower) upperFreq++;\n        }\n    }\n\n    private static _circlePath(cx: number, cy: number, radius: number, reverse: boolean = false): string {\n        return `M ${cx - radius} ${cy} ` +\n            `a ${radius} ${radius} 0 1 ${reverse ? 1 : 0} ${radius * 2} 0 ` +\n            `a ${radius} ${radius} 0 1 ${reverse ? 1 : 0} ${-radius * 2} 0 `;\n    }\n\n    private _updatePath(): void {\n        this._highlight.style.display = \"none\";\n        this._label.textContent = \"\";\n\n        let controlPointPath: string = \"\";\n        let dottedLinePath: string = \"\";\n        for (let i: number = 0; i < this._useFilterSettings.controlPointCount; i++) {\n            const point: FilterControlPoint = this._useFilterSettings.controlPoints[i];\n            const pointX: number = this._freqToX(point.freq);\n            const pointY: number = this._gainToY(point.gain);\n\n            controlPointPath += FilterEditor._circlePath(pointX, pointY, this._pointRadius);\n\n            if (point.type == FilterType.highPass) {\n                dottedLinePath += \"M \" + 0 + \" \" + pointY + \" L \" + pointX + \" \" + pointY + \" \";\n            } else if (point.type == FilterType.lowPass) {\n                dottedLinePath += \"M \" + this._editorWidth + \" \" + pointY + \" L \" + pointX + \" \" + pointY + \" \";\n            }\n\n            if (this._selectedIndex == i && this._mouseOver && !this._mouseDown) {\n                this._highlight.setAttribute(\"cx\", String(pointX));\n                this._highlight.setAttribute(\"cy\", String(pointY));\n                this._highlight.style.display = \"\";\n\n                if (this.coordText != null) {\n                    this.coordText.innerText = \"(\" + point.freq + \", \" + point.gain + \")\";\n                }\n            }\n            if ((this._selectedIndex == i || (this._addingPoint && this._mouseDown && i == this._useFilterSettings.controlPointCount - 1)) && (this._mouseOver || this._mouseDown) && !this._deletingPoint) {\n                this._label.textContent = (i + 1) + \": \" + Config.filterTypeNames[point.type] + (this._larger ? \" @\" + prettyNumber(point.getHz()) + \"Hz\" : \"\");\n            }\n\n            if (this._larger) {\n                this._indicators[i].style.setProperty(\"display\", \"\");\n                this._indicators[i].setAttribute(\"x\", \"\" + (pointX - 7));\n                this._indicators[i].setAttribute(\"y\", \"\" + (pointY + 2));\n            }\n        }\n        this._controlPointPath.setAttribute(\"d\", controlPointPath);\n        this._dottedLinePath.setAttribute(\"d\", dottedLinePath);\n        if (this._addingPoint && !this._mouseDown && this._mouseOver) {\n            this._label.textContent = \"+ \" + Config.filterTypeNames[this._addedType];\n        }\n\n        // Hide unused control point labels\n        if (this._larger) {\n            for (let i: number = this._useFilterSettings.controlPointCount; i < Config.filterMaxPoints; i++) {\n                this._indicators[i].style.setProperty(\"display\", \"none\");\n            }\n        }\n\n        //let volumeCompensation: number = 1.0;\n        const standardSampleRate: number = 44800;\n        const filters: FilterCoefficients[] = [];\n        for (let i: number = 0; i < this._useFilterSettings.controlPointCount; i++) {\n            const point: FilterControlPoint = this._useFilterSettings.controlPoints[i];\n            const filter: FilterCoefficients = new FilterCoefficients();\n            point.toCoefficients(filter, standardSampleRate);\n            filters.push(filter);\n            //volumeCompensation *= point.getVolumeCompensationMult();\n        }\n\n        const response: FrequencyResponse = new FrequencyResponse();\n        let responsePath: string = \"M 0 \" + this._editorHeight + \" \";\n        for (let i: number = -1; i <= Config.filterFreqRange; i++) {\n            const hz: number = FilterControlPoint.getHzFromSettingValue(i);\n            const cornerRadiansPerSample: number = 2.0 * Math.PI * hz / standardSampleRate;\n            const real: number = Math.cos(cornerRadiansPerSample);\n            const imag: number = Math.sin(cornerRadiansPerSample);\n\n            let linearGain: number = 1.0; //volumeCompensation;\n            for (const filter of filters) {\n                response.analyzeComplex(filter, real, imag);\n                linearGain *= response.magnitude();\n            }\n\n            const gainSetting: number = Math.log2(linearGain) / Config.filterGainStep + Config.filterGainCenter;\n            const y: number = this._gainToY(gainSetting);\n            const x: number = this._freqToX(i);\n            responsePath += \"L \" + prettyNumber(x) + \" \" + prettyNumber(y) + \" \";\n        }\n\n        responsePath += \"L \" + this._editorWidth + \" \" + this._editorHeight + \" L 0 \" + this._editorHeight + \" z \";\n        this._responsePath.setAttribute(\"d\", responsePath);\n    }\n\n    // Swap to new filter settings all at once.\n    public swapToSettings(settings: FilterSettings, useHistory: boolean = false) {\n        const instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\n        new ChangeFilterSettings(this._doc, settings, this._filterSettings, this._useNoteFilter, this._subFilters, this._useNoteFilter ? instrument.noteSubFilters : instrument.eqSubFilters);\n        this._filterSettings = settings;\n        this._subFilters[this._subfilterIndex] = settings;\n        if (useHistory && this._larger) {\n            this.selfUndoSettings.length = this.selfUndoHistoryPos + 1;\n            this.selfUndoSettings.push(JSON.stringify((this._filterSettings.toJsonObject())));\n            this.selfUndoHistoryPos++;\n        }\n        this._useFilterSettings = this._filterSettings;\n        this._updatePath();\n    }\n\n    // Save settings on prompt close (record a change from first settings to newest)\n    public saveSettings() {\n        let firstFilter: FilterSettings = new FilterSettings;\n        const instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\n        firstFilter.fromJsonObject(JSON.parse(String(this.selfUndoSettings[0])));\n        this._doc.record(new ChangeFilterSettings(this._doc, this._subFilters[0], firstFilter, this._useNoteFilter, this._subFilters, this._useNoteFilter ? instrument.noteSubFilters : instrument.eqSubFilters), true);\n    }\n\n    // Self-undo history management\n    // Returns the subfilter index to swap to, if any\n    public undo(): number {\n        if (this.selfUndoHistoryPos > 0) {\n            this.selfUndoHistoryPos--;\n            // Jump back and load latest state of this subfilter. Also save subfilter settings for current index\n            if (this.selfUndoSettings[this.selfUndoHistoryPos + 1] != null && this.selfUndoSettings[this.selfUndoHistoryPos + 1].startsWith(\"jmp\")) {\n                let str: String = this.selfUndoSettings[this.selfUndoHistoryPos + 1];\n                let jumpIndex = +str.substring(3, str.indexOf(\"|\"));\n                this.swapToSubfilter(this._subfilterIndex, jumpIndex);\n                return jumpIndex;\n            // Jumping to FIRST state of this subfilter\n            } else if (this.selfUndoSettings[this.selfUndoHistoryPos].startsWith(\"jmp\")) {\n                let savedFilter: FilterSettings = new FilterSettings();\n                let str: String = this.selfUndoSettings[this.selfUndoHistoryPos];\n                savedFilter.fromJsonObject(JSON.parse(str.substring(str.indexOf(\":\") + 1)));\n                this.swapToSettings(savedFilter, false);\n            } else {\n                let savedFilter: FilterSettings = new FilterSettings();\n                savedFilter.fromJsonObject(JSON.parse(String(this.selfUndoSettings[this.selfUndoHistoryPos])));\n                this.swapToSettings(savedFilter, false);\n            }\n        }\n        return -1;\n    }\n\n    // Returns the subfilter index to swap to, if any\n    public redo(): number {\n        if (this.selfUndoHistoryPos < this.selfUndoSettings.length-1) {\n            this.selfUndoHistoryPos++;\n            // Check if next index in undo queue is a command to jump to a new filter index\n            if (this.selfUndoSettings[this.selfUndoHistoryPos].startsWith(\"jmp\")) {\n                let str: String = this.selfUndoSettings[this.selfUndoHistoryPos];\n                let jumpIndex = +str.substring(str.indexOf(\"|\") + 1, str.indexOf(\":\"));\n                this.swapToSubfilter(this._subfilterIndex, jumpIndex, false);\n                return jumpIndex;\n            } else {\n                let savedFilter: FilterSettings = new FilterSettings();\n                savedFilter.fromJsonObject(JSON.parse(String(this.selfUndoSettings[this.selfUndoHistoryPos])));\n                this.swapToSettings(savedFilter, false);\n            }\n        }\n        return -1;\n\n    }\n\n    public resetToInitial() {\n        this.selfUndoHistoryPos = 1;\n        this.undo();\n    }\n\n    public swapSubfilterIndices(newIndex: number) {\n        if (this._selectedIndex == -1)\n            return;\n\n        if (newIndex >= this._useFilterSettings.controlPointCount)\n            return;\n\n        let tmp: FilterControlPoint = this._useFilterSettings.controlPoints[this._selectedIndex];\n        this._useFilterSettings.controlPoints[this._selectedIndex] = this._useFilterSettings.controlPoints[newIndex];\n        this._useFilterSettings.controlPoints[newIndex] = tmp;\n\n        this.render();\n    }\n\n    public swapToSubfilter(oldIndex: number, newIndex: number, useHistory: boolean = false) {\n        if (oldIndex != newIndex) {\n            // Save current subfilter\n            let currFilter: FilterSettings = new FilterSettings();\n            currFilter.fromJsonObject(this._filterSettings.toJsonObject());\n            this._subFilters[oldIndex] = currFilter;\n\n            // Copy main filter at this time\n            if (this._subFilters[newIndex] == undefined) {\n                let parsedFilter: FilterSettings = new FilterSettings();\n                parsedFilter.fromJsonObject(this._subFilters[0].toJsonObject());\n                this._subFilters[newIndex] = parsedFilter;\n            }\n\n            // Record the swap in undo history\n            if (useHistory) {\n                this.selfUndoSettings.length = this.selfUndoHistoryPos + 1;\n                // Swap from|to:filterInitSettings\n                this.selfUndoSettings.push(\"jmp\" + oldIndex + \"|\" + newIndex + \":\" + JSON.stringify(this._subFilters[newIndex].toJsonObject()));\n                this.selfUndoHistoryPos++;\n            }\n\n            this._subfilterIndex = newIndex;\n            // Never use history here since the swap action is itself history-generating\n            this.swapToSettings(this._subFilters[newIndex], false);\n        }\n\n    }\n\n    private _getTargetFilterSettings(instrument: Instrument): FilterSettings {\n        // TODO: Re-compute default point freqs/gains only when needed\n        let targetSettings: FilterSettings = (this._useNoteFilter) ? instrument.tmpNoteFilterStart! : instrument.tmpEqFilterStart!;\n        if (targetSettings == null) targetSettings = (this._useNoteFilter) ? instrument.noteFilter : instrument.eqFilter;\n\n        return targetSettings;\n    }\n\n    public render(activeMods: boolean = false, forceModRender: boolean = false): void {\n        this._writingMods = forceModRender && this._mouseDown;\n        const instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\n        const filterSettings: FilterSettings = this._useNoteFilter ? instrument.noteFilter : instrument.eqFilter;\n        let displayMods: boolean = (activeMods && !this._larger && (forceModRender || (!this._mouseOver && !this._mouseDragging && !this._mouseDown) ) && this._doc.synth.playing)\n        if (displayMods)\n            this._controlPointPath.style.setProperty(\"fill\", `${ColorConfig.overwritingModSlider}`);\n        else if (!this._larger)\n            this._controlPointPath.style.setProperty(\"fill\", \"currentColor\");\n\n        if (this._useFilterSettings != filterSettings && !this._writingMods) {\n            this._dragChange = null;\n            this._mouseDown = false;\n        }\n        this._filterSettings = filterSettings;\n\n        // If modulators are active, show synth's current filter point settings instead of real points.\n        // Will auto update, but if the user is writing directly to mod values then the writing point will be\n        // forcibly maintained at the cursor position.\n        if ( displayMods ) {\n            this._useFilterSettings = this._getTargetFilterSettings(instrument);\n\n            if (this._writingMods)\n                this._whenCursorMoved();\n        }\n        else {\n            this._useFilterSettings = filterSettings;\n        }\n\n        if (!this._mouseDown) this._updateCursor();\n\n        let pointTypes: number = 0;\n        let pointFreqs: number = 0;\n        let pointGains: number = 0;\n        for (let i: number = 0; i < this._useFilterSettings.controlPointCount; i++) {\n            const point: FilterControlPoint = this._useFilterSettings.controlPoints[i];\n            pointTypes = pointTypes * FilterType.length + point.type;\n            pointFreqs = pointFreqs * Config.filterFreqRange + point.freq;\n            pointGains = pointGains * Config.filterGainRange + point.gain;\n        }\n        if (this._renderedSelectedIndex != this._selectedIndex ||\n            this._renderedPointCount != this._useFilterSettings.controlPointCount ||\n            this._renderedPointTypes != pointTypes ||\n            this._renderedPointFreqs != pointFreqs ||\n            this._renderedPointGains != pointGains) {\n            this._renderedSelectedIndex = this._selectedIndex;\n            this._renderedPointCount = this._useFilterSettings.controlPointCount;\n            this._renderedPointTypes = pointTypes;\n            this._renderedPointFreqs = pointFreqs;\n            this._renderedPointGains = pointGains;\n            this._updatePath();\n        }\n\n        /*\n        if (this._renderedKey != this._doc.song.key) {\n            this._renderedKey = this._doc.song.key;\n            const tonicHz: number = Instrument.frequencyFromPitch(Config.keys[this._doc.song.key].basePitch);\n            const x: number = this._freqToX(FilterControlPoint.getSettingValueFromHz(tonicHz));\n            this._octaves.setAttribute(\"x\", String(x));\n        }\n        */\n    }\n}\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\n\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\nimport { Prompt } from \"./Prompt\";\nimport { SongDocument } from \"./SongDocument\";\nimport { Config } from \"../synth/SynthConfig\";\nimport { FilterEditor } from \"./FilterEditor\";\nimport { SongEditor } from \"./SongEditor\";\nimport { FilterSettings } from \"../synth/synth\";\nimport { ColorConfig } from \"./ColorConfig\";\n\n//namespace beepbox {\nconst { button, div, h2, p } = HTML;\n\nexport class CustomFilterPrompt implements Prompt {\n\n\tpublic filterEditor: FilterEditor;\n\n\tpublic filterData: FilterSettings = new FilterSettings;\n\tpublic startingFilterData: FilterSettings = new FilterSettings;\n\n\tprivate _subfilterIndex = 0;\n\n\tpublic readonly _playButton: HTMLButtonElement = button({ style: \"width: 55%;\", type: \"button\" });\n\n\tpublic readonly _filterButtons: HTMLButtonElement[] = [];\n\n\tpublic readonly _filterButtonContainer: HTMLDivElement = div({class: \"instrument-bar\", style: \"justify-content: center;\"});\n\n\tprivate readonly _cancelButton: HTMLButtonElement = button({ class: \"cancelButton\" });\n\tprivate readonly _okayButton: HTMLButtonElement = button({ class: \"okayButton\", style: \"width:45%;\" }, \"Okay\");\n\n\tprivate readonly _filterContainer: HTMLDivElement = div({ style: \"width: 100%; display: flex; flex-direction: row; align-items: center; justify-content: center;\" });\n\n\tprivate readonly _editorTitle: HTMLDivElement = div({}, h2(\"Edit Filter\"));\n\n\tprivate readonly _filterCopyButton: HTMLButtonElement = button({ style: \"width:86px; margin-right: 5px;\", class: \"copyButton\" }, [\n\t\t\"Copy\",\n\t\t// Copy icon:\n\t\tSVG.svg({ style: \"flex-shrink: 0; position: absolute; left: 0; top: 50%; margin-top: -1em; pointer-events: none;\", width: \"2em\", height: \"2em\", viewBox: \"-5 -21 26 26\" }, [\n\t\t\tSVG.path({ d: \"M 0 -15 L 1 -15 L 1 0 L 13 0 L 13 1 L 0 1 L 0 -15 z M 2 -1 L 2 -17 L 10 -17 L 14 -13 L 14 -1 z M 3 -2 L 13 -2 L 13 -12 L 9 -12 L 9 -16 L 3 -16 z\", fill: \"currentColor\" }),\n\t\t]),\n\t]);\n\tprivate readonly _filterPasteButton: HTMLButtonElement = button({ style: \"width:86px;\", class: \"pasteButton\" }, [\n\t\t\"Paste\",\n\t\t// Paste icon:\n\t\tSVG.svg({ style: \"flex-shrink: 0; position: absolute; left: 0; top: 50%; margin-top: -1em; pointer-events: none;\", width: \"2em\", height: \"2em\", viewBox: \"0 0 26 26\" }, [\n\t\t\tSVG.path({ d: \"M 8 18 L 6 18 L 6 5 L 17 5 L 17 7 M 9 8 L 16 8 L 20 12 L 20 22 L 9 22 z\", stroke: \"currentColor\", fill: \"none\" }),\n\t\t\tSVG.path({ d: \"M 9 3 L 14 3 L 14 6 L 9 6 L 9 3 z M 16 8 L 20 12 L 16 12 L 16 8 z\", fill: \"currentColor\", }),\n\t\t]),\n\t]);\n\tprivate readonly _filterCopyPasteContainer: HTMLDivElement = div({ style: \"width: 185px;\" }, this._filterCopyButton, this._filterPasteButton);\n\n\tprivate readonly _filterCoordinateText: HTMLDivElement = div({ style: \"text-align: left; margin-bottom: 0px; font-size: x-small; height: 1.3em; color: \" + ColorConfig.secondaryText + \";\"}, p(\"\"));\n\n\tpublic readonly container: HTMLDivElement = div({ class: \"prompt noSelection\", style: \"width: 600px;\" },\n\t\tthis._editorTitle,\n\t\tdiv({ style: \"display: flex; width: 55%; align-self: center; flex-direction: row; align-items: center; justify-content: center;\" },\n\t\t\tthis._playButton\n\t\t),\n\t\tthis._filterButtonContainer,\n\t\tthis._filterContainer,\n\t\tdiv({ style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\" },\n\t\t\tthis._okayButton,\n\t\t\tthis._filterCopyPasteContainer,\n\t\t),\n\t\tthis._cancelButton,\n\t);\n\n\tconstructor(private _doc: SongDocument, private _songEditor: SongEditor, private _useNoteFilter: boolean) {\n\n\t\tthis._okayButton.addEventListener(\"click\", this._saveChanges);\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\n\t\tthis._playButton.addEventListener(\"click\", this._togglePlay);\n\t\tthis._filterCopyButton.addEventListener(\"click\", this._copyFilterSettings);\n\t\tthis._filterPasteButton.addEventListener(\"click\", this._pasteFilterSettings);\n\t\tthis.updatePlayButton();\n\t\tlet colors = ColorConfig.getChannelColor(this._doc.song, this._doc.channel);\n\n\t\tthis.filterEditor = new FilterEditor(_doc, _useNoteFilter, true);\n\t\tthis._filterContainer.appendChild(this.filterEditor.container);\n\n\t\t// Add coordinates to editor\n\t\tthis.filterEditor.container.insertBefore(this._filterCoordinateText, this.filterEditor.container.firstChild);\n\t\tthis.filterEditor.coordText = this._filterCoordinateText;\n\n\t\tthis._editorTitle.children[0].innerHTML = (_useNoteFilter) ? \"Edit Note Filter\" : \"Edit EQ Filter\";\n\n\t\tlet newButton: HTMLButtonElement = button({ class: \"no-underline\", style: \"max-width: 5em;\"}, \"Main\");\n\t\tthis._filterButtonContainer.appendChild(newButton);\n\t\tthis._filterButtons.push(newButton);\n\t\tnewButton.addEventListener(\"click\", () => { this._setSubfilter(0); });\n\t\tfor (let i: number = 1; i < Config.filterMorphCount; i++) {\n\t\t\tlet newSubButton: HTMLButtonElement = button({ class: \"no-underline\", style: \"max-width: 2em;\"}, \"\" + i);\n\t\t\tthis._filterButtons.push(newSubButton);\n\t\t\tthis._filterButtonContainer.appendChild(newSubButton);\n\t\t\tnewSubButton.addEventListener(\"click\", () => { this._setSubfilter(i); });\n\t\t}\n\t\tthis._filterButtons[Config.filterMorphCount - 1].classList.add(\"last-button\");\n\t\tthis._filterButtons[0].classList.add(\"selected-instrument\");\n\n\t\tthis._filterButtonContainer.style.setProperty(\"--text-color-lit\", colors.primaryNote);\n\t\tthis._filterButtonContainer.style.setProperty(\"--text-color-dim\", colors.secondaryNote);\n\t\tthis._filterButtonContainer.style.setProperty(\"--background-color-lit\", colors.primaryChannel);\n\t\tthis._filterButtonContainer.style.setProperty(\"--background-color-dim\", colors.secondaryChannel);\n\n\t\tthis._filterContainer.addEventListener(\"keydown\", this._whenKeyPressed);\n\t\tthis.filterEditor.container.addEventListener(\"keydown\", this._whenKeyPressed);\n\t\tthis.container.addEventListener(\"keydown\", this._whenKeyPressed);\n\n\t\tsetTimeout(() => this._playButton.focus());\n\n\t\tthis.filterEditor.render();\n\t}\n\n\tprivate _setSubfilter = (index: number, useHistory: boolean = true, doSwap: boolean = true): void => {\n\t\tthis._filterButtons[this._subfilterIndex].classList.remove(\"selected-instrument\");\n\t\tif ( doSwap ) this.filterEditor.swapToSubfilter(this._subfilterIndex, index, useHistory);\n\t\tthis._subfilterIndex = index;\n\t\tthis._filterButtons[index].classList.add(\"selected-instrument\");\n    }\n\n\tprivate _copyFilterSettings = (): void => {\n\t\tconst filterCopy: any = this._useNoteFilter\n\t\t\t? this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()].noteFilter.toJsonObject()\n\t\t\t: this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()].eqFilter.toJsonObject();\n\t\twindow.localStorage.setItem(\"filterCopy\", JSON.stringify(filterCopy));\n\t}\n\n\tprivate _pasteFilterSettings = (): void => {\n\n\t\tlet filterCopy: FilterSettings = new FilterSettings();\n\t\tfilterCopy.fromJsonObject(JSON.parse(String(window.localStorage.getItem(\"filterCopy\"))));\n\t\tif (filterCopy != null) {\n\t\t\tthis.filterEditor.swapToSettings(filterCopy, true);\n\t\t}\n    }\n\n\tprivate _whenKeyPressed = (event: KeyboardEvent): void => {\n\t\tif (event.keyCode == 90) { // z\n\t\t\tlet newIdx = this.filterEditor.undo();\n\t\t\tif (newIdx >= 0) {\n\t\t\t\tthis._setSubfilter(newIdx, false, false);\n            }\n\t\t\tevent.stopPropagation();\n\t\t}\n\t\tif (event.keyCode == 89) { // y\n\t\t\tlet newIdx = this.filterEditor.redo();\n\t\t\tif (newIdx >= 0) {\n\t\t\t\tthis._setSubfilter(newIdx, false, false);\n\t\t\t}\n\t\t\tevent.stopPropagation();\n\t\t}\n\t\t// Number 1-9\n\t\tif (event.keyCode >= 49 && event.keyCode <= 57) {\n\t\t\tif (!event.shiftKey) {\n\t\t\t\tthis.filterEditor.swapSubfilterIndices(event.keyCode - 49);\n\t\t\t\tevent.stopPropagation();\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _togglePlay = (): void => {\n\t\tthis._songEditor.togglePlay();\n\t\tthis.updatePlayButton();\n\t}\n\n\tpublic updatePlayButton(): void {\n\t\tif (this._doc.synth.playing) {\n\t\t\tthis._playButton.classList.remove(\"playButton\");\n\t\t\tthis._playButton.classList.add(\"pauseButton\");\n\t\t\tthis._playButton.title = \"Pause (Space)\";\n\t\t\tthis._playButton.innerText = \"Pause\";\n\t\t} else {\n\t\t\tthis._playButton.classList.remove(\"pauseButton\");\n\t\t\tthis._playButton.classList.add(\"playButton\");\n\t\t\tthis._playButton.title = \"Play (Space)\";\n\t\t\tthis._playButton.innerText = \"Play\";\n\t\t}\n\t}\n\n\tprivate _close = (): void => {\n\t\tthis._doc.prompt = null;\n\t\t// Restore filter settings to default\n\t\tthis.filterEditor.resetToInitial();\n\t\tthis._doc.undo();\n\t}\n\n\tpublic cleanUp = (): void => {\n\t\tthis._okayButton.removeEventListener(\"click\", this._saveChanges);\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\n\t\tthis.container.removeEventListener(\"keydown\", this.whenKeyPressed);\n\n\t\tthis._playButton.removeEventListener(\"click\", this._togglePlay);\n\t}\n\n\tpublic whenKeyPressed = (event: KeyboardEvent): void => {\n\t\tif ((<Element>event.target).tagName != \"BUTTON\" && event.keyCode == 13) { // Enter key\n\t\t\tthis._saveChanges();\n\t\t}\n\t\telse if (event.keyCode == 32) { // space\n\t\t\tthis._togglePlay();\n\t\t\tevent.preventDefault();\n\t\t}\n\t\telse if (event.keyCode == 90) { // z\n\t\t\tthis.filterEditor.undo();\n\t\t\tevent.stopPropagation();\n\t\t}\n\t\telse if (event.keyCode == 89) { // y\n\t\t\tthis.filterEditor.redo();\n\t\t\tevent.stopPropagation();\n\t\t}\n\t\telse if (event.keyCode == 219) { // [\n\t\t\tthis._doc.synth.goToPrevBar();\n\t\t}\n\t\telse if (event.keyCode == 221) { // ]\n\t\t\tthis._doc.synth.goToNextBar();\n\t\t}\n\t\telse if (event.keyCode >= 48 && event.keyCode <= 57) { // 0-9\n\t\t\tif (event.shiftKey) {\n\t\t\t\tthis._setSubfilter(event.keyCode - 48);\n\t\t\t}\n\t\t}\n\n\t}\n\n\tprivate _saveChanges = (): void => {\n\t\tthis._doc.prompt = null;\n\t\tthis.filterEditor.saveSettings();\n\t}\n}\n//}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nfunction transfer(source: ArrayBuffer, length: number): ArrayBuffer {\n\tconst dest: ArrayBuffer = new ArrayBuffer(length);\n\tlet nextOffset = 0;\n\tlet leftBytes = Math.min(source.byteLength, dest.byteLength);\n\tconst wordSizes = [8, 4, 2, 1];\n\tfor (const wordSize of wordSizes) {\n\t\tif (leftBytes >= wordSize) {\n\t\t\tconst done = transferWith(wordSize, source, dest, nextOffset, leftBytes);\n\t\t\tnextOffset = done.nextOffset;\n\t\t\tleftBytes = done.leftBytes;\n\t\t}\n\t}\n\treturn dest;\n\tfunction transferWith(wordSize: number, source: ArrayBuffer, dest: ArrayBuffer, nextOffset: number, leftBytes: number) {\n\t\tlet ViewClass: any = Uint8Array;\n\t\tswitch (wordSize) {\n\t\t\tcase 8:\n\t\t\t\tViewClass = Float64Array;\n\t\t\t\tbreak;\n\t\t\tcase 4:\n\t\t\t\tViewClass = Float32Array;\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tViewClass = Uint16Array;\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tViewClass = Uint8Array;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tViewClass = Uint8Array;\n\t\t\t\tbreak;\n\t\t}\n\t\t\t\n\t\tconst view_source = new ViewClass(source, nextOffset, (leftBytes / wordSize) | 0);\n\t\tconst view_dest = new ViewClass(dest, nextOffset, (leftBytes / wordSize) | 0);\n\t\tfor (let i: number = 0; i < view_dest.length; i++) {\n\t\t\tview_dest[i] = view_source[i];\n\t\t}\n\t\treturn {\n\t\t\tnextOffset: view_source.byteOffset + view_source.byteLength,\n\t\t\tleftBytes: leftBytes - view_dest.length * wordSize,\n\t\t}\n\t}\n}\n\n// Note: All methods are big endian.\nexport class ArrayBufferWriter {\n\tprivate _writeIndex: number = 0;\n\tprivate _fileSize: number = 0;\n\tprivate _arrayBuffer: ArrayBuffer;\n\tprivate _data: DataView;\n\t\t\n\tconstructor(initialCapacity: number) {\n\t\tthis._arrayBuffer = new ArrayBuffer(initialCapacity);\n\t\tthis._data = new DataView(this._arrayBuffer);\n\t}\n\t\t\n\tprivate _addBytes(numBytes: number): void {\n\t\tthis._fileSize += numBytes;\n\t\tif (this._fileSize > this._arrayBuffer.byteLength) {\n\t\t\tthis._arrayBuffer = transfer(this._arrayBuffer, Math.max(this._arrayBuffer.byteLength * 2, this._fileSize));\n\t\t\tthis._data = new DataView(this._arrayBuffer);\n\t\t}\n\t}\n\t\t\n\tpublic getWriteIndex(): number {\n\t\treturn this._writeIndex;\n\t}\n\t\t\n\tpublic rewriteUint32(index: number, value: number): void {\n\t\tthis._data.setUint32(index, value >>> 0, false);\n\t}\n\t\t\n\tpublic writeUint32(value: number): void {\n\t\tvalue = value >>> 0;\n\t\tthis._addBytes(4);\n\t\tthis._data.setUint32(this._writeIndex, value, false);\n\t\tthis._writeIndex = this._fileSize;\n\t}\n\t\t\n\tpublic writeUint24(value: number): void {\n\t\tvalue = value >>> 0;\n\t\tthis._addBytes(3);\n\t\tthis._data.setUint8(this._writeIndex, (value >> 16) & 0xff);\n\t\tthis._data.setUint8(this._writeIndex + 1, (value >> 8) & 0xff);\n\t\tthis._data.setUint8(this._writeIndex + 2, (value) & 0xff);\n\t\tthis._writeIndex = this._fileSize;\n\t}\n\t\t\n\tpublic writeUint16(value: number): void {\n\t\tvalue = value >>> 0;\n\t\tthis._addBytes(2);\n\t\tthis._data.setUint16(this._writeIndex, value, false);\n\t\tthis._writeIndex = this._fileSize;\n\t}\n\t\t\n\tpublic writeUint8(value: number): void {\n\t\tvalue = value >>> 0;\n\t\tthis._addBytes(1);\n\t\tthis._data.setUint8(this._writeIndex, value);\n\t\tthis._writeIndex = this._fileSize;\n\t}\n\t\t\n\tpublic writeInt8(value: number): void {\n\t\tvalue = value | 0;\n\t\tthis._addBytes(1);\n\t\tthis._data.setInt8(this._writeIndex, value);\n\t\tthis._writeIndex = this._fileSize;\n\t}\n\t\t\n\tpublic writeMidi7Bits(value: number): void {\n\t\tvalue = value >>> 0;\n\t\tif (value >= 0x80) throw new Error(\"7 bit value contained 8th bit!\");\n\t\tthis._addBytes(1);\n\t\tthis._data.setUint8(this._writeIndex, value);\n\t\tthis._writeIndex = this._fileSize;\n\t}\n\t\t\n\tpublic writeMidiVariableLength(value: number): void {\n\t\tvalue = value >>> 0;\n\t\tif (value > 0x0fffffff) throw new Error(\"writeVariableLength value too big.\");\n\t\tlet startWriting: boolean = false;\n\t\tfor (let i: number = 0; i < 4; i++) {\n\t\t\tconst shift: number = 21 - i * 7;\n\t\t\tconst bits: number = (value >>> shift) & 0x7f;\n\t\t\tif (bits != 0 || i == 3) startWriting = true; // skip leading zero bytes, but always write the last byte even if it's zero. \n\t\t\tif (startWriting) this.writeUint8((i == 3 ? 0x00 : 0x80) | bits);\n\t\t}\n\t}\n\t\t\n\tpublic writeMidiAscii(string: string): void {\n\t\tthis.writeMidiVariableLength(string.length);\n\t\tfor (let i: number = 0; i < string.length; i++) {\n\t\t\tconst charCode: number = string.charCodeAt(i);\n\t\t\tif (charCode > 0x7f) throw new Error(\"Trying to write unicode character as ascii.\");\n\t\t\tthis.writeUint8(charCode); // technically charCodeAt returns 2 byte values, but this string should contain exclusively 1 byte values.\n\t\t}\n\t}\n\t\t\n\tpublic toCompactArrayBuffer(): ArrayBuffer {\n\t\treturn transfer(this._arrayBuffer, this._fileSize);\n\t}\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nexport const defaultMidiExpression: number = 0x7F;\nexport const defaultMidiPitchBend: number = 0x2000;\n\nexport const enum MidiChunkType {\n\theader = 0x4D546864, // \"MThd\" as bytes, big endian\n\ttrack = 0x4D54726B, // \"MTrk\" as bytes, big endian\n}\n\nexport const enum MidiFileFormat {\n\tsingleTrack = 0x0000,\n\tsimultaneousTracks = 0x0001,\n\tindependentTracks = 0x0002,\n}\n\n// Lower 4 bits indicate channel, except for meta and sysex events.\nexport const enum MidiEventType {\n\t//channelMode = 0x70,\n\tnoteOff = 0x80,\n\tnoteOn = 0x90,\n\tkeyPressure = 0xA0,\n\tcontrolChange = 0xB0,\n\tprogramChange = 0xC0,\n\tchannelPressure = 0xD0,\n\tpitchBend = 0xE0,\n\tmetaAndSysex = 0xF0,\n\t\t\n\t// These events are identified by all 8 bits.\n\tmeta = 0xFF,\n\t// sysexStart = 0xF0,\n\t// sysexEscape = 0xF7,\n}\n\nexport const enum MidiControlEventMessage {\n\t\t\n\tsetParameterMSB = 0x06,\n\tvolumeMSB = 0x07,\n\tpanMSB = 0x0A,\n\texpressionMSB = 0x0B,\n\t\t\n\tsetParameterLSB = 0x26,\n\t//volumeLSB = 0x27,\n\t//expressionLSB = 0x2B,\n\t\t\n\t//nonRegisteredParameterNumberLSB = 0x62,\n\t//nonRegisteredParameterNumberMSB = 0x63,\n\tregisteredParameterNumberLSB = 0x64,\n\tregisteredParameterNumberMSB = 0x65,\n\t\t\n\t// Channel mode messages:\n\t/*\n\tallSoundOff = 0x78,\n\tresetControllers = 0x79,\n\tlocalControl = 0x7A,\n\tallNotesOff = 0x7B,\n\tomniModeOff = 0x7C,\n\tomniModeOn = 0x7D,\n\tmonoMode = 0x7E,\n\tpolyphonicMode = 0x7F,\n\t*/\n}\n\nexport const enum MidiRegisteredParameterNumberMSB {\n\tpitchBendRange = 0x00, // semitones\n\tfineTuning = 0x00,\n\tcoarseTuning = 0x00,\n\ttuningProgramSelect = 0x00,\n\ttuningBankSelect = 0x00,\n\treset = 0x7f,\n}\n\nexport const enum MidiRegisteredParameterNumberLSB {\n\tpitchBendRange = 0x00, // cents\n\tfineTuning = 0x01,\n\tcoarseTuning = 0x02,\n\ttuningProgramSelect = 0x03,\n\ttuningBankSelect = 0x04,\n\treset = 0x7f,\n}\n\nexport const enum MidiMetaEventMessage {\n\tsequenceNumber = 0x00,\n\ttext = 0x01,\n\tcopyrightNotice = 0x02,\n\ttrackName = 0x03,\n\tinstrumentName = 0x04,\n\tlyricText = 0x05,\n\tmarker = 0x06,\n\tcuePoint = 0x07,\n\tchannelPrefix = 0x20,\n\tendOfTrack = 0x2F,\n\ttempo = 0x51,\n\tsmpteOffset = 0x54,\n\ttimeSignature = 0x58,\n\tkeySignature = 0x59,\n\tsequencerSpecificEvent = 0x7F,\n}\n\n// BeepBox noise channels are very different from Midi drumsets, but here's my attempt at a conversion from Midi to BeepBox.\nexport interface AnalogousDrum {\n\tfrequency: number;\n\tduration: number;\n\tvolume: number;\n}\nexport const analogousDrumMap: { [K: number]: AnalogousDrum } = {\n\t\t35: { frequency:  0, duration: 2, volume: 3 }, // Acoustic Bass Drum\n\t\t36: { frequency:  0, duration: 2, volume: 3 }, // Bass Drum 1\n\t\t37: { frequency:  5, duration: 1, volume: 3 }, // Side Stick\n\t\t38: { frequency:  4, duration: 2, volume: 3 }, // Acoustic Snare\n\t\t39: { frequency:  5, duration: 2, volume: 3 }, // Hand Clap\n\t\t40: { frequency:  4, duration: 2, volume: 3 }, // Electric Snare\n\t\t41: { frequency:  1, duration: 2, volume: 3 }, // Low Floor Tom\n\t\t42: { frequency:  8, duration: 1, volume: 3 }, // Closed Hi Hat\n\t\t43: { frequency:  1, duration: 2, volume: 3 }, // High Floor Tom\n\t\t44: { frequency:  8, duration: 1, volume: 2 }, // Pedal Hi-Hat\n\t\t45: { frequency:  2, duration: 2, volume: 3 }, // Low Tom\n\t\t46: { frequency:  8, duration: 4, volume: 3 }, // Open Hi-Hat\n\t\t47: { frequency:  2, duration: 2, volume: 3 }, // Low-Mid Tom\n\t\t48: { frequency:  3, duration: 2, volume: 3 }, // Hi-Mid Tom\n\t\t49: { frequency:  7, duration: 4, volume: 3 }, // Crash Cymbal 1\n\t\t50: { frequency:  3, duration: 2, volume: 3 }, // High Tom\n\t\t51: { frequency:  6, duration: 4, volume: 2 }, // Ride Cymbal 1\n\t\t52: { frequency:  7, duration: 4, volume: 3 }, // Chinese Cymbal\n\t\t53: { frequency:  6, duration: 2, volume: 3 }, // Ride Bell\n\t54: { frequency: 11, duration: 2, volume: 3 }, // Tambourine\n\t\t55: { frequency:  9, duration: 4, volume: 3 }, // Splash Cymbal\n\t\t56: { frequency:  7, duration: 1, volume: 2 }, // Cowbell\n\t\t57: { frequency:  7, duration: 4, volume: 3 }, // Crash Cymbal 2\n\t58: { frequency: 10, duration: 2, volume: 2 }, // Vibraslap\n\t\t59: { frequency:  6, duration: 4, volume: 3 }, // Ride Cymbal 2\n\t//60: { frequency:  7, duration: 1, volume: 3 }, // Hi Bongo\n\t//61: { frequency:  5, duration: 1, volume: 3 }, // Low Bongo\n\t//62: { frequency:  6, duration: 1, volume: 3 }, // Mute Hi Conga\n\t//63: { frequency:  5, duration: 1, volume: 3 }, // Open Hi Conga\n\t//64: { frequency:  4, duration: 1, volume: 3 }, // Low Conga\n\t//65: { frequency:  6, duration: 2, volume: 3 }, // High Timbale\n\t//66: { frequency:  4, duration: 2, volume: 3 }, // Low Timbale\n\t//67: { frequency: 10, duration: 1, volume: 2 }, // High Agogo\n\t//68: { frequency:  9, duration: 1, volume: 2 }, // Low Agogo\n\t69: { frequency: 10, duration: 2, volume: 3 }, // Cabasa\n\t70: { frequency: 10, duration: 2, volume: 3 }, // Maracas\n\t//71: { frequency: 10, duration: 2, volume: 3 }, // Short Whistle\n\t//72: { frequency:  9, duration: 2, volume: 3 }, // Long Whistle\n\t73: { frequency: 10, duration: 1, volume: 2 }, // Short Guiro\n\t74: { frequency: 10, duration: 2, volume: 2 }, // Long Guiro\n\t//75: { frequency: 10, duration: 1, volume: 2 }, // Claves\n\t//76: { frequency:  6, duration: 1, volume: 2 }, // Hi Wood Block\n\t//77: { frequency:  5, duration: 1, volume: 2 }, // Low Wood Block\n\t//78: { frequency:  6, duration: 2, volume: 3 }, // Mute Cuica\n\t//79: { frequency:  4, duration: 2, volume: 3 }, // Open Cuica\n\t//80: { frequency:  7, duration: 1, volume: 2 }, // Mute Triangle\n\t//81: { frequency:  7, duration: 4, volume: 2 }, // Open Triangle\n};\n\nexport function midiVolumeToVolumeMult(volume: number): number {\n\t// default midi volume is 100, pow(100/127,4)≈0.384 so I'm considering that the baseline volume.\n\treturn Math.pow(volume / 127, 4.0) / 0.3844015376046128;\n}\nexport function volumeMultToMidiVolume(volumeMult: number): number {\n\treturn Math.pow(volumeMult * 0.3844015376046128, 0.25) * 127;\n}\nexport function midiExpressionToVolumeMult(expression: number): number {\n\treturn Math.pow(expression / 127, 4.0);\n}\nexport function volumeMultToMidiExpression(volumeMult: number): number {\n\treturn Math.pow(volumeMult, 0.25) * 127;\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nimport { InstrumentType, /*EnvelopeType,*/ Config, getArpeggioPitchIndex } from \"../synth/SynthConfig\";\nimport { Instrument, Pattern, Note, Song, Synth } from \"../synth/synth\";\nimport { ColorConfig } from \"./ColorConfig\";\nimport { Preset, EditorConfig } from \"./EditorConfig\";\nimport { SongDocument } from \"./SongDocument\";\nimport { Prompt } from \"./Prompt\";\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\nimport { ArrayBufferWriter } from \"./ArrayBufferWriter\";\nimport { MidiChunkType, MidiFileFormat, MidiControlEventMessage, MidiEventType, MidiMetaEventMessage, MidiRegisteredParameterNumberMSB, MidiRegisteredParameterNumberLSB, volumeMultToMidiVolume, volumeMultToMidiExpression, defaultMidiPitchBend, defaultMidiExpression } from \"./Midi\";\n\nconst { button, div, h2, input, select, option } = HTML;\n\nfunction lerp(low: number, high: number, t: number): number {\n    return low + t * (high - low);\n}\n\nfunction save(blob: Blob, name: string): void {\n    if ((<any>navigator).msSaveOrOpenBlob) {\n        (<any>navigator).msSaveOrOpenBlob(blob, name);\n        return;\n    }\n\n    const anchor: HTMLAnchorElement = document.createElement(\"a\");\n    if (anchor.download != undefined) {\n        const url: string = URL.createObjectURL(blob);\n        setTimeout(function () { URL.revokeObjectURL(url); }, 60000);\n        anchor.href = url;\n        anchor.download = name;\n        // Chrome bug regression: We need to delay dispatching the click\n        // event. Seems to be related to going back in the browser history.\n        // https://bugs.chromium.org/p/chromium/issues/detail?id=825100\n        setTimeout(function () { anchor.dispatchEvent(new MouseEvent(\"click\")); }, 0);\n    } else {\n        const url: string = URL.createObjectURL(blob);\n        setTimeout(function () { URL.revokeObjectURL(url); }, 60000);\n        if (!window.open(url, \"_blank\")) window.location.href = url;\n    }\n}\n\nexport class ExportPrompt implements Prompt {\n    private synth: Synth;\n    private thenExportTo: string;\n    private recordedSamplesL: Float32Array;\n    private recordedSamplesR: Float32Array;\n    private sampleFrames: number;\n    private totalChunks: number;\n    private currentChunk: number;\n    private outputStarted: boolean = false;\n    private readonly _fileName: HTMLInputElement = input({ type: \"text\", style: \"width: 10em;\", value: \"BeepBox-Song\", maxlength: 250, \"autofocus\": \"autofocus\" });\n    private readonly _computedSamplesLabel: HTMLDivElement = div({ style: \"width: 10em;\" }, new Text(\"0:00\"));\n    private readonly _enableIntro: HTMLInputElement = input({ type: \"checkbox\" });\n    private readonly _loopDropDown: HTMLInputElement = input({ style: \"width: 2em;\", type: \"number\", min: \"1\", max: \"4\", step: \"1\" });\n    private readonly _enableOutro: HTMLInputElement = input({ type: \"checkbox\" });\n    private readonly _formatSelect: HTMLSelectElement = select({ style: \"width: 100%;\" },\n        option({ value: \"wav\" }, \"Export to .wav file.\"),\n        option({ value: \"mp3\" }, \"Export to .mp3 file.\"),\n        option({ value: \"midi\" }, \"Export to .mid file.\"),\n        option({ value: \"json\" }, \"Export to .json file.\"),\n        option({ value: \"html\" }, \"Export to .html file.\"),\n    );\n    private readonly _cancelButton: HTMLButtonElement = button({ class: \"cancelButton\" });\n    private readonly _exportButton: HTMLButtonElement = button({ class: \"exportButton\", style: \"width:45%;\" }, \"Export\");\n    private readonly _outputProgressBar: HTMLDivElement = div({ style: `width: 0%; background: ${ColorConfig.loopAccent}; height: 100%; position: absolute; z-index: 2;` });\n    private readonly _outputProgressLabel: HTMLDivElement = div({ style: `position: relative; top: -1px; z-index: 3;` }, \"0%\");\n    private readonly _outputProgressContainer: HTMLDivElement = div({ style: `height: 12px; background: ${ColorConfig.uiWidgetBackground}; display: block; position: relative; z-index: 1;` },\n        this._outputProgressBar,\n        this._outputProgressLabel,\n    );\n    private static readonly midiChipInstruments: number[] = [\n        0x4A, // rounded -> recorder\n        0x47, // triangle -> clarinet\n        0x50, // square -> square wave\n        0x46, // ¹/₄ pulse -> bassoon\n        0x44, // ¹/₈ pulse -> oboe\n        0x51, // sawtooth -> sawtooth wave\n        0x51, // double saw -> sawtooth wave\n        0x51, // double pulse -> sawtooth wave\n        0x51, // spiky -> sawtooth wave\n    ];\n\n    public readonly container: HTMLDivElement = div({ class: \"prompt noSelection\", style: \"width: 200px;\" },\n        h2(\"Export Options\"),\n        div({ style: \"display: flex; flex-direction: row; align-items: center; justify-content: space-between;\" },\n            \"File name:\",\n            this._fileName,\n        ),\n        div({ style: \"display: flex; flex-direction: row; align-items: center; justify-content: space-between;\" },\n            \"Length:\",\n            this._computedSamplesLabel,\n        ),\n        div({ style: \"display: table; width: 100%;\" },\n            div({ style: \"display: table-row;\" },\n                div({ style: \"display: table-cell;\" }, \"Intro:\"),\n                div({ style: \"display: table-cell;\" }, \"Loop Count:\"),\n                div({ style: \"display: table-cell;\" }, \"Outro:\"),\n            ),\n            div({ style: \"display: table-row;\" },\n                div({ style: \"display: table-cell; vertical-align: middle;\" }, this._enableIntro),\n                div({ style: \"display: table-cell; vertical-align: middle;\" }, this._loopDropDown),\n                div({ style: \"display: table-cell; vertical-align: middle;\" }, this._enableOutro),\n            ),\n        ),\n        div({ class: \"selectContainer\", style: \"width: 100%;\" }, this._formatSelect),\n        div({ style: \"text-align: left;\" }, \"Exporting can be slow. Reloading the page or clicking the X will cancel it. Please be patient.\"),\n        this._outputProgressContainer,\n        div({ style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\" },\n            this._exportButton,\n        ),\n        this._cancelButton,\n    );\n\n    constructor(private _doc: SongDocument) {\n        this._loopDropDown.value = \"1\";\n\n        if (this._doc.song.loopStart == 0) {\n            this._enableIntro.checked = false;\n            this._enableIntro.disabled = true;\n        } else {\n            this._enableIntro.checked = true;\n            this._enableIntro.disabled = false;\n        }\n        if (this._doc.song.loopStart + this._doc.song.loopLength == this._doc.song.barCount) {\n            this._enableOutro.checked = false;\n            this._enableOutro.disabled = true;\n        } else {\n            this._enableOutro.checked = true;\n            this._enableOutro.disabled = false;\n        }\n\n        const lastExportFormat: string | null = window.localStorage.getItem(\"exportFormat\");\n        if (lastExportFormat != null) {\n            this._formatSelect.value = lastExportFormat;\n        }\n\n        this._fileName.select();\n        setTimeout(() => this._fileName.focus());\n\n        this._fileName.addEventListener(\"input\", ExportPrompt._validateFileName);\n        this._loopDropDown.addEventListener(\"blur\", ExportPrompt._validateNumber);\n        this._exportButton.addEventListener(\"click\", this._export);\n        this._cancelButton.addEventListener(\"click\", this._close);\n        this._enableOutro.addEventListener(\"click\", () => { (this._computedSamplesLabel.firstChild as Text).textContent = this.samplesToTime(this._doc.synth.getTotalSamples(this._enableIntro.checked, this._enableOutro.checked, +this._loopDropDown.value - 1)); });\n        this._enableIntro.addEventListener(\"click\", () => { (this._computedSamplesLabel.firstChild as Text).textContent = this.samplesToTime(this._doc.synth.getTotalSamples(this._enableIntro.checked, this._enableOutro.checked, +this._loopDropDown.value - 1)); });\n        this._loopDropDown.addEventListener(\"change\", () => { (this._computedSamplesLabel.firstChild as Text).textContent = this.samplesToTime(this._doc.synth.getTotalSamples(this._enableIntro.checked, this._enableOutro.checked, +this._loopDropDown.value - 1)); });\n        this.container.addEventListener(\"keydown\", this._whenKeyPressed);\n\n        this._fileName.value = _doc.song.title;\n        ExportPrompt._validateFileName(null, this._fileName);\n\n        (this._computedSamplesLabel.firstChild as Text).textContent = this.samplesToTime(this._doc.synth.getTotalSamples(this._enableIntro.checked, this._enableOutro.checked, +this._loopDropDown.value - 1));\n    }\n\n    // Could probably be moved to doc or synth. Fine here for now until needed by something else.\n    private samplesToTime(samples: number): string {\n        const rawSeconds: number = Math.round(samples / this._doc.synth.samplesPerSecond);\n        const seconds: number = rawSeconds % 60;\n        const minutes: number = Math.floor(rawSeconds / 60);\n        return minutes + \":\" + (seconds < 10 ? \"0\" : \"\") + seconds;\n    }\n\n    private _close = (): void => {\n        if (this.synth != null)\n            this.synth.renderingSong = false;\n        this.outputStarted = false;\n        this._doc.undo();\n    }\n\n    public changeFileName(newValue: string) {\n        this._fileName.value = newValue;\n    }\n\n    public cleanUp = (): void => {\n        this._fileName.removeEventListener(\"input\", ExportPrompt._validateFileName);\n        this._loopDropDown.removeEventListener(\"blur\", ExportPrompt._validateNumber);\n        this._exportButton.removeEventListener(\"click\", this._export);\n        this._cancelButton.removeEventListener(\"click\", this._close);\n        this.container.removeEventListener(\"keydown\", this._whenKeyPressed);\n    }\n\n    private _whenKeyPressed = (event: KeyboardEvent): void => {\n        if ((<Element>event.target).tagName != \"BUTTON\" && event.keyCode == 13) { // Enter key\n            this._export();\n        }\n    }\n\n    private static _validateFileName(event: Event | null, use?: HTMLInputElement): void {\n\n        let input: HTMLInputElement;\n        if (event != null) {\n            input = <HTMLInputElement>event.target;\n        } else if (use != undefined) {\n            input = use;\n        }\n        else {\n            return;\n        }\n        const deleteChars = /[\\+\\*\\$\\?\\|\\{\\}\\\\\\/<>#%!`&'\"=:@]/gi;\n        if (deleteChars.test(input.value)) {\n            let cursorPos: number = <number>input.selectionStart;\n            input.value = input.value.replace(deleteChars, \"\");\n            cursorPos--;\n            input.setSelectionRange(cursorPos, cursorPos);\n        }\n    }\n\n    private static _validateNumber(event: Event): void {\n        const input: HTMLInputElement = <HTMLInputElement>event.target;\n        input.value = Math.floor(Math.max(Number(input.min), Math.min(Number(input.max), Number(input.value)))) + \"\";\n    }\n\n    private _export = (): void => {\n        if (this.outputStarted == true)\n            return;\n        window.localStorage.setItem(\"exportFormat\", this._formatSelect.value);\n        switch (this._formatSelect.value) {\n            case \"wav\":\n                this.outputStarted = true;\n                this._exportTo(\"wav\");\n                break;\n            case \"mp3\":\n                this.outputStarted = true;\n                this._exportTo(\"mp3\");\n                break;\n            case \"midi\":\n                this.outputStarted = true;\n                this._exportToMidi();\n                break;\n            case \"json\":\n                this.outputStarted = true;\n                this._exportToJson();\n                break;\n            case \"html\":\n                this._exportToHtml();\n                break;\n            default:\n                throw new Error(\"Unhandled file export type.\");\n        }\n    }\n\n    private _synthesize(): void {\n        //const timer: number = performance.now();\n\n        // If output was stopped e.g. user clicked the close button, abort.\n        if (this.outputStarted == false) {\n            return;\n        }\n\n        // Update progress bar UI once per 5 sec of exported data\n        const samplesPerChunk: number = this.synth.samplesPerSecond * 5; //e.g. 44100 * 5\n        const currentFrame: number = this.currentChunk * samplesPerChunk;\n\n        const samplesInChunk: number = Math.min(samplesPerChunk, this.sampleFrames - currentFrame);\n        const tempSamplesL = new Float32Array(samplesInChunk);\n        const tempSamplesR = new Float32Array(samplesInChunk);\n\n        this.synth.renderingSong = true;\n        this.synth.synthesize(tempSamplesL, tempSamplesR, samplesInChunk);\n\n        // Concatenate chunk data into final array\n        this.recordedSamplesL.set(tempSamplesL, currentFrame);\n        this.recordedSamplesR.set(tempSamplesR, currentFrame);\n\n        // Update UI\n        this._outputProgressBar.style.setProperty(\"width\", Math.round((this.currentChunk + 1) / this.totalChunks * 100.0) + \"%\");\n        this._outputProgressLabel.innerText = Math.round((this.currentChunk + 1) / this.totalChunks * 100.0) + \"%\";\n\n        // Next call, synthesize the next chunk.\n        this.currentChunk++;\n\n        if (this.currentChunk >= this.totalChunks) {\n            // Done, call final function\n            this.synth.renderingSong = false;\n            this._outputProgressLabel.innerText = \"Encoding...\";\n            if (this.thenExportTo == \"wav\") {\n                this._exportToWavFinish();\n            }\n            else if (this.thenExportTo == \"mp3\") {\n                this._exportToMp3Finish();\n            }\n            else {\n                throw new Error(\"Unrecognized file export type chosen!\");\n            }\n        }\n        else {\n            // Continue batch export\n            setTimeout(() => { this._synthesize(); });\n        }\n\n        //console.log(\"export timer\", (performance.now() - timer) / 1000.0);\n    }\n\n    private _exportTo(type: string): void {\n        // Batch the export operation\n        this.thenExportTo = type;\n        this.currentChunk = 0;\n        this.synth = new Synth(this._doc.song);\n        if (type == \"wav\") {\n            this.synth.samplesPerSecond = 48000; // Use professional video editing standard sample rate for .wav file export.\n        }\n        else if (type == \"mp3\") {\n            this.synth.samplesPerSecond = 44100; // Use consumer CD standard sample rate for .mp3 export.\n        }\n        else {\n            throw new Error(\"Unrecognized file export type chosen!\");\n        }\n\n        this._outputProgressBar.style.setProperty(\"width\", \"0%\");\n        this._outputProgressLabel.innerText = \"0%\";\n\n        this.synth.loopRepeatCount = Number(this._loopDropDown.value) - 1;\n        if (!this._enableIntro.checked) {\n            for (let introIter: number = 0; introIter < this._doc.song.loopStart; introIter++) {\n                this.synth.goToNextBar();\n            }\n        }\n\n        this.synth.initModFilters(this._doc.song);\n        this.synth.computeLatestModValues();\n        this.synth.warmUpSynthesizer(this._doc.song);\n\n        this.sampleFrames = this.synth.getTotalSamples(this._enableIntro.checked, this._enableOutro.checked, this.synth.loopRepeatCount);\n        // Compute how many UI updates will need to run to determine how many \n        this.totalChunks = Math.ceil(this.sampleFrames / (this.synth.samplesPerSecond * 5));\n        this.recordedSamplesL = new Float32Array(this.sampleFrames);\n        this.recordedSamplesR = new Float32Array(this.sampleFrames);\n\n        // Batch the actual export\n        setTimeout(() => { this._synthesize(); });\n    }\n\n    private _exportToWavFinish(): void {\n        const sampleFrames: number = this.recordedSamplesL.length;\n        const sampleRate: number = this.synth.samplesPerSecond;\n\n        const wavChannelCount: number = 2;\n        const bytesPerSample: number = 2;\n        const bitsPerSample: number = 8 * bytesPerSample;\n        const sampleCount: number = wavChannelCount * sampleFrames;\n\n        const totalFileSize: number = 44 + sampleCount * bytesPerSample;\n\n        let index: number = 0;\n        const arrayBuffer: ArrayBuffer = new ArrayBuffer(totalFileSize);\n        const data: DataView = new DataView(arrayBuffer);\n        data.setUint32(index, 0x52494646, false); index += 4;\n        data.setUint32(index, 36 + sampleCount * bytesPerSample, true); index += 4; // size of remaining file\n        data.setUint32(index, 0x57415645, false); index += 4;\n        data.setUint32(index, 0x666D7420, false); index += 4;\n        data.setUint32(index, 0x00000010, true); index += 4; // size of following header\n        data.setUint16(index, 0x0001, true); index += 2; // not compressed\n        data.setUint16(index, wavChannelCount, true); index += 2; // channel count\n        data.setUint32(index, sampleRate, true); index += 4; // sample rate\n        data.setUint32(index, sampleRate * bytesPerSample * wavChannelCount, true); index += 4; // bytes per second\n        data.setUint16(index, bytesPerSample * wavChannelCount, true); index += 2; // block align\n        data.setUint16(index, bitsPerSample, true); index += 2; // bits per sample\n        data.setUint32(index, 0x64617461, false); index += 4;\n        data.setUint32(index, sampleCount * bytesPerSample, true); index += 4;\n\n        if (bytesPerSample > 1) {\n            // usually samples are signed. \n            const range: number = (1 << (bitsPerSample - 1)) - 1;\n            for (let i: number = 0; i < sampleFrames; i++) {\n                let valL: number = Math.floor(Math.max(-1, Math.min(1, this.recordedSamplesL[i])) * range);\n                let valR: number = Math.floor(Math.max(-1, Math.min(1, this.recordedSamplesR[i])) * range);\n                if (bytesPerSample == 2) {\n                    data.setInt16(index, valL, true); index += 2;\n                    data.setInt16(index, valR, true); index += 2;\n                } else if (bytesPerSample == 4) {\n                    data.setInt32(index, valL, true); index += 4;\n                    data.setInt32(index, valR, true); index += 4;\n                } else {\n                    throw new Error(\"unsupported sample size\");\n                }\n            }\n        } else {\n            // 8 bit samples are a special case: they are unsigned.\n            for (let i: number = 0; i < sampleFrames; i++) {\n                let valL: number = Math.floor(Math.max(-1, Math.min(1, this.recordedSamplesL[i])) * 127 + 128);\n                let valR: number = Math.floor(Math.max(-1, Math.min(1, this.recordedSamplesR[i])) * 127 + 128);\n                data.setUint8(index, valL > 255 ? 255 : (valL < 0 ? 0 : valL)); index++;\n                data.setUint8(index, valR > 255 ? 255 : (valR < 0 ? 0 : valR)); index++;\n            }\n        }\n\n        const blob: Blob = new Blob([arrayBuffer], { type: \"audio/wav\" });\n        save(blob, this._fileName.value.trim() + \".wav\");\n\n        this._close();\n    }\n\n    private _exportToMp3Finish(): void {\n        const whenEncoderIsAvailable = (): void => {\n\n            const lamejs: any = (<any>window)[\"lamejs\"];\n            const channelCount: number = 2;\n            const kbps: number = 192;\n            const sampleBlockSize: number = 1152;\n            const mp3encoder: any = new lamejs.Mp3Encoder(channelCount, this.synth.samplesPerSecond, kbps);\n            const mp3Data: any[] = [];\n\n            const left: Int16Array = new Int16Array(this.recordedSamplesL.length);\n            const right: Int16Array = new Int16Array(this.recordedSamplesR.length);\n            const range: number = (1 << 15) - 1;\n            for (let i: number = 0; i < this.recordedSamplesL.length; i++) {\n                left[i] = Math.floor(Math.max(-1, Math.min(1, this.recordedSamplesL[i])) * range);\n                right[i] = Math.floor(Math.max(-1, Math.min(1, this.recordedSamplesR[i])) * range);\n            }\n\n            for (let i: number = 0; i < left.length; i += sampleBlockSize) {\n                const leftChunk: Int16Array = left.subarray(i, i + sampleBlockSize);\n                const rightChunk: Int16Array = right.subarray(i, i + sampleBlockSize);\n                const mp3buf: any = mp3encoder.encodeBuffer(leftChunk, rightChunk);\n                if (mp3buf.length > 0) mp3Data.push(mp3buf);\n            }\n\n            const mp3buf: any = mp3encoder.flush();\n            if (mp3buf.length > 0) mp3Data.push(mp3buf);\n\n            const blob: Blob = new Blob(mp3Data, { type: \"audio/mp3\" });\n            save(blob, this._fileName.value.trim() + \".mp3\");\n            this._close();\n        }\n\n        if (\"lamejs\" in window) {\n            whenEncoderIsAvailable();\n        } else {\n            var script = document.createElement(\"script\");\n            script.src = \"https://cdn.jsdelivr.net/npm/lamejs@1.2.0/lame.min.js\";\n            script.onload = whenEncoderIsAvailable;\n            document.head.appendChild(script);\n        }\n    }\n\n    private _exportToMidi(): void {\n        const song: Song = this._doc.song;\n        const midiTicksPerBeepBoxTick: number = 2;\n        const midiTicksPerBeat: number = midiTicksPerBeepBoxTick * Config.ticksPerPart * Config.partsPerBeat;\n        const midiTicksPerPart: number = midiTicksPerBeepBoxTick * Config.ticksPerPart;\n        const secondsPerMinute: number = 60;\n        const microsecondsPerMinute: number = secondsPerMinute * 1000000;\n        const beatsPerMinute: number = song.getBeatsPerMinute();\n        const microsecondsPerBeat: number = Math.round(microsecondsPerMinute / beatsPerMinute);\n        //const secondsPerMidiTick: number = secondsPerMinute / (midiTicksPerBeat * beatsPerMinute);\n        const midiTicksPerBar: number = midiTicksPerBeat * song.beatsPerBar;\n        const pitchBendRange: number = 24;\n        const defaultNoteVelocity: number = 90;\n\n        const unrolledBars: number[] = [];\n        if (this._enableIntro.checked) {\n            for (let bar: number = 0; bar < song.loopStart; bar++) {\n                unrolledBars.push(bar);\n            }\n        }\n        for (let loopIndex: number = 0; loopIndex < Number(this._loopDropDown.value); loopIndex++) {\n            for (let bar: number = song.loopStart; bar < song.loopStart + song.loopLength; bar++) {\n                unrolledBars.push(bar);\n            }\n        }\n        if (this._enableOutro.checked) {\n            for (let bar: number = song.loopStart + song.loopLength; bar < song.barCount; bar++) {\n                unrolledBars.push(bar);\n            }\n        }\n\n        const tracks = [{ isMeta: true, channel: -1, midiChannel: -1, isNoise: false, isDrumset: false }];\n        let midiChannelCounter: number = 0;\n        let foundADrumset: boolean = false;\n        for (let channel: number = 0; channel < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; channel++) {\n            if (!foundADrumset && this._doc.song.channels[channel].instruments[0].type == InstrumentType.drumset) {\n                tracks.push({ isMeta: false, channel: channel, midiChannel: 9, isNoise: true, isDrumset: true });\n                foundADrumset = true; // There can only be one drumset channel, and it's always channel 9 (seen as 10 in most UIs). :/\n            } else {\n                if (midiChannelCounter >= 16) continue; // The MIDI standard only supports 16 channels.\n                tracks.push({ isMeta: false, channel: channel, midiChannel: midiChannelCounter++, isNoise: this._doc.song.getChannelIsNoise(channel), isDrumset: false });\n                if (midiChannelCounter == 9) midiChannelCounter++; // skip midi drum channel.\n            }\n        }\n\n        const writer: ArrayBufferWriter = new ArrayBufferWriter(1024);\n        writer.writeUint32(MidiChunkType.header);\n        writer.writeUint32(6); // length of headers is 6 bytes\n        writer.writeUint16(MidiFileFormat.simultaneousTracks);\n        writer.writeUint16(tracks.length);\n        writer.writeUint16(midiTicksPerBeat); // number of \"ticks\" per beat, independent of tempo\n\n        for (const track of tracks) {\n            writer.writeUint32(MidiChunkType.track);\n\n            const { isMeta, channel, midiChannel, isNoise, isDrumset } = track;\n\n            // We're gonna come back here and overwrite this placeholder once we know how many bytes this track is.\n            const trackStartIndex: number = writer.getWriteIndex();\n            writer.writeUint32(0); // placeholder for track size\n\n            let prevTime: number = 0;\n            let barStartTime: number = 0;\n            const writeEventTime = function (time: number): void {\n                if (time < prevTime) throw new Error(\"Midi event time cannot go backwards.\");\n                writer.writeMidiVariableLength(time - prevTime);\n                prevTime = time;\n            }\n\n            const writeControlEvent = function (message: MidiControlEventMessage, value: number): void {\n                if (!(value >= 0 && value <= 0x7F)) throw new Error(\"Midi control event value out of range: \" + value);\n                writer.writeUint8(MidiEventType.controlChange | midiChannel);\n                writer.writeMidi7Bits(message);\n                writer.writeMidi7Bits(value | 0);\n            }\n\n            if (isMeta) {\n                // for first midi track, include tempo, time signature, and key signature information.\n\n                writeEventTime(0);\n                writer.writeUint8(MidiEventType.meta);\n                writer.writeMidi7Bits(MidiMetaEventMessage.text);\n                writer.writeMidiAscii(\"Composed with jummbus.bitbucket.io\");\n\n                writeEventTime(0);\n                writer.writeUint8(MidiEventType.meta);\n                writer.writeMidi7Bits(MidiMetaEventMessage.tempo);\n                writer.writeMidiVariableLength(3); // Tempo message length is 3 bytes.\n                writer.writeUint24(microsecondsPerBeat); // Tempo in microseconds per \"quarter\" note, commonly known as a \"beat\"\n\n                writeEventTime(0);\n                writer.writeUint8(MidiEventType.meta);\n                writer.writeMidi7Bits(MidiMetaEventMessage.timeSignature);\n                writer.writeMidiVariableLength(4); // Time signature message length is 4 bytes.\n                writer.writeUint8(song.beatsPerBar); // numerator.\n                writer.writeUint8(2); // denominator exponent in 2^E. 2^2 = 4, and we will always use \"quarter\" notes.\n                writer.writeUint8(24); // MIDI Clocks per metronome tick (should match beats), standard is 24\n                writer.writeUint8(8); // number of 1/32 notes per 24 MIDI Clocks, standard is 8, meaning 24 clocks per \"quarter\" note.\n\n                const isMinor: boolean = Config.scales[song.scale].flags[3] && !Config.scales[song.scale].flags[4];\n                const key: number = song.key; // C=0, C#=1, counting up to B=11\n                let numSharps: number = key; // For even key values in major scale, number of sharps/flats is same...\n                if ((key & 1) == 1) numSharps += 6; // For odd key values (consider circle of fifths) rotate around the circle... kinda... Look conventional key signatures are just weird, okay?\n                if (isMinor) numSharps += 9; // A minor A scale has zero sharps, shift it appropriately\n                while (numSharps > 6) numSharps -= 12; // Range is (modulo 12) - 5. Midi supports -7 to +7, but I only have 12 options.\n\n                writeEventTime(0);\n                writer.writeUint8(MidiEventType.meta);\n                writer.writeMidi7Bits(MidiMetaEventMessage.keySignature);\n                writer.writeMidiVariableLength(2); // Key signature message length is 2 bytes.\n                writer.writeInt8(numSharps); // See above calculation. Assumes scale is diatonic. :/\n                writer.writeUint8(isMinor ? 1 : 0); // 0: major, 1: minor\n\n                if (this._enableIntro.checked) barStartTime += midiTicksPerBar * song.loopStart;\n                writeEventTime(barStartTime);\n                writer.writeUint8(MidiEventType.meta);\n                writer.writeMidi7Bits(MidiMetaEventMessage.marker);\n                writer.writeMidiAscii(\"Loop Start\");\n\n                for (let loopIndex: number = 0; loopIndex < parseInt(this._loopDropDown.value); loopIndex++) {\n                    barStartTime += midiTicksPerBar * song.loopLength;\n                    writeEventTime(barStartTime);\n                    writer.writeUint8(MidiEventType.meta);\n                    writer.writeMidi7Bits(MidiMetaEventMessage.marker);\n                    writer.writeMidiAscii(loopIndex < Number(this._loopDropDown.value) - 1 ? \"Loop Repeat\" : \"Loop End\");\n                }\n\n                if (this._enableOutro.checked) barStartTime += midiTicksPerBar * (song.barCount - song.loopStart - song.loopLength);\n                if (barStartTime != midiTicksPerBar * unrolledBars.length) throw new Error(\"Miscalculated number of bars.\");\n\n            } else {\n                // For remaining tracks, set up the instruments and write the notes:\n\n                let channelName: string = isNoise\n                    ? \"noise channel \" + channel\n                    : \"pitch channel \" + channel;\n                writeEventTime(0);\n                writer.writeUint8(MidiEventType.meta);\n                writer.writeMidi7Bits(MidiMetaEventMessage.trackName);\n                writer.writeMidiAscii(channelName);\n\n                // This sets up pitch bend range. First we choose the pitch bend RPN (which has MSB and LSB components), then we set the value for that RPN (which also has MSB and LSB components) and finally reset the current RPN to null, which is considered best practice.\n                writeEventTime(0); writeControlEvent(MidiControlEventMessage.registeredParameterNumberMSB, MidiRegisteredParameterNumberMSB.pitchBendRange);\n                writeEventTime(0); writeControlEvent(MidiControlEventMessage.registeredParameterNumberLSB, MidiRegisteredParameterNumberLSB.pitchBendRange);\n                writeEventTime(0); writeControlEvent(MidiControlEventMessage.setParameterMSB, pitchBendRange); // pitch bend semitone range\n                writeEventTime(0); writeControlEvent(MidiControlEventMessage.setParameterLSB, 0); // pitch bend cent range\n                writeEventTime(0); writeControlEvent(MidiControlEventMessage.registeredParameterNumberMSB, MidiRegisteredParameterNumberMSB.reset);\n                writeEventTime(0); writeControlEvent(MidiControlEventMessage.registeredParameterNumberLSB, MidiRegisteredParameterNumberLSB.reset);\n\n                let prevInstrumentIndex: number = -1;\n                function writeInstrumentSettings(instrumentIndex: number): void {\n                    const instrument: Instrument = song.channels[channel].instruments[instrumentIndex];\n                    const preset: Preset | null = EditorConfig.valueToPreset(instrument.preset);\n\n                    if (prevInstrumentIndex != instrumentIndex) {\n                        prevInstrumentIndex = instrumentIndex;\n                        writeEventTime(barStartTime);\n                        writer.writeUint8(MidiEventType.meta);\n                        writer.writeMidi7Bits(MidiMetaEventMessage.instrumentName);\n                        writer.writeMidiAscii(\"Instrument \" + (instrumentIndex + 1));\n\n                        if (!isDrumset) {\n                            let instrumentProgram: number = 81; // default to sawtooth wave. \n\n                            if (preset != null && preset.midiProgram != undefined) {\n                                instrumentProgram = preset.midiProgram;\n                            } else if (instrument.type == InstrumentType.drumset) {\n                                // The first BeepBox drumset channel is handled as a Midi drumset channel and doesn't need a program, but any subsequent drumsets will just be set to taiko.\n                                instrumentProgram = 116; // taiko\n                            } else {\n                                if (instrument.type == InstrumentType.noise || instrument.type == InstrumentType.spectrum) {\n                                    if (isNoise) {\n                                        instrumentProgram = 116; // taiko\n                                    } else {\n                                        instrumentProgram = 75; // pan flute\n                                    }\n                                } else if (instrument.type == InstrumentType.chip) {\n                                    if (ExportPrompt.midiChipInstruments.length > instrument.chipWave) {\n                                        instrumentProgram = ExportPrompt.midiChipInstruments[instrument.chipWave];\n                                    }\n                                } else if (instrument.type == InstrumentType.pwm || instrument.type == InstrumentType.fm || instrument.type == InstrumentType.harmonics || instrument.type == InstrumentType.supersaw) {\n                                    instrumentProgram = 81; // sawtooth\n                                } else if (instrument.type == InstrumentType.pickedString) {\n                                    instrumentProgram = 0x19; // steel guitar\n                                } else if (instrument.type == InstrumentType.customChipWave) {\n                                    instrumentProgram = 81; // sawtooth\n                                } else {\n                                    throw new Error(\"Unrecognized instrument type.\");\n                                }\n                            }\n\n                            // Program (instrument) change event:\n                            writeEventTime(barStartTime);\n                            writer.writeUint8(MidiEventType.programChange | midiChannel);\n                            writer.writeMidi7Bits(instrumentProgram);\n                        }\n\n                        // Instrument volume:\n                        writeEventTime(barStartTime);\n                        let instrumentVolume: number = volumeMultToMidiVolume(Synth.instrumentVolumeToVolumeMult(instrument.volume));\n                        writeControlEvent(MidiControlEventMessage.volumeMSB, Math.min(0x7f, Math.round(instrumentVolume)));\n\n                        // Instrument pan:\n                        writeEventTime(barStartTime);\n                        let instrumentPan: number = (instrument.pan / Config.panCenter - 1) * 0x3f + 0x40;\n                        writeControlEvent(MidiControlEventMessage.panMSB, Math.min(0x7f, Math.round(instrumentPan)));\n                    }\n                }\n                if (song.getPattern(channel, 0) == null) {\n                    // Go ahead and apply the instrument settings at the beginning of the channel\n                    // even if a bar doesn't kick in until later.\n                    writeInstrumentSettings(0);\n                }\n\n                let prevPitchBend: number = defaultMidiPitchBend;\n                let prevExpression: number = defaultMidiExpression;\n                let shouldResetExpressionAndPitchBend: boolean = false;\n                //let prevTremolo: number = -1;\n                const channelRoot: number = isNoise ? Config.spectrumBasePitch : Config.keys[song.key].basePitch;\n                const intervalScale: number = isNoise ? Config.noiseInterval : 1;\n\n                for (const bar of unrolledBars) {\n                    const pattern: Pattern | null = song.getPattern(channel, bar);\n\n                    if (pattern != null) {\n\n                        const instrumentIndex: number = pattern.instruments[0]; // Don't bother trying to export multiple instruments per pattern to midi, just pick the first one.\n                        const instrument: Instrument = song.channels[channel].instruments[instrumentIndex];\n                        const preset: Preset | null = EditorConfig.valueToPreset(instrument.preset);\n                        writeInstrumentSettings(instrumentIndex);\n\n                        let usesArpeggio: boolean = instrument.getChord().arpeggiates;\n                        let polyphony: number = usesArpeggio ? 1 : Config.maxChordSize;\n                        if (instrument.getChord().customInterval) {\n                            if (instrument.type == InstrumentType.chip || instrument.type == InstrumentType.harmonics) {\n                                polyphony = 2;\n                                usesArpeggio = true;\n                            } else if (instrument.type == InstrumentType.fm) {\n                                polyphony = Config.operatorCount;\n                            } else {\n                                console.error(\"Unrecognized instrument type for harmonizing arpeggio: \" + instrument.type);\n                            }\n                        }\n\n                        for (let noteIndex: number = 0; noteIndex < pattern.notes.length; noteIndex++) {\n                            const note: Note = pattern.notes[noteIndex];\n\n                            const noteStartTime: number = barStartTime + note.start * midiTicksPerPart;\n                            let pinTime: number = noteStartTime;\n                            let pinSize: number = note.pins[0].size;\n                            let pinInterval: number = note.pins[0].interval;\n                            const prevPitches: number[] = [-1, -1, -1, -1];\n                            const nextPitches: number[] = [-1, -1, -1, -1];\n                            const toneCount: number = Math.min(polyphony, note.pitches.length);\n                            const velocity: number = isDrumset ? Math.max(1, Math.round(defaultNoteVelocity * note.pins[0].size / Config.noteSizeMax)) : defaultNoteVelocity;\n\n                            // The maximum midi pitch bend range is +/- 24 semitones from the base pitch. \n                            // To make the most of this, choose a base pitch that is within 24 semitones from as much of the note as possible.\n                            // This may involve offsetting this base pitch from BeepBox's note pitch.\n                            let mainInterval: number = note.pickMainInterval();\n                            let pitchOffset: number = mainInterval * intervalScale;\n                            if (!isDrumset) {\n                                let maxPitchOffset: number = pitchBendRange;\n                                let minPitchOffset: number = -pitchBendRange;\n                                for (let pinIndex: number = 1; pinIndex < note.pins.length; pinIndex++) {\n                                    const interval = note.pins[pinIndex].interval * intervalScale;\n                                    maxPitchOffset = Math.min(maxPitchOffset, interval + pitchBendRange);\n                                    minPitchOffset = Math.max(minPitchOffset, interval - pitchBendRange);\n                                }\n                                /*\n                                // I'd like to be able to use pitch bend to implement arpeggio, but the \"custom inverval\" setting in chip instruments combines arpeggio in one tone with another flat tone, and midi can't selectively apply arpeggio to one out of two simultaneous tones. Also it would be hard to reimport. :/\n                                if (usesArpeggio && note.pitches.length > polyphony) {\n                                    let lowestArpeggioOffset: number = 0;\n                                    let highestArpeggioOffset: number = 0;\n                                    const basePitch: number = note.pitches[toneCount - 1];\n                                    for (let pitchIndex: number = toneCount; pitchIndex < note.pitches.length; pitchIndex++) {\n                                        lowestArpeggioOffset = Math.min(note.pitches[pitchIndex] - basePitch);\n                                        highestArpeggioOffset = Math.max(note.pitches[pitchIndex] - basePitch);\n                                    }\n                                    maxPitchOffset -= lowestArpeggioOffset;\n                                    minPitchOffset += lowestArpeggioOffset;\n                                }\n                                */\n                                pitchOffset = Math.min(maxPitchOffset, Math.max(minPitchOffset, pitchOffset));\n                            }\n\n                            for (let pinIndex: number = 1; pinIndex < note.pins.length; pinIndex++) {\n                                const nextPinTime: number = noteStartTime + note.pins[pinIndex].time * midiTicksPerPart;\n                                const nextPinSize: number = note.pins[pinIndex].size;\n                                const nextPinInterval: number = note.pins[pinIndex].interval;\n\n                                const length: number = nextPinTime - pinTime;\n                                for (let midiTick: number = 0; midiTick < length; midiTick++) {\n                                    const midiTickTime: number = pinTime + midiTick;\n                                    const linearSize: number = lerp(pinSize, nextPinSize, midiTick / length);\n                                    const linearInterval: number = lerp(pinInterval, nextPinInterval, midiTick / length);\n\n                                    const interval: number = linearInterval * intervalScale - pitchOffset;\n\n                                    const pitchBend: number = Math.max(0, Math.min(0x3fff, Math.round(0x2000 * (1.0 + interval / pitchBendRange))));\n\n                                    const expression: number = Math.min(0x7f, Math.round(volumeMultToMidiExpression(Synth.noteSizeToVolumeMult(linearSize))));\n\n                                    if (pitchBend != prevPitchBend) {\n                                        writeEventTime(midiTickTime);\n                                        writer.writeUint8(MidiEventType.pitchBend | midiChannel);\n                                        writer.writeMidi7Bits(pitchBend & 0x7f); // least significant bits\n                                        writer.writeMidi7Bits((pitchBend >> 7) & 0x7f); // most significant bits\n                                        prevPitchBend = pitchBend;\n                                    }\n\n                                    if (expression != prevExpression && !isDrumset) {\n                                        writeEventTime(midiTickTime);\n                                        writeControlEvent(MidiControlEventMessage.expressionMSB, expression);\n                                        prevExpression = expression;\n                                    }\n\n                                    const noteStarting: boolean = midiTickTime == noteStartTime;\n                                    for (let toneIndex: number = 0; toneIndex < toneCount; toneIndex++) {\n                                        let nextPitch: number = note.pitches[toneIndex];\n                                        if (isDrumset) {\n                                            nextPitch += mainInterval;\n                                            const drumsetMap: number[] = [\n                                                36, // Bass Drum 1\n                                                41, // Low Floor Tom\n                                                45, // Low Tom\n                                                48, // Hi-Mid Tom\n                                                40, // Electric Snare\n                                                39, // Hand Clap\n                                                59, // Ride Cymbal 2\n                                                49, // Crash Cymbal 1\n                                                46, // Open Hi-Hat\n                                                55, // Splash Cymbal\n                                                69, // Cabasa\n                                                54, // Tambourine\n                                            ];\n                                            if (nextPitch < 0 || nextPitch >= drumsetMap.length) throw new Error(\"Could not find corresponding drumset pitch. \" + nextPitch);\n                                            nextPitch = drumsetMap[nextPitch];\n                                        } else {\n                                            if (usesArpeggio && note.pitches.length > toneIndex + 1 && toneIndex == toneCount - 1) {\n                                                const midiTicksSinceBeat = (midiTickTime - barStartTime) % midiTicksPerBeat;\n                                                const midiTicksPerArpeggio = Config.ticksPerArpeggio * midiTicksPerPart / Config.ticksPerPart;\n                                                const arpeggio: number = Math.floor(midiTicksSinceBeat / midiTicksPerArpeggio);\n                                                nextPitch = note.pitches[toneIndex + getArpeggioPitchIndex(note.pitches.length - toneIndex, instrument.fastTwoNoteArp, arpeggio)];\n                                            }\n                                            nextPitch = channelRoot + nextPitch * intervalScale + pitchOffset;\n                                            if (preset != null && preset.midiSubharmonicOctaves != undefined) {\n                                                nextPitch += 12 * preset.midiSubharmonicOctaves;\n                                            } else if (isNoise) {\n                                                nextPitch += 12 * (+EditorConfig.presetCategories.dictionary[\"Drum Presets\"].presets.dictionary[\"taiko drum\"].midiSubharmonicOctaves!);\n                                            }\n\n                                            if (isNoise) nextPitch *= 2;\n                                        }\n                                        nextPitch = Math.max(0, Math.min(127, nextPitch));\n                                        nextPitches[toneIndex] = nextPitch;\n\n                                        if (!noteStarting && prevPitches[toneIndex] != nextPitches[toneIndex]) {\n                                            writeEventTime(midiTickTime);\n                                            writer.writeUint8(MidiEventType.noteOff | midiChannel);\n                                            writer.writeMidi7Bits(prevPitches[toneIndex]); // old pitch\n                                            writer.writeMidi7Bits(velocity); // velocity\n                                        }\n                                    }\n\n                                    for (let toneIndex: number = 0; toneIndex < toneCount; toneIndex++) {\n                                        if (noteStarting || prevPitches[toneIndex] != nextPitches[toneIndex]) {\n                                            writeEventTime(midiTickTime);\n                                            writer.writeUint8(MidiEventType.noteOn | midiChannel);\n                                            writer.writeMidi7Bits(nextPitches[toneIndex]); // new pitch\n                                            writer.writeMidi7Bits(velocity); // velocity\n                                            prevPitches[toneIndex] = nextPitches[toneIndex];\n                                        }\n                                    }\n                                }\n\n                                pinTime = nextPinTime;\n                                pinSize = nextPinSize;\n                                pinInterval = nextPinInterval;\n                            }\n\n\t\t\t\t\t\t\tconst noteEndTime: number = barStartTime + note.end * midiTicksPerPart;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t// End all tones.\n\t\t\t\t\t\t\tfor (let toneIndex: number = 0; toneIndex < toneCount; toneIndex++) {\n\t\t\t\t\t\t\t\t// TODO: If the note at the start of the next pattern has\n\t\t\t\t\t\t\t\t// continuesLastPattern and has the same chord, it ought to extend\n\t\t\t\t\t\t\t\t// this previous note.\n\t\t\t\t\t\t\t\twriteEventTime(noteEndTime);\n\t\t\t\t\t\t\t\twriter.writeUint8(MidiEventType.noteOff | midiChannel);\n\t\t\t\t\t\t\t\twriter.writeMidi7Bits(prevPitches[toneIndex]); // pitch\n\t\t\t\t\t\t\t\twriter.writeMidi7Bits(velocity); // velocity\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tshouldResetExpressionAndPitchBend = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (shouldResetExpressionAndPitchBend) {\n\t\t\t\t\t\t\tshouldResetExpressionAndPitchBend = false;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (prevExpression != defaultMidiExpression) {\n\t\t\t\t\t\t\t\tprevExpression = defaultMidiExpression;\n\t\t\t\t\t\t\t\t// Reset expression\n\t\t\t\t\t\t\t\twriteEventTime(barStartTime);\n\t\t\t\t\t\t\t\twriteControlEvent(MidiControlEventMessage.expressionMSB, prevExpression);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (prevPitchBend != defaultMidiPitchBend) {\n\t\t\t\t\t\t\t\t// Reset pitch bend\n\t\t\t\t\t\t\t\tprevPitchBend = defaultMidiPitchBend;\n\t\t\t\t\t\t\t\twriteEventTime(barStartTime);\n\t\t\t\t\t\t\t\twriter.writeUint8(MidiEventType.pitchBend | midiChannel);\n\t\t\t\t\t\t\t\twriter.writeMidi7Bits(prevPitchBend & 0x7f); // least significant bits\n\t\t\t\t\t\t\t\twriter.writeMidi7Bits((prevPitchBend >> 7) & 0x7f); // most significant bits\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tbarStartTime += midiTicksPerBar;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\twriteEventTime(barStartTime);\n\t\t\twriter.writeUint8(MidiEventType.meta);\n\t\t\twriter.writeMidi7Bits(MidiMetaEventMessage.endOfTrack);\n\t\t\twriter.writeMidiVariableLength(0x00);\n\t\t\t\n\t\t\t// Finally, write the length of the track in bytes at the front of the track.\n\t\t\twriter.rewriteUint32(trackStartIndex, writer.getWriteIndex() - trackStartIndex - 4);\n\t\t}\n\t\t\n\t\tconst blob: Blob = new Blob([writer.toCompactArrayBuffer()], {type: \"audio/midi\"});\n\t\tsave(blob, this._fileName.value.trim() + \".mid\");\n\t\t\n\t\tthis._close();\n\t}\n\t\n\tprivate _exportToJson(): void {\n\t\tconst jsonObject: Object = this._doc.song.toJsonObject(this._enableIntro.checked, Number(this._loopDropDown.value), this._enableOutro.checked);\n\t\tconst jsonString: string = JSON.stringify(jsonObject, null, '\\t');\n\t\tconst blob: Blob = new Blob([jsonString], {type: \"application/json\"});\n\t\tsave(blob, this._fileName.value.trim() + \".json\");\n\t\tthis._close();\n    }\n\n    private _exportToHtml(): void {\n        const fileContents = `\\\n<!DOCTYPE html><meta charset=\"utf-8\">\n\nYou should be redirected to the song at:<br /><br />\n\n<a id=\"destination\" href=\"${new URL(\"#\" + this._doc.song.toBase64String(), location.href).href}\"></a>\n\n<style>\n\t:root {\n\t\tcolor: white;\n\t\tbackground: black;\n\t\tfont-family:\n\t\tsans-serif;\n\t}\n\ta {\n\t\tcolor: #98f;\n\t}\n\ta[href]::before {\n\t\tcontent: attr(href);\n\t}\n</style>\n\n<script>\n\tlocation.assign(document.querySelector(\"a#destination\").href);\n</script>\n`;\n        const blob: Blob = new Blob([fileContents], { type: \"text/html\" });\n        save(blob, this._fileName.value.trim() + \".html\");\n        this._close();\n    }\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\nimport { ColorConfig } from \"./ColorConfig\";\n\nexport class Layout {\n\tprivate static readonly _layoutMap: {[K: string]: string} = {\n\t\t\"small\": \"\",\n\t\t\"long\": `\\\n\n\t\t\t/* long layout */\n\t\t\t@media (min-width: 711px) {\n\t\t\t\t#beepboxEditorContainer {\n\t\t\t\t\tmax-width: initial;\n\t\t\t\t\theight: 100vh;\n\t\t\t\t}\n\t\t\t\t.beepboxEditor {\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\theight: 100vh;\n\t\t\t\t\tgrid-template-columns: minmax(0, 1fr) 390px; /* minmax(0, 1fr) min-content; Chrome 80 grid layout regression. https://bugs.chromium.org/p/chromium/issues/detail?id=1050307 */\n\t\t\t\t\tgrid-template-rows: minmax(481px, 1fr) minmax(0, min-content);\n\t\t\t\t\tgrid-template-areas: \"pattern-area settings-area\" \"track-area track-area\";\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .pattern-area {\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\theight: 100%;\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .track-area {\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\tdisplay: flex;\n\t\t\t\t\tflex-direction: column;\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .trackAndMuteContainer {\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\tmin-height: 0;\n\t\t\t\t\tflex: 1;\n\t\t\t\t\toverflow: auto;\n\t\t\t\t\tmax-height: 97.5vh;\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .instrument-settings-area {\n\t\t\t\t\toverflow-y: auto;\n\t\t\t\t\tposition: relative;\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .instrument-settings-area > .editor-controls {\n\t\t\t\t\tposition: absolute;\n\t\t\t\t\twidth: 100%;\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .song-settings-area {\n\t\t\t\t\toverflow-y: auto;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t.beepboxEditor .settings-area {\n\t\t\t\t\twidth: 390px;\n\t\t\t\t\tgrid-template-columns: minmax(0, 1fr) minmax(0, 1fr);\n\t\t\t\t\tgrid-template-rows: auto auto auto minmax(0, 1fr);\n\t\t\t\t\tgrid-template-areas:\n\t\t\t\t\t\t\"instrument-settings-area version-area\"\n\t\t\t\t\t\t\"instrument-settings-area play-pause-area\"\n\t\t\t\t\t\t\"instrument-settings-area menu-area\"\n\t\t\t\t\t\t\"instrument-settings-area song-settings-area\";\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t.beepboxEditor .barScrollBar {\n\t\t\t\t\tdisplay: none;\n\t\t\t\t}\n\t\t\t\t.beepboxEditor.selectRow {\n\t\t\t\t\theight: 2em;\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .trackAndMuteContainer {\n\t\t\t\t\tmax-height: 446px;\n\t\t\t\t}\n\n\t\t\t\t.beepboxEditor .trackContainer {\n\t\t\t\t\toverflow: visible;\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .trackAndMuteContainer {\n\t\t\t\t\tscrollbar-width: auto;\n\t\t\t\t\tscrollbar-color: ${ColorConfig.uiWidgetBackground} ${ColorConfig.editorBackground};\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .trackAndMuteContainer::-webkit-scrollbar {\n\t\t\t\t\twidth: 20px;\n\t\t\t\t\theight: 20px;\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .trackAndMuteContainer::-webkit-scrollbar-track {\n\t\t\t\t\tbackground: ${ColorConfig.editorBackground};\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .trackAndMuteContainer::-webkit-scrollbar-thumb {\n\t\t\t\t\tbackground-color: ${ColorConfig.uiWidgetBackground};\n\t\t\t\t\tborder: 3px solid ${ColorConfig.editorBackground};\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .trackAndMuteContainer::-webkit-scrollbar-corner {\n\t\t\t\t\tbackground-color: ${ColorConfig.editorBackground};\n\t\t\t\t}\n\t\t\t}\n\t\t`,\n\t\t\"tall\": `\\\n\t\t\t/* tall layout */\n\t\t\t@media (min-width: 711px) {\n\t\t\t\t#beepboxEditorContainer {\n\t\t\t\t\tmax-width: initial;\n\t\t\t\t\theight: 100vh;\n\t\t\t\t}\n\t\t\t\t.beepboxEditor {\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\theight: 100vh;\n\t\t\t\t\tgrid-template-columns: minmax(0, 1fr) minmax(0, 1fr) 192px;\n\t\t\t\t\tgrid-template-rows: 1fr;\n\t\t\t\t\tgrid-template-areas: \"track-area pattern-area settings-area\";\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .pattern-area {\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\theight: 100%;\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .track-area {\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\theight: 100%;\n\t\t\t\t\tdisplay: flex;\n\t\t\t\t\tflex-direction: column;\n\t\t\t\t\tjustify-content: center;\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .trackAndMuteContainer {\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\tmin-height: 0;\n\t\t\t\t\tflex: 0;\n\t\t\t\t\toverflow: auto;\n\t\t\t\t\tflex-basis: initial;\n\t\t\t\t\tflex-grow: 0;\n\t\t\t\t\tmax-height: 97.5vh;\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .instrument-settings-area > .editor-controls {\n\t\t\t\t\tposition: absolute;\n\t\t\t\t\twidth: 100%;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t.beepboxEditor .settings-area {\n\t\t\t\t\twidth: 192px;\n\t\t\t\t\tposition: relative;\n\t\t\t\t\toverflow-y: auto;\n\t\t\t\t\tgrid-template-columns: minmax(0, 1fr);\n\t\t\t\t\tgrid-template-rows: auto auto auto auto minmax(0, 1fr);\n\t\t\t\t\tgrid-template-areas:\n\t\t\t\t\t\t\"version-area\"\n\t\t\t\t\t\t\"play-pause-area\"\n\t\t\t\t\t\t\"menu-area\"\n\t\t\t\t\t\t\"song-settings-area\"\n\t\t\t\t\t\t\"instrument-settings-area\";\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .version-area {\n\t\t\t\t\tposition: sticky;\n\t\t\t\t\ttop: 0;\n\t\t\t\t\tz-index: 1;\n\t\t\t\t\tbackground: ${ColorConfig.editorBackground};\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .play-pause-area {\n\t\t\t\t\tposition: sticky;\n\t\t\t\t\ttop: 22px;\n\t\t\t\t\tz-index: 1;\n\t\t\t\t\tbackground: ${ColorConfig.editorBackground};\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .menu-area {\n\t\t\t\t\tposition: sticky;\n\t\t\t\t\ttop: 82px;\n\t\t\t\t\tz-index: 1;\n\t\t\t\t\tbackground: ${ColorConfig.editorBackground};\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t.beepboxEditor .barScrollBar {\n\t\t\t\t\tdisplay: none;\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .trackContainer {\n\t\t\t\t\toverflow: visible;\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .trackAndMuteContainer {\n\t\t\t\t\tscrollbar-width: auto;\n\t\t\t\t\tscrollbar-color: ${ColorConfig.uiWidgetBackground} ${ColorConfig.editorBackground};\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .trackAndMuteContainer::-webkit-scrollbar {\n\t\t\t\t\twidth: 20px;\n\t\t\t\t\theight: 20px;\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .trackAndMuteContainer::-webkit-scrollbar-track {\n\t\t\t\t\tbackground: ${ColorConfig.editorBackground};\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .trackAndMuteContainer::-webkit-scrollbar-thumb {\n\t\t\t\t\tbackground-color: ${ColorConfig.uiWidgetBackground};\n\t\t\t\t\tborder: 3px solid ${ColorConfig.editorBackground};\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .trackAndMuteContainer::-webkit-scrollbar-corner {\n\t\t\t\t\tbackground-color: ${ColorConfig.editorBackground};\n\t\t\t\t}\n\t\t\t}\n\t\t`,\n\t\t\"wide\": `\\\n\t\t\t/* wide (JB) layout */\n\t\t\t@media (min-width: 1001px) {\n\t\t\t\t#beepboxEditorContainer {\n\t\t\t\t\tmax-width: initial;\n\t\t\t\t\theight: 100vh;\n\t\t\t\t}\n\t\t\t\t.beepboxEditor {\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\theight: 100vh;\n\t\t\t\t\tgrid-template-columns: 512px minmax(0, 1fr) 30em;\n\t\t\t\t\tgrid-template-rows: minmax(481px, 1fr) min-content;\n\t\t\t\t\tgrid-template-areas: \"track-area pattern-area settings-area\";\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .pattern-area {\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\theight: 100%;\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .track-area {\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\theight: 100%;\n\t\t\t\t\tmax-height: 100%\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .editor-widget-column {\n\t\t\t\t\tflex: 0;\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .trackAndMuteContainer {\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\tflex: 0;\n\t\t\t\t\tflex-basis: initial;\n\t\t\t\t\tflex-grow: 0;\n\t\t\t\t\toverflow-y: auto;\n\t\t\t\t\tmax-height: 97.5vh;\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .instrument-settings-area {\n\t\t\t\t\toverflow-y: auto;\n\t\t\t\t\tposition: relative;\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .instrument-settings-area > .editor-controls {\n\t\t\t\t\tposition: absolute;\n\t\t\t\t\twidth: 100%;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t.beepboxEditor .song-settings-area {\n\t\t\t\t\toverflow-y: auto;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t.beepboxEditor .settings-area {\n\t\t\t\t\twidth: 30em;\n\t\t\t\t\tgrid-template-columns: minmax(0, 1fr) minmax(0, 1fr);\n\t\t\t\t\tgrid-template-rows: auto auto auto minmax(0, 1fr);\n\t\t\t\t\tgrid-template-areas:\n\t\t\t\t\t\t\"instrument-settings-area version-area\"\n\t\t\t\t\t\t\"instrument-settings-area play-pause-area\"\n\t\t\t\t\t\t\"instrument-settings-area menu-area\"\n\t\t\t\t\t\t\"instrument-settings-area song-settings-area\";\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .version-area {\n\t\t\t\t\tposition: sticky;\n\t\t\t\t\ttop: 0;\n\t\t\t\t\tz-index: 1;\n\t\t\t\t\tbackground: ${ColorConfig.editorBackground};\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .play-pause-area {\n\t\t\t\t\tposition: sticky;\n\t\t\t\t\ttop: 22px;\n\t\t\t\t\tz-index: 1;\n\t\t\t\t\tbackground: ${ColorConfig.editorBackground};\n\t\t\t\t}\n\t\t\t\t.beepboxEditor .menu-area {\n\t\t\t\t\tposition: sticky;\n\t\t\t\t\ttop: 82px;\n\t\t\t\t\tz-index: 1;\n\t\t\t\t\tbackground: ${ColorConfig.editorBackground};\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t.beepboxEditor .trackContainer {\n\t\t\t\t\toverflow: visible;\n\t\t\t\t}\n\t\t\t}\n\t\t`,\n\t}\n\t\t\n\t\tprivate static readonly _styleElement: HTMLStyleElement = document.head.appendChild(HTML.style({type: \"text/css\"}));\n\t\t\n\tpublic static setLayout(layout: string): void {\n\t\tthis._styleElement.textContent = this._layoutMap[layout];\n\t}\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nimport { Config } from \"../synth/SynthConfig\";\nimport { HarmonicsWave, Instrument } from \"../synth/synth\";\nimport { SongDocument } from \"./SongDocument\";\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\nimport { ColorConfig } from \"./ColorConfig\";\nimport { ChangeHarmonics } from \"./changes\";\nimport { prettyNumber } from \"./EditorConfig\";\n\nexport class HarmonicsEditor {\n\tprivate readonly _editorWidth: number = 120;\n\tprivate readonly _editorHeight: number = 26;\n\t\tprivate readonly _octaves: SVGSVGElement = SVG.svg({\"pointer-events\": \"none\"});\n\t\tprivate readonly _fifths: SVGSVGElement = SVG.svg({\"pointer-events\": \"none\"});\n\t\tprivate readonly _curve: SVGPathElement = SVG.path({fill: \"none\", stroke: \"currentColor\", \"stroke-width\": 2, \"pointer-events\": \"none\"});\n\tprivate readonly _lastControlPoints: SVGRectElement[] = [];\n\t\tprivate readonly _lastControlPointContainer: SVGSVGElement = SVG.svg({\"pointer-events\": \"none\"});\n\tprivate readonly _svg: SVGSVGElement = SVG.svg({ style: \"background-color: ${ColorConfig.editorBackground}; touch-action: none; cursor: crosshair;\", width: \"100%\", height: \"100%\", viewBox: \"0 0 \" + this._editorWidth + \" \" + this._editorHeight, preserveAspectRatio: \"none\" },\n\t\tthis._octaves,\n\t\tthis._fifths,\n\t\tthis._curve,\n\t\tthis._lastControlPointContainer,\n\t);\n\t\t\n\tpublic readonly container: HTMLElement = HTML.div({class: \"harmonics\", style: \"height: 100%;\"}, this._svg);\n\t\t\n\tprivate _mouseX: number = 0;\n\tprivate _mouseY: number = 0;\n\tprivate _freqPrev: number = 0;\n\tprivate _ampPrev: number = 0;\n\tprivate _mouseDown: boolean = false;\n\tprivate _change: ChangeHarmonics | null = null;\n\tprivate _renderedPath: String = \"\";\n\tprivate _renderedFifths: boolean = true;\n\t\t\n\tconstructor(private _doc: SongDocument) {\n\t\tfor (let i: number = 1; i <= Config.harmonicsControlPoints; i = i * 2) {\n\t\t\t\tthis._octaves.appendChild(SVG.rect({fill: ColorConfig.tonic, x: (i-0.5) * (this._editorWidth - 8) / (Config.harmonicsControlPoints - 1) - 1, y: 0, width: 2, height: this._editorHeight}));\n\t\t}\n\t\tfor (let i: number = 3; i <= Config.harmonicsControlPoints; i = i * 2) {\n\t\t\t\tthis._fifths.appendChild(SVG.rect({fill: ColorConfig.fifthNote, x: (i-0.5) * (this._editorWidth - 8) / (Config.harmonicsControlPoints - 1) - 1, y: 0, width: 2, height: this._editorHeight}));\n\t\t}\n\t\tfor (let i: number = 0; i < 4; i++) {\n\t\t\t\tconst rect: SVGRectElement = SVG.rect({fill: \"currentColor\", x: (this._editorWidth - i * 2 - 1), y: 0, width: 1, height: this._editorHeight});\n\t\t\tthis._lastControlPoints.push(rect);\n\t\t\tthis._lastControlPointContainer.appendChild(rect);\n\t\t}\n\t\t\t\n\t\tthis.container.addEventListener(\"mousedown\", this._whenMousePressed);\n\t\tdocument.addEventListener(\"mousemove\", this._whenMouseMoved);\n\t\tdocument.addEventListener(\"mouseup\", this._whenCursorReleased);\n\t\t\t\n\t\tthis.container.addEventListener(\"touchstart\", this._whenTouchPressed);\n\t\tthis.container.addEventListener(\"touchmove\", this._whenTouchMoved);\n\t\tthis.container.addEventListener(\"touchend\", this._whenCursorReleased);\n\t\tthis.container.addEventListener(\"touchcancel\", this._whenCursorReleased);\n\t}\n\t\t\n\tprivate _xToFreq(x: number): number {\n\t\treturn (Config.harmonicsControlPoints - 1) * x / (this._editorWidth - 8) - 0.5;\n\t}\n\t\t\n\tprivate _yToAmp(y: number): number {\n\t\treturn Config.harmonicsMax * (1 - y / this._editorHeight);\n\t}\n\t\t\n\tprivate _whenMousePressed = (event: MouseEvent): void => {\n\t\tevent.preventDefault();\n\t\tthis._mouseDown = true;\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\n\t\tthis._mouseX = ((event.clientX || event.pageX) - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\n\t\t    \n\t\tthis._freqPrev = this._xToFreq(this._mouseX);\n\t\tthis._ampPrev = this._yToAmp(this._mouseY);\n\t\tthis._whenCursorMoved();\n\t}\n\t\t\n\tprivate _whenTouchPressed = (event: TouchEvent): void => {\n\t\tevent.preventDefault();\n\t\tthis._mouseDown = true;\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\n\t\tthis._mouseX = (event.touches[0].clientX - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\n\t\t    \n\t\tthis._freqPrev = this._xToFreq(this._mouseX);\n\t\tthis._ampPrev = this._yToAmp(this._mouseY);\n\t\tthis._whenCursorMoved();\n\t}\n\t\t\n\tprivate _whenMouseMoved = (event: MouseEvent): void => {\n\t\tif (this.container.offsetParent == null) return;\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\n\t\tthis._mouseX = ((event.clientX || event.pageX) - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\n\t\tthis._whenCursorMoved();\n\t}\n\t\t\n\tprivate _whenTouchMoved = (event: TouchEvent): void => {\n\t\tif (this.container.offsetParent == null) return;\n\t\tif (!this._mouseDown) return;\n\t\tevent.preventDefault();\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\n\t\tthis._mouseX = (event.touches[0].clientX - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\n\t\tthis._whenCursorMoved();\n\t}\n\t\t\n\tprivate _whenCursorMoved(): void {\n\t\tif (this._mouseDown) {\n\t\t\tconst freq: number = this._xToFreq(this._mouseX);\n\t\t\tconst amp: number = this._yToAmp(this._mouseY);\n\t\t\t\t\n\t\t\tconst instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\n\t\t\tconst harmonicsWave: HarmonicsWave = instrument.harmonicsWave; //(this._harmonicsIndex == null) ? instrument.harmonicsWave : instrument.drumsetSpectrumWaves[this._harmonicsIndex];\n\t\t\t\t\n\t\t\tif (freq != this._freqPrev) {\n\t\t\t\tconst slope: number = (amp - this._ampPrev) / (freq - this._freqPrev);\n\t\t\t\tconst offset: number = this._ampPrev - this._freqPrev * slope;\n\t\t\t\tconst lowerFreq: number = Math.ceil(Math.min(this._freqPrev, freq));\n\t\t\t\tconst upperFreq: number = Math.floor(Math.max(this._freqPrev, freq));\n\t\t\t\tfor (let i: number = lowerFreq; i <= upperFreq; i++) {\n\t\t\t\t\tif (i < 0 || i >= Config.harmonicsControlPoints) continue;\n\t\t\t\t\tharmonicsWave.harmonics[i] = Math.max(0, Math.min(Config.harmonicsMax, Math.round(i * slope + offset)));\n\t\t\t\t}\n\t\t\t}\n\t\t\t\t\n\t\t\tharmonicsWave.harmonics[Math.max(0, Math.min(Config.harmonicsControlPoints - 1, Math.round(freq)))] = Math.max(0, Math.min(Config.harmonicsMax, Math.round(amp)));\n\t\t\t\t\n\t\t\tthis._freqPrev = freq;\n\t\t\tthis._ampPrev = amp;\n\t\t\t\t\n\t\t\tthis._change = new ChangeHarmonics(this._doc, instrument, harmonicsWave);\n\t\t\tthis._doc.setProspectiveChange(this._change);\n\t\t}\n\t}\n\t\t\n\tprivate _whenCursorReleased = (event: Event): void => {\n\t\tif (this._mouseDown) {\n\t\t\tthis._doc.record(this._change!);\n\t\t\tthis._change = null;\n\t\t}\n\t\tthis._mouseDown = false;\n\t}\n\t\t\n\tpublic render(): void {\n\t\tconst instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\n\t\tconst harmonicsWave: HarmonicsWave = instrument.harmonicsWave; //(this._harmonicsIndex == null) ? instrument.harmonicsWave : instrument.drumsetSpectrumWaves[this._harmonicsIndex];\n\t\tconst controlPointToHeight = (point: number): number => {\n\t\t\treturn (1 - (point / Config.harmonicsMax)) * this._editorHeight;\n\t\t}\n\t\t\t\n\t\tlet bottom: string = prettyNumber(this._editorHeight);\n\t\tlet path: string = \"\";\n\t\tfor (let i: number = 0; i < Config.harmonicsControlPoints - 1; i++) {\n\t\t\tif (harmonicsWave.harmonics[i] == 0) continue;\n\t\t\tlet xPos: string = prettyNumber((i + 0.5) * (this._editorWidth - 8) / (Config.harmonicsControlPoints - 1));\n\t\t\tpath += \"M \" + xPos + \" \" + bottom + \" \";\n\t\t\tpath += \"L \" + xPos + \" \" + prettyNumber(controlPointToHeight(harmonicsWave.harmonics[i])) + \" \";\n\t\t}\n\t\t\t\n\t\tconst lastHeight: number = controlPointToHeight(harmonicsWave.harmonics[Config.harmonicsControlPoints - 1]);\n\t\tfor (let i: number = 0; i < 4; i++) {\n\t\t\tconst rect: SVGRectElement = this._lastControlPoints[i];\n\t\t\trect.setAttribute(\"y\", prettyNumber(lastHeight));\n\t\t\trect.setAttribute(\"height\", prettyNumber(this._editorHeight - lastHeight));\n\t\t}\n\t\t\t\n\t\tif (this._renderedPath != path) {\n\t\t\tthis._renderedPath = path;\n\t\t\tthis._curve.setAttribute(\"d\", path);\n\t\t}\n\t\tif (this._renderedFifths != this._doc.prefs.showFifth) {\n\t\t\tthis._renderedFifths = this._doc.prefs.showFifth;\n\t\t\tthis._fifths.style.display = this._doc.prefs.showFifth ? \"\" : \"none\";\n\t\t}\n\t}\n}\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\n// A few wrapper classes that add functionality onto existing HTML elements, namely binding some events to an implementation-specified change class\n\nimport { Change } from \"./Change\";\nimport { SongDocument } from \"./SongDocument\";\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\n\nconst { span } = HTML;\n\nexport class InputBox {\n\tprivate _change: Change | null = null;\n\tprivate _value: string = \"\";\n\tprivate _oldValue: string = \"\";\n\n\tconstructor(public readonly input: HTMLInputElement, private readonly _doc: SongDocument, private readonly _getChange: (oldValue: string, newValue: string) => Change) {\n\t\tinput.addEventListener(\"input\", this._whenInput);\n\t\tinput.addEventListener(\"change\", this._whenChange);\n\t}\n\n\tpublic updateValue(value: string): void {\n\t\tthis._value = value;\n\t\tthis.input.value = String(value);\n\t}\n\n\tprivate _whenInput = (): void => {\n\t\tconst continuingProspectiveChange: boolean = this._doc.lastChangeWas(this._change);\n\t\tif (!continuingProspectiveChange) this._oldValue = this._value;\n\t\tthis._change = this._getChange(this._oldValue, this.input.value);\n\t\tthis._doc.setProspectiveChange(this._change);\n\t};\n\n\tprivate _whenChange = (): void => {\n\t\tthis._doc.record(this._change!);\n\t\tthis._change = null;\n\t};\n}\n\nexport class Slider {\n\tprivate _change: Change | null = null;\n\tprivate _value: number = 0;\n\tprivate _oldValue: number = 0;\n\tpublic container: HTMLSpanElement;\n\n\tconstructor(public readonly input: HTMLInputElement, private readonly _doc: SongDocument, private readonly _getChange: ((oldValue: number, newValue: number) => Change) | null, midTick: boolean) {\n\t\t// A container is created around the input to allow for spec-compliant pseudo css classes (e.g ::before and ::after, which must be added to containers, not the input itself)\n\t\tthis.container = (midTick) ? span({ class: \"midTick\", style: \"position: sticky; width: 61.5%;\" }, input) : span({ style: \"position: sticky;\" }, input);\n\t\tinput.addEventListener(\"input\", this._whenInput);\n\t\tinput.addEventListener(\"change\", this._whenChange);\n\t}\n\n\tpublic updateValue(value: number): void {\n\t\tthis._value = value;\n\t\tthis.input.value = String(value);\n\t}\n\n\tprivate _whenInput = (): void => {\n\t\tconst continuingProspectiveChange: boolean = this._doc.lastChangeWas(this._change);\n\t\tif (!continuingProspectiveChange) this._oldValue = this._value;\n\t\tif (this._getChange != null) {\n\t\t\tthis._change = this._getChange(this._oldValue, parseInt(this.input.value));\n\t\t\tthis._doc.setProspectiveChange(this._change);\n\t\t}\n\t};\n\n\tpublic getValueBeforeProspectiveChange(): number {\n\t\treturn this._oldValue;\n\t}\n\n\tprivate _whenChange = (): void => {\n\t\tif (this._getChange != null) {\n\t\t\tthis._doc.record(this._change!);\n\t\t\tthis._change = null;\n\t\t}\n\t};\n}","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\n// Note: All methods are big endian.\nexport class ArrayBufferReader {\n\tprivate _readIndex: number = 0;\n\tprivate _data: DataView;\n\t\t\n\tconstructor(data: DataView) {\n\t\tthis._data = data;\n\t}\n\t\t\n\tpublic getReadIndex(): number {\n\t\treturn this._readIndex;\n\t}\n\t\t\n\tpublic readUint32(): number {\n\t\tif (this._readIndex + 4 > this._data.byteLength) throw new Error(\"Reading past the end of the buffer.\");\n\t\tconst result: number = this._data.getUint32(this._readIndex, false);\n\t\tthis._readIndex += 4;\n\t\treturn result;\n\t}\n\t\t\n\tpublic readUint24(): number {\n\t\treturn (this.readUint8() << 16) | (this.readUint8() << 8) | (this.readUint8());\n\t}\n\t\t\n\tpublic readUint16(): number {\n\t\tif (this._readIndex + 2 > this._data.byteLength) throw new Error(\"Reading past the end of the buffer.\");\n\t\tconst result: number = this._data.getUint16(this._readIndex, false);\n\t\tthis._readIndex += 2;\n\t\treturn result;\n\t}\n\t\t\n\tpublic readUint8(): number {\n\t\tif (this._readIndex + 1 > this._data.byteLength) throw new Error(\"Reading past the end of the buffer.\");\n\t\tconst result: number = this._data.getUint8(this._readIndex);\n\t\tthis._readIndex++;\n\t\treturn result;\n\t}\n\t\t\n\tpublic readInt8(): number {\n\t\tif (this._readIndex + 1 > this._data.byteLength) throw new Error(\"Reading past the end of the buffer.\");\n\t\tconst result: number = this._data.getInt8(this._readIndex);\n\t\tthis._readIndex++;\n\t\treturn result;\n\t}\n\t\t\n\tpublic peakUint8(): number {\n\t\tif (this._readIndex + 1 > this._data.byteLength) throw new Error(\"Reading past the end of the buffer.\");\n\t\treturn this._data.getUint8(this._readIndex);\n\t}\n\t\t\n\tpublic readMidi7Bits(): number {\n\t\tconst result: number = this.readUint8();\n\t\tif (result >= 0x80) console.log(\"7 bit value contained 8th bit! value \" + result + \", index \" + this._readIndex);\n\t\treturn result & 0x7f;\n\t}\n\t\t\n\tpublic readMidiVariableLength(): number {\n\t\tlet result: number = 0;\n\t\tfor (let i: number = 0; i < 4; i++) {\n\t\t\tconst nextByte: number = this.readUint8();\n\t\t\tresult += nextByte & 0x7f;\n\t\t\tif (nextByte & 0x80) {\n\t\t\t\tresult = result << 7;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\t\t\n\tpublic skipBytes(length: number): void {\n\t\tthis._readIndex += length;\n\t}\n\t\t\n\tpublic hasMore(): boolean {\n\t\treturn this._data.byteLength > this._readIndex;\n\t}\n\t\t\n\tpublic getReaderForNextBytes(length: number): ArrayBufferReader {\n\t\tif (this._readIndex + length > this._data.byteLength) throw new Error(\"Reading past the end of the buffer.\");\n\t\tconst result: ArrayBufferReader = new ArrayBufferReader(new DataView(this._data.buffer, this._data.byteOffset + this._readIndex, length));\n\t\tthis.skipBytes(length);\n\t\treturn result;\n\t}\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nimport { InstrumentType, Config } from \"../synth/SynthConfig\";\nimport { NotePin, Note, makeNotePin, Pattern, Instrument, Channel, Song, Synth } from \"../synth/synth\";\nimport { Preset, EditorConfig } from \"./EditorConfig\";\nimport { SongDocument } from \"./SongDocument\";\nimport { Prompt } from \"./Prompt\";\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\nimport { ChangeGroup } from \"./Change\";\nimport { removeDuplicatePatterns, ChangeSong, ChangeReplacePatterns } from \"./changes\";\nimport { AnalogousDrum, analogousDrumMap, MidiChunkType, MidiFileFormat, MidiEventType, MidiControlEventMessage, MidiMetaEventMessage, MidiRegisteredParameterNumberMSB, MidiRegisteredParameterNumberLSB, midiVolumeToVolumeMult, midiExpressionToVolumeMult } from \"./Midi\";\nimport { ArrayBufferReader } from \"./ArrayBufferReader\";\n\n\tconst {button, p, div, h2, input} = HTML;\n\nexport class ImportPrompt implements Prompt {\n\t\tprivate readonly _fileInput: HTMLInputElement = input({type: \"file\", accept: \".json,application/json,.mid,.midi,audio/midi,audio/x-midi\"});\n\t\tprivate readonly _cancelButton: HTMLButtonElement = button({class: \"cancelButton\"});\n\t\t\n\t\tpublic readonly container: HTMLDivElement = div({class: \"prompt noSelection\", style: \"width: 300px;\"},\n\t\th2(\"Import\"),\n\t\t\tp({style: \"text-align: left; margin: 0.5em 0;\"},\n\t\t\t\"BeepBox songs can be exported and re-imported as .json files. You could also use other means to make .json files for BeepBox as long as they follow the same structure.\",\n\t\t),\n\t\t\tp({style: \"text-align: left; margin: 0.5em 0;\"},\n\t\t\t\"BeepBox can also (crudely) import .mid files. There are many tools available for creating .mid files. Shorter and simpler songs are more likely to work well.\",\n\t\t),\n\t\tthis._fileInput,\n\t\tthis._cancelButton,\n\t);\n\t\t\n\tconstructor(private _doc: SongDocument) {\n\t\tthis._fileInput.select();\n\t\t\tsetTimeout(()=>this._fileInput.focus());\n\t\t\t\n\t\tthis._fileInput.addEventListener(\"change\", this._whenFileSelected);\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\n\t}\n\t\t\n\t\tprivate _close = (): void => { \n\t\tthis._doc.undo();\n\t}\n\t\t\n\t\tpublic cleanUp = (): void => { \n\t\tthis._fileInput.removeEventListener(\"change\", this._whenFileSelected);\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\n\t}\n\t\t\n\tprivate _whenFileSelected = (): void => {\n\t\tconst file: File = this._fileInput.files![0];\n\t\tif (!file) return;\n\t\t\t\n\t\tconst extension: string = file.name.slice((file.name.lastIndexOf(\".\") - 1 >>> 0) + 2).toLowerCase();\n\t\tif (extension == \"json\") {\n\t\t\tconst reader: FileReader = new FileReader();\n\t\t\treader.addEventListener(\"load\", (event: Event): void => {\n\t\t\t\tthis._doc.prompt = null;\n\t\t\t\tthis._doc.goBackToStart();\n\t\t\t\tthis._doc.record(new ChangeSong(this._doc, <string>reader.result), true, true);\n\t\t\t});\n\t\t\treader.readAsText(file);\n\t\t} else if (extension == \"midi\" || extension == \"mid\") {\n\t\t\tconst reader: FileReader = new FileReader();\n\t\t\treader.addEventListener(\"load\", (event: Event): void => {\n\t\t\t\tthis._doc.prompt = null;\n\t\t\t\tthis._doc.goBackToStart();\n\t\t\t\tthis._parseMidiFile(<ArrayBuffer>reader.result);\n\t\t\t});\n\t\t\treader.readAsArrayBuffer(file);\n\t\t} else {\n\t\t\tconsole.error(\"Unrecognized file extension.\");\n\t\t\tthis._close();\n\t\t}\n\t}\n\t\t\n\tprivate _parseMidiFile(buffer: ArrayBuffer): void {\n\t\t\t\n\t\t// First, split the file into separate buffer readers for each chunk. There should be one header chunk and one or more track chunks.\n\t\tconst reader = new ArrayBufferReader(new DataView(buffer));\n\t\tlet headerReader: ArrayBufferReader | null = null;\n\t\tinterface Track {\n\t\t\treader: ArrayBufferReader;\n\t\t\tnextEventMidiTick: number;\n\t\t\tended: boolean;\n\t\t\trunningStatus: number;\n\t\t}\n\t\tconst tracks: Track[] = [];\n\t\t\twhile(reader.hasMore()) {\n\t\t\tconst chunkType: number = reader.readUint32();\n\t\t\tconst chunkLength: number = reader.readUint32();\n\t\t\tif (chunkType == MidiChunkType.header) {\n\t\t\t\tif (headerReader == null) {\n\t\t\t\t\theaderReader = reader.getReaderForNextBytes(chunkLength);\n\t\t\t\t} else {\n\t\t\t\t\tconsole.error(\"This MIDI file has more than one header chunk.\");\n\t\t\t\t}\n\t\t\t} else if (chunkType == MidiChunkType.track) {\n\t\t\t\tconst trackReader: ArrayBufferReader = reader.getReaderForNextBytes(chunkLength);\n\t\t\t\tif (trackReader.hasMore()) {\n\t\t\t\t\ttracks.push({\n\t\t\t\t\t\treader: trackReader,\n\t\t\t\t\t\tnextEventMidiTick: trackReader.readMidiVariableLength(),\n\t\t\t\t\t\tended: false,\n\t\t\t\t\t\trunningStatus: -1,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Unknown chunk type. Skip it.\n\t\t\t\treader.skipBytes(chunkLength);\n\t\t\t}\n\t\t}\n\t\t\t\n\t\tif (headerReader == null) {\n\t\t\tconsole.error(\"No header chunk found in this MIDI file.\");\n\t\t\tthis._close();\n\t\t\treturn;\n\t\t}\n\t\tconst fileFormat: number = headerReader.readUint16();\n\t\t/*const trackCount: number =*/ headerReader.readUint16();\n\t\tconst midiTicksPerBeat: number = headerReader.readUint16();\n\t\t\t\n\t\t// Midi tracks are generally intended to be played in parallel, but in the format\n\t\t// MidiFileFormat.independentTracks, they are played in sequence. Make a list of all\n\t\t// of the track indices that should be played in parallel (one or all of the tracks).\n\t\tlet currentIndependentTrackIndex: number = 0;\n\t\tconst currentTrackIndices: number[] = [];\n\t\tconst independentTracks: boolean = (fileFormat == MidiFileFormat.independentTracks);\n\t\tif (independentTracks) {\n\t\t\tcurrentTrackIndices.push(currentIndependentTrackIndex);\n\t\t} else {\n\t\t\tfor (let trackIndex: number = 0; trackIndex < tracks.length; trackIndex++) {\n\t\t\t\tcurrentTrackIndices.push(trackIndex);\n\t\t\t}\n\t\t}\n\t\t\t\n\t\tinterface NoteEvent {\n\t\t\tmidiTick: number;\n\t\t\tpitch: number;\n\t\t\tvelocity: number;\n\t\t\tprogram: number;\n\t\t\tinstrumentVolume: number;\n\t\t\tinstrumentPan: number;\n\t\t\ton: boolean;\n\t\t}\n\t\tinterface PitchBendEvent {\n\t\t\tmidiTick: number;\n\t\t\tinterval: number;\n\t\t}\n\t\tinterface NoteSizeEvent {\n\t\t\tmidiTick: number;\n\t\t\tsize: number;\n\t\t}\n\t\t\t\n\t\t// To read a MIDI file we have to simulate state changing over time.\n\t\t// Keep a record of various parameters for each channel that may\n\t\t// change over time, initialized to default values.\n\t\t// Consider making a MidiChannel class and single array of midiChannels.\n\t\t\tconst channelRPNMSB: number[] = [0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff];\n\t\t\tconst channelRPNLSB: number[] = [0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff];\n\t\t\tconst pitchBendRangeMSB: number[] = [2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2]; // pitch bend range defaults to 2 semitones.\n\t\t\tconst pitchBendRangeLSB: number[] = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]; // and 0 cents.\n\t\t\tconst currentInstrumentProgram: number[] = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];\n\t\t\tconst currentInstrumentVolumes: number[] = [100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100];\n\t\t\tconst currentInstrumentPans: number[] = [64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64];\n\t\t\tconst noteEvents: NoteEvent[][] = [[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]];\n\t\t\tconst pitchBendEvents: PitchBendEvent[][] = [[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]];\n\t\tconst noteSizeEvents: NoteSizeEvent[][] = [[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]];\n\t\tlet microsecondsPerBeat: number = 500000; // Tempo in microseconds per \"quarter\" note, commonly known as a \"beat\", default is equivalent to 120 beats per minute.\n\t\tlet beatsPerBar: number = 8;\n\t\tlet numSharps: number = 0;\n\t\tlet isMinor: boolean = false;\n\t\t\t\n\t\t// Progress in time through all tracks (in parallel or in sequence) recording state changes and events until all tracks have ended.\n\t\tlet currentMidiTick: number = 0;\n\t\twhile (true) {\n\t\t\tlet nextEventMidiTick: number = Number.MAX_VALUE;\n\t\t\tlet anyTrackHasMore: boolean = false;\n\t\t\tfor (const trackIndex of currentTrackIndices) {\n\t\t\t\t\t\n\t\t\t\t// Parse any events in this track that occur at the currentMidiTick.\n\t\t\t\tconst track: Track = tracks[trackIndex];\n\t\t\t\twhile (!track.ended && track.nextEventMidiTick == currentMidiTick) {\n\t\t\t\t\t\t\n\t\t\t\t\t// If the most significant bit is set in the first byte\n\t\t\t\t\t// of the event, it's a new event status, otherwise\n\t\t\t\t\t// reuse the running status and save the next byte for\n\t\t\t\t\t// the content of the event. I'm assuming running status\n\t\t\t\t\t// is separate for each track.\n\t\t\t\t\tconst peakStatus: number = track.reader.peakUint8();\n\t\t\t\t\tconst eventStatus: number = (peakStatus & 0x80) ? track.reader.readUint8() : track.runningStatus;\n\t\t\t\t\tconst eventType: number = eventStatus & 0xF0;\n\t\t\t\t\tconst eventChannel: number = eventStatus & 0x0F;\n\t\t\t\t\tif (eventType != MidiEventType.metaAndSysex) {\n\t\t\t\t\t\ttrack.runningStatus = eventStatus;\n\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\tlet foundTrackEndEvent: boolean = false;\n\t\t\t\t\t\t\n\t\t\t\t\tswitch (eventType) {\n\t\t\t\t\t\tcase MidiEventType.noteOff: {\n\t\t\t\t\t\t\tconst pitch: number = track.reader.readMidi7Bits();\n\t\t\t\t\t\t\t/*const velocity: number =*/ track.reader.readMidi7Bits();\n\t\t\t\t\t\t\t\tnoteEvents[eventChannel].push({midiTick: currentMidiTick, pitch: pitch, velocity: 0.0, program: -1, instrumentVolume: -1, instrumentPan: -1, on: false});\n\t\t\t\t\t\t} break;\n\t\t\t\t\t\tcase MidiEventType.noteOn: {\n\t\t\t\t\t\t\tconst pitch: number = track.reader.readMidi7Bits();\n\t\t\t\t\t\t\tconst velocity: number = track.reader.readMidi7Bits();\n\t\t\t\t\t\t\tif (velocity == 0) {\n\t\t\t\t\t\t\t\t\tnoteEvents[eventChannel].push({midiTick: currentMidiTick, pitch: pitch, velocity: 0.0, program: -1, instrumentVolume: -1, instrumentPan: -1, on: false});\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tconst volume: number = Math.max(0, Math.min(Config.volumeRange - 1, Math.round(\n\t\t\t\t\t\t\t\t\tSynth.volumeMultToInstrumentVolume(midiVolumeToVolumeMult(currentInstrumentVolumes[eventChannel]))\n\t\t\t\t\t\t\t\t)));\n\t\t\t\t\t\t\t\tconst pan: number = Math.max(0, Math.min(Config.panMax, Math.round(\n\t\t\t\t\t\t\t\t\t((currentInstrumentPans[eventChannel] - 64) / 63 + 1) * Config.panCenter\n\t\t\t\t\t\t\t\t)));\n\t\t\t\t\t\t\t\tnoteEvents[eventChannel].push({\n\t\t\t\t\t\t\t\t\tmidiTick: currentMidiTick,\n\t\t\t\t\t\t\t\t\tpitch: pitch,\n\t\t\t\t\t\t\t\t\tvelocity: Math.max(0.0, Math.min(1.0, (velocity + 14) / 90.0)),\n\t\t\t\t\t\t\t\t\tprogram: currentInstrumentProgram[eventChannel],\n\t\t\t\t\t\t\t\t\tinstrumentVolume: volume,\n\t\t\t\t\t\t\t\t\tinstrumentPan: pan,\n\t\t\t\t\t\t\t\t\ton: true,\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} break;\n\t\t\t\t\t\tcase MidiEventType.keyPressure: {\n\t\t\t\t\t\t\t/*const pitch: number =*/ track.reader.readMidi7Bits();\n\t\t\t\t\t\t\t/*const pressure: number =*/ track.reader.readMidi7Bits();\n\t\t\t\t\t\t} break;\n\t\t\t\t\t\tcase MidiEventType.controlChange: {\n\t\t\t\t\t\t\tconst message: number = track.reader.readMidi7Bits();\n\t\t\t\t\t\t\tconst value: number = track.reader.readMidi7Bits();\n\t\t\t\t\t\t\t//console.log(\"Control change, message:\", message, \"value:\", value);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tswitch (message) {\n\t\t\t\t\t\t\t\tcase MidiControlEventMessage.setParameterMSB: {\n\t\t\t\t\t\t\t\t\tif (channelRPNMSB[eventChannel] == MidiRegisteredParameterNumberMSB.pitchBendRange && channelRPNLSB[eventChannel] == MidiRegisteredParameterNumberLSB.pitchBendRange) {\n\t\t\t\t\t\t\t\t\t\tpitchBendRangeMSB[eventChannel] = value;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} break;\n\t\t\t\t\t\t\t\tcase MidiControlEventMessage.volumeMSB: {\n\t\t\t\t\t\t\t\t\tcurrentInstrumentVolumes[eventChannel] = value;\n\t\t\t\t\t\t\t\t} break;\n\t\t\t\t\t\t\t\tcase MidiControlEventMessage.panMSB: {\n\t\t\t\t\t\t\t\t\tcurrentInstrumentPans[eventChannel] = value;\n\t\t\t\t\t\t\t\t} break;\n\t\t\t\t\t\t\t\tcase MidiControlEventMessage.expressionMSB: {\n\t\t\t\t\t\t\t\t\tnoteSizeEvents[eventChannel].push({midiTick: currentMidiTick, size: Synth.volumeMultToNoteSize(midiExpressionToVolumeMult(value))});\n\t\t\t\t\t\t\t\t} break;\n\t\t\t\t\t\t\t\tcase MidiControlEventMessage.setParameterLSB: {\n\t\t\t\t\t\t\t\t\tif (channelRPNMSB[eventChannel] == MidiRegisteredParameterNumberMSB.pitchBendRange && channelRPNLSB[eventChannel] == MidiRegisteredParameterNumberLSB.pitchBendRange) {\n\t\t\t\t\t\t\t\t\t\tpitchBendRangeLSB[eventChannel] = value;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} break;\n\t\t\t\t\t\t\t\tcase MidiControlEventMessage.registeredParameterNumberLSB: {\n\t\t\t\t\t\t\t\t\tchannelRPNLSB[eventChannel] = value;\n\t\t\t\t\t\t\t\t} break;\n\t\t\t\t\t\t\t\tcase MidiControlEventMessage.registeredParameterNumberMSB: {\n\t\t\t\t\t\t\t\t\tchannelRPNMSB[eventChannel] = value;\n\t\t\t\t\t\t\t\t} break;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} break;\n\t\t\t\t\t\tcase MidiEventType.programChange: {\n\t\t\t\t\t\t\tconst program: number = track.reader.readMidi7Bits();\n\t\t\t\t\t\t\tcurrentInstrumentProgram[eventChannel] = program;\n\t\t\t\t\t\t} break;\n\t\t\t\t\t\tcase MidiEventType.channelPressure: {\n\t\t\t\t\t\t\t/*const pressure: number =*/ track.reader.readMidi7Bits();\n\t\t\t\t\t\t} break;\n\t\t\t\t\t\tcase MidiEventType.pitchBend: {\n\t\t\t\t\t\t\tconst lsb: number = track.reader.readMidi7Bits();\n\t\t\t\t\t\t\tconst msb: number = track.reader.readMidi7Bits();\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tconst pitchBend: number = (((msb << 7) | lsb) / 0x2000) - 1.0;\n\t\t\t\t\t\t\tconst pitchBendRange: number = pitchBendRangeMSB[eventChannel] + pitchBendRangeLSB[eventChannel] * 0.01;\n\t\t\t\t\t\t\tconst interval: number = pitchBend * pitchBendRange;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tpitchBendEvents[eventChannel].push({midiTick: currentMidiTick, interval: interval});\n\t\t\t\t\t\t} break;\n\t\t\t\t\t\tcase MidiEventType.metaAndSysex: {\n\t\t\t\t\t\t\tif (eventStatus == MidiEventType.meta) {\n\t\t\t\t\t\t\t\tconst message: number = track.reader.readMidi7Bits();\n\t\t\t\t\t\t\t\tconst length: number = track.reader.readMidiVariableLength();\n\t\t\t\t\t\t\t\t//console.log(\"Meta, message:\", message, \"length:\", length);\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (message == MidiMetaEventMessage.endOfTrack) {\n\t\t\t\t\t\t\t\t\tfoundTrackEndEvent = true;\n\t\t\t\t\t\t\t\t\ttrack.reader.skipBytes(length);\n\t\t\t\t\t\t\t\t} else if (message == MidiMetaEventMessage.tempo) {\n\t\t\t\t\t\t\t\t\tmicrosecondsPerBeat = track.reader.readUint24();\n\t\t\t\t\t\t\t\t\ttrack.reader.skipBytes(length - 3);\n\t\t\t\t\t\t\t\t} else if (message == MidiMetaEventMessage.timeSignature) {\n\t\t\t\t\t\t\t\t\tconst numerator: number = track.reader.readUint8();\n\t\t\t\t\t\t\t\t\tlet denominatorExponent: number = track.reader.readUint8();\n\t\t\t\t\t\t\t\t\t/*const midiClocksPerMetronome: number =*/ track.reader.readUint8();\n\t\t\t\t\t\t\t\t\t/*const thirtySecondNotesPer24MidiClocks: number =*/ track.reader.readUint8();\n\t\t\t\t\t\t\t\t\ttrack.reader.skipBytes(length - 4);\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t// A beat is a quarter note. \n\t\t\t\t\t\t\t\t\t// A ratio of 4/4, or 1/1, corresponds to 4 beats per bar.\n\t\t\t\t\t\t\t\t\t// Apply the numerator first.\n\t\t\t\t\t\t\t\t\tbeatsPerBar = numerator * 4;\n\t\t\t\t\t\t\t\t\t// Then apply the denominator, dividing by two until either\n\t\t\t\t\t\t\t\t\t// the denominator is satisfied or there's an odd number of\n\t\t\t\t\t\t\t\t\t// beats. BeepBox doesn't support fractional beats in a bar.\n\t\t\t\t\t\t\t\t\twhile ((beatsPerBar & 1) == 0 && (denominatorExponent > 0 || beatsPerBar > Config.beatsPerBarMax) && beatsPerBar >= Config.beatsPerBarMin * 2) {\n\t\t\t\t\t\t\t\t\t\tbeatsPerBar = beatsPerBar >> 1;\n\t\t\t\t\t\t\t\t\t\tdenominatorExponent = denominatorExponent - 1;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tbeatsPerBar = Math.max(Config.beatsPerBarMin, Math.min(Config.beatsPerBarMax, beatsPerBar));\n\t\t\t\t\t\t\t\t} else if (message == MidiMetaEventMessage.keySignature) {\n\t\t\t\t\t\t\t\t\tnumSharps = track.reader.readInt8(); // Note: can be negative for flats.\n\t\t\t\t\t\t\t\t\tisMinor = track.reader.readUint8() == 1; // 0: major, 1: minor\n\t\t\t\t\t\t\t\t\ttrack.reader.skipBytes(length - 2);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t// Ignore other meta event message types.\n\t\t\t\t\t\t\t\t\ttrack.reader.skipBytes(length);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t} else if (eventStatus == 0xF0 || eventStatus == 0xF7) {\n\t\t\t\t\t\t\t\t// Sysex events, just skip the data.\n\t\t\t\t\t\t\t\tconst length: number = track.reader.readMidiVariableLength();\n\t\t\t\t\t\t\t\ttrack.reader.skipBytes(length);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tconsole.error(\"Unrecognized event status: \" + eventStatus);\n\t\t\t\t\t\t\t\tthis._close();\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} break;\n\t\t\t\t\t\tdefault: {\n\t\t\t\t\t\t\tconsole.error(\"Unrecognized event type: \" + eventType);\n\t\t\t\t\t\t\tthis._close();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\tif (!foundTrackEndEvent && track.reader.hasMore()) {\n\t\t\t\t\t\ttrack.nextEventMidiTick = currentMidiTick + track.reader.readMidiVariableLength();\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttrack.ended = true;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t// If the tracks are sequential, start the next track when this one ends.\n\t\t\t\t\t\tif (independentTracks) {\n\t\t\t\t\t\t\tcurrentIndependentTrackIndex++;\n\t\t\t\t\t\t\tif (currentIndependentTrackIndex < tracks.length) {\n\t\t\t\t\t\t\t\tcurrentTrackIndices[0] = currentIndependentTrackIndex;\n\t\t\t\t\t\t\t\ttracks[currentIndependentTrackIndex].nextEventMidiTick += currentMidiTick;\n\t\t\t\t\t\t\t\tnextEventMidiTick = Math.min(nextEventMidiTick, tracks[currentIndependentTrackIndex].nextEventMidiTick);\n\t\t\t\t\t\t\t\tanyTrackHasMore = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\tif (!track.ended) {\n\t\t\t\t\tanyTrackHasMore = true;\n\t\t\t\t\tnextEventMidiTick = Math.min(nextEventMidiTick, track.nextEventMidiTick);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\t\n\t\t\tif (anyTrackHasMore) {\n\t\t\t\tcurrentMidiTick = nextEventMidiTick;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t\t\n\t\t// Now the MIDI file is fully parsed. Next, constuct BeepBox channels out of the data.\n\t\tconst microsecondsPerMinute: number = 60 * 1000 * 1000;\n\t\tconst beatsPerMinute: number = Math.max(Config.tempoMin, Math.min(Config.tempoMax, Math.round(microsecondsPerMinute / microsecondsPerBeat)));\n\t\tconst midiTicksPerPart: number = midiTicksPerBeat / Config.partsPerBeat;\n\t\tconst partsPerBar: number = Config.partsPerBeat * beatsPerBar;\n\t\tconst songTotalBars: number = Math.ceil(currentMidiTick / midiTicksPerPart / partsPerBar);\n\t\t\t\n\t\tfunction quantizeMidiTickToPart(midiTick: number): number {\n\t\t\treturn Math.round(midiTick / midiTicksPerPart);\n\t\t}\n\n\t\tlet key: number = numSharps;\n\t\tif (isMinor) key += 3; // Diatonic C Major has the same sharps/flats as A Minor, and these keys are 3 semitones apart.\n\t\tif ((key & 1) == 1) key += 6; // If the number of sharps/flats is odd, rotate it halfway around the circle of fifths. The key of C# has little in common with the key of C.\n\t\twhile (key < 0) key += 12; // Wrap around to a range from 0 to 11.\n\t\tkey = key % 12; // Wrap around to a range from 0 to 11.\n\t\t\t\n\t\t// Convert each midi channel into a BeepBox channel.\n\t\tconst pitchChannels: Channel[] = [];\n\t\tconst noiseChannels: Channel[] = [];\n\t\tconst modChannels: Channel[] = [];\n\t\tfor (let midiChannel: number = 0; midiChannel < 16; midiChannel++) {\n\t\t\tif (noteEvents[midiChannel].length == 0) continue;\n\t\t\t\t\n\t\t\tconst channel: Channel = new Channel();\n\t\t\t\t\n\t\t\tconst channelPresetValue: number | null = EditorConfig.midiProgramToPresetValue(noteEvents[midiChannel][0].program);\n\t\t\tconst channelPreset: Preset | null = (channelPresetValue == null) ? null : EditorConfig.valueToPreset(channelPresetValue);\n\t\t\t\t\n\t\t\tconst isDrumsetChannel: boolean = (midiChannel == 9);\n\t\t\tconst isNoiseChannel: boolean = isDrumsetChannel || (channelPreset != null && channelPreset.isNoise == true);\n\t\t\tconst isModChannel: boolean = (channelPreset != null && channelPreset.isMod == true);\n\t\t\tconst channelBasePitch: number = isNoiseChannel ? Config.spectrumBasePitch : Config.keys[key].basePitch;\n\t\t\tconst intervalScale: number = isNoiseChannel ? Config.noiseInterval : 1;\n\t\t\tconst midiIntervalScale: number = isNoiseChannel ? 0.5 : 1;\n\t\t\tconst channelMaxPitch: number = isNoiseChannel ? Config.drumCount - 1 : Config.maxPitch;\n\t\t\t\t\n\t\t\tif (isNoiseChannel) {\n\t\t\t\tif (isDrumsetChannel) {\n\t\t\t\t\tnoiseChannels.unshift(channel);\n\t\t\t\t} else {\n\t\t\t\t\tnoiseChannels.push(channel);\n\t\t\t\t}\n\t\t\t} else if (isModChannel) {\n\t\t\t\tmodChannels.push(channel);\n\t\t\t} else {\n\t\t\t\tpitchChannels.push(channel);\n\t\t\t}\n\t\t\t\t\n\t\t\tlet currentVelocity: number = 1.0;\n\t\t\tlet currentProgram: number = 0;\n\t\t\tlet currentInstrumentVolume: number = 0;\n\t\t\tlet currentInstrumentPan: number = Config.panCenter;\n\t\t\t\t\n\t\t\tif (isDrumsetChannel) {\n\t\t\t\tconst heldPitches: number[] = [];\n\t\t\t\tlet currentBar: number = -1;\n\t\t\t\tlet pattern: Pattern | null = null;\n\t\t\t\tlet prevEventPart: number = 0;\n\t\t\t\tlet setInstrumentVolume: boolean = false;\n\t\t\t\t\t\n\t\t\t\tconst presetValue: number = EditorConfig.nameToPresetValue(\"standard drumset\")!;\n\t\t\t\tconst preset: Preset = EditorConfig.valueToPreset(presetValue)!;\n\t\t\t\tconst instrument: Instrument = new Instrument(false, false);\n\t\t\t\t\tinstrument.fromJsonObject(preset.settings, false, false, false, false, 1);\n\t\t\t\t\t\n\t\t\t\tinstrument.preset = presetValue;\n\t\t\t\tchannel.instruments.push(instrument);\n\n\t\t\t\tfor (let noteEventIndex: number = 0; noteEventIndex <= noteEvents[midiChannel].length; noteEventIndex++) {\n\t\t\t\t\tconst noMoreNotes: boolean = noteEventIndex == noteEvents[midiChannel].length;\n\t\t\t\t\tconst noteEvent: NoteEvent | null = noMoreNotes ? null : noteEvents[midiChannel][noteEventIndex];\n\t\t\t\t\tconst nextEventPart: number = noteEvent == null ? Number.MAX_SAFE_INTEGER : quantizeMidiTickToPart(noteEvent.midiTick);\n\t\t\t\t\tif (heldPitches.length > 0 && nextEventPart > prevEventPart && (noteEvent == null || noteEvent.on)) {\n\t\t\t\t\t\tconst bar: number = Math.floor(prevEventPart / partsPerBar);\n\t\t\t\t\t\tconst barStartPart: number = bar * partsPerBar;\n\t\t\t\t\t\t// Ensure a pattern exists for the current bar before inserting notes into it.\n\t\t\t\t\t\tif (currentBar != bar || pattern == null) {\n\t\t\t\t\t\t\tcurrentBar++;\n\t\t\t\t\t\t\twhile (currentBar < bar) {\n\t\t\t\t\t\t\t\tchannel.bars[currentBar] = 0;\n\t\t\t\t\t\t\t\tcurrentBar++;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tpattern = new Pattern();\n\t\t\t\t\t\t\tchannel.patterns.push(pattern);\n\t\t\t\t\t\t\tchannel.bars[currentBar] = channel.patterns.length;\n\t\t\t\t\t\t\tpattern.instruments[0] = 0;\n\t\t\t\t\t\t\tpattern.instruments.length = 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t// Use the loudest volume setting for the instrument, since \n\t\t\t\t\t\t// many midis unfortunately use the instrument volume control to fade\n\t\t\t\t\t\t// in at the beginning and we don't want to get stuck with the initial\n\t\t\t\t\t\t// zero volume.\n\t\t\t\t\t\tif (!setInstrumentVolume || instrument.volume > currentInstrumentVolume) {\n\t\t\t\t\t\t\tinstrument.volume = currentInstrumentVolume;\n\t\t\t\t\t\t\tinstrument.pan = currentInstrumentPan;\n\t\t\t\t\t\t\tinstrument.panDelay = 0;\n\t\t\t\t\t\t\tsetInstrumentVolume = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tconst drumFreqs: number[] = [];\n\t\t\t\t\t\tlet minDuration: number = channelMaxPitch;\n\t\t\t\t\t\tlet maxDuration: number = 0;\n\t\t\t\t\t\tlet noteSize: number = 1; // the minimum non-zero note size.\n\t\t\t\t\t\tfor (const pitch of heldPitches) {\n\t\t\t\t\t\t\tconst drum: AnalogousDrum | undefined = analogousDrumMap[pitch];\n\t\t\t\t\t\t\tif (drumFreqs.indexOf(drum.frequency) == -1) {\n\t\t\t\t\t\t\t\tdrumFreqs.push(drum.frequency);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tnoteSize = Math.max(noteSize, Math.round(drum.volume * currentVelocity));\n\t\t\t\t\t\t\tminDuration = Math.min(minDuration, drum.duration);\n\t\t\t\t\t\t\tmaxDuration = Math.max(maxDuration, drum.duration);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst duration: number = Math.min(maxDuration, Math.max(minDuration, 2));\n\t\t\t\t\t\tconst noteStartPart: number = prevEventPart - barStartPart;\n\t\t\t\t\t\tconst noteEndPart: number = Math.min(partsPerBar, Math.min(nextEventPart - barStartPart, noteStartPart + duration * 6));\n\t\t\t\t\t\t\t\n\t\t\t\t\t\tconst note: Note = new Note(-1, noteStartPart, noteEndPart, noteSize, true);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\tnote.pitches.length = 0;\n\t\t\t\t\t\tfor (let pitchIndex: number = 0; pitchIndex < Math.min(Config.maxChordSize, drumFreqs.length); pitchIndex++) {\n\t\t\t\t\t\t\tconst heldPitch: number = drumFreqs[pitchIndex + Math.max(0, drumFreqs.length - Config.maxChordSize)];\n\t\t\t\t\t\t\tif (note.pitches.indexOf(heldPitch) == -1) {\n\t\t\t\t\t\t\t\tnote.pitches.push(heldPitch);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tpattern.notes.push(note);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\theldPitches.length = 0;\n\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t// Process the next midi note event before continuing, updating the list of currently held pitches.\n\t\t\t\t\tif (noteEvent != null && noteEvent.on && analogousDrumMap[noteEvent.pitch] != undefined) {\n\t\t\t\t\t\theldPitches.push(noteEvent.pitch);\n\t\t\t\t\t\tprevEventPart = nextEventPart;\n\t\t\t\t\t\tcurrentVelocity = noteEvent.velocity;\n\t\t\t\t\t\tcurrentInstrumentVolume = noteEvent.instrumentVolume;\n\t\t\t\t\t\tcurrentInstrumentPan = noteEvent.instrumentPan;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// If not a drumset, handle as a tonal instrument.\n\t\t\t\t\t\n\t\t\t\t// Advance the pitch bend and note size timelines to the given midiTick, \n\t\t\t\t// changing the value of currentMidiInterval or currentMidiNoteSize.\n\t\t\t\t// IMPORTANT: These functions can't rewind!\n\t\t\t\tlet currentMidiInterval: number = 0.0;\n\t\t\t\tlet currentMidiNoteSize: number = Config.noteSizeMax;\n\t\t\t\tlet pitchBendEventIndex: number = 0;\n\t\t\t\tlet noteSizeEventIndex: number = 0;\n\t\t\t\tfunction updateCurrentMidiInterval(midiTick: number) {\n\t\t\t\t\twhile (pitchBendEventIndex < pitchBendEvents[midiChannel].length && pitchBendEvents[midiChannel][pitchBendEventIndex].midiTick <= midiTick) {\n\t\t\t\t\t\tcurrentMidiInterval = pitchBendEvents[midiChannel][pitchBendEventIndex].interval;\n\t\t\t\t\t\tpitchBendEventIndex++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfunction updateCurrentMidiNoteSize(midiTick: number) {\n\t\t\t\t\twhile (noteSizeEventIndex < noteSizeEvents[midiChannel].length && noteSizeEvents[midiChannel][noteSizeEventIndex].midiTick <= midiTick) {\n\t\t\t\t\t\tcurrentMidiNoteSize = noteSizeEvents[midiChannel][noteSizeEventIndex].size;\n\t\t\t\t\t\tnoteSizeEventIndex++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\tconst instrumentByProgram: Instrument[] = [];\n\t\t\t\tconst heldPitches: number[] = [];\n\t\t\t\tlet currentBar: number = -1;\n\t\t\t\tlet pattern: Pattern | null = null;\n\t\t\t\tlet prevEventMidiTick: number = 0;\n\t\t\t\tlet prevEventPart: number = 0;\n\t\t\t\tlet pitchSum: number = 0;\n\t\t\t\tlet pitchCount: number = 0;\n\t\t\t\t\t\n\t\t\t\tfor (let noteEvent of noteEvents[midiChannel]) {\n\t\t\t\t\tconst nextEventMidiTick: number = noteEvent.midiTick;\n\t\t\t\t\tconst nextEventPart: number = quantizeMidiTickToPart(nextEventMidiTick);\n\t\t\t\t\t\t\n\t\t\t\t\tif (heldPitches.length > 0 && nextEventPart > prevEventPart) {\n\t\t\t\t\t\t// If there are any pitches held between the previous event and the next\n\t\t\t\t\t\t// event, iterate over all bars covered by this time period, ensure they\n\t\t\t\t\t\t// have a pattern instantiated, and insert notes for these pitches.\n\t\t\t\t\t\tconst startBar: number = Math.floor(prevEventPart / partsPerBar);\n\t\t\t\t\t\tconst endBar: number = Math.ceil(nextEventPart / partsPerBar);\n\t\t\t\t\t\tlet createdNote: boolean = false;\n\t\t\t\t\t\tfor (let bar: number = startBar; bar < endBar; bar++) {\n\t\t\t\t\t\t\tconst barStartPart: number = bar * partsPerBar;\n\t\t\t\t\t\t\tconst barStartMidiTick: number = bar * beatsPerBar * midiTicksPerBeat;\n\t\t\t\t\t\t\tconst barEndMidiTick: number = (bar + 1) * beatsPerBar * midiTicksPerBeat;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tconst noteStartPart: number = Math.max(0, prevEventPart - barStartPart);\n\t\t\t\t\t\t\tconst noteEndPart: number = Math.min(partsPerBar, nextEventPart - barStartPart);\n\t\t\t\t\t\t\tconst noteStartMidiTick: number = Math.max(barStartMidiTick, prevEventMidiTick);\n\t\t\t\t\t\t\tconst noteEndMidiTick: number = Math.min(barEndMidiTick, nextEventMidiTick);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (noteStartPart < noteEndPart) {\n\t\t\t\t\t\t\t\tconst presetValue: number | null = EditorConfig.midiProgramToPresetValue(currentProgram);\n\t\t\t\t\t\t\t\tconst preset: Preset | null = (presetValue == null) ? null : EditorConfig.valueToPreset(presetValue);\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t// Ensure a pattern exists for the current bar before inserting notes into it.\n\t\t\t\t\t\t\t\tif (currentBar != bar || pattern == null) {\n\t\t\t\t\t\t\t\t\tcurrentBar++;\n\t\t\t\t\t\t\t\t\twhile (currentBar < bar) {\n\t\t\t\t\t\t\t\t\t\tchannel.bars[currentBar] = 0;\n\t\t\t\t\t\t\t\t\t\tcurrentBar++;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tpattern = new Pattern();\n\t\t\t\t\t\t\t\t\tchannel.patterns.push(pattern);\n\t\t\t\t\t\t\t\t\tchannel.bars[currentBar] = channel.patterns.length;\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t// If this is the first time a note is trying to use a specific instrument\n\t\t\t\t\t\t\t\t\t// program in this channel, create a new BeepBox instrument for it.\n\t\t\t\t\t\t\t\t\tif (instrumentByProgram[currentProgram] == undefined) {\n\t\t\t\t\t\t\t\t\t\tconst instrument: Instrument = new Instrument(isNoiseChannel, isModChannel);\n\t\t\t\t\t\t\t\t\t\tinstrumentByProgram[currentProgram] = instrument;\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tif (presetValue != null && preset != null && (preset.isNoise == true) == isNoiseChannel) {\n\t\t\t\t\t\t\t\t\t\t\t\tinstrument.fromJsonObject(preset.settings, isNoiseChannel, isModChannel, false, false, 1);\n\t\t\t\t\t\t\t\t\t\t\tinstrument.preset = presetValue;\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tinstrument.setTypeAndReset(isModChannel ? InstrumentType.mod : (isNoiseChannel ? InstrumentType.noise : InstrumentType.chip), isNoiseChannel, isModChannel);\n\t\t\t\t\t\t\t\t\t\t\tinstrument.chord = 0; // Midi instruments use polyphonic harmony by default.\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tinstrument.volume = currentInstrumentVolume;\n\t\t\t\t\t\t\t\t\t\tinstrument.pan = currentInstrumentPan;\n\t\t\t\t\t\t\t\t\t\tinstrument.panDelay = 0;\n\n\t\t\t\t\t\t\t\t\t\tchannel.instruments.push(instrument);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tpattern.instruments[0] = channel.instruments.indexOf(instrumentByProgram[currentProgram]);\n\t\t\t\t\t\t\t\t\tpattern.instruments.length = 1;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t// Use the loudest volume setting for the instrument, since \n\t\t\t\t\t\t\t\t// many midis unfortunately use the instrument volume control to fade\n\t\t\t\t\t\t\t\t// in at the beginning and we don't want to get stuck with the initial\n\t\t\t\t\t\t\t\t// zero volume.\n\t\t\t\t\t\t\t\tif (instrumentByProgram[currentProgram] != undefined) {\n\t\t\t\t\t\t\t\t\tinstrumentByProgram[currentProgram].volume = Math.min(instrumentByProgram[currentProgram].volume, currentInstrumentVolume);\n\t\t\t\t\t\t\t\t\tinstrumentByProgram[currentProgram].pan = Math.min(instrumentByProgram[currentProgram].pan, currentInstrumentPan);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t// Create a new note, and interpret the pitch bend and note size events\n\t\t\t\t\t\t\t\t// to determine where we need to insert pins to control interval and size.\n\t\t\t\t\t\t\t\tconst note: Note = new Note(-1, noteStartPart, noteEndPart, Config.noteSizeMax, false);\n\t\t\t\t\t\t\t\tnote.pins.length = 0;\n\t\t\t\t\t\t\t\tnote.continuesLastPattern = (createdNote && noteStartPart == 0);\n\t\t\t\t\t\t\t\tcreatedNote = true;\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tupdateCurrentMidiInterval(noteStartMidiTick);\n\t\t\t\t\t\t\t\tupdateCurrentMidiNoteSize(noteStartMidiTick);\n\t\t\t\t\t\t\t\tconst shiftedHeldPitch: number = heldPitches[0] * midiIntervalScale - channelBasePitch;\n\t\t\t\t\t\t\t\tconst initialBeepBoxPitch: number = Math.round((shiftedHeldPitch + currentMidiInterval) / intervalScale);\n\t\t\t\t\t\t\t\tconst heldPitchOffset: number = Math.round(currentMidiInterval - channelBasePitch);\n\t\t\t\t\t\t\t\tlet firstPin: NotePin = makeNotePin(0, 0, Math.round(currentVelocity * currentMidiNoteSize));\n\t\t\t\t\t\t\t\tnote.pins.push(firstPin);\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tinterface PotentialPin {\n\t\t\t\t\t\t\t\t\tpart: number;\n\t\t\t\t\t\t\t\t\tpitch: number;\n\t\t\t\t\t\t\t\t\tsize: number;\n\t\t\t\t\t\t\t\t\tkeyPitch: boolean;\n\t\t\t\t\t\t\t\t\tkeySize: boolean;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tconst potentialPins: PotentialPin[] = [\n\t\t\t\t\t\t\t\t\t{part: 0, pitch: initialBeepBoxPitch, size: firstPin.size, keyPitch: false, keySize: false}\n\t\t\t\t\t\t\t\t];\n\t\t\t\t\t\t\t\tlet prevPinIndex: number = 0;\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tlet prevPartPitch: number = (shiftedHeldPitch + currentMidiInterval) / intervalScale;\n\t\t\t\t\t\t\t\tlet prevPartSize: number = currentVelocity * currentMidiNoteSize;\n\t\t\t\t\t\t\t\tfor (let part: number = noteStartPart + 1; part <= noteEndPart; part++) {\n\t\t\t\t\t\t\t\t\tconst midiTick: number = Math.max(noteStartMidiTick, Math.min(noteEndMidiTick - 1, Math.round(midiTicksPerPart * (part + barStartPart))));\n\t\t\t\t\t\t\t\t\tconst noteRelativePart: number = part - noteStartPart;\n\t\t\t\t\t\t\t\t\tconst lastPart: boolean = (part == noteEndPart);\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t// BeepBox can only add pins at whole number intervals and sizes. Detect places where\n\t\t\t\t\t\t\t\t\t// the interval or size are at or cross whole numbers, and add these to the list of\n\t\t\t\t\t\t\t\t\t// potential places to insert pins.\n\t\t\t\t\t\t\t\t\tupdateCurrentMidiInterval(midiTick);\n\t\t\t\t\t\t\t\t\tupdateCurrentMidiNoteSize(midiTick);\n\t\t\t\t\t\t\t\t\tconst partPitch: number = (currentMidiInterval + shiftedHeldPitch) / intervalScale;\n\t\t\t\t\t\t\t\t\tconst partSize: number = currentVelocity * currentMidiNoteSize;\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tconst nearestPitch: number = Math.round(partPitch);\n\t\t\t\t\t\t\t\t\tconst pitchIsNearInteger: boolean = Math.abs(partPitch - nearestPitch) < 0.01;\n\t\t\t\t\t\t\t\t\tconst pitchCrossedInteger: boolean = (Math.abs(prevPartPitch - Math.round(prevPartPitch)) < 0.01)\n\t\t\t\t\t\t\t\t\t\t? Math.abs(partPitch - prevPartPitch) >= 1.0\n\t\t\t\t\t\t\t\t\t\t: Math.floor(partPitch) != Math.floor(prevPartPitch);\n\t\t\t\t\t\t\t\t\tconst keyPitch: boolean = pitchIsNearInteger || pitchCrossedInteger;\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tconst nearestSize: number = Math.round(partSize);\n\t\t\t\t\t\t\t\t\tconst sizeIsNearInteger: boolean = Math.abs(partSize - nearestSize) < 0.01;\n\t\t\t\t\t\t\t\t\tconst sizeCrossedInteger: boolean = (Math.abs(prevPartSize - Math.round(prevPartSize)))\n\t\t\t\t\t\t\t\t\t\t? Math.abs(partSize - prevPartSize) >= 1.0\n\t\t\t\t\t\t\t\t\t\t: Math.floor(partSize) != Math.floor(prevPartSize);\n\t\t\t\t\t\t\t\t\tconst keySize: boolean = sizeIsNearInteger || sizeCrossedInteger;\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tprevPartPitch = partPitch;\n\t\t\t\t\t\t\t\t\tprevPartSize = partSize;\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tif (keyPitch || keySize || lastPart) {\n\t\t\t\t\t\t\t\t\t\tconst currentPin: PotentialPin = {part: noteRelativePart, pitch: nearestPitch, size: nearestSize, keyPitch: keyPitch || lastPart, keySize: keySize || lastPart};\n\t\t\t\t\t\t\t\t\t\tconst prevPin: PotentialPin = potentialPins[prevPinIndex];\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t// At all key points in the list of potential pins, check to see if they\n\t\t\t\t\t\t\t\t\t\t// continue the recent slope. If not, insert a pin at the corner, where\n\t\t\t\t\t\t\t\t\t\t// the recent recorded values deviate the furthest from the slope.\n\t\t\t\t\t\t\t\t\t\tlet addPin: boolean = false;\n\t\t\t\t\t\t\t\t\t\tlet addPinAtIndex: number = Number.MAX_VALUE;\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tif (currentPin.keyPitch) {\n\t\t\t\t\t\t\t\t\t\t\tconst slope: number = (currentPin.pitch - prevPin.pitch) / (currentPin.part - prevPin.part);\n\t\t\t\t\t\t\t\t\t\t\tlet furthestIntervalDistance: number = Math.abs(slope); // minimum distance to make a new pin.\n\t\t\t\t\t\t\t\t\t\t\tlet addIntervalPin: boolean = false;\n\t\t\t\t\t\t\t\t\t\t\tlet addIntervalPinAtIndex: number = Number.MAX_VALUE;\n\t\t\t\t\t\t\t\t\t\t\tfor (let potentialIndex: number = prevPinIndex + 1; potentialIndex < potentialPins.length; potentialIndex++) {\n\t\t\t\t\t\t\t\t\t\t\t\tconst potentialPin: PotentialPin = potentialPins[potentialIndex];\n\t\t\t\t\t\t\t\t\t\t\t\tif (potentialPin.keyPitch) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst interpolatedInterval: number = prevPin.pitch + slope * (potentialPin.part - prevPin.part);\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst distance: number = Math.abs(interpolatedInterval - potentialPin.pitch);\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (furthestIntervalDistance < distance) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfurthestIntervalDistance = distance;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\taddIntervalPin = true;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\taddIntervalPinAtIndex = potentialIndex;\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tif (addIntervalPin) {\n\t\t\t\t\t\t\t\t\t\t\t\taddPin = true;\n\t\t\t\t\t\t\t\t\t\t\t\taddPinAtIndex = Math.min(addPinAtIndex, addIntervalPinAtIndex);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tif (currentPin.keySize) {\n\t\t\t\t\t\t\t\t\t\t\tconst slope: number = (currentPin.size - prevPin.size) / (currentPin.part - prevPin.part);\n\t\t\t\t\t\t\t\t\t\t\tlet furthestSizeDistance: number = Math.abs(slope); // minimum distance to make a new pin.\n\t\t\t\t\t\t\t\t\t\t\tlet addSizePin: boolean = false;\n\t\t\t\t\t\t\t\t\t\t\tlet addSizePinAtIndex: number = Number.MAX_VALUE;\n\t\t\t\t\t\t\t\t\t\t\tfor (let potentialIndex: number = prevPinIndex + 1; potentialIndex < potentialPins.length; potentialIndex++) {\n\t\t\t\t\t\t\t\t\t\t\t\tconst potentialPin: PotentialPin = potentialPins[potentialIndex];\n\t\t\t\t\t\t\t\t\t\t\t\tif (potentialPin.keySize) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst interpolatedSize: number = prevPin.size + slope * (potentialPin.part - prevPin.part);\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst distance: number = Math.abs(interpolatedSize - potentialPin.size);\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (furthestSizeDistance < distance) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfurthestSizeDistance = distance;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\taddSizePin = true;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\taddSizePinAtIndex = potentialIndex;\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tif (addSizePin) {\n\t\t\t\t\t\t\t\t\t\t\t\taddPin = true;\n\t\t\t\t\t\t\t\t\t\t\t\taddPinAtIndex = Math.min(addPinAtIndex, addSizePinAtIndex);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tif (addPin) {\n\t\t\t\t\t\t\t\t\t\t\tconst toBePinned: PotentialPin = potentialPins[addPinAtIndex];\n\t\t\t\t\t\t\t\t\t\t\tnote.pins.push(makeNotePin(toBePinned.pitch - initialBeepBoxPitch, toBePinned.part, toBePinned.size));\n\t\t\t\t\t\t\t\t\t\t\tprevPinIndex = addPinAtIndex;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tpotentialPins.push(currentPin);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t// And always add a pin at the end of the note.\n\t\t\t\t\t\t\t\tconst lastToBePinned: PotentialPin = potentialPins[potentialPins.length - 1];\n\t\t\t\t\t\t\t\tnote.pins.push(makeNotePin(lastToBePinned.pitch - initialBeepBoxPitch, lastToBePinned.part, lastToBePinned.size));\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t// Use interval range to constrain min/max pitches so no pin is out of bounds.\n\t\t\t\t\t\t\t\tlet maxPitch: number = channelMaxPitch;\n\t\t\t\t\t\t\t\tlet minPitch: number = 0;\n\t\t\t\t\t\t\t\tfor (const notePin of note.pins) {\n\t\t\t\t\t\t\t\t\tmaxPitch = Math.min(maxPitch, channelMaxPitch - notePin.interval);\n\t\t\t\t\t\t\t\t\tminPitch = Math.min(minPitch, -notePin.interval);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t// Build the note chord out of the current pitches, shifted into BeepBox channelBasePitch relative values.\n\t\t\t\t\t\t\t\tnote.pitches.length = 0;\n\t\t\t\t\t\t\t\tfor (let pitchIndex: number = 0; pitchIndex < Math.min(Config.maxChordSize, heldPitches.length); pitchIndex++) {\n\t\t\t\t\t\t\t\t\tlet heldPitch: number = heldPitches[pitchIndex + Math.max(0, heldPitches.length - Config.maxChordSize)] * midiIntervalScale;\n\t\t\t\t\t\t\t\t\tif (preset != null && preset.midiSubharmonicOctaves != undefined) {\n\t\t\t\t\t\t\t\t\t\theldPitch -= 12 * preset.midiSubharmonicOctaves;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tconst shiftedPitch: number = Math.max(minPitch, Math.min(maxPitch, Math.round((heldPitch + heldPitchOffset) / intervalScale)));\n\t\t\t\t\t\t\t\t\tif (note.pitches.indexOf(shiftedPitch) == -1) {\n\t\t\t\t\t\t\t\t\t\tnote.pitches.push(shiftedPitch);\n\t\t\t\t\t\t\t\t\t\tconst weight: number = note.end - note.start;\n\t\t\t\t\t\t\t\t\t\tpitchSum += shiftedPitch * weight;\n\t\t\t\t\t\t\t\t\t\tpitchCount += weight;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tpattern.notes.push(note);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t// Process the next midi note event before continuing, updating the list of currently held pitches.\n\t\t\t\t\tif (heldPitches.indexOf(noteEvent.pitch) != -1) {\n\t\t\t\t\t\theldPitches.splice(heldPitches.indexOf(noteEvent.pitch), 1);\n\t\t\t\t\t}\n\t\t\t\t\tif (noteEvent.on) {\n\t\t\t\t\t\theldPitches.push(noteEvent.pitch);\n\t\t\t\t\t\tcurrentVelocity = noteEvent.velocity;\n\t\t\t\t\t\tcurrentProgram = noteEvent.program;\n\t\t\t\t\t\tcurrentInstrumentVolume = noteEvent.instrumentVolume;\n\t\t\t\t\t\tcurrentInstrumentPan = noteEvent.instrumentPan;\n\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\tprevEventMidiTick = nextEventMidiTick;\n\t\t\t\t\tprevEventPart = nextEventPart;\n\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\tconst averagePitch: number = pitchSum / pitchCount;\n\t\t\t\t\tchannel.octave = (isNoiseChannel || isModChannel) ? 0 : Math.max(0, Math.min(Config.pitchOctaves - 1, Math.floor((averagePitch / 12))));\n\t\t\t}\n\t\t\t\t\t\n\t\t\twhile (channel.bars.length < songTotalBars) {\n\t\t\t\tchannel.bars.push(0);\n\t\t\t}\n\t\t}\n\t\t\t\n\t\t// For better or for worse, BeepBox has a more limited number of channels than Midi.\n\t\t// To compensate, try to merge non-overlapping channels.\n\t\tfunction compactChannels(channels: Channel[], maxLength: number): void {\n\t\t\twhile (channels.length > maxLength) {\n\t\t\t\tlet bestChannelIndexA: number = channels.length - 2;\n\t\t\t\tlet bestChannelIndexB: number = channels.length - 1;\n\t\t\t\tlet fewestConflicts: number = Number.MAX_VALUE;\n\t\t\t\tlet fewestGaps: number = Number.MAX_VALUE;\n\t\t\t\tfor (let channelIndexA: number = 0; channelIndexA < channels.length - 1; channelIndexA++) {\n\t\t\t\t\tfor (let channelIndexB: number = channelIndexA + 1; channelIndexB < channels.length; channelIndexB++) {\n\t\t\t\t\t\tconst channelA: Channel = channels[channelIndexA];\n\t\t\t\t\t\tconst channelB: Channel = channels[channelIndexB];\n\t\t\t\t\t\tlet conflicts: number = 0;\n\t\t\t\t\t\tlet gaps: number = 0;\n\t\t\t\t\t\tfor (let barIndex: number = 0; barIndex < channelA.bars.length && barIndex < channelB.bars.length; barIndex++) {\n\t\t\t\t\t\t\tif (channelA.bars[barIndex] != 0 && channelB.bars[barIndex] != 0) conflicts++;\n\t\t\t\t\t\t\tif (channelA.bars[barIndex] == 0 && channelB.bars[barIndex] == 0) gaps++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (conflicts <= fewestConflicts) {\n\t\t\t\t\t\t\tif (conflicts < fewestConflicts || gaps < fewestGaps) {\n\t\t\t\t\t\t\t\tbestChannelIndexA = channelIndexA;\n\t\t\t\t\t\t\t\tbestChannelIndexB = channelIndexB;\n\t\t\t\t\t\t\t\tfewestConflicts = conflicts;\n\t\t\t\t\t\t\t\tfewestGaps = gaps;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t// Merge channelB's patterns, instruments, and bars into channelA.\n\t\t\t\tconst channelA: Channel = channels[bestChannelIndexA];\n\t\t\t\tconst channelB: Channel = channels[bestChannelIndexB];\n\t\t\t\tconst channelAInstrumentCount: number = channelA.instruments.length;\n\t\t\t\tconst channelAPatternCount: number = channelA.patterns.length;\n\t\t\t\tfor (const instrument of channelB.instruments) {\n\t\t\t\t\tchannelA.instruments.push(instrument);\n\t\t\t\t}\n\t\t\t\tfor (const pattern of channelB.patterns) {\n\t\t\t\t\tpattern.instruments[0] += channelAInstrumentCount;\n\t\t\t\t\tchannelA.patterns.push(pattern);\n\t\t\t\t}\n\t\t\t\tfor (let barIndex: number = 0; barIndex < channelA.bars.length && barIndex < channelB.bars.length; barIndex++) {\n\t\t\t\t\tif (channelA.bars[barIndex] == 0 && channelB.bars[barIndex] != 0) {\n\t\t\t\t\t\tchannelA.bars[barIndex] = channelB.bars[barIndex] + channelAPatternCount;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t// Remove channelB.\n\t\t\t\tchannels.splice(bestChannelIndexB, 1);\n\t\t\t}\n\t\t}\n\t\t\t\n\t\tcompactChannels(pitchChannels, Config.pitchChannelCountMax);\n\t\tcompactChannels(noiseChannels, Config.noiseChannelCountMax);\n\t\tcompactChannels(modChannels, Config.modChannelCountMax);\n\t\t\t\n\t\tclass ChangeImportMidi extends ChangeGroup {\n\t\t\tconstructor(doc: SongDocument) {\n\t\t\t\tsuper();\n\t\t\t\tconst song: Song = doc.song;\n\t\t\t\tsong.tempo = beatsPerMinute;\n\t\t\t\tsong.beatsPerBar = beatsPerBar;\n\t\t\t\tsong.key = key;\n\t\t\t\tsong.scale = 11;\n\t\t\t\tsong.rhythm = 1;\n\t\t\t\tsong.layeredInstruments = false;\n\t\t\t\tsong.patternInstruments = pitchChannels.some(channel => channel.instruments.length > 1) || noiseChannels.some(channel => channel.instruments.length > 1);\n\t\t\t\t\t\n\t\t\t\tremoveDuplicatePatterns(pitchChannels);\n\t\t\t\tremoveDuplicatePatterns(noiseChannels);\n\t\t\t\tremoveDuplicatePatterns(modChannels);\n\t\t\t\t\t\n\t\t\t\tthis.append(new ChangeReplacePatterns(doc, pitchChannels, noiseChannels, modChannels));\n\t\t\t\tsong.loopStart = 0;\n\t\t\t\tsong.loopLength = song.barCount;\n\t\t\t\tthis._didSomething();\n\t\t\t\tdoc.notifier.changed();\n\t\t\t}\n\t\t}\n\t\tthis._doc.goBackToStart();\n\t\tfor (const channel of this._doc.song.channels) channel.muted = false;\n\t\tthis._doc.prompt = null;\n\t\tthis._doc.record(new ChangeImportMidi(this._doc), true, true);\n\t}\n}\n\n","// Copyright (C) 2021 John Nesky, distributed under the MIT license.\n\nimport {Pattern} from \"../synth/synth\";\nimport {ColorConfig, ChannelColors} from \"./ColorConfig\";\nimport {SongDocument} from \"./SongDocument\";\nimport {HTML} from \"imperative-html/dist/esm/elements-strict\";\n\nexport class Box {\n\tprivate readonly _text: Text = document.createTextNode(\"\");\n\tprivate readonly _label: HTMLElement = HTML.div({class: \"channelBoxLabel\"}, this._text);\n\tpublic readonly container: HTMLElement = HTML.div({class: \"channelBox\", style: `margin: 1px; height: ${ChannelRow.patternHeight - 2}px;`}, this._label);\n\tprivate _renderedIndex: number = -1;\n    private _renderedLabelColor: string = \"?\";\n    private _renderedBackgroundColor: string = \"?\";\n\tconstructor(channel: number, color: string) {\n\t\tthis.container.style.background = ColorConfig.uiWidgetBackground;\n\t\tthis._label.style.color = color;\n\t}\n\t\n\tpublic setWidth(width: number): void {\n\t\tthis.container.style.width = (width - 2) + \"px\"; // there's a 1 pixel margin on either side.\n\t}\n\n\tpublic setHeight(height: number): void {\n\t\tthis.container.style.height = (height - 2) + \"px\"; // there's a 1 pixel margin on either side.\n\t}\n\t\n\tpublic setIndex(index: number, selected: boolean, dim: boolean, color: string, isNoise: boolean, isMod: boolean): void {\n\t\tif (this._renderedIndex != index) {\t\t\t\n\t\t\tif (index >= 100) {\n\t\t\t\tthis._label.setAttribute(\"font-size\", \"16\");\n\t\t\t\tthis._label.style.setProperty(\"transform\", \"translate(0px, -1.5px)\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._label.setAttribute(\"font-size\", \"20\");\n\t\t\t\tthis._label.style.setProperty(\"transform\", \"translate(0px, 0px)\");\n\t\t\t}\n\n\t\t\tthis._renderedIndex = index;\n\t\t\tthis._text.data = String(index);\n\t\t}\n\t\tlet useColor: string = selected ? ColorConfig.c_invertedText : color;\n\t\tif (this._renderedLabelColor != useColor) {\n\t\t\tthis._label.style.color = useColor;\n\t\t\tthis._renderedLabelColor = useColor;\n\t\t}\n\t\tif (!selected) {\n\t\t\tif (isNoise)\n\t\t\t\tcolor = dim ? ColorConfig.c_trackEditorBgNoiseDim : ColorConfig.c_trackEditorBgNoise;\n\t\t\telse if (isMod)\n\t\t\t\tcolor = dim ? ColorConfig.c_trackEditorBgModDim : ColorConfig.c_trackEditorBgMod;\n\t\t\telse\n\t\t\t\tcolor = dim ? ColorConfig.c_trackEditorBgPitchDim : ColorConfig.c_trackEditorBgPitch;\n\t\t}\n\t\tcolor = selected ? color : (index == 0) ? \"none\" : color;\n\t\tif (this._renderedBackgroundColor != color) {\n\t\t\tthis.container.style.background = color;\n\t\t\tthis._renderedBackgroundColor = color;\n\t\t}\n\t}\n}\n\nexport class ChannelRow {\n\tpublic static patternHeight: number = 28;\n\t\n\tprivate _renderedBarWidth: number = -1;\n\tprivate _renderedBarHeight: number = -1;\n\tprivate _boxes: Box[] = [];\n\t\n\tpublic readonly container: HTMLElement = HTML.div({class: \"channelRow\"});\n\t\n\tconstructor(private readonly _doc: SongDocument, public readonly index: number) {}\n\t\n\tpublic render(): void {\n\t\tChannelRow.patternHeight = this._doc.getChannelHeight();\n\n\t\tconst barWidth: number = this._doc.getBarWidth();\n\t\tif (this._boxes.length != this._doc.song.barCount) {\n\t\t\tfor (let x: number = this._boxes.length; x < this._doc.song.barCount; x++) {\n\t\t\t\tconst box: Box = new Box(this.index, ColorConfig.getChannelColor(this._doc.song, this.index).secondaryChannel);\n\t\t\t\tbox.setWidth(barWidth);\n\t\t\t\tthis.container.appendChild(box.container);\n\t\t\t\tthis._boxes[x] = box;\n\t\t\t}\n\t\t\tfor (let x: number = this._doc.song.barCount; x < this._boxes.length; x++) {\n\t\t\t\tthis.container.removeChild(this._boxes[x].container);\n\t\t\t}\n\t\t\tthis._boxes.length = this._doc.song.barCount;\n\t\t}\n\t\t\n\t\tif (this._renderedBarWidth != barWidth) {\n\t\t\tthis._renderedBarWidth = barWidth;\n\t\t\tfor (let x: number = 0; x < this._boxes.length; x++) {\n\t\t\t\tthis._boxes[x].setWidth(barWidth);\n\t\t\t}\n\t\t}\n\n\t\tif (this._renderedBarHeight != ChannelRow.patternHeight) {\n\t\t\tthis._renderedBarHeight = ChannelRow.patternHeight;\n\t\t\tfor (let x: number = 0; x < this._boxes.length; x++) {\n\t\t\t\tthis._boxes[x].setHeight(ChannelRow.patternHeight);\n\t\t\t}\n\t\t}\n\t\t\n\t\tfor (let i: number = 0; i < this._boxes.length; i++) {\n\t\t\tconst pattern: Pattern | null = this._doc.song.getPattern(this.index, i);\n\t\t\tconst selected: boolean = (i == this._doc.bar && this.index == this._doc.channel);\n\t\t\tconst dim: boolean = (pattern == null || pattern.notes.length == 0);\n\t\t\t\n\t\t\tconst box: Box = this._boxes[i];\n\t\t\tif (i < this._doc.song.barCount) {\n\t\t\t\tconst colors: ChannelColors = ColorConfig.getChannelColor(this._doc.song, this.index);\n\t\t\t\tbox.setIndex(this._doc.song.channels[this.index].bars[i], selected, dim, dim && !selected ? colors.secondaryChannel : colors.primaryChannel,\n\t\t\t\t\tthis.index >= this._doc.song.pitchChannelCount && this.index < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount, this.index >= this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount);\n\t\t\t\tbox.container.style.visibility = \"visible\";\n\t\t\t} else {\n\t\t\t\tbox.container.style.visibility = \"hidden\";\n\t\t\t}\n\t\t\tif (i == this._doc.synth.loopBarStart) {\n\t\t\t\tbox.container.style.setProperty(\"border-left\", `1px dashed ${ColorConfig.uiWidgetFocus}`);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbox.container.style.setProperty(\"border-left\", \"none\");\n            }\n\t\t\tif (i == this._doc.synth.loopBarEnd) {\n\t\t\t\tbox.container.style.setProperty(\"border-right\", `1px dashed ${ColorConfig.uiWidgetFocus}`);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbox.container.style.setProperty(\"border-right\", \"none\");\n            }\n\t\t}\n\t}\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nimport {SongDocument} from \"./SongDocument\";\nimport {Layout} from \"./Layout\";\nimport {Prompt} from \"./Prompt\";\nimport {HTML, SVG} from \"imperative-html/dist/esm/elements-strict\";\n\nconst {button, label, div, form, h2, input} = HTML;\n\nexport class LayoutPrompt implements Prompt {\n\tprivate readonly _fileInput: HTMLInputElement = input({type: \"file\", accept: \".json,application/json,.mid,.midi,audio/midi,audio/x-midi\"});\n\tprivate readonly _okayButton: HTMLButtonElement = button({class: \"okayButton\", style: \"width:45%;\"}, \"Okay\");\n\tprivate readonly _cancelButton: HTMLButtonElement = button({class: \"cancelButton\"});\n\tprivate readonly _form: HTMLFormElement = form({style: \"display: flex; gap: 10px;\"},\n\t\t\tlabel({class: \"layout-option\"},\n\t\t\t\tinput({type: \"radio\", name: \"layout\", value: \"small\"}),\n\t\t\t\tSVG(`\\\n\t\t\t\t\t<svg viewBox=\"-4 -1 28 22\">\n\t\t\t\t\t\t<rect x=\"0\" y=\"0\" width=\"20\" height=\"20\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"1\"/>\n\t\t\t\t\t\t<rect x=\"2\" y=\"2\" width=\"11\" height=\"10\" fill=\"currentColor\"/>\n\t\t\t\t\t\t<rect x=\"14\" y=\"2\" width=\"4\" height=\"16\" fill=\"currentColor\"/>\n\t\t\t\t\t\t<rect x=\"2\" y=\"13\" width=\"11\" height=\"5\" fill=\"currentColor\"/>\n\t\t\t\t\t</svg>\n\t\t\t\t`),\n\t\t\t\tdiv(\"Small\"),\n\t\t\t),\n\t\t\tlabel({class: \"layout-option\"},\n\t\t\t\tinput({type: \"radio\", name: \"layout\", value: \"long\"}),\n\t\t\t\tSVG(`\\\n\t\t\t\t\t<svg viewBox=\"-1 -1 28 22\">\n\t\t\t\t\t\t<rect x=\"0\" y=\"0\" width=\"26\" height=\"20\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"1\"/>\n\t\t\t\t\t\t<rect x=\"2\" y=\"2\" width=\"12\" height=\"10\" fill=\"currentColor\"/>\n\t\t\t\t\t\t<rect x=\"15\" y=\"2\" width=\"4\" height=\"10\" fill=\"currentColor\"/>\n\t\t\t\t\t\t<rect x=\"20\" y=\"2\" width=\"4\" height=\"10\" fill=\"currentColor\"/>\n\t\t\t\t\t\t<rect x=\"2\" y=\"13\" width=\"22\" height=\"5\" fill=\"currentColor\"/>\n\t\t\t\t\t</svg>\n\t\t\t\t`),\n\t\t\t\tdiv(\"Long\"),\n\t\t\t),\n\t\t\tlabel({class: \"layout-option\"},\n\t\t\t\tinput({type: \"radio\", name: \"layout\", value: \"tall\"}),\n\t\t\t\tSVG(`\\\n\t\t\t\t\t<svg viewBox=\"-1 -1 28 22\">\n\t\t\t\t\t\t<rect x=\"0\" y=\"0\" width=\"26\" height=\"20\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"1\"/>\n\t\t\t\t\t\t<rect x=\"11\" y=\"2\" width=\"8\" height=\"16\" fill=\"currentColor\"/>\n\t\t\t\t\t\t<rect x=\"20\" y=\"2\" width=\"4\" height=\"16\" fill=\"currentColor\"/>\n\t\t\t\t\t\t<rect x=\"2\" y=\"2\" width=\"8\" height=\"16\" fill=\"currentColor\"/>\n\t\t\t\t\t</svg>\n\t\t\t\t`),\n\t\t\t\tdiv(\"Tall\"),\n\t\t\t),\n\t\t\tlabel({class: \"layout-option\"},\n\t\t\t\tinput({type: \"radio\", name: \"layout\", value: \"wide\"}),\n\t\t\t\tSVG(`\\\n\t\t\t\t\t<svg viewBox=\"-1 -1 28 22\">\n\t\t\t\t\t\t<rect x=\"0\" y=\"0\" width=\"26\" height=\"20\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"1\"/>\n\t\t\t\t\t\t<rect x=\"2\" y=\"2\" width=\"4\" height=\"16\" fill=\"currentColor\"/>\n\t\t\t\t\t\t<rect x=\"18\" y=\"2\" width=\"2.5\" height=\"16\" fill=\"currentColor\"/>\n\t\t\t\t\t\t<rect x=\"21.5\" y=\"2\" width=\"2.5\" height=\"16\" fill=\"currentColor\"/>\n\t\t\t\t\t\t<rect x=\"7\" y=\"2\" width=\"10\" height=\"16\" fill=\"currentColor\"/>\n\t\t\t\t\t</svg>\n\t\t\t\t`),\n\t\t\t\tdiv(\"Wide (JB)\"),\n\t\t\t),\n\t\t);\n\t\n\tpublic readonly container: HTMLDivElement = div({class: \"prompt noSelection\", style: \"width: 300px;\"},\n\t\th2(\"Layout\"),\n\t\tthis._form,\n\t\tdiv({style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\"},\n\t\t\tthis._okayButton,\n\t\t),\n\t\tthis._cancelButton,\n\t);\n\t\n\tconstructor(private _doc: SongDocument) {\n\t\tthis._fileInput.select();\n\t\tsetTimeout(()=>this._fileInput.focus());\n\t\t\n\t\tthis._okayButton.addEventListener(\"click\", this._confirm);\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\n\t\tthis.container.addEventListener(\"keydown\", this._whenKeyPressed);\n\t\t\n\t\t(<any> this._form.elements)[\"layout\"].value = this._doc.prefs.layout;\n\t}\n\t\n\tprivate _close = (): void => { \n\t\tthis._doc.undo();\n\t}\n\t\n\tpublic cleanUp = (): void => { \n\t\tthis._okayButton.removeEventListener(\"click\", this._confirm);\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\n\t\tthis.container.removeEventListener(\"keydown\", this._whenKeyPressed);\n\t}\n\t\n\tprivate _whenKeyPressed = (event: KeyboardEvent): void => {\n\t\tif ((<Element> event.target).tagName != \"BUTTON\" && event.keyCode == 13) { // Enter key\n\t\t\tthis._confirm();\n\t\t}\n\t}\n\t\n\tprivate _confirm = (): void => { \n\t\tthis._doc.prefs.layout = (<any> this._form.elements)[\"layout\"].value;\n\t\tthis._doc.prefs.save();\n\t\tLayout.setLayout(this._doc.prefs.layout);\n\t\tthis._close();\n\t}\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nimport {InstrumentType, Config} from \"../synth/SynthConfig\";\nimport {Instrument} from \"../synth/synth\";\nimport {SongDocument} from \"./SongDocument\";\nimport {ChangeSetEnvelopeTarget, ChangeSetEnvelopeType, ChangeRemoveEnvelope} from \"./changes\";\nimport {HTML} from \"imperative-html/dist/esm/elements-strict\";\n\nexport class EnvelopeEditor {\n\tpublic readonly container: HTMLElement = HTML.div({class: \"envelopeEditor\"});\n\t\n\tprivate readonly _rows: HTMLDivElement[] = [];\n\tprivate readonly _targetSelects: HTMLSelectElement[] = [];\n\tprivate readonly _envelopeSelects: HTMLSelectElement[] = [];\n\tprivate readonly _deleteButtons: HTMLButtonElement[] = [];\n\tprivate _renderedEnvelopeCount: number = 0;\n\tprivate _renderedEqFilterCount: number = -1;\n\tprivate _renderedNoteFilterCount: number = -1;\n\tprivate _renderedInstrumentType: InstrumentType;\n\tprivate _renderedEffects: number = 0;\n\t\n\tconstructor(private _doc: SongDocument) {\n\t\tthis.container.addEventListener(\"change\", this._onChange);\n\t\tthis.container.addEventListener(\"click\", this._onClick);\n\t}\n\t\n\tprivate _onChange = (event: Event): void => {\n\t\tconst targetSelectIndex: number = this._targetSelects.indexOf(<any> event.target);\n\t\tconst envelopeSelectIndex: number = this._envelopeSelects.indexOf(<any> event.target);\n\t\tif (targetSelectIndex != -1) {\n\t\t\tconst combinedValue: number = parseInt(this._targetSelects[targetSelectIndex].value);\n\t\t\tconst target: number = combinedValue % Config.instrumentAutomationTargets.length;\n\t\t\tconst index: number = (combinedValue / Config.instrumentAutomationTargets.length) >>> 0;\n\t\t\tthis._doc.record(new ChangeSetEnvelopeTarget(this._doc, targetSelectIndex, target, index));\n\t\t} else if (envelopeSelectIndex != -1) {\n\t\t\tthis._doc.record(new ChangeSetEnvelopeType(this._doc, envelopeSelectIndex, this._envelopeSelects[envelopeSelectIndex].selectedIndex));\n\t\t}\n\t}\n\t\n\tprivate _onClick = (event: MouseEvent): void => {\n\t\tconst index: number = this._deleteButtons.indexOf(<any> event.target);\n\t\tif (index != -1) {\n\t\t\tthis._doc.record(new ChangeRemoveEnvelope(this._doc, index));\n\t\t}\n\t}\n\t\n\tprivate _makeOption(target: number, index: number): HTMLOptionElement {\n\t\tlet displayName = Config.instrumentAutomationTargets[target].displayName;\n\t\tif (Config.instrumentAutomationTargets[target].maxCount > 1) {\n\t\t\tif (displayName.indexOf(\"#\") != -1) {\n\t\t\t\tdisplayName = displayName.replace(\"#\", String(index+1));\n\t\t\t} else {\n\t\t\t\tdisplayName += \" \" + (index+1);\n\t\t\t}\n\t\t}\n\t\treturn HTML.option({value: target + index * Config.instrumentAutomationTargets.length}, displayName);\n\t}\n\t\n\tprivate _updateTargetOptionVisibility(menu: HTMLSelectElement, instrument: Instrument): void {\n\t\tfor (let optionIndex: number = 0; optionIndex < menu.childElementCount; optionIndex++) {\n\t\t\tconst option: HTMLOptionElement = <HTMLOptionElement> menu.children[optionIndex];\n\t\t\tconst combinedValue: number = parseInt(option.value);\n\t\t\tconst target: number = combinedValue % Config.instrumentAutomationTargets.length;\n\t\t\tconst index: number = (combinedValue / Config.instrumentAutomationTargets.length) >>> 0;\n\t\t\toption.hidden = !instrument.supportsEnvelopeTarget(target, index);\n\t\t}\n\t}\n\t\n\tpublic render(): void {\n\t\tconst instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\n\t\t\n\t\tfor (let envelopeIndex: number = this._rows.length; envelopeIndex < instrument.envelopeCount; envelopeIndex++) {\n\t\t\tconst targetSelect: HTMLSelectElement = HTML.select();\n\t\t\tfor (let target: number = 0; target < Config.instrumentAutomationTargets.length; target++) {\n\t\t\t\tconst interleaved: boolean = (Config.instrumentAutomationTargets[target].interleave);\n\t\t\t\tfor (let index: number = 0; index < Config.instrumentAutomationTargets[target].maxCount; index++) {\n\t\t\t\t\ttargetSelect.appendChild(this._makeOption(target, index));\n\t\t\t\t\tif (interleaved) {\n\t\t\t\t\t\ttargetSelect.appendChild(this._makeOption(target + 1, index));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (interleaved) target++;\n\t\t\t}\n\t\t\t\n\t\t\tconst envelopeSelect: HTMLSelectElement = HTML.select();\n\t\t\tfor (let envelope: number = 0; envelope < Config.envelopes.length; envelope++) {\n\t\t\t\tenvelopeSelect.appendChild(HTML.option({value: envelope}, Config.envelopes[envelope].name));\n\t\t\t} \n\t\t\t\n\t\t\tconst deleteButton: HTMLButtonElement = HTML.button({type: \"button\", class: \"delete-envelope\"});\n\t\t\t\n\t\t\tconst row: HTMLDivElement = HTML.div({class: \"envelope-row\"},\n\t\t\t\tHTML.div({class: \"selectContainer\", style: \"width: 0; flex: 1;\"}, targetSelect),\n\t\t\t\tHTML.div({class: \"selectContainer\", style: \"width: 0; flex: 0.7;\"}, envelopeSelect),\n\t\t\t\tdeleteButton,\n\t\t\t);\n\t\t\t\n\t\t\tthis.container.appendChild(row);\n\t\t\tthis._rows[envelopeIndex] = row;\n\t\t\tthis._targetSelects[envelopeIndex] = targetSelect;\n\t\t\tthis._envelopeSelects[envelopeIndex] = envelopeSelect;\n\t\t\tthis._deleteButtons[envelopeIndex] = deleteButton;\n\t\t}\n\t\t\n\t\tfor (let envelopeIndex: number = this._renderedEnvelopeCount; envelopeIndex < instrument.envelopeCount; envelopeIndex++) {\n\t\t\tthis._rows[envelopeIndex].style.display = \"\";\n\t\t\t// For newly visible rows, update target option visibiliy.\n\t\t\tthis._updateTargetOptionVisibility(this._targetSelects[envelopeIndex], instrument);\n\t\t}\n\t\t\n\t\tfor (let envelopeIndex: number = instrument.envelopeCount; envelopeIndex < this._renderedEnvelopeCount; envelopeIndex++) {\n\t\t\tthis._rows[envelopeIndex].style.display = \"none\";\n\t\t}\n\n\t\tlet useControlPointCount: number = instrument.noteFilter.controlPointCount;\n\t\tif (instrument.noteFilterType)\n\t\t\tuseControlPointCount = 1;\n\t\t\n\t\tif (this._renderedEqFilterCount != instrument.eqFilter.controlPointCount ||\n\t\t\tthis._renderedNoteFilterCount != useControlPointCount ||\n\t\t\tthis._renderedInstrumentType != instrument.type ||\n\t\t\tthis._renderedEffects != instrument.effects)\n\t\t{\n\t\t\t// Update target option visibility for previously visible rows.\n\t\t\tfor (let envelopeIndex: number = 0; envelopeIndex < this._renderedEnvelopeCount; envelopeIndex++) {\n\t\t\t\tthis._updateTargetOptionVisibility(this._targetSelects[envelopeIndex], instrument);\n\t\t\t}\n\t\t}\n\t\t\n\t\tfor (let envelopeIndex: number = 0; envelopeIndex < instrument.envelopeCount; envelopeIndex++) {\n\t\t\tthis._targetSelects[envelopeIndex].value = String(instrument.envelopes[envelopeIndex].target + instrument.envelopes[envelopeIndex].index * Config.instrumentAutomationTargets.length);\n\t\t\tthis._envelopeSelects[envelopeIndex].selectedIndex = instrument.envelopes[envelopeIndex].envelope;\n\t\t}\n\t\t\n\t\tthis._renderedEnvelopeCount = instrument.envelopeCount;\n\t\tthis._renderedEqFilterCount = instrument.eqFilter.controlPointCount;\n\t\tthis._renderedNoteFilterCount = useControlPointCount;\n\t\tthis._renderedInstrumentType = instrument.type;\n\t\tthis._renderedEffects = instrument.effects;\n\t}\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nimport {Config} from \"../synth/SynthConfig\";\nimport {clamp, Instrument, Synth} from \"../synth/synth\";\nimport {SongDocument} from \"./SongDocument\";\nimport {HTML, SVG} from \"imperative-html/dist/esm/elements-strict\";\nimport {ColorConfig} from \"./ColorConfig\";\nimport {ChangeSequence, UndoableChange} from \"./Change\";\nimport {ChangeFadeInOut} from \"./changes\";\n\nexport class FadeInOutEditor {\n\tprivate readonly _editorWidth: number = 120;\n\tprivate readonly _editorHeight: number = 26;\n\tprivate readonly _fadeCurve: SVGPathElement = SVG.path({fill: ColorConfig.uiWidgetBackground, \"pointer-events\": \"none\"});\n\tprivate readonly _dottedLinePath: SVGPathElement = SVG.path({fill: \"none\", stroke: \"currentColor\", \"stroke-width\": 1, \"stroke-dasharray\": \"3, 2\", \"pointer-events\": \"none\"});\n\tprivate readonly _controlCurve: SVGPathElement = SVG.path({fill: \"none\", stroke: \"currentColor\", \"stroke-width\": 2, \"pointer-events\": \"none\"});\n\tprivate readonly _svg: SVGSVGElement = SVG.svg({style: `background-color: ${ColorConfig.editorBackground}; touch-action: none; cursor: crosshair;`, width: \"100%\", height: \"100%\", viewBox: \"0 0 \"+this._editorWidth+\" \"+this._editorHeight, preserveAspectRatio: \"none\"},\n\t\tthis._fadeCurve,\n\t\tthis._dottedLinePath,\n\t\tthis._controlCurve,\n\t);\n\tpublic readonly container: HTMLElement = HTML.div({class: \"fadeInOut\", style: \"height: 100%;\"}, this._svg);\n\t\n\tprivate _mouseX: number = 0;\n\tprivate _mouseXStart: number = 0;\n\tprivate _mouseDown: boolean = false;\n\tprivate _mouseDragging: boolean = false;\n\tprivate _draggingFadeIn: boolean = false;\n\tprivate _dragChange: UndoableChange | null = null;\n\tprivate _renderedFadeIn: number = -1;\n\tprivate _renderedFadeOut: number = -1;\n\t\n\tconstructor(private _doc: SongDocument) {\n\t\tconst dottedLineX: number = this._fadeOutToX(Config.fadeOutNeutral);\n\t\tthis._dottedLinePath.setAttribute(\"d\", `M ${dottedLineX} 0 L ${dottedLineX} ${this._editorHeight}`);\n\t\t\n\t\tthis.container.addEventListener(\"mousedown\", this._whenMousePressed);\n\t\tdocument.addEventListener(\"mousemove\", this._whenMouseMoved);\n\t\tdocument.addEventListener(\"mouseup\", this._whenCursorReleased);\n\t\tthis.container.addEventListener(\"touchstart\", this._whenTouchPressed);\n\t\tthis.container.addEventListener(\"touchmove\", this._whenTouchMoved);\n\t\tthis.container.addEventListener(\"touchend\", this._whenCursorReleased);\n\t\tthis.container.addEventListener(\"touchcancel\", this._whenCursorReleased);\n\t}\n\t\n\tprivate _fadeInToX(fadeIn: number) {\n\t\treturn 1.0 + (this._editorWidth - 2.0) * 0.4 * fadeIn / (Config.fadeInRange - 1);\n\t}\n\tprivate _xToFadeIn(x: number) {\n\t\treturn clamp(0, Config.fadeInRange, Math.round((x - 1.0) * (Config.fadeInRange - 1) / (0.4 * this._editorWidth - 2.0)));\n\t}\n\tprivate _fadeOutToX(fadeOut: number) {\n\t\treturn 1.0 + (this._editorWidth - 2.0) * (0.5 + 0.5 * fadeOut / (Config.fadeOutTicks.length - 1));\n\t}\n\tprivate _xToFadeOut(x: number) {\n\t\treturn clamp(0, Config.fadeOutTicks.length, Math.round((Config.fadeOutTicks.length - 1) * ((x - 1.0) / (this._editorWidth - 2.0) - 0.5) / 0.5));\n\t}\n\t\n\tprivate _whenMousePressed = (event: MouseEvent): void => {\n\t\tevent.preventDefault();\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\n\t\tthis._mouseX = ((event.clientX || event.pageX) - boundingRect.left);\n\t\tthis._whenCursorPressed();\n\t}\n\t\n\tprivate _whenTouchPressed = (event: TouchEvent): void => {\n\t\tevent.preventDefault();\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\n\t\tthis._mouseX = (event.touches[0].clientX - boundingRect.left);\n\t\tthis._whenCursorPressed();\n\t}\n\t\n\tprivate _whenCursorPressed(): void {\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\n\t\tthis._mouseXStart = this._mouseX;\n\t\tthis._mouseDown = true;\n\t\tthis._mouseDragging = false;\n\t\tconst instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\n\t\tconst fadeInX: number = this._fadeInToX(instrument.fadeIn);\n\t\tconst fadeOutX: number = this._fadeOutToX(instrument.fadeOut);\n\t\tthis._draggingFadeIn = this._mouseXStart < (fadeInX + fadeOutX) / 2.0;\n\t\tthis._dragChange = new ChangeSequence();\n\t\tthis._doc.setProspectiveChange(this._dragChange);\n\t}\n\t\n\tprivate _whenMouseMoved = (event: MouseEvent): void => {\n\t\tif (this.container.offsetParent == null) return;\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\n\t\tthis._mouseX = ((event.clientX || event.pageX) - boundingRect.left);\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\n\t\tthis._whenCursorMoved();\n\t}\n\t\n\tprivate _whenTouchMoved = (event: TouchEvent): void => {\n\t\tif (this.container.offsetParent == null) return;\n\t\tif (!this._mouseDown) return;\n\t\tevent.preventDefault();\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\n\t\tthis._mouseX = (event.touches[0].clientX - boundingRect.left);\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\n\t\tthis._whenCursorMoved();\n\t}\n\t\n\tprivate _whenCursorMoved(): void {\n\t\tif (this._dragChange != null && this._doc.lastChangeWas(this._dragChange)) {\n\t\t\tthis._dragChange.undo();\n\t\t} else {\n\t\t\tthis._mouseDown = false;\n\t\t}\n\t\tthis._dragChange = null;\n\t\t\n\t\tif (this._mouseDown) {\n\t\t\tconst sequence: ChangeSequence = new ChangeSequence();\n\t\t\tthis._dragChange = sequence;\n\t\t\tthis._doc.setProspectiveChange(this._dragChange);\n\t\t\t\n\t\t\tif (Math.abs(this._mouseX - this._mouseXStart) > 4.0) {\n\t\t\t\tthis._mouseDragging = true;\n\t\t\t}\n\t\t\t\n\t\t\tif (this._mouseDragging) {\n\t\t\t\tconst instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\n\t\t\t\tif (this._draggingFadeIn) {\n\t\t\t\t\tsequence.append(new ChangeFadeInOut(this._doc, this._xToFadeIn(this._fadeInToX(instrument.fadeIn) + this._mouseX - this._mouseXStart), instrument.fadeOut));\n\t\t\t\t} else {\n\t\t\t\t\tsequence.append(new ChangeFadeInOut(this._doc, instrument.fadeIn, this._xToFadeOut(this._fadeOutToX(instrument.fadeOut) + this._mouseX - this._mouseXStart)));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\tprivate _whenCursorReleased = (event: Event): void => {\n\t\tif (this.container.offsetParent == null) return;\n\t\tif (this._mouseDown && this._doc.lastChangeWas(this._dragChange) && this._dragChange != null) {\n\t\t\tif (!this._mouseDragging) {\n\t\t\t\tconst instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\n\t\t\t\tif (this._draggingFadeIn) {\n\t\t\t\t\tthis._doc.record(new ChangeFadeInOut(this._doc, this._xToFadeIn(this._mouseX), instrument.fadeOut));\n\t\t\t\t} else {\n\t\t\t\t\tthis._doc.record(new ChangeFadeInOut(this._doc, instrument.fadeIn, this._xToFadeOut(this._mouseX)));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis._doc.record(this._dragChange);\n\t\t\t}\n\t\t}\n\t\tthis._dragChange = null;\n\t\tthis._mouseDragging = false;\n\t\tthis._mouseDown = false;\n\t}\n\t\n\tpublic render(): void {\n\t\tconst instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\n\t\t\n\t\tif (this._renderedFadeIn == instrument.fadeIn && this._renderedFadeOut == instrument.fadeOut) {\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tconst fadeInX: number = this._fadeInToX(instrument.fadeIn);\n\t\tconst fadeOutX: number = this._fadeOutToX(instrument.fadeOut);\n\t\tthis._controlCurve.setAttribute(\"d\", `M ${fadeInX} 0 L ${fadeInX} ${this._editorHeight} M ${fadeOutX} 0 L ${fadeOutX} ${this._editorHeight}`);\n\t\t\n\t\tconst dottedLineX: number = this._fadeOutToX(Config.fadeOutNeutral);\n\t\tlet fadePath: string = \"\";\n\t\tfadePath += `M 0 ${this._editorHeight} `;\n\t\tfadePath += `L ${fadeInX} 0 `;\n\t\tif (Synth.fadeOutSettingToTicks(instrument.fadeOut) > 0) {\n\t\t\tfadePath += `L ${dottedLineX} 0 `;\n\t\t\tfadePath += `L ${fadeOutX} ${this._editorHeight} `;\n\t\t} else {\n\t\t\tfadePath += `L ${fadeOutX} 0 `;\n\t\t\tfadePath += `L ${dottedLineX} ${this._editorHeight} `;\n\t\t}\n\t\tfadePath += \"z\";\n\t\tthis._fadeCurve.setAttribute(\"d\", fadePath);\n\t}\n}\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\n\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\nimport { Prompt } from \"./Prompt\";\nimport { SongDocument } from \"./SongDocument\";\nimport { ColorConfig } from \"./ColorConfig\";\nimport { ChangeLimiterSettings } from \"./changes\";\nimport { SongEditor } from \"./SongEditor\";\nimport { prettyNumber } from \"./EditorConfig\";\n\n//namespace beepbox {\nconst { button, div, h2, input } = HTML;\n\nexport class LimiterCanvas {\n\tprivate readonly _editorWidth: number = 200; // 112\n\tprivate readonly _editorHeight: number = 52; // 26\n\tprivate readonly _fill: SVGPathElement = SVG.path({ fill: ColorConfig.uiWidgetBackground, \"pointer-events\": \"none\" });\n\tprivate readonly _ticks: SVGSVGElement = SVG.svg({ \"pointer-events\": \"none\" });\n\tprivate readonly _subticks: SVGSVGElement = SVG.svg({ \"pointer-events\": \"none\" });\n\tprivate readonly _boostCurve: SVGPathElement = SVG.path({ fill: \"none\", stroke: ColorConfig.textSelection, \"stroke-width\": 2, \"pointer-events\": \"none\" });\n\tprivate readonly _boostDot: SVGCircleElement = SVG.circle({ fill: ColorConfig.textSelection, stroke: \"none\", r: \"3\" });\n\tprivate readonly _midCurve: SVGPathElement = SVG.path({ fill: \"none\", stroke: ColorConfig.primaryText, \"stroke-width\": 2, \"pointer-events\": \"none\" });\n\tprivate readonly _limitCurve: SVGPathElement = SVG.path({ fill: \"none\", stroke: ColorConfig.linkAccent, \"stroke-width\": 2, \"pointer-events\": \"none\" });\n\tprivate readonly _limitDot: SVGCircleElement = SVG.circle({ fill: ColorConfig.linkAccent, stroke: \"none\", r: \"3\" });\n\tprivate readonly _label0: SVGTextElement = SVG.text({ x: \"-1.5%\", y: \"148.5%\", \"pointer-events\": \"none\", \"font-size\": \"7pt\", fill: \"var(--secondary-text)\" }, \"0\");\n\tprivate readonly _label1: SVGTextElement = SVG.text({ x: \"48.2%\", y: \"148.5%\", \"pointer-events\": \"none\", \"font-size\": \"7pt\", fill: \"var(--secondary-text)\" }, \"1\");\n\tprivate readonly _label2: SVGTextElement = SVG.text({ x: \"98.2%\", y: \"148.5%\", \"pointer-events\": \"none\", \"font-size\": \"7pt\", fill: \"var(--secondary-text)\" }, \"2\");\n\tprivate readonly _inLabel: SVGTextElement = SVG.text({ x: \"-5%\", y: \"113.5%\", \"pointer-events\": \"none\", \"font-size\": \"6pt\", fill: \"var(--secondary-text)\" }, \"In\");\n\tprivate readonly _outLabel: SVGTextElement = SVG.text({ x: \"-9%\", y: \"131%\", \"pointer-events\": \"none\", \"font-size\": \"6pt\", fill: \"var(--secondary-text)\" }, \"Out\");\n\tprivate readonly _xAxisLabel: SVGTextElement = SVG.text({ x: \"42%\", y: \"172%\", \"pointer-events\": \"none\", \"font-size\": \"7pt\", fill: \"var(--primary-text)\" }, \"Volume\");\n\tprivate readonly _yAxisLabel: SVGTextElement = SVG.text({ x: \"55.2%\", y: \"160%\", \"pointer-events\": \"none\", \"font-size\": \"7pt\", transform: \"rotate(-90 30,120)\", fill: \"var(--primary-text)\" }, \"Gain\");\n\tprivate readonly _inVolumeBg: SVGRectElement = SVG.rect({ \"pointer-events\": \"none\", width: \"100%\", height: \"6px\", x: \"0%\", y: \"105%\", fill: ColorConfig.uiWidgetBackground });\n\tprivate readonly _outVolumeBg: SVGRectElement = SVG.rect({ \"pointer-events\": \"none\", width: \"100%\", height: \"6px\", x: \"0%\", y: \"120%\", fill: ColorConfig.uiWidgetBackground });\n\tprivate readonly _inVolumeBar: SVGRectElement = SVG.rect({ \"pointer-events\": \"none\", height: \"6px\", x: \"0%\", y: \"105%\", fill: \"url('#volumeGrad')\" });\n\tprivate readonly _inVolumeCap: SVGRectElement = SVG.rect({ \"pointer-events\": \"none\", width: \"2px\", height: \"6px\", y: \"105%\", fill: ColorConfig.uiWidgetFocus });\n\tprivate readonly _outVolumeBar: SVGRectElement = SVG.rect({ \"pointer-events\": \"none\", height: \"6px\", x: \"0%\", y: \"120%\", fill: \"url('#volumeGrad')\" });\n\tprivate readonly _outVolumeCap: SVGRectElement = SVG.rect({ \"pointer-events\": \"none\", width: \"2px\", height: \"6px\", y: \"120%\", fill: ColorConfig.uiWidgetFocus });\n\tprivate readonly _stop1: SVGStopElement = SVG.stop({ \"stop-color\": \"lime\", offset: \"30%\" });\n\tprivate readonly _stop2: SVGStopElement = SVG.stop({ \"stop-color\": \"orange\", offset: \"45%\" });\n\tprivate readonly _stop3: SVGStopElement = SVG.stop({ \"stop-color\": \"red\", offset: \"50%\" });\n\tprivate readonly _gradient: SVGGradientElement = SVG.linearGradient({ id: \"volumeGrad\", gradientUnits: \"userSpaceOnUse\" }, this._stop1, this._stop2, this._stop3);\n\tprivate readonly _defs: SVGDefsElement = SVG.defs({}, this._gradient);\n\tprivate readonly _svg: SVGSVGElement = SVG.svg({ style: `background-color: ${ColorConfig.editorBackground}; touch-action: none; overflow: visible;`, width: \"100%\", height: \"100%\", viewBox: \"0 0 \" + this._editorWidth + \" \" + this._editorHeight, preserveAspectRatio: \"none\" },\n\t\tthis._defs,\n\t\tthis._fill,\n\t\tthis._ticks,\n\t\tthis._subticks,\n\t\tthis._boostCurve,\n\t\tthis._midCurve,\n\t\tthis._limitCurve,\n\t\tthis._boostDot,\n\t\tthis._limitDot,\n\t\tthis._label0,\n\t\tthis._label1,\n\t\tthis._label2,\n\t\tthis._inLabel,\n\t\tthis._outLabel,\n\t\tthis._xAxisLabel,\n\t\tthis._yAxisLabel,\n\t\tthis._inVolumeBg,\n\t\tthis._outVolumeBg,\n\t\tthis._inVolumeBar,\n\t\tthis._outVolumeBar,\n\t\tthis._inVolumeCap,\n\t\tthis._outVolumeCap,\n\t);\n\n\tpublic readonly container: HTMLElement = HTML.div({ class: \"\", style: \"height: 4em; width: 80%; padding-bottom: 1.5em;\" }, this._svg);\n\n\tprivate _limiterPrompt: LimiterPrompt;\n\n\tconstructor(lim: LimiterPrompt) {\n\t\tfor (let i: number = 0; i <= 2; i++) {\n\t\t\tthis._ticks.appendChild(SVG.rect({ fill: ColorConfig.tonic, x: (i * this._editorWidth / 2) - 1, y: 0, width: 2, height: this._editorHeight }));\n\t\t}\n\t\tfor (let i: number = 1; i <= 3; i += 2) {\n\t\t\tthis._subticks.appendChild(SVG.rect({ fill: ColorConfig.fifthNote, x: (i * this._editorWidth / 4) - 1, y: 0, width: 1, height: this._editorHeight }));\n\t\t}\n\n\t\tthis._limiterPrompt = lim;\n\n\t}\n\n\tpublic animateVolume(inVolumeCap: number, historicInCap: number, outVolumeCap: number, historicOutCap: number): void {\n\t\tthis._inVolumeBar.setAttribute(\"width\", \"\" + Math.min(this._editorWidth, inVolumeCap * (this._editorWidth / 2.0)));\n\t\tthis._inVolumeCap.setAttribute(\"x\", \"\" + Math.min(this._editorWidth, historicInCap * (this._editorWidth / 2.0)));\n\t\tthis._outVolumeBar.setAttribute(\"width\", \"\" + Math.min(this._editorWidth, outVolumeCap * (this._editorWidth / 2.0)));\n\t\tthis._outVolumeCap.setAttribute(\"x\", \"\" + Math.min(this._editorWidth, historicOutCap * (this._editorWidth / 2.0)));\n\t}\n\n\tpublic render(): void {\n\t\tconst controlPointToHeight = (point: number): number => {\n\t\t\treturn Math.max(0, (1 - (point / 5)) * (this._editorHeight - 1) + 1);\n\t\t}\n\n\t\tlet lastValue: number = 0;\n\t\tlet currentSubpathIdx: number = 0;\n\t\tlet lastSubpathIdx: number = -1;\n\t\tlet path: string = \"\";\n\t\tlet subPaths: string[] = [\"\", \"\", \"\"];\n\t\tfor (let i: number = 0; i < 64; i++) {\n\t\t\t// Calculate next value based on limiter settings\n\t\t\tlet limiterRatio: number = +this._limiterPrompt.limitRatioSlider.value;\n\t\t\tlimiterRatio = (limiterRatio < 10 ? limiterRatio / 10 : (limiterRatio - 9));\n\t\t\tlet compressorRatio: number = +this._limiterPrompt.compressionRatioSlider.value;\n\t\t\tcompressorRatio = (compressorRatio < 10 ? compressorRatio / 10 : (1 + (compressorRatio - 10) / 60));\n\t\t\tlet limiterThreshold: number = +this._limiterPrompt.limitThresholdSlider.value;\n\t\t\tlet compressorThreshold: number = +this._limiterPrompt.compressionThresholdSlider.value;\n\t\t\tlet useVol: number = i * 2.0 / 64.0; // Scale from 0~2\n\t\t\tlet nextValue: number = 1 / 1.05;\n\t\t\tif (useVol >= limiterThreshold) {\n\t\t\t\t// Limiter falloff\n\t\t\t\tnextValue = 1 / (1.05 * (useVol + 1 - limiterThreshold) * limiterRatio + (1 - limiterRatio));\n\t\t\t}\n\t\t\telse if (useVol < compressorThreshold) {\n\t\t\t\t// Compressor boost\n\t\t\t\tnextValue = 1 / (((useVol + 1 - compressorThreshold) * 0.8 + 0.25) * compressorRatio + 1.05 * (1 - compressorRatio));\n\t\t\t}\n\n\t\t\t// first point in entire path\n\t\t\tif (i == 0) {\n\t\t\t\tpath += \"M 0 \" + prettyNumber(controlPointToHeight(nextValue)) + \" \";\n\t\t\t}\n\n\t\t\t// first point in a specific subpath\n\t\t\tif (currentSubpathIdx > lastSubpathIdx) {\n\t\t\t\tif (lastSubpathIdx >= 0) {\n\t\t\t\t\tsubPaths[lastSubpathIdx] += \"L \" + prettyNumber(i * this._editorWidth / 64) + \" \" + prettyNumber(controlPointToHeight(nextValue)) + \" \";\n\t\t\t\t}\n\t\t\t\tsubPaths[currentSubpathIdx] += \"M \" + prettyNumber(i * this._editorWidth / 64) + \" \" + prettyNumber(controlPointToHeight(nextValue)) + \" \";\n\n\t\t\t\tif (currentSubpathIdx == 1 || (lastSubpathIdx == 0 && currentSubpathIdx == 2)) {\n\t\t\t\t\tthis._boostDot.setAttribute(\"cx\", prettyNumber(i * this._editorWidth / 64));\n\t\t\t\t\tthis._boostDot.setAttribute(\"cy\", prettyNumber(controlPointToHeight(nextValue)));\n\t\t\t\t}\n\t\t\t\tif (currentSubpathIdx == 2) {\n\t\t\t\t\tthis._limitDot.setAttribute(\"cx\", prettyNumber(i * this._editorWidth / 64));\n\t\t\t\t\tthis._limitDot.setAttribute(\"cy\", prettyNumber(controlPointToHeight(nextValue)));\n\t\t\t\t}\n\n\t\t\t\tlastSubpathIdx = currentSubpathIdx;\n\t\t\t}\n\n\t\t\tif (lastValue != 0 || nextValue != 0) {\n\t\t\t\tpath += \"L \";\n\t\t\t\tsubPaths[currentSubpathIdx] += \"L \";\n\t\t\t} else {\n\t\t\t\tpath += \"M \";\n\t\t\t\tsubPaths[currentSubpathIdx] += \"M \";\n\t\t\t}\n\t\t\tpath += prettyNumber(i * this._editorWidth / 64) + \" \" + prettyNumber(controlPointToHeight(nextValue)) + \" \";\n\t\t\tsubPaths[currentSubpathIdx] += prettyNumber(i * this._editorWidth / 64) + \" \" + prettyNumber(controlPointToHeight(nextValue)) + \" \";\n\t\t\tlastValue = nextValue;\n\n\t\t\t// Move to next subpath\n\t\t\tif (currentSubpathIdx == 0 && (i >= compressorThreshold * 32 - 2)) {\n\t\t\t\tcurrentSubpathIdx++;\n\t\t\t}\n\t\t\tif (currentSubpathIdx == 1 && (i >= limiterThreshold * 32 - 2)) {\n\t\t\t\tcurrentSubpathIdx++;\n\t\t\t}\n\t\t}\n\n\t\tconst lastHeight: number = controlPointToHeight(lastValue);\n\t\tif (lastValue > 0) {\n\t\t\tpath += \"L \" + (this._editorWidth - 1) + \" \" + prettyNumber(lastHeight) + \" \";\n\t\t\tsubPaths[currentSubpathIdx] += \"L \" + (this._editorWidth - 1) + \" \" + prettyNumber(lastHeight) + \" \";\n\t\t}\n\n\t\tthis._boostCurve.setAttribute(\"d\", subPaths[0]);\n\t\tthis._midCurve.setAttribute(\"d\", subPaths[1]);\n\t\tthis._limitCurve.setAttribute(\"d\", subPaths[2]);\n\t\tthis._fill.setAttribute(\"d\", path + \"L \" + this._editorWidth + \" \" + prettyNumber(lastHeight) + \" L \" + this._editorWidth + \" \" + prettyNumber(this._editorHeight) + \" L 0 \" + prettyNumber(this._editorHeight) + \" z \");\n\t}\n}\n\nexport class LimiterPrompt implements Prompt {\n\n\tprivate limiterCanvas: LimiterCanvas = new LimiterCanvas(this);\n\n\tpublic readonly _playButton: HTMLButtonElement = button({ style: \"width: 55%;\", type: \"button\" });\n\n\tpublic readonly limitDecaySlider: HTMLInputElement = input({ title: \"limit decay\", style: `width: 5em; flex-grow: 1; margin: 0;`, type: \"range\", min: \"1\", max: \"30\", value: \"4\", step: \"1\" });\n\tpublic readonly limitRiseSlider: HTMLInputElement = input({ title: \"limit rise\", style: `width: 5em; flex-grow: 1; margin: 0;`, type: \"range\", min: \"2000\", max: \"10000\", value: \"4000\", step: \"250\" });\n\tpublic readonly compressionThresholdSlider: HTMLInputElement = input({ title: \"compressor threshold\", style: `width: 100%; flex-grow: 1; margin: 0;`, type: \"range\", min: \"0\", max: \"1.1\", value: \"1\", step: \"0.05\" });\n\tpublic readonly limitThresholdSlider: HTMLInputElement = input({ title: \"limiter threshold\", style: `width: 100%; flex-grow: 1; margin: 0;`, type: \"range\", min: \"0\", max: \"2\", value: \"1\", step: \"0.05\" });\n\tpublic readonly compressionRatioSlider: HTMLInputElement = input({ title: \"compressor ratio\", style: `width: 100%; flex-grow: 1; margin: 0;`, type: \"range\", min: \"0\", max: \"20\", value: \"10\", step: \"1\" });\n\tpublic readonly limitRatioSlider: HTMLInputElement = input({ title: \"limiter ratio\", style: `width: 100%; flex-grow: 1; margin: 0;`, type: \"range\", min: \"0\", max: \"20\", value: \"10\", step: \"1\" });\n\tpublic readonly masterGainSlider: HTMLInputElement = input({ title: \"master gain\", style: `width: 5em; flex-grow: 1; margin: 0;`, type: \"range\", min: \"0\", max: \"5\", value: \"1\", step: \"0.02\" });\n\n\tprivate startingLimitDecay: number;\n\tprivate startingLimitRise: number;\n\tprivate startingCompressionThreshold: number;\n\tprivate startingLimitThreshold: number;\n\tprivate startingCompressionRatio: number;\n\tprivate startingLimitRatio: number;\n\tprivate startingMasterGain: number;\n\n\tprivate inVolumeHistoricTimer: number = 0.0;\n\tprivate inVolumeHistoricCap: number = 0.0;\n\tprivate outVolumeHistoricTimer: number = 0.0;\n\tprivate outVolumeHistoricCap: number = 0.0;\n\n\tprivate readonly _cancelButton: HTMLButtonElement = button({ class: \"cancelButton\" });\n\tprivate readonly _okayButton: HTMLButtonElement = button({ class: \"okayButton\", style: \"width:45%;\" }, \"Okay\");\n\tprivate readonly _resetButton: HTMLButtonElement = button({ style: \"width:45%;\" }, \"Reset\");\n\n\tpublic readonly container: HTMLDivElement = div({ class: \"prompt noSelection\", style: \"width: 250px;\" },\n\t\th2(\"Limiter Options\"),\n\t\tdiv({ style: \"display: flex; width: 55%; align-self: center; flex-direction: row; align-items: center; justify-content: center;\" },\n\t\t\tthis._playButton,\n\t\t),\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; justify-content: center;\" },\n\t\t\tthis.limiterCanvas.container,\n\t\t),\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; margin-top: 1.5em; justify-content: flex-end;\" },\n\t\t\tdiv({ style: `text-align: right; width: 25%; margin-right: 4.5%; color: ${ColorConfig.primaryText};` },\n\t\t\t\t\"\"\n\t\t\t),\n\t\t\tdiv({ style: `text-align: center; width: 33%; margin-right: 4.5%; color: ${ColorConfig.textSelection};` },\n\t\t\t\t\"Boost\"\n\t\t\t),\n\t\t\tdiv({ style: `text-align: center; width: 33%; margin-right: 0%; color: ${ColorConfig.linkAccent};` },\n\t\t\t\t\"Cutoff\"\n\t\t\t),\n\t\t),\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; margin-top: 0.5em; justify-content: flex-end;\" },\n\t\t\tdiv({ style: `text-align: right; width: 25%; margin-right: 4.5%; color: ${ColorConfig.primaryText};` },\n\t\t\t\t\"Threshold:\"\n\t\t\t),\n\t\t\tdiv({ style: `width: 33%; margin-right: 4.5%;` },\n\t\t\t\tthis.compressionThresholdSlider,\n\t\t\t),\n\t\t\tdiv({ style: `width: 33%; margin-right: 0%;` },\n\t\t\t\tthis.limitThresholdSlider,\n\t\t\t),\n\n\t\t),\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\n\t\t\tdiv({ style: `text-align: right; width: 25%; margin-right: 4.5%; color: ${ColorConfig.primaryText};` },\n\t\t\t\t\"Ratio:\"\n\t\t\t),\n\t\t\tdiv({ style: `width: 33%; margin-right: 4.5%;` },\n\t\t\t\tthis.compressionRatioSlider,\n\t\t\t),\n\t\t\tdiv({ style: `width: 33%; margin-right: 0%;` },\n\t\t\t\tthis.limitRatioSlider,\n\t\t\t),\n\t\t),\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\n\t\t\tdiv({ style: `text-align: right; width: 8.5em; margin-right: 1em; color: ${ColorConfig.primaryText};` },\n\t\t\t\t\"Limit Decay:\"\n\t\t\t),\n\t\t\tthis.limitDecaySlider,\n\t\t),\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\n\t\t\tdiv({ style: `text-align: right; width: 8.5em; margin-right: 1em; color: ${ColorConfig.primaryText};` },\n\t\t\t\t\"Limit Rise:\"\n\t\t\t),\n\t\t\tthis.limitRiseSlider,\n\t\t),\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\n\t\t\tdiv({ style: `text-align: right; width: 8.5em; margin-right: 1em; color: ${ColorConfig.primaryText};` },\n\t\t\t\t\"Master Gain:\"\n\t\t\t),\n\t\t\tthis.masterGainSlider,\n\t\t),\n\t\tdiv({ style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\" },\n\t\t\tthis._okayButton,\n\t\t\tthis._resetButton,\n\t\t),\n\t\tthis._cancelButton,\n\t);\n\n\tconstructor(private _doc: SongDocument, private _songEditor: SongEditor) {\n\n\t\tthis._okayButton.addEventListener(\"click\", this._saveChanges);\n\t\tthis._resetButton.addEventListener(\"click\", this._resetDefaults);\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\n\t\tthis.container.addEventListener(\"keydown\", this.whenKeyPressed);\n\n\t\tthis.limitRatioSlider.value = \"\" + (this._doc.song.limitRatio < 1 ? this._doc.song.limitRatio * 10 : 9 + this._doc.song.limitRatio);\n\t\tthis.compressionRatioSlider.value = \"\" + (this._doc.song.compressionRatio < 1 ? this._doc.song.compressionRatio * 10 : 10 + (this._doc.song.compressionRatio - 1) * 60);\n\t\tthis.limitThresholdSlider.value = \"\" + this._doc.song.limitThreshold;\n\t\tthis.compressionThresholdSlider.value = \"\" + this._doc.song.compressionThreshold;\n\t\tthis.limitDecaySlider.value = \"\" + this._doc.song.limitDecay;\n\t\tthis.limitRiseSlider.value = \"\" + this._doc.song.limitRise;\n\t\tthis.masterGainSlider.value = \"\" + this._doc.song.masterGain;\n\n\t\tthis.startingLimitRatio = +this.limitRatioSlider.value;\n\t\tthis.startingCompressionRatio = +this.compressionRatioSlider.value;\n\t\tthis.startingLimitThreshold = +this.limitThresholdSlider.value;\n\t\tthis.startingCompressionThreshold = +this.compressionThresholdSlider.value;\n\t\tthis.startingLimitDecay = +this.limitDecaySlider.value;\n\t\tthis.startingLimitRise = +this.limitRiseSlider.value;\n\t\tthis.startingMasterGain = +this.masterGainSlider.value;\n\n\t\tthis.limitDecaySlider.addEventListener(\"input\", this._whenInput);\n\t\tthis.limitRiseSlider.addEventListener(\"input\", this._whenInput);\n\t\tthis.limitRatioSlider.addEventListener(\"input\", this._whenInput);\n\t\tthis.limitThresholdSlider.addEventListener(\"input\", this._whenInputFavorLimitThreshold);\n\t\tthis.compressionRatioSlider.addEventListener(\"input\", this._whenInput);\n\t\tthis.compressionThresholdSlider.addEventListener(\"input\", this._whenInput);\n\t\tthis.masterGainSlider.addEventListener(\"input\", this._whenInput);\n\n\t\tthis._playButton.addEventListener(\"click\", this._togglePlay);\n\n\t\twindow.requestAnimationFrame(this._volumeUpdate);\n\n\t\tthis.updatePlayButton();\n\n\t\tsetTimeout(() => this._playButton.focus());\n\n\t\tthis.limiterCanvas.render();\n\t}\n\n\tprivate _volumeUpdate = (): void => {\n\t\tthis.inVolumeHistoricTimer--;\n\t\tif (this.inVolumeHistoricTimer <= 0) {\n\t\t\tthis.inVolumeHistoricCap -= 0.03;\n\t\t}\n\t\tif (this._doc.song.inVolumeCap > this.inVolumeHistoricCap) {\n\t\t\tthis.inVolumeHistoricCap = this._doc.song.inVolumeCap;\n\t\t\tthis.inVolumeHistoricTimer = 50;\n\t\t}\n\n\t\tthis.outVolumeHistoricTimer--;\n\t\tif (this.outVolumeHistoricTimer <= 0) {\n\t\t\tthis.outVolumeHistoricCap -= 0.03;\n\t\t}\n\t\tif (this._doc.song.outVolumeCap > this.outVolumeHistoricCap) {\n\t\t\tthis.outVolumeHistoricCap = this._doc.song.outVolumeCap;\n\t\t\tthis.outVolumeHistoricTimer = 50;\n\t\t}\n\n\t\tthis.limiterCanvas.animateVolume(this._doc.song.inVolumeCap, this.inVolumeHistoricCap, this._doc.song.outVolumeCap, this.outVolumeHistoricCap);\n\t\t//console.log(this._doc.song.volumeCap);\n\t\twindow.requestAnimationFrame(this._volumeUpdate);\n\t}\n\n\tprivate _togglePlay = (): void => {\n\t\tthis._songEditor.togglePlay();\n\t\tthis.updatePlayButton();\n\t}\n\n\tpublic updatePlayButton(): void {\n\t\tif (this._doc.synth.playing) {\n\t\t\tthis._playButton.classList.remove(\"playButton\");\n\t\t\tthis._playButton.classList.add(\"pauseButton\");\n\t\t\tthis._playButton.title = \"Pause (Space)\";\n\t\t\tthis._playButton.innerText = \"Pause\";\n\t\t} else {\n\t\t\tthis._playButton.classList.remove(\"pauseButton\");\n\t\t\tthis._playButton.classList.add(\"playButton\");\n\t\t\tthis._playButton.title = \"Play (Space)\";\n\t\t\tthis._playButton.innerText = \"Play\";\n\t\t}\n\t}\n\n\tprivate _whenInput = (): void => {\n\t\tif (+this.limitThresholdSlider.value < +this.compressionThresholdSlider.value) {\n\t\t\tthis.limitThresholdSlider.removeEventListener(\"input\", this._whenInputFavorLimitThreshold);\n\t\t\tthis.limitThresholdSlider.value = this.compressionThresholdSlider.value;\n\t\t\tthis.limitThresholdSlider.addEventListener(\"input\", this._whenInputFavorLimitThreshold);\n\t\t}\n\t\tthis.limiterCanvas.render();\n\t\tthis._updateLimiter();\n\t}\n\n\t// Same as above, but for conflicts between limiter threshold and compressor threshold, favor the limiter\n\tprivate _whenInputFavorLimitThreshold = (): void => {\n\t\tif (+this.limitThresholdSlider.value < +this.compressionThresholdSlider.value) {\n\t\t\tthis.compressionThresholdSlider.removeEventListener(\"input\", this._whenInput);\n\t\t\tthis.compressionThresholdSlider.value = this.limitThresholdSlider.value;\n\t\t\tthis.compressionThresholdSlider.addEventListener(\"input\", this._whenInput);\n\t\t}\n\t\tthis.limiterCanvas.render();\n\t\tthis._updateLimiter();\n\t}\n\n\tprivate _close = (): void => {\n\t\t// Reset all sliders to starting values\n\t\tthis.limitRatioSlider.value = \"\" + this.startingLimitRatio;\n\t\tthis.compressionRatioSlider.value = \"\" + this.startingCompressionRatio;\n\t\tthis.limitThresholdSlider.value = \"\" + this.startingLimitThreshold;\n\t\tthis.compressionThresholdSlider.value = \"\" + this.startingCompressionThreshold;\n\t\tthis.limitDecaySlider.value = \"\" + this.startingLimitDecay;\n\t\tthis.limitRiseSlider.value = \"\" + this.startingLimitRise;\n\t\tthis.masterGainSlider.value = \"\" + this.startingMasterGain;\n\n\t\tthis._updateLimiter();\n\t\tthis._doc.prompt = null;\n\t}\n\n\tpublic cleanUp = (): void => {\n\t\tthis._okayButton.removeEventListener(\"click\", this._saveChanges);\n\t\tthis._resetButton.removeEventListener(\"click\", this._resetDefaults);\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\n\t\tthis.container.removeEventListener(\"keydown\", this.whenKeyPressed);\n\t\tthis.limitDecaySlider.removeEventListener(\"input\", this._whenInput);\n\t\tthis.limitRiseSlider.removeEventListener(\"input\", this._whenInput);\n\t\tthis.limitThresholdSlider.removeEventListener(\"input\", this._whenInputFavorLimitThreshold);\n\t\tthis.limitRatioSlider.removeEventListener(\"input\", this._whenInput);\n\t\tthis.compressionRatioSlider.removeEventListener(\"input\", this._whenInput);\n\t\tthis.compressionThresholdSlider.removeEventListener(\"input\", this._whenInput);\n\t\tthis.masterGainSlider.removeEventListener(\"input\", this._whenInput);\n\n\t\tthis._playButton.removeEventListener(\"click\", this._togglePlay);\n\t}\n\n\tpublic whenKeyPressed = (event: KeyboardEvent): void => {\n\t\tif ((<Element>event.target).tagName != \"BUTTON\" && event.keyCode == 13) { // Enter key\n\t\t\tthis._saveChanges();\n\t\t}\n\t\tif (event.keyCode == 32) {\n\t\t\tthis._togglePlay();\n\t\t\tevent.preventDefault();\n\t\t}\n\t}\n\n\tprivate _resetDefaults = (): void => {\n\t\t// Set song limiter settings to their default\n\t\tif (this.limitRatioSlider.value != \"10\" || this.limitRiseSlider.value != \"4000\" || this.limitDecaySlider.value != \"4\" || this.limitThresholdSlider.value != \"1\" || this.compressionRatioSlider.value != \"10\" || this.compressionThresholdSlider.value != \"1\" || this.masterGainSlider.value != \"1\") {\n\n\t\t\tthis.limitRatioSlider.value = \"10\";\n\t\t\tthis.limitRiseSlider.value = \"4000\";\n\t\t\tthis.limitDecaySlider.value = \"4\";\n\t\t\tthis.limitThresholdSlider.value = \"1\";\n\t\t\tthis.compressionRatioSlider.value = \"10\";\n\t\t\tthis.compressionThresholdSlider.value = \"1\";\n\t\t\tthis.masterGainSlider.value = \"1\";\n\n\t\t\tthis._whenInput();\n\t\t}\n\t}\n\n\tprivate _updateLimiter = (): void => {\n\t\t// Save slider values to song\n\t\tthis._doc.record(new ChangeLimiterSettings(this._doc,\n\t\t\t(+this.limitRatioSlider.value < 10 ? +this.limitRatioSlider.value / 10 : (+this.limitRatioSlider.value - 9)),\n\t\t\t(+this.compressionRatioSlider.value < 10 ? +this.compressionRatioSlider.value / 10 : (1 + (+this.compressionRatioSlider.value - 10) / 60)),\n\t\t\t+this.limitThresholdSlider.value,\n\t\t\t+this.compressionThresholdSlider.value,\n\t\t\t+this.limitRiseSlider.value,\n\t\t\t+this.limitDecaySlider.value,\n\t\t\t+this.masterGainSlider.value,\n\t\t), true);\n\t}\n\n\tprivate _saveChanges = (): void => {\n\t\tthis._updateLimiter();\n\t\tthis._doc.prompt = null;\n\n\t}\n}\n//}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nimport { SongDocument } from \"./SongDocument\";\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\nimport { ChangeLoop, ChangeChannelBar } from \"./changes\";\nimport { ColorConfig } from \"./ColorConfig\";\nimport { TrackEditor } from \"./TrackEditor\";\n\ninterface Cursor {\n\tstartBar: number;\n\tmode: number;\n}\n\ninterface Endpoints {\n\tstart: number;\n\tlength: number;\n}\n\nexport class LoopEditor {\n\tprivate readonly _editorHeight: number = 20;\n\t\tprivate readonly _startMode:   number = 0;\n\t\tprivate readonly _endMode:     number = 1;\n\t\tprivate readonly _bothMode:    number = 2;\n\t\tprivate readonly _loopMode:    number = 3;\n\t\tprivate _loopAtPointStart: number = -1;\n\t\tprivate _loopAtPointEnd: number = -1;\n\t\t\n\t\tprivate readonly _loop: SVGPathElement = SVG.path({fill: \"none\", stroke: ColorConfig.loopAccent, \"stroke-width\": 4});\n\t\tprivate readonly _barLoop: SVGPathElement = SVG.path({fill: \"none\", stroke: ColorConfig.uiWidgetFocus, \"stroke-width\": 2});\n\t\tprivate readonly _highlight: SVGPathElement = SVG.path({fill: ColorConfig.hoverPreview, \"pointer-events\": \"none\"});\n\t\t\n\tprivate readonly _svg: SVGSVGElement = SVG.svg({style: `touch-action: pan-y; position: absolute;`, height: this._editorHeight},\n\t\tthis._loop,\n\t\tthis._highlight,\n\t\tthis._barLoop\n\t);\n\t\t\n\tpublic readonly container: HTMLElement = HTML.div({class: \"loopEditor\"}, this._svg);\n\t\t\n\tprivate _barWidth: number = 32;\n\tprivate _change: ChangeLoop | null = null;\n\t\tprivate _cursor: Cursor = {startBar: -1, mode: -1};\n\tprivate _mouseX: number = 0;\n\t//private _mouseY: number = 0;\n\tprivate _clientStartX: number = 0;\n\tprivate _clientStartY: number = 0;\n\tprivate _startedScrolling: boolean = false;\n\tprivate _draggingHorizontally: boolean = false;\n\tprivate _mouseDown: boolean = false;\n\tprivate _mouseOver: boolean = false;\n\tprivate _renderedLoopStart: number = -1;\n\tprivate _renderedLoopStop: number = -1;\n\tprivate _renderedBarCount: number = 0;\n\tprivate _renderedBarWidth: number = -1;\n\tprivate _renderedBarLoopStart: number = -1;\n\tprivate _renderedBarLoopEnd: number = -1;\n\t\t\n\tconstructor(private _doc: SongDocument, private _trackEditor: TrackEditor) {\n\t\tthis._updateCursorStatus();\n\t\tthis._render();\n\t\tthis._doc.notifier.watch(this._documentChanged);\n\t\t\t\n\t\tthis.container.addEventListener(\"mousedown\", this._whenMousePressed);\n\t\tdocument.addEventListener(\"mousemove\", this._whenMouseMoved);\n\t\tdocument.addEventListener(\"mouseup\", this._whenCursorReleased);\n\t\tthis.container.addEventListener(\"mouseover\", this._whenMouseOver);\n\t\tthis.container.addEventListener(\"mouseout\", this._whenMouseOut);\n\t\t\t\n\t\tthis.container.addEventListener(\"touchstart\", this._whenTouchPressed);\n\t\tthis.container.addEventListener(\"touchmove\", this._whenTouchMoved);\n\t\tthis.container.addEventListener(\"touchend\", this._whenTouchReleased);\n\t\tthis.container.addEventListener(\"touchcancel\", this._whenTouchReleased);\n\t}\n\t\t\n\tprivate _updateCursorStatus(): void {\n\t\tconst bar: number = this._mouseX / this._barWidth;\n\t\tthis._cursor.startBar = bar;\n\n\t\tif (bar >= this._loopAtPointStart && bar <= this._loopAtPointEnd + 1) {\n\t\t\tthis._cursor.mode = this._loopMode;\n        }\n\t\telse if (bar > this._doc.song.loopStart - 0.25 && bar < this._doc.song.loopStart + this._doc.song.loopLength + 0.25) {\n\t\t\tif (bar - this._doc.song.loopStart < this._doc.song.loopLength * 0.5) {\n\t\t\t\tthis._cursor.mode = this._startMode;\n\t\t\t} else {\n\t\t\t\tthis._cursor.mode = this._endMode;\n\t\t\t}\n\t\t} else {\n\t\t\tthis._cursor.mode = this._bothMode;\n\t\t}\n\t}\n\t\t\n\tprivate _findEndPoints(middle: number): Endpoints {\n\t\tlet start: number = Math.round(middle - this._doc.song.loopLength / 2);\n\t\tlet end: number = start + this._doc.song.loopLength;\n\t\tif (start < 0) {\n\t\t\tend -= start;\n\t\t\tstart = 0;\n\t\t}\n\t\tif (end > this._doc.song.barCount) {\n\t\t\tstart -= end - this._doc.song.barCount;\n\t\t\tend = this._doc.song.barCount;\n\t\t}\n\t\t\treturn {start: start, length: end - start};\n\t}\n\t\t\n\tprivate _whenMouseOver = (event: MouseEvent): void => {\n\t\tif (this._mouseOver) return;\n\t\tthis._mouseOver = true;\n\t\tthis._updatePreview();\n\t}\n\t\t\n\tprivate _whenMouseOut = (event: MouseEvent): void => {\n\t\tif (!this._mouseOver) return;\n\t\tthis._mouseOver = false;\n\t\tthis._updatePreview();\n\t}\n\t\t\n\tprivate _whenMousePressed = (event: MouseEvent): void => {\n\t\tevent.preventDefault();\n\t\tthis._mouseDown = true;\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\n\t\tthis._mouseX = (event.clientX || event.pageX) - boundingRect.left;\n\t\t//this._mouseY = (event.clientY || event.pageY) - boundingRect.top;\n\t\tthis._updateCursorStatus();\n\t\tthis._updatePreview();\n\t\tthis._whenMouseMoved(event);\n\t}\n\t\t\n\tprivate _whenTouchPressed = (event: TouchEvent): void => {\n\t\t//event.preventDefault();\n\t\tthis._mouseDown = true;\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\n\t\tthis._mouseX = event.touches[0].clientX - boundingRect.left;\n\t\t//this._mouseY = event.touches[0].clientY - boundingRect.top;\n\t\tthis._updateCursorStatus();\n\t\tthis._updatePreview();\n\t\t//this._whenTouchMoved(event);\n\t\tthis._clientStartX = event.touches[0].clientX;\n\t\tthis._clientStartY = event.touches[0].clientY;\n\t\tthis._draggingHorizontally = false;\n\t\tthis._startedScrolling = false;\n\t}\n\t\t\n\tprivate _whenMouseMoved = (event: MouseEvent): void => {\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\n\t\tthis._mouseX = (event.clientX || event.pageX) - boundingRect.left;\n\t\t//this._mouseY = (event.clientY || event.pageY) - boundingRect.top;\n\t\tthis._whenCursorMoved();\n\t}\n\t\t\n\tprivate _whenTouchMoved = (event: TouchEvent): void => {\n\t\tif (!this._mouseDown) return;\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\n\t\tthis._mouseX = event.touches[0].clientX - boundingRect.left;\n\t\t//this._mouseY = event.touches[0].clientY - boundingRect.top;\n\t\t\t\n\t\tif (!this._draggingHorizontally && !this._startedScrolling) {\n\t\t\tif (Math.abs(event.touches[0].clientY - this._clientStartY) > 10) {\n\t\t\t\tthis._startedScrolling = true;\n\t\t\t} else if (Math.abs(event.touches[0].clientX - this._clientStartX) > 10) {\n\t\t\t\tthis._draggingHorizontally = true;\n\t\t\t}\n\t\t}\n\t\t\t\n\t\tif (this._draggingHorizontally) {\n\t\t\tthis._whenCursorMoved();\n\t\t\tevent.preventDefault();\n\t\t}\n\t}\n\t\t\n\tprivate _whenCursorMoved(): void {\n\t\tif (this._mouseDown) {\n\t\t\tlet oldStart: number = this._doc.song.loopStart;\n\t\t\tlet oldEnd: number = this._doc.song.loopStart + this._doc.song.loopLength;\n\t\t\tif (this._change != null && this._doc.lastChangeWas(this._change)) {\n\t\t\t\toldStart = this._change.oldStart;\n\t\t\t\toldEnd = oldStart + this._change.oldLength;\n\t\t\t}\n\t\t\t\t\n\t\t\tconst bar: number = this._mouseX / this._barWidth;\n\t\t\tlet start: number;\n\t\t\tlet end: number;\n\t\t\tlet temp: number;\n\t\t\tif (this._cursor.mode == this._startMode) {\n\t\t\t\tstart = oldStart + Math.round(bar - this._cursor.startBar);\n\t\t\t\tend = oldEnd;\n\t\t\t\tif (start < 0) start = 0;\n\t\t\t\tif (start >= this._doc.song.barCount) start = this._doc.song.barCount;\n\t\t\t\tif (start == end) {\n\t\t\t\t\tstart = end - 1;\n\t\t\t\t} else if (start > end) {\n\t\t\t\t\ttemp = start;\n\t\t\t\t\tstart = end;\n\t\t\t\t\tend = temp;\n\t\t\t\t}\n\t\t\t\tthis._change = new ChangeLoop(this._doc, oldStart, oldEnd - oldStart, start, end - start);\n\t\t\t} else if (this._cursor.mode == this._endMode) {\n\t\t\t\tstart = oldStart;\n\t\t\t\tend = oldEnd + Math.round(bar - this._cursor.startBar);\n\t\t\t\tif (end < 0) end = 0;\n\t\t\t\tif (end >= this._doc.song.barCount) end = this._doc.song.barCount;\n\t\t\t\tif (end == start) {\n\t\t\t\t\tend = start + 1;\n\t\t\t\t} else if (end < start) {\n\t\t\t\t\ttemp = start;\n\t\t\t\t\tstart = end;\n\t\t\t\t\tend = temp;\n\t\t\t\t}\n\t\t\t\tthis._change = new ChangeLoop(this._doc, oldStart, oldEnd - oldStart, start, end - start);\n\t\t\t} else if (this._cursor.mode == this._bothMode) {\n\t\t\t\tconst endPoints: Endpoints = this._findEndPoints(bar);\n\t\t\t\tthis._change = new ChangeLoop(this._doc, oldStart, oldEnd - oldStart, endPoints.start, endPoints.length);\n\t\t\t}\n\t\t\telse if (this._cursor.mode == this._loopMode) {\n\t\t\t\tthis._doc.synth.loopBarStart = -1;\n\t\t\t\tthis._doc.synth.loopBarEnd = -1;\n\t\t\t\tthis.setLoopAt(this._doc.synth.loopBarStart, this._doc.synth.loopBarEnd);\n            }\n\t\t\tthis._doc.synth.jumpIntoLoop();\n\t\t\tif (this._doc.prefs.autoFollow) {\n\t\t\t\tnew ChangeChannelBar(this._doc, this._doc.channel, Math.floor(this._doc.synth.playhead), true);\n\t\t\t}\n\t\t\tthis._doc.setProspectiveChange(this._change);\n\t\t} else {\n\t\t\tthis._updateCursorStatus();\n\t\t\tthis._updatePreview();\n\t\t}\n\t}\n\t\t\n\tprivate _whenTouchReleased = (event: TouchEvent): void => {\n\t\tevent.preventDefault();\n\t\tif (!this._startedScrolling) {\n\t\t\tthis._whenCursorMoved();\n\t\t\tthis._mouseOver = false;\n\t\t\tthis._whenCursorReleased(event);\n\t\t\tthis._updatePreview();\n\t\t}\n\n\t\tthis._mouseDown = false;\n\t}\n\t\t\n\tprivate _whenCursorReleased = (event: Event): void => {\n\t\tif (this._change != null) this._doc.record(this._change);\n\t\tthis._change = null;\n\t\tthis._mouseDown = false;\n\t\tthis._updateCursorStatus();\n\t\tthis._render();\n\t}\n\t\t\n\tprivate _updatePreview(): void {\n\t\tconst showHighlight: boolean = this._mouseOver && !this._mouseDown;\n\t\tthis._highlight.style.visibility = showHighlight ? \"visible\" : \"hidden\";\n\t\t\t\n\t\tif (showHighlight) {\n\t\t\tconst radius: number = this._editorHeight / 2;\n\n\t\t\tlet highlightStart: number = (this._doc.song.loopStart) * this._barWidth;\n\t\t\tlet highlightStop: number = (this._doc.song.loopStart + this._doc.song.loopLength) * this._barWidth;\n\t\t\tif (this._cursor.mode == this._startMode) {\n\t\t\t\thighlightStop = (this._doc.song.loopStart) * this._barWidth + radius * 2;\n\t\t\t} else if (this._cursor.mode == this._endMode) {\n\t\t\t\thighlightStart = (this._doc.song.loopStart + this._doc.song.loopLength) * this._barWidth - radius * 2;\n\t\t\t} else if (this._cursor.mode == this._bothMode) {\n\t\t\t\tconst endPoints: Endpoints = this._findEndPoints(this._cursor.startBar);\n\t\t\t\thighlightStart = (endPoints.start) * this._barWidth;\n\t\t\t\thighlightStop = (endPoints.start + endPoints.length) * this._barWidth;\n\t\t\t}\n\n\t\t\tif (this._cursor.mode == this._loopMode) {\n\t\t\t\tconst barLoopStart = (this._loopAtPointStart + 0.5) * this._barWidth;\n\t\t\t\tconst barLoopEnd = (this._loopAtPointEnd + 0.5) * this._barWidth;\n\t\t\t\tthis._highlight.setAttribute(\"d\",\n\t\t\t\t\t`M ${barLoopStart} ${radius * 1.7} ` +\n\t\t\t\t\t`L ${barLoopStart - radius * 1.5} ${radius}` +\n\t\t\t\t\t`L ${barLoopStart} ${radius * 0.3}` +\n\t\t\t\t\t`L ${barLoopEnd} ${radius * 0.3}` +\n\t\t\t\t\t`L ${barLoopEnd + radius * 1.5} ${radius}` +\n\t\t\t\t\t`L ${barLoopEnd} ${radius * 1.7}` +\n\t\t\t\t\t`z`\n\t\t\t\t);\n\t\t\t}\n\t\t\telse {\n\n\t\t\t\tthis._highlight.setAttribute(\"d\",\n\t\t\t\t\t`M ${highlightStart + radius} ${4} ` +\n\t\t\t\t\t`L ${highlightStop - radius} ${4} ` +\n\t\t\t\t\t`A ${radius - 4} ${radius - 4} ${0} ${0} ${1} ${highlightStop - radius} ${this._editorHeight - 4} ` +\n\t\t\t\t\t`L ${highlightStart + radius} ${this._editorHeight - 4} ` +\n\t\t\t\t\t`A ${radius - 4} ${radius - 4} ${0} ${0} ${1} ${highlightStart + radius} ${4} ` +\n\t\t\t\t\t`z`\n\t\t\t\t);\n\n\t\t\t}\n\t\t}\n\t}\n\t\t\n\tprivate _documentChanged = (): void => {\n\t\tthis._render();\n\t}\n\n\tpublic setLoopAt(startBar: number, endBar: number): void {\n\t\tthis._loopAtPointStart = startBar;\n\t\tthis._loopAtPointEnd = endBar;\n\t\tthis._trackEditor.render();\n\t\tthis._render();\n    }\n\t\t\n\tprivate _render(): void {\n\t\tthis._barWidth = this._doc.getBarWidth();\n\t\t\t\n\t\tconst radius: number = this._editorHeight / 2;\n\t\tconst loopStart: number = (this._doc.song.loopStart) * this._barWidth;\n\t\tconst loopStop: number = (this._doc.song.loopStart + this._doc.song.loopLength) * this._barWidth;\n\t\t\t\n\t\tif (this._renderedBarCount != this._doc.song.barCount || this._renderedBarWidth != this._barWidth) {\n\t\t\tthis._renderedBarCount = this._doc.song.barCount;\n\t\t\tthis._renderedBarWidth = this._barWidth;\n\t\t\tconst editorWidth = this._barWidth * this._doc.song.barCount;\n\t\t\tthis.container.style.width = editorWidth + \"px\";\n\t\t\tthis._svg.setAttribute(\"width\", editorWidth + \"\");\n\t\t}\n\n\t\tif (this._renderedLoopStart != loopStart || this._renderedLoopStop != loopStop) {\n\t\t\tthis._renderedLoopStart = loopStart;\n\t\t\tthis._renderedLoopStop = loopStop;\n\t\t\tthis._loop.setAttribute(\"d\",\n\t\t\t\t`M ${loopStart + radius} ${2} ` +\n\t\t\t\t`L ${loopStop - radius} ${2} ` +\n\t\t\t\t`A ${radius - 2} ${radius - 2} ${0} ${0} ${1} ${loopStop - radius} ${this._editorHeight - 2} ` +\n\t\t\t\t`L ${loopStart + radius} ${this._editorHeight - 2} ` +\n\t\t\t\t`A ${radius - 2} ${radius - 2} ${0} ${0} ${1} ${loopStart + radius} ${2} ` +\n\t\t\t\t`z`\n\t\t\t);\n\t\t}\n\n\t\tconst barLoopStart = (this._loopAtPointStart + 0.5) * this._barWidth;\n\t\tconst barLoopEnd = (this._loopAtPointEnd + 0.5) * this._barWidth;\n\t\tif (this._renderedBarLoopStart != barLoopStart || this._renderedBarLoopEnd != barLoopEnd) {\n\t\t\tif (barLoopStart < 0 || barLoopEnd < 0) {\n\t\t\t\tthis._barLoop.setAttribute(\"d\", \"\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._barLoop.setAttribute(\"d\",\n\t\t\t\t\t`M ${barLoopStart} ${radius * 1.5} ` +\n\t\t\t\t\t`L ${barLoopStart - radius} ${radius}` +\n\t\t\t\t\t`L ${barLoopStart} ${radius * 0.5}` +\n\t\t\t\t\t`L ${barLoopEnd} ${radius * 0.5}` +\n\t\t\t\t\t`L ${barLoopEnd + radius} ${radius}` +\n\t\t\t\t\t`L ${barLoopEnd} ${radius * 1.5}` +\n\t\t\t\t\t`z`\n\t\t\t\t);\n\t\t\t}\n\t\t\tthis._renderedBarLoopStart = barLoopStart;\n\t\t\tthis._renderedBarLoopEnd = barLoopEnd;\n\t\t}\n\t\t\t\n\t\tthis._updatePreview();\n\t}\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nimport { Config } from \"../synth/SynthConfig\";\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\nimport { SongDocument } from \"./SongDocument\";\nimport { Prompt } from \"./Prompt\";\nimport { ChangeMoveNotesSideways } from \"./changes\";\nimport { ColorConfig } from \"./ColorConfig\";\n\n\tconst {button, div, span, h2, input, br, select, option} = HTML;\n\nexport class MoveNotesSidewaysPrompt implements Prompt {\n\t\tprivate readonly _beatsStepper: HTMLInputElement = input({style: \"width: 3em; margin-left: 1em;\", type: \"number\", step: \"0.01\", value: \"0\"});\n\t\tprivate readonly _conversionStrategySelect: HTMLSelectElement = select({style: \"width: 100%;\"},\n\t\t\toption({value: \"overflow\"}, \"Overflow notes across bars.\"),\n\t\t\toption({value: \"wrapAround\"}, \"Wrap notes around within bars.\"),\n\t);\n\t\tprivate readonly _cancelButton: HTMLButtonElement = button({class: \"cancelButton\"});\n\t\tprivate readonly _okayButton: HTMLButtonElement = button({class: \"okayButton\", style: \"width:45%;\"}, \"Okay\");\n\t\t\n\t\tpublic readonly container: HTMLDivElement = div({class: \"prompt noSelection\", style: \"width: 250px;\"},\n\t\th2(\"Move Notes Sideways\"),\n\t\t\tdiv({style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\"},\n\t\t\t\tdiv({style: \"text-align: right;\"},\n\t\t\t\t\"Beats to move:\",\n\t\t\t\tbr(),\n\t\t\t\t\tspan({style: `font-size: smaller; color: ${ColorConfig.secondaryText};`}, \"(Negative is left, positive is right)\"),\n\t\t\t),\n\t\t\tthis._beatsStepper,\n\t\t),\n\t\t\tdiv({style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\"},\n\t\t\t\tdiv({class: \"selectContainer\", style: \"width: 100%;\"}, this._conversionStrategySelect),\n\t\t),\n\t\t\tdiv({style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\"},\n\t\t\tthis._okayButton,\n\t\t),\n\t\tthis._cancelButton,\n\t);\n\t\t\n\tconstructor(private _doc: SongDocument) {\n\t\tthis._beatsStepper.min = (-this._doc.song.beatsPerBar) + \"\";\n\t\tthis._beatsStepper.max = this._doc.song.beatsPerBar + \"\";\n\t\t\t\n\t\tconst lastStrategy: string | null = window.localStorage.getItem(\"moveNotesSidewaysStrategy\");\n\t\tif (lastStrategy != null) {\n\t\t\tthis._conversionStrategySelect.value = lastStrategy;\n\t\t}\n\t\t\t\n\t\tthis._beatsStepper.select();\n\t\tsetTimeout(() => this._beatsStepper.focus(), 100); // Add 100ms because the key macro (W) gets captured by the stepper...\n\t\t\t\n\t\tthis._okayButton.addEventListener(\"click\", this._saveChanges);\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\n\t\tthis._beatsStepper.addEventListener(\"blur\", MoveNotesSidewaysPrompt._validateNumber);\n\t\tthis.container.addEventListener(\"keydown\", this._whenKeyPressed);\n\t}\n\t\t\n\t\tprivate _close = (): void => { \n\t\tthis._doc.undo();\n\t}\n\t\t\n\t\tpublic cleanUp = (): void => { \n\t\tthis._okayButton.removeEventListener(\"click\", this._saveChanges);\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\n\t\tthis._beatsStepper.removeEventListener(\"blur\", MoveNotesSidewaysPrompt._validateNumber);\n\t\tthis.container.removeEventListener(\"keydown\", this._whenKeyPressed);\n\t}\n\t\t\n\tprivate _whenKeyPressed = (event: KeyboardEvent): void => {\n\t\t\tif ((<Element> event.target).tagName != \"BUTTON\" && event.keyCode == 13) { // Enter key\n\t\t\tthis._saveChanges();\n\t\t}\n\t}\n\t\t\n\tprivate static _validateNumber(event: Event): void {\n\t\tconst input: HTMLInputElement = <HTMLInputElement>event.target;\n\t\tlet value: number = +input.value;\n\t\tvalue = Math.round(value * Config.partsPerBeat) / Config.partsPerBeat;\n\t\tvalue = Math.round(value * 100) / 100;\n\t\tinput.value = Math.max(+input.min, Math.min(+input.max, value)) + \"\";\n\t}\n\t\t\n\tprivate _saveChanges = (): void => {\n\t\twindow.localStorage.setItem(\"moveNotesSidewaysStrategy\", this._conversionStrategySelect.value);\n\t\tthis._doc.prompt = null;\n\t\tthis._doc.record(new ChangeMoveNotesSideways(this._doc, +this._beatsStepper.value, this._conversionStrategySelect.value), true);\n\t}\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nimport { SongDocument } from \"./SongDocument\";\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\nimport { ColorConfig } from \"./ColorConfig\";\nimport { ChannelRow } from \"./ChannelRow\";\nimport { InputBox } from \"./HTMLWrapper\";\nimport { ChangeChannelOrder, ChangeChannelName, ChangeRemoveChannel } from \"./changes\";\nimport { Config } from \"../synth/SynthConfig\";\nimport { SongEditor } from \"./SongEditor\";\n\n//namespace beepbox {\nexport class MuteEditor {\n\t\n\tprivate _cornerFiller: HTMLDivElement = HTML.div({style: `background: ${ColorConfig.editorBackground}; position: sticky; bottom: 0; left: 0; width: 32px; height: 30px;`});\n\t\n\tprivate readonly _buttons: HTMLDivElement[] = [];\n\tprivate readonly _channelCounts: HTMLDivElement[] = [];\n\tprivate readonly _channelNameDisplay: HTMLDivElement = HTML.div({ style: `background-color: ${ColorConfig.uiWidgetFocus}; white-space:nowrap; display: none; transform:translate(20px); width: auto; pointer-events: none; position: absolute; border-radius: 0.2em; z-index: 2;`, \"color\": ColorConfig.primaryText }, \"\");\n\tpublic readonly _channelNameInput: InputBox = new InputBox(HTML.input({ style: `color: ${ColorConfig.primaryText}; background-color: ${ColorConfig.uiWidgetFocus}; margin-top: -2px; display: none; width: 6em; position: absolute; border-radius: 0.2em; z-index: 2;`, \"color\": ColorConfig.primaryText }, \"\"), this._doc, (oldValue: string, newValue: string) => new ChangeChannelName(this._doc, oldValue, newValue));\n\n\tprivate readonly _channelDropDown: HTMLSelectElement = HTML.select({ style: \"width: 0px; left: 19px; height: 19px; position:absolute; opacity:0\" },\n\n\t\tHTML.option({ value: \"rename\" }, \"Rename...\"),\n\t\tHTML.option({ value: \"chnUp\" }, \"Move Channel Up\"),\n\t\tHTML.option({ value: \"chnDown\" }, \"Move Channel Down\"),\n\t\tHTML.option({ value: \"chnMute\" }, \"Mute Channel\"),\n\t\tHTML.option({ value: \"chnSolo\" }, \"Solo Channel\"),\n\t\tHTML.option({ value: \"chnInsert\" }, \"Insert Channel Below\"),\n\t\tHTML.option({ value: \"chnDelete\" }, \"Delete This Channel\"),\n\t);\n\n\tpublic readonly container: HTMLElement = HTML.div({ class: \"muteEditor\", style: \"position: sticky; padding-top: \" + Config.barEditorHeight + \"px;\" }, this._channelNameDisplay, this._channelNameInput.input, this._channelDropDown);\n\n\tprivate _editorHeight: number = 128;\n\tprivate _renderedPitchChannels: number = 0;\n\tprivate _renderedNoiseChannels: number = 0;\n\tprivate _renderedChannelHeight: number = -1;\n\tprivate _renderedModChannels: number = 0;\n\tprivate _channelDropDownChannel: number = 0;\n\tprivate _channelDropDownOpen: boolean = false;\n\tprivate _channelDropDownLastState: boolean = false;\n\n\tconstructor(private _doc: SongDocument, private _editor: SongEditor) {\n\t\tthis.container.addEventListener(\"click\", this._onClick);\n\t\tthis.container.addEventListener(\"mousemove\", this._onMouseMove);\n\t\tthis.container.addEventListener(\"mouseleave\", this._onMouseLeave);\n\n\t\tthis._channelDropDown.selectedIndex = -1;\n\t\tthis._channelDropDown.addEventListener(\"change\", this._channelDropDownHandler);\n\t\tthis._channelDropDown.addEventListener(\"mousedown\", this._channelDropDownGetOpenedPosition);\n\t\tthis._channelDropDown.addEventListener(\"blur\", this._channelDropDownBlur);\n\t\tthis._channelDropDown.addEventListener(\"click\", this._channelDropDownClick);\n\n\t\tthis._channelNameInput.input.addEventListener(\"change\", this._channelNameInputHide);\n\t\tthis._channelNameInput.input.addEventListener(\"blur\", this._channelNameInputHide);\n\t\tthis._channelNameInput.input.addEventListener(\"mousedown\", this._channelNameInputClicked);\n\t\tthis._channelNameInput.input.addEventListener(\"input\", this._channelNameInputWhenInput);\n\t}\n\n\tprivate _channelNameInputWhenInput = (): void => {\n\t\tlet newValue = this._channelNameInput.input.value;\n\t\tif (newValue.length > 15) {\n\t\t\tthis._channelNameInput.input.value = newValue.substring(0, 15);\n\t\t}\n\t}\n\n\tprivate _channelNameInputClicked = (event: MouseEvent): void => {\n\t\tevent.stopPropagation();\n\t}\n\n\tprivate _channelNameInputHide = (): void => {\n\t\tthis._channelNameInput.input.style.setProperty(\"display\", \"none\");\n\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"none\");\n\t}\n\n\tprivate _channelDropDownClick = (event: MouseEvent): void => {\n\t\tthis._channelDropDownOpen = !this._channelDropDownLastState;\n\t\tthis._channelDropDownGetOpenedPosition(event);\n\t\t//console.log(\"click \" + this._channelDropDownOpen);\n\t}\n\n\tprivate _channelDropDownBlur = (): void => {\n\t\tthis._channelDropDownOpen = false;\n\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"none\");\n\t\t//console.log(\"blur \" + this._channelDropDownOpen);\n\t}\n\n\tprivate _channelDropDownGetOpenedPosition = (event: MouseEvent): void => {\n\n\t\tthis._channelDropDownLastState = this._channelDropDownOpen;\n\n\t\tthis._channelDropDownChannel = Math.floor(Math.min(this._buttons.length, Math.max(0, parseInt(this._channelDropDown.style.getPropertyValue(\"top\")) / ChannelRow.patternHeight)));\n\t\tthis._doc.muteEditorChannel = this._channelDropDownChannel;\n\n\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"\");\n\n\t\t// Check if channel is at limit, in which case another can't be inserted\n\t\tif ((this._channelDropDownChannel < this._doc.song.pitchChannelCount && this._doc.song.pitchChannelCount == Config.pitchChannelCountMax)\n\t\t\t|| (this._channelDropDownChannel >= this._doc.song.pitchChannelCount && this._channelDropDownChannel < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount && this._doc.song.noiseChannelCount == Config.noiseChannelCountMax)\n\t\t\t|| (this._channelDropDownChannel >= this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount && this._doc.song.modChannelCount == Config.modChannelCountMax)) {\n\t\t\tthis._channelDropDown.options[5].disabled = true;\n\t\t}\n\t\telse {\n\t\t\tthis._channelDropDown.options[5].disabled = false;\n\t\t}\n\n\t\t// Also check if a channel is eligible to move up or down based on the song's channel settings.\n\t\tif (this._channelDropDownChannel == 0 || this._channelDropDownChannel == this._doc.song.pitchChannelCount || this._channelDropDownChannel == this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\n\t\t\tthis._channelDropDown.options[1].disabled = true;\n\t\t}\n\t\telse {\n\t\t\tthis._channelDropDown.options[1].disabled = false;\n\t\t}\n\t\tif (this._channelDropDownChannel == this._doc.song.pitchChannelCount - 1 || this._channelDropDownChannel == this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount - 1 || this._channelDropDownChannel == this._doc.song.getChannelCount() - 1) {\n\t\t\tthis._channelDropDown.options[2].disabled = true;\n\t\t}\n\t\telse {\n\t\t\tthis._channelDropDown.options[2].disabled = false;\n\t\t}\n\n\t\t// Also, can't delete the last pitch channel.\n\t\tif (this._doc.song.pitchChannelCount == 1 && this._channelDropDownChannel == 0) {\n\t\t\tthis._channelDropDown.options[6].disabled = true;\n\t\t}\n\t\telse {\n\t\t\tthis._channelDropDown.options[6].disabled = false;\n\t\t}\n\t}\n\n\tprivate _channelDropDownHandler = (event: Event): void => {\n\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"none\");\n\t\tthis._channelDropDown.style.setProperty(\"display\", \"none\");\n\t\tthis._channelDropDownOpen = false;\n\t\tevent.stopPropagation();\n\t\t//console.log(\"handler \" + this._channelDropDownOpen);\n\n\t\tswitch (this._channelDropDown.value) {\n\t\t\tcase \"rename\":\n\t\t\t\tthis._channelNameInput.input.style.setProperty(\"display\", \"\");\n\t\t\t\tthis._channelNameInput.input.style.setProperty(\"transform\", this._channelNameDisplay.style.getPropertyValue(\"transform\"));\n\t\t\t\tif (this._channelNameDisplay.textContent != null) {\n\t\t\t\t\tthis._channelNameInput.input.value = this._channelNameDisplay.textContent;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis._channelNameInput.input.value = \"\";\n\t\t\t\t}\n\t\t\t\tthis._channelNameInput.input.select();\n\t\t\t\tbreak;\n\t\t\tcase \"chnUp\":\n\t\t\t\tthis._doc.record(new ChangeChannelOrder(this._doc, this._channelDropDownChannel, this._channelDropDownChannel, -1));\n\t\t\t\tbreak;\n\t\t\tcase \"chnDown\":\n\t\t\t\tthis._doc.record(new ChangeChannelOrder(this._doc, this._channelDropDownChannel, this._channelDropDownChannel, 1));\n\t\t\t\tbreak;\n\t\t\tcase \"chnMute\":\n\t\t\t\tthis._doc.song.channels[this._channelDropDownChannel].muted = !this._doc.song.channels[this._channelDropDownChannel].muted;\n\t\t\t\tthis.render();\n\t\t\t\tbreak;\n\t\t\tcase \"chnSolo\": {\n\t\t\t\t// Check for any channel not matching solo pattern\n\t\t\t\tlet shouldSolo: boolean = false;\n\t\t\t\tfor (let channel: number = 0; channel < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; channel++) {\n\t\t\t\t\tif (this._doc.song.channels[channel].muted == (channel == this._channelDropDownChannel)) {\n\t\t\t\t\t\tshouldSolo = true;\n\t\t\t\t\t\tchannel = this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (shouldSolo) {\n\t\t\t\t\tfor (let channel: number = 0; channel < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; channel++) {\n\t\t\t\t\t\tthis._doc.song.channels[channel].muted = (channel != this._channelDropDownChannel);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tfor (let channel: number = 0; channel < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; channel++) {\n\t\t\t\t\t\tthis._doc.song.channels[channel].muted = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.render();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase \"chnInsert\": {\n\t\t\t\tthis._doc.channel = this._channelDropDownChannel;\n\t\t\t\tthis._doc.selection.resetBoxSelection();\n\t\t\t\tthis._doc.selection.insertChannel();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase \"chnDelete\": {\n\t\t\t\tthis._doc.record(new ChangeRemoveChannel(this._doc, this._channelDropDownChannel, this._channelDropDownChannel));\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (this._channelDropDown.value != \"rename\")\n\t\t\tthis._editor.refocusStage();\n\n\t\tthis._channelDropDown.selectedIndex = -1;\n\t}\n\n\tprivate _onClick = (event: MouseEvent): void => {\n\n\t\tconst index = this._buttons.indexOf(<HTMLDivElement>event.target);\n\t\tif (index == -1) return;\n\t\tlet xPos: number = event.clientX - this._buttons[0].getBoundingClientRect().left;\n\t\tif (xPos < 21.0) {\n\t\t\tthis._doc.song.channels[index].muted = !this._doc.song.channels[index].muted;\n\t\t}\n\t\tthis._doc.notifier.changed();\n\t}\n\n\tprivate _onMouseMove = (event: MouseEvent): void => {\n\t\tconst index = this._buttons.indexOf(<HTMLDivElement>event.target);\n\t\tif (index == -1) {\n\t\t\tif (!this._channelDropDownOpen && event.target != this._channelNameDisplay && event.target != this._channelDropDown) {\n\t\t\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"none\");\n\t\t\t\tthis._channelDropDown.style.setProperty(\"display\", \"none\");\n\t\t\t\tthis._channelDropDown.style.setProperty(\"width\", \"0px\");\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\tif (this._channelDropDownOpen && this._channelNameDisplay.style.getPropertyValue(\"display\") == \"none\" && this._channelNameInput.input.style.getPropertyValue(\"display\") == \"none\") {\n\t\t\tthis._channelDropDownOpen = false;\n        }\n\t\tlet xPos: number = event.clientX - this._buttons[0].getBoundingClientRect().left;\n\t\tif (xPos >= 21.0) {\n\t\t\tif (!this._channelDropDownOpen) {\n\t\t\t\t// Mouse over chn. number\n\t\t\t\tthis._channelDropDown.style.setProperty(\"display\", \"\");\n\t\t\t\tvar height = ChannelRow.patternHeight;\n\t\t\t\tthis._channelNameDisplay.style.setProperty(\"transform\", \"translate(20px, \" + (height / 4 + height * index) + \"px)\");\n\n\t\t\t\tif (this._doc.song.channels[index].name != \"\") {\n\t\t\t\t\tthis._channelNameDisplay.textContent = this._doc.song.channels[index].name;\n\t\t\t\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (index < this._doc.song.pitchChannelCount) {\n\t\t\t\t\t\tthis._channelNameDisplay.textContent = \"Pitch \" + (index + 1);\n\t\t\t\t\t} else if (index < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\n\t\t\t\t\t\tthis._channelNameDisplay.textContent = \"Noise \" + (index - this._doc.song.pitchChannelCount + 1);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis._channelNameDisplay.textContent = \"Mod \" + (index - this._doc.song.pitchChannelCount - this._doc.song.noiseChannelCount + 1);\n\t\t\t\t\t}\n\t\t\t\t\t// The name set will only show up when this becomes visible, e.g. when the dropdown is opened.\n\t\t\t\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"none\");\n\t\t\t\t}\n\n\t\t\t\tthis._channelDropDown.style.top = (Config.barEditorHeight + 2 + index * ChannelRow.patternHeight) + \"px\";\n\t\t\t\tthis._channelDropDown.style.setProperty(\"width\", \"15px\");\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (!this._channelDropDownOpen) {\n\t\t\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"none\");\n\t\t\t\tthis._channelDropDown.style.setProperty(\"display\", \"none\");\n\t\t\t\tthis._channelDropDown.style.setProperty(\"width\", \"0px\");\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _onMouseLeave = (event: MouseEvent): void => {\n\t\tif (!this._channelDropDownOpen) {\n\t\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"none\");\n\t\t\tthis._channelDropDown.style.setProperty(\"width\", \"0px\");\n\t\t}\n\t}\n\n\tpublic onKeyUp(event: KeyboardEvent): void {\n\t\tswitch (event.keyCode) {\n\t\t\tcase 27: // esc\n\t\t\t\tthis._channelDropDownOpen = false;\n\t\t\t\t//console.log(\"close\");\n\t\t\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"none\");\n\t\t\t\tbreak;\n\t\t\tcase 13: // enter\n\t\t\t\tthis._channelDropDownOpen = false;\n\t\t\t\t//console.log(\"close\");\n\t\t\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"none\");\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tpublic render(): void {\n\t\tif (!this._doc.prefs.enableChannelMuting) return;\n\t\tlet startingChannelCount: number = this._buttons.length;\n\n\t\tif (this._buttons.length != this._doc.song.getChannelCount()) {\n\t\t\tfor (let y: number = this._buttons.length; y < this._doc.song.getChannelCount(); y++) {\n\n\t\t\t\tconst channelCountText: HTMLDivElement = HTML.div({ class: \"noSelection muteButtonText\", style: \"display: table-cell; -webkit-text-stroke: 1.5px; vertical-align: middle; text-align: center; -webkit-user-select: none; -webkit-touch-callout: none; -moz-user-select: none; -ms-user-select: none; user-select: none; pointer-events: none; width: 12px; height: 20px; transform: translate(0px, 1px);\" });\n\t\t\t\tconst muteButton: HTMLDivElement = HTML.div({ class: \"mute-button\", title: \"Mute (M), Mute All (⇧M), Solo (S), Exclude (⇧S)\", style: `display: block; pointer-events: none; width: 16px; height: 20px; transform: translate(2px, 1px);` });\n\n\t\t\t\tconst muteContainer: HTMLDivElement = HTML.div({ style: `align-items: center; height: 20px; margin: 0px; display: table; flex-direction: row; justify-content: space-between;` }, [\n\t\t\t\t\tmuteButton,\n\t\t\t\t\tchannelCountText,\n\t\t\t\t]);\n\t\t\t\tthis.container.appendChild(muteContainer);\n\t\t\t\tthis._buttons[y] = muteContainer;\n\t\t\t\tthis._channelCounts[y] = channelCountText;\n\t\t\t}\n\n\t\t\tfor (let y: number = this._doc.song.getChannelCount(); y < this._buttons.length; y++) {\n\t\t\t\tthis.container.removeChild(this._buttons[y]);\n\t\t\t}\n\n\t\t\tthis._buttons.length = this._doc.song.getChannelCount();\n\n\t\t\tthis.container.appendChild(this._cornerFiller);\n\t\t}\n\n\t\tfor (let y: number = 0; y < this._doc.song.getChannelCount(); y++) {\n\t\t\tif (this._doc.song.channels[y].muted) {\n\t\t\t\tthis._buttons[y].children[0].classList.add(\"muted\");\n\n\t\t\t\tif (y < this._doc.song.pitchChannelCount)\n\t\t\t\t\tthis._channelCounts[y].style.color = ColorConfig.trackEditorBgPitchDim;\n\t\t\t\telse if (y < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount)\n\t\t\t\t\tthis._channelCounts[y].style.color = ColorConfig.trackEditorBgNoiseDim;\n\t\t\t\telse\n\t\t\t\t\tthis._channelCounts[y].style.color = ColorConfig.trackEditorBgModDim;\n\n\t\t\t} else {\n\t\t\t\tthis._buttons[y].children[0].classList.remove(\"muted\");\n\n\t\t\t\tif (y < this._doc.song.pitchChannelCount)\n\t\t\t\t\tthis._channelCounts[y].style.color = ColorConfig.trackEditorBgPitch;\n\t\t\t\telse if (y < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount)\n\t\t\t\t\tthis._channelCounts[y].style.color = ColorConfig.trackEditorBgNoise;\n\t\t\t\telse\n\t\t\t\t\tthis._channelCounts[y].style.color = ColorConfig.trackEditorBgMod;\n\t\t\t}\n\t\t}\n\n\t\tif (this._renderedChannelHeight != ChannelRow.patternHeight || startingChannelCount != this._buttons.length) {\n\t\t\tfor (let y: number = 0; y < this._doc.song.getChannelCount(); y++) {\n\t\t\t\tthis._buttons[y].style.marginTop = ((ChannelRow.patternHeight - 20) / 2) + \"px\";\n\t\t\t\tthis._buttons[y].style.marginBottom = ((ChannelRow.patternHeight - 20) / 2) + \"px\";\n\t\t\t}\n\t\t}\n\n\t\tif (this._renderedModChannels != this._doc.song.modChannelCount || startingChannelCount != this._buttons.length) {\n\t\t\tfor (let y: number = 0; y < this._doc.song.getChannelCount(); y++) {\n\t\t\t\tif (y < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\n\t\t\t\t\tthis._buttons[y].children[0].classList.remove(\"modMute\");\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis._buttons[y].children[0].classList.add(\"modMute\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this._renderedModChannels != this._doc.song.modChannelCount || this._renderedPitchChannels != this._doc.song.pitchChannelCount || this._renderedNoiseChannels != this._doc.song.noiseChannelCount) {\n\t\t\tfor (let y: number = 0; y < this._doc.song.getChannelCount(); y++) {\n\t\t\t\tif (y < this._doc.song.pitchChannelCount) {\n\t\t\t\t\tlet val: number = (y + 1);\n\t\t\t\t\tthis._channelCounts[y].textContent = val + \"\";\n\t\t\t\t\tthis._channelCounts[y].style.fontSize = (val >= 10) ? \"xx-small\" : \"inherit\";\n\t\t\t\t}\n\t\t\t\telse if (y < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\n\t\t\t\t\tlet val: number = (y - this._doc.song.pitchChannelCount + 1);\n\t\t\t\t\tthis._channelCounts[y].textContent = val + \"\";\n\t\t\t\t\tthis._channelCounts[y].style.fontSize = (val >= 10) ? \"xx-small\" : \"inherit\";\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlet val: number = (y - this._doc.song.pitchChannelCount - this._doc.song.noiseChannelCount + 1);\n\t\t\t\t\tthis._channelCounts[y].textContent = val + \"\";\n\t\t\t\t\tthis._channelCounts[y].style.fontSize = (val >= 10) ? \"xx-small\" : \"inherit\";\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._renderedPitchChannels = this._doc.song.pitchChannelCount;\n\t\t\tthis._renderedNoiseChannels = this._doc.song.noiseChannelCount;\n\t\t\tthis._renderedModChannels = this._doc.song.modChannelCount;\n\t\t}\n\n\t\tif (startingChannelCount != this._buttons.length || this._renderedChannelHeight != ChannelRow.patternHeight) {\n\t\t\tthis._renderedChannelHeight = ChannelRow.patternHeight;\n\t\t\tthis._editorHeight = Config.barEditorHeight + this._doc.song.getChannelCount() * ChannelRow.patternHeight;\n\t\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"none\");\n\t\t\tthis.container.style.height = (this._editorHeight + 16) + \"px\";\n\n\t\t\tif (ChannelRow.patternHeight < 27) {\n\t\t\t\tthis._channelNameDisplay.style.setProperty(\"margin-top\", \"-2px\");\n\t\t\t\tthis._channelDropDown.style.setProperty(\"margin-top\", \"-4px\");\n\t\t\t\tthis._channelNameInput.input.style.setProperty(\"margin-top\", \"-4px\");\n\n\t\t\t}\n\t\t\telse if (ChannelRow.patternHeight < 30) {\n\t\t\t\tthis._channelNameDisplay.style.setProperty(\"margin-top\", \"-1px\");\n\t\t\t\tthis._channelDropDown.style.setProperty(\"margin-top\", \"-3px\");\n\t\t\t\tthis._channelNameInput.input.style.setProperty(\"margin-top\", \"-3px\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._channelNameDisplay.style.setProperty(\"margin-top\", \"0px\");\n\t\t\t\tthis._channelDropDown.style.setProperty(\"margin-top\", \"0px\");\n\t\t\t\tthis._channelNameInput.input.style.setProperty(\"margin-top\", \"-2px\");\n\t\t\t}\n\t\t}\n\t}\n}\n//}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nimport { Config } from \"../synth/SynthConfig\";\nimport { SongDocument } from \"./SongDocument\";\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\nimport { ChangeOctave } from \"./changes\";\nimport { ColorConfig } from \"./ColorConfig\";\nimport { Piano } from \"./Piano\";\n\nexport class OctaveScrollBar {\n\tprivate readonly _editorWidth: number = 20;\n\tprivate readonly _editorHeight: number = 481;\n\tprivate readonly _notchHeight: number = 4.0;\n\tprivate readonly _octaveCount: number = Config.pitchOctaves;\n\tprivate readonly _octaveHeight: number = (this._editorHeight - this._notchHeight) / this._octaveCount;\n\t\n\tprivate readonly _handle: SVGRectElement = SVG.rect({fill: ColorConfig.uiWidgetBackground, x: 2, y: 0, width: this._editorWidth - 4});\n\tprivate readonly _handleHighlight: SVGRectElement = SVG.rect({fill: \"none\", stroke: ColorConfig.hoverPreview, \"stroke-width\": 2, \"pointer-events\": \"none\", x: 1, y: 0, width: this._editorWidth - 2});\n\t\tprivate readonly _upHighlight: SVGPathElement = SVG.path({fill: ColorConfig.hoverPreview, \"pointer-events\": \"none\"});\n\t\tprivate readonly _downHighlight: SVGPathElement = SVG.path({fill: ColorConfig.hoverPreview, \"pointer-events\": \"none\"});\n\t\t\n\tprivate readonly _svg: SVGSVGElement = SVG.svg({ style: \"background-color: ${ColorConfig.editorBackground}; touch-action: pan-x; position: absolute;\", width: this._editorWidth, height: \"100%\", viewBox: \"0 0 20 \" + this._editorHeight, preserveAspectRatio: \"none\" });\n\t\tpublic readonly container: HTMLDivElement = HTML.div({id: \"octaveScrollBarContainer\", style: \"width: 20px; height: 100%; overflow: hidden; position: relative; flex-shrink: 0;\"}, this._svg);\n\t\t\n\t//private _mouseX: number = 0;\n\tprivate _mouseY: number = 0;\n\tprivate _mouseDown: boolean = false;\n\tprivate _mouseOver: boolean = false;\n\tprivate _dragging: boolean = false;\n\tprivate _dragStart: number;\n\tprivate _barBottom: number;\n\tprivate _barHeight: number;\n\tprivate _renderedBarBottom: number = -1;\n\tprivate _renderedVisibleOctaveCount: number = -1;\n\tprivate _change: ChangeOctave | null = null;\n\t\t\n\tconstructor(private _doc: SongDocument, private _piano: Piano) {\n\t\tthis._doc.notifier.watch(this._documentChanged);\n\t\tthis._documentChanged();\n\t\t\t\n\t\tthis._svg.appendChild(this._handle);\n\t\t\t\n\t\t// notches:\n\t\tfor (let i: number = 0; i <= this._octaveCount; i++) {\n\t\t\t\tthis._svg.appendChild(SVG.rect({fill: ColorConfig.tonic, x: 0, y: i * this._octaveHeight, width: this._editorWidth, height: this._notchHeight}));\n\t\t}\n\t\t\t\n\t\tthis._svg.appendChild(this._handleHighlight);\n\t\tthis._svg.appendChild(this._upHighlight);\n\t\tthis._svg.appendChild(this._downHighlight);\n\t\t\t\n\t\tconst center: number = this._editorWidth * 0.5;\n\t\tconst base: number = 20;\n\t\tconst tip: number = 9;\n\t\tconst arrowWidth: number = 6;\n\t\tthis._upHighlight.setAttribute(\"d\", `M ${center} ${tip} L ${center + arrowWidth} ${base} L ${center - arrowWidth} ${base} z`);\n\t\tthis._downHighlight.setAttribute(\"d\", `M ${center} ${this._editorHeight - tip} L ${center + arrowWidth} ${this._editorHeight - base} L ${center - arrowWidth} ${this._editorHeight - base} z`);\n\t\t\t\n\t\tthis.container.addEventListener(\"mousedown\", this._whenMousePressed);\n\t\tdocument.addEventListener(\"mousemove\", this._whenMouseMoved);\n\t\tdocument.addEventListener(\"mouseup\", this._whenCursorReleased);\n\t\tthis.container.addEventListener(\"mouseover\", this._whenMouseOver);\n\t\tthis.container.addEventListener(\"mouseout\", this._whenMouseOut);\n\t\t\t\n\t\tthis.container.addEventListener(\"touchstart\", this._whenTouchPressed);\n\t\tthis.container.addEventListener(\"touchmove\", this._whenTouchMoved);\n\t\tthis.container.addEventListener(\"touchend\", this._whenCursorReleased);\n\t\tthis.container.addEventListener(\"touchcancel\", this._whenCursorReleased);\n\t}\n\t\t\n\tprivate _whenMouseOver = (event: MouseEvent): void => {\n\t\tif (this._mouseOver) return;\n\t\tthis._mouseOver = true;\n\t\tthis._updatePreview();\n\t}\n\t\t\n\tprivate _whenMouseOut = (event: MouseEvent): void => {\n\t\tif (!this._mouseOver) return;\n\t\tthis._mouseOver = false;\n\t\tthis._updatePreview();\n\t}\n\t\t\n\tprivate _whenMousePressed = (event: MouseEvent): void => {\n\t\tevent.preventDefault();\n\t\tthis._mouseDown = true;\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\n\t\t//this._mouseX = (event.clientX || event.pageX) - boundingRect.left;\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\n\t\tif (this._doc.song.getChannelIsNoise(this._doc.channel) || this._doc.song.getChannelIsMod(this._doc.channel)) return;\n\t\tthis._updatePreview();\n\t\t\t\n\t\tif (this._mouseY >= this._barBottom - this._barHeight && this._mouseY <= this._barBottom) {\n\t\t\tthis._dragging = true;\n\t\t\tthis._change = null;\n\t\t\tthis._dragStart = this._mouseY;\n\t\t}\n\t}\n\t\t\n\tprivate _whenTouchPressed = (event: TouchEvent): void => {\n\t\tevent.preventDefault();\n\t\tthis._mouseDown = true;\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\n\t\t//this._mouseX = event.touches[0].clientX - boundingRect.left;\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\n\t\tif (this._doc.song.getChannelIsNoise(this._doc.channel) || this._doc.song.getChannelIsMod(this._doc.channel)) return;\n\t\tthis._updatePreview();\n\t\t\t\n\t\tif (this._mouseY >= this._barBottom - this._barHeight && this._mouseY <= this._barBottom) {\n\t\t\tthis._dragging = true;\n\t\t\tthis._change = null;\n\t\t\tthis._dragStart = this._mouseY;\n\t\t}\n\t}\n\t\t\n\tprivate _whenMouseMoved = (event: MouseEvent): void => {\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\n\t\t//this._mouseX = (event.clientX || event.pageX) - boundingRect.left;\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\n\t\tthis._whenCursorMoved();\n\t}\n\t\t\n\tprivate _whenTouchMoved = (event: TouchEvent): void => {\n\t\tif (!this._mouseDown) return;\n\t\tevent.preventDefault();\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\n\t\t//this._mouseX = event.touches[0].clientX - boundingRect.left;\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\n\t\tthis._whenCursorMoved();\n\t}\n\t\t\n\tprivate _whenCursorMoved(): void {\n\t\tif (this._doc.song.getChannelIsNoise(this._doc.channel) || this._doc.song.getChannelIsMod(this._doc.channel)) return;\n\t\tif (this._dragging) {\n\t\t\tconst visibleOctaveCount: number = this._doc.getVisibleOctaveCount();\n\t\t\tconst scrollableOctaves: number = Config.pitchOctaves - visibleOctaveCount;\n\t\t\tconst continuingProspectiveChange: boolean = this._doc.lastChangeWas(this._change);\n\t\t\tconst oldValue: number = continuingProspectiveChange ? this._change!.oldValue : this._doc.song.channels[this._doc.channel].octave;\n\t\t\t\n\t\t\tconst currentOctave: number = this._doc.getBaseVisibleOctave(this._doc.channel);\n\t\t\tlet octave: number = currentOctave;\n\t\t\twhile (this._mouseY - this._dragStart < -this._octaveHeight * 0.5) {\n\t\t\t\t\tif (octave < scrollableOctaves) {\n\t\t\t\t\toctave++;\n\t\t\t\t\tthis._dragStart -= this._octaveHeight;\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\twhile (this._mouseY - this._dragStart > this._octaveHeight * 0.5) {\n\t\t\t\tif (octave > 0) {\n\t\t\t\t\toctave--;\n\t\t\t\t\tthis._dragStart += this._octaveHeight;\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\t\n\t\t\tthis._change = new ChangeOctave(this._doc, oldValue, Math.floor(octave + visibleOctaveCount * 0.5));\n\t\t\tthis._doc.setProspectiveChange(this._change);\n\t\t}\n\t\t\t\n\t\tif (this._mouseOver) this._updatePreview();\n\t}\n\t\t\n\tprivate _whenCursorReleased = (event: Event): void => {\n\t\tif (!this._doc.song.getChannelIsNoise(this._doc.channel) && !this._doc.song.getChannelIsMod(this._doc.channel) && this._mouseDown) {\n\t\t\tif (this._dragging) {\n\t\t\t\tif (this._change != null) this._doc.record(this._change);\n\t\t\t} else {\n\t\t\t\tconst visibleOctaveCount: number = this._doc.getVisibleOctaveCount();\n\t\t\t\tconst scrollableOctaves: number = Config.pitchOctaves - visibleOctaveCount;\n\t\t\t\tconst canReplaceLastChange: boolean = this._doc.lastChangeWas(this._change);\n\t\t\t\tconst oldValue: number = canReplaceLastChange ? this._change!.oldValue : this._doc.song.channels[this._doc.channel].octave;\n\t\t\t\n\t\t\t\tconst currentOctave: number = this._doc.getBaseVisibleOctave(this._doc.channel);\n\t\t\t\tif (this._mouseY < this._barBottom - this._barHeight * 0.5) {\n\t\t\t\t\tif (currentOctave < scrollableOctaves) {\n\t\t\t\t\t\tthis._change = new ChangeOctave(this._doc, oldValue, Math.floor(currentOctave + 1 + visibleOctaveCount * 0.5));\n\t\t\t\t\t\tthis._doc.record(this._change, canReplaceLastChange);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (currentOctave > 0) {\n\t\t\t\t\t\tthis._change = new ChangeOctave(this._doc, oldValue, Math.floor(currentOctave - 1 + visibleOctaveCount * 0.5));\n\t\t\t\t\t\tthis._doc.record(this._change, canReplaceLastChange);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis._mouseDown = false;\n\t\tthis._dragging = false;\n\t\tthis._updatePreview();\n\t}\n\t\t\n\tprivate _updatePreview(): void {\n\t\tconst showHighlight: boolean = this._mouseOver && !this._mouseDown;\n\t\tlet showUpHighlight: boolean = false;\n\t\tlet showDownHighlight: boolean = false;\n\t\tlet showHandleHighlight: boolean = false;\n\t\t\t\n\t\tif (showHighlight) {\n\t\t\tif (this._mouseY < this._barBottom - this._barHeight) {\n\t\t\t\tshowUpHighlight = true;\n\t\t\t} else if (this._mouseY > this._barBottom) {\n\t\t\t\tshowDownHighlight = true;\n\t\t\t} else {\n\t\t\t\tshowHandleHighlight = true;\n\t\t\t}\n\t\t}\n\t\t\t\n\t\tthis._upHighlight.style.visibility = showUpHighlight ? \"inherit\" : \"hidden\";\n\t\tthis._downHighlight.style.visibility = showDownHighlight ? \"inherit\" : \"hidden\";\n\t\tthis._handleHighlight.style.visibility = showHandleHighlight ? \"inherit\" : \"hidden\";\n\t}\n\t\t\n\tprivate _documentChanged = (): void => {\n\t\tthis._barBottom = this._editorHeight - (this._octaveHeight * this._doc.getBaseVisibleOctave(this._doc.channel));\n\t\tthis._svg.style.visibility = (this._doc.song.getChannelIsNoise(this._doc.channel) || this._doc.song.getChannelIsMod(this._doc.channel)) ? \"hidden\" : \"visible\";\n\t\tconst visibleOctaveCount: number = this._doc.getVisibleOctaveCount();\n\t\tif (this._renderedBarBottom != this._barBottom || this._renderedVisibleOctaveCount != visibleOctaveCount) {\n\t\t\tthis._renderedBarBottom = this._barBottom;\n\t\t\tthis._renderedVisibleOctaveCount = visibleOctaveCount;\n\t\t\tthis._barHeight = (this._octaveHeight * visibleOctaveCount + this._notchHeight);\n\t\t\tthis._handle.setAttribute(\"height\", String(this._barHeight));\n\t\t\tthis._handleHighlight.setAttribute(\"height\", String(this._barHeight));\n\t\t\tthis._handle.setAttribute(\"y\", String(this._barBottom - this._barHeight));\n\t\t\tthis._handleHighlight.setAttribute(\"y\", String(this._barBottom - this._barHeight));\n\n\t\t\tthis._piano.forceRender();\n\t\t}\n\t\tthis._updatePreview();\n\t}\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nimport {Config} from \"../synth/SynthConfig\";\nimport {SongDocument} from \"./SongDocument\";\nimport {AnalogousDrum, analogousDrumMap, MidiEventType} from \"./Midi\";\n\ndeclare global {\n\tinterface Navigator {\n\t\trequestMIDIAccess?(): Promise<any>;\n\t}\n}\n\ninterface MIDIInput extends EventTarget {\n\tid: string;\n\ttype: \"input\" | \"output\";\n\tstate: \"disconnected\" | \"connected\";\n}\n\ninterface MIDIConnectionEvent {\n\tport: MIDIInput;\n}\n\ninterface MIDIMessageEvent {\n\tdata: [type: number, key: number, velocity: number];\n\ttarget: MIDIInput;\n}\n\n// A unique id for this tab.\nconst id: string = ((Math.random() * 0xffffffff) >>> 0).toString(16);\n\nexport class MidiInputHandler {\n\tconstructor(private _doc: SongDocument) {\n\t\tthis.registerMidiAccessHandler();\n\t}\n\t\n\tprivate async registerMidiAccessHandler() {\n\t\tif (navigator.requestMIDIAccess == null) return;\n\t\t\n\t\ttry {\n\t\t\tconst midiAccess = await navigator.requestMIDIAccess();\n\t\t\t\n\t\t\tmidiAccess.inputs.forEach(this._registerMidiInput);\n\t\t\tmidiAccess.addEventListener(\"statechange\", this._handleStateChange);\n\t\t\t\n\t\t\tthis._takeMidiHandlerFocus();\n\t\t\twindow.addEventListener(\"focus\", this._takeMidiHandlerFocus);\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to get MIDI access\", e);\n\t\t}\n\t}\n\t\n\tprivate _takeMidiHandlerFocus = (event?: Event) => {\n\t\t// Record that this browser tab is the one that should handle midi\n\t\t// events and any other open tabs should ignore midi events for now.\n\t\tlocalStorage.setItem(\"midiHandlerId\", id);\n\t}\n\t\n\tprivate _handleStateChange = (event: MIDIConnectionEvent) => {\n\t\tif (event.port.type !== \"input\") return;\n\t\t\n\t\tswitch (event.port.state) {\n\t\t\tcase \"connected\":\n\t\t\t\tthis._registerMidiInput(event.port);\n\t\t\t\tbreak;\n\t\t\tcase \"disconnected\":\n\t\t\t\tthis._unregisterMidiInput(event.port);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tprivate _registerMidiInput = (midiInput: MIDIInput) => {\n\t\tmidiInput.addEventListener(\"midimessage\", this._onMidiMessage as any);\n\t}\n\t\n\tprivate _unregisterMidiInput = (midiInput: MIDIInput) => {\n\t\tmidiInput.removeEventListener(\"midimessage\", this._onMidiMessage as any);\n\t\tthis._doc.performance.clearAllPitches();\n\t}\n\t\n\tprivate _onMidiMessage = (event: MIDIMessageEvent) => {\n\t\t// Ignore midi events if disabled or a different tab is handling them.\n\t\tif (!this._doc.prefs.enableMidi || localStorage.getItem(\"midiHandlerId\") != id) return;\n\t\t\n\t\tconst isDrum: boolean = this._doc.song.getChannelIsNoise(this._doc.channel);\n\t\tlet [eventType, key, velocity] = event.data;\n\t\teventType &= 0xF0;\n\t\t\n\t\tif (isDrum) {\n\t\t\tconst drum: AnalogousDrum | undefined = analogousDrumMap[key];\n\t\t\tif (drum != undefined) {\n\t\t\t\tkey = drum.frequency;\n\t\t\t} else {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tkey -= Config.keys[this._doc.song.key].basePitch; // The basePitch of the song key is implicit so don't include it.\n\t\t\tif (key < 0 || key > Config.maxPitch) return;\n\t\t}\n\t\t\n\t\tif (eventType == MidiEventType.noteOn && velocity == 0) {\n\t\t\teventType = MidiEventType.noteOff;\n\t\t}\n\t\t\n\t\tswitch (eventType) {\n\t\t\tcase MidiEventType.noteOn:\n\t\t\t\tthis._doc.synth.preferLowerLatency = true;\n\t\t\t\tthis._doc.performance.addPerformedPitch(key);\n\t\t\t\tbreak;\n\t\t\tcase MidiEventType.noteOff:\n\t\t\t\tthis._doc.performance.removePerformedPitch(key);\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nimport {Config} from \"../synth/SynthConfig\";\nimport {SongDocument} from \"./SongDocument\";\n\nexport class KeyboardLayout {\n\tprivate static _pianoAtC: ReadonlyArray<ReadonlyArray<number | null>> = [\n\t\t[   0,   2,   4,   5,   7,   9,  11,  12,  14,  16,  17],\n\t\t[null,   1,   3,null,   6,   8,  10,null,  13,  15,null,  18],\n\t\t[  12,  14,  16,  17,  19,  21,  23,  24,  26,  28,  29,  31,  33],\n\t\t[null,  13,  15,null,  18,  20,  22,null,  25,  27,null,  30,  32],\n\t];\n\tprivate static _pianoAtA: ReadonlyArray<ReadonlyArray<number | null>> = [\n\t\t[   0,   2,   3,   5,   7,   8,  10,  12,  14,  15,  17],\n\t\t[  -1,   1,null,   4,   6,null,   9,  11,  13,null,  16,  18],\n\t\t[  12,  14,  15,  17,  19,  20,  22,  24,  26,  27,  29,  31,  32],\n\t\t[  11,  13,null,  16,  18,null,  21,  23,  25,null,  28,  30,null],\n\t];\n\t\n\tpublic static keyPosToPitch(doc: SongDocument, x: number, y: number, keyboardLayout: string): number | null {\n\t\tlet pitchOffset: number | null = null;\n\t\tlet forcedKey: number | null = null;\n\t\tswitch (keyboardLayout) {\n\t\t\tcase \"wickiHayden\":\n\t\t\t\tpitchOffset = y * 5 + x * 2 - 2;\n\t\t\t\tbreak;\n\t\t\tcase \"songScale\":\n\t\t\t\tconst scaleFlags: ReadonlyArray<boolean> = Config.scales[doc.song.scale].flags;\n\t\t\t\tconst scaleIndices: number[] = <number[]> scaleFlags.map((flag, index) => flag ? index : null).filter((index) => index != null);\n\t\t\t\tpitchOffset = (y - 1 + Math.floor(x / scaleIndices.length)) * Config.pitchesPerOctave + scaleIndices[(x + scaleIndices.length) % scaleIndices.length];\n\t\t\t\tbreak;\n\t\t\tcase \"pianoAtC\":\n\t\t\t\tpitchOffset = KeyboardLayout._pianoAtC[y][x];\n\t\t\t\tforcedKey = Config.keys.dictionary[\"C\"].basePitch;\n\t\t\t\tbreak;\n\t\t\tcase \"pianoAtA\":\n\t\t\t\tpitchOffset = KeyboardLayout._pianoAtA[y][x];\n\t\t\t\tforcedKey = Config.keys.dictionary[\"A\"].basePitch;\n\t\t\t\tbreak;\n\t\t\tcase \"pianoTransposingC\":\n\t\t\t\tpitchOffset = KeyboardLayout._pianoAtC[y][x];\n\t\t\t\tbreak;\n\t\t\tcase \"pianoTransposingA\":\n\t\t\t\tpitchOffset = KeyboardLayout._pianoAtA[y][x];\n\t\t\t\tbreak;\n\t\t}\n\t\t\n\t\tif (pitchOffset == null) return null;\n\t\t\n\t\tconst octaveOffset: number = Math.max(0, doc.song.channels[doc.channel].octave - 1) * Config.pitchesPerOctave;\n\t\tlet keyOffset: number = 0; // The basePitch of the song key is implicit.\n\t\t\n\t\tif (forcedKey != null) {\n\t\t\tconst keyBasePitch: number = Config.keys[doc.song.key].basePitch;\n\t\t\tkeyOffset = (forcedKey - keyBasePitch + 144) % 12;\n\t\t}\n\t\t\n\t\tconst pitch = octaveOffset + keyOffset + pitchOffset;\n\t\tif (pitch < 0 || pitch > Config.maxPitch) return null;\n\t\t\t\n\t\treturn pitch;\n\t}\n\t\n\tprivate _possiblyPlayingPitchesFromKeyboard: boolean = false;\n\t\n\tconstructor(private _doc: SongDocument) {\n\t\twindow.addEventListener(\"blur\", this._onWindowBlur);\n\t}\n\t\n\tprivate _onWindowBlur = (event: Event) => {\n\t\t// Browsers don't explicitly release keys when the page isn't in focus so let's just assume they're all released.\n\t\tif (this._possiblyPlayingPitchesFromKeyboard) {\n\t\t\tthis._doc.performance.clearAllPitches();\n\t\t\tthis._possiblyPlayingPitchesFromKeyboard = false;\n\t\t}\n\t}\n\t\n\tpublic handleKeyEvent(event: KeyboardEvent, pressed: boolean): void {\n\t\t// See: https://www.w3.org/TR/uievents-code/#key-alphanumeric-writing-system\n\t\tswitch (event.code) {\n\t\t\tcase \"Backquote\": this.handleKey(-1, 3, pressed); break;\n\t\t\tcase \"Digit1\": this.handleKey(0, 3, pressed); break;\n\t\t\tcase \"Digit2\": this.handleKey(1, 3, pressed); break;\n\t\t\tcase \"Digit3\": this.handleKey(2, 3, pressed); break;\n\t\t\tcase \"Digit4\": this.handleKey(3, 3, pressed); break;\n\t\t\tcase \"Digit5\": this.handleKey(4, 3, pressed); break;\n\t\t\tcase \"Digit6\": this.handleKey(5, 3, pressed); break;\n\t\t\tcase \"Digit7\": this.handleKey(6, 3, pressed); break;\n\t\t\tcase \"Digit8\": this.handleKey(7, 3, pressed); break;\n\t\t\tcase \"Digit9\": this.handleKey(8, 3, pressed); break;\n\t\t\tcase \"Digit0\": this.handleKey(9, 3, pressed); break;\n\t\t\tcase \"Minus\": this.handleKey(10, 3, pressed); break;\n\t\t\tcase \"Equal\": this.handleKey(11, 3, pressed); break;\n\t\t\tcase \"IntlYen\": this.handleKey(12, 3, pressed); break; // Present on Russian and Japanese keyboards.\n\t\t\t\n\t\t\tcase \"KeyQ\": this.handleKey(0, 2, pressed); break;\n\t\t\tcase \"KeyW\": this.handleKey(1, 2, pressed); break;\n\t\t\tcase \"KeyE\": this.handleKey(2, 2, pressed); break;\n\t\t\tcase \"KeyR\": this.handleKey(3, 2, pressed); break;\n\t\t\tcase \"KeyT\": this.handleKey(4, 2, pressed); break;\n\t\t\tcase \"KeyY\": this.handleKey(5, 2, pressed); break;\n\t\t\tcase \"KeyU\": this.handleKey(6, 2, pressed); break;\n\t\t\tcase \"KeyI\": this.handleKey(7, 2, pressed); break;\n\t\t\tcase \"KeyO\": this.handleKey(8, 2, pressed); break;\n\t\t\tcase \"KeyP\": this.handleKey(9, 2, pressed); break;\n\t\t\tcase \"BracketLeft\": this.handleKey(10, 2, pressed); break;\n\t\t\tcase \"BracketRight\": this.handleKey(11, 2, pressed); break;\n\t\t\tcase \"Backslash\":\n\t\t\t\t// Present on US keyboards... but on non-US keyboards it's also used at a different location, see \"IntlHash\" below. :/\n\t\t\t\tif (event.key == \"\\\\\" || event.key == \"|\") {\n\t\t\t\t\tthis.handleKey(12, 2, pressed);\n\t\t\t\t} else {\n\t\t\t\t\tthis.handleKey(11, 1, pressed);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t\n\t\t\tcase \"KeyA\": this.handleKey(0, 1, pressed); break;\n\t\t\tcase \"KeyS\": this.handleKey(1, 1, pressed); break;\n\t\t\tcase \"KeyD\": this.handleKey(2, 1, pressed); break;\n\t\t\tcase \"KeyF\": this.handleKey(3, 1, pressed); break;\n\t\t\tcase \"KeyG\": this.handleKey(4, 1, pressed); break;\n\t\t\tcase \"KeyH\": this.handleKey(5, 1, pressed); break;\n\t\t\tcase \"KeyJ\": this.handleKey(6, 1, pressed); break;\n\t\t\tcase \"KeyK\": this.handleKey(7, 1, pressed); break;\n\t\t\tcase \"KeyL\": this.handleKey(8, 1, pressed); break;\n\t\t\tcase \"Semicolon\": this.handleKey(9, 1, pressed); break;\n\t\t\tcase \"Quote\": this.handleKey(10, 1, pressed); break;\n\t\t\tcase \"IntlHash\": this.handleKey(11, 1, pressed); break; // Present on non-US keyboards... but in practice it is actually represented as \"Backslash\" so this is obsolete. Oh well. :/\n\t\t\t\n\t\t\tcase \"IntlBackslash\": this.handleKey(-1, 0, pressed); break; // Present on Brazillian and many European keyboards.\n\t\t\tcase \"KeyZ\": this.handleKey(0, 0, pressed); break;\n\t\t\tcase \"KeyX\": this.handleKey(1, 0, pressed); break;\n\t\t\tcase \"KeyC\": this.handleKey(2, 0, pressed); break;\n\t\t\tcase \"KeyV\": this.handleKey(3, 0, pressed); break;\n\t\t\tcase \"KeyB\": this.handleKey(4, 0, pressed); break;\n\t\t\tcase \"KeyN\": this.handleKey(5, 0, pressed); break;\n\t\t\tcase \"KeyM\": this.handleKey(6, 0, pressed); break;\n\t\t\tcase \"Comma\": this.handleKey(7, 0, pressed); break;\n\t\t\tcase \"Period\": this.handleKey(8, 0, pressed); break;\n\t\t\tcase \"Slash\": this.handleKey(9, 0, pressed); break;\n\t\t\tcase \"IntlRo\": this.handleKey(10, 0, pressed); break; // Present on Brazillian and Japanese keyboards.\n\t\t\t\n\t\t\tdefault: return; //unhandled, don't prevent default.\n\t\t}\n\t\t\n\t\t// If the key event was handled as a note, prevent default behavior.\n\t\tevent.preventDefault();\n\t}\n\t\n\tpublic handleKey(x: number, y: number, pressed: boolean): void {\n\t\t\n\t\tconst isDrum: boolean = this._doc.song.getChannelIsNoise(this._doc.channel);\n\t\tif (isDrum) {\n\t\t\tif (x >= 0 && x < Config.drumCount) {\n\t\t\t\tif (pressed) {\n\t\t\t\t\tthis._doc.synth.preferLowerLatency = true;\n\t\t\t\t\tthis._doc.performance.addPerformedPitch(x);\n\t\t\t\t\tthis._possiblyPlayingPitchesFromKeyboard = true;\n\t\t\t\t} else {\n\t\t\t\t\tthis._doc.performance.removePerformedPitch(x);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tconst pitch: number | null = KeyboardLayout.keyPosToPitch(this._doc, x, y, this._doc.prefs.keyboardLayout);\n\t\t\n\t\tif (pitch != null) {\n\t\t\tif (pressed) {\n\t\t\t\tthis._doc.synth.preferLowerLatency = true;\n\t\t\t\tthis._doc.performance.addPerformedPitch(pitch);\n\t\t\t\tthis._possiblyPlayingPitchesFromKeyboard = true;\n\t\t\t} else {\n\t\t\t\tthis._doc.performance.removePerformedPitch(pitch);\n\t\t\t}\n\t\t}\n\t}\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nimport { Chord, Transition, Config } from \"../synth/SynthConfig\";\nimport { NotePin, Note, makeNotePin, FilterSettings, Channel, Pattern, Instrument, FilterControlPoint } from \"../synth/synth\";\nimport { ColorConfig } from \"./ColorConfig\";\nimport { SongDocument } from \"./SongDocument\";\nimport { Slider } from \"./HTMLWrapper\";\nimport { SongEditor } from \"./SongEditor\";\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\nimport { ChangeSequence, UndoableChange } from \"./Change\";\nimport { ChangeVolume, FilterMoveData, ChangeTempo, ChangePan, ChangeReverb, ChangeDistortion, ChangeOperatorAmplitude, ChangeFeedbackAmplitude, ChangePulseWidth, ChangeDetune, ChangeVibratoDepth, ChangeVibratoSpeed, ChangeVibratoDelay, ChangePanDelay, ChangeChorus, ChangeEQFilterSimplePeak, ChangeNoteFilterSimplePeak, ChangeStringSustain, ChangeEnvelopeSpeed, ChangeSupersawDynamism, ChangeSupersawShape, ChangeSupersawSpread, ChangePitchShift, ChangeChannelBar, ChangeDragSelectedNotes, ChangeEnsurePatternExists, ChangeNoteTruncate, ChangeNoteAdded, ChangePatternSelection, ChangePinTime, ChangeSizeBend, ChangePitchBend, ChangePitchAdded, ChangeArpeggioSpeed, ChangeBitcrusherQuantization, ChangeBitcrusherFreq, ChangeEchoSustain, ChangeEQFilterSimpleCut, ChangeNoteFilterSimpleCut, ChangeFilterMovePoint, ChangeDuplicateSelectedReusedPatterns, ChangeHoldingModRecording } from \"./changes\";\nimport { prettyNumber } from \"./EditorConfig\";\n\nfunction makeEmptyReplacementElement<T extends Node>(node: T): T {\n    const clone: T = <T>node.cloneNode(false);\n    node.parentNode!.replaceChild(clone, node);\n    return clone;\n}\n\nclass PatternCursor {\n    public valid: boolean = false;\n    public prevNote: Note | null = null;\n    public curNote: Note | null = null;\n    public nextNote: Note | null = null;\n    public pitch: number = 0;\n    public pitchIndex: number = -1;\n    public curIndex: number = 0;\n    public start: number = 0;\n    public end: number = 0;\n    public part: number = 0;\n    public exactPart: number = 0;\n    public nearPinIndex: number = 0;\n    public pins: NotePin[] = [];\n}\n\nexport class PatternEditor {\n    public controlMode: boolean = false;\n    public shiftMode: boolean = false;\n    private readonly _svgNoteBackground: SVGPatternElement = SVG.pattern({ id: \"patternEditorNoteBackground\" + this._barOffset, x: \"0\", y: \"0\", patternUnits: \"userSpaceOnUse\" });\n    private readonly _svgDrumBackground: SVGPatternElement = SVG.pattern({ id: \"patternEditorDrumBackground\" + this._barOffset, x: \"0\", y: \"0\", patternUnits: \"userSpaceOnUse\" });\n    private readonly _svgModBackground: SVGPatternElement = SVG.pattern({ id: \"patternEditorModBackground\" + this._barOffset, x: \"0\", y: \"0\", patternUnits: \"userSpaceOnUse\" });\n    private readonly _svgBackground: SVGRectElement = SVG.rect({ x: \"0\", y: \"0\", \"pointer-events\": \"none\", fill: \"url(#patternEditorNoteBackground\" + this._barOffset + \")\" });\n    private _svgNoteContainer: SVGSVGElement = SVG.svg();\n    private readonly _svgPlayhead: SVGRectElement = SVG.rect({ x: \"0\", y: \"0\", width: \"4\", fill: ColorConfig.playhead, \"pointer-events\": \"none\" });\n    private readonly _selectionRect: SVGRectElement = SVG.rect({ class: \"dashed-line dash-move\", fill: ColorConfig.boxSelectionFill, stroke: ColorConfig.hoverPreview, \"stroke-width\": 2, \"stroke-dasharray\": \"5, 3\", \"fill-opacity\": \"0.4\", \"pointer-events\": \"none\", visibility: \"hidden\" });\n    private readonly _svgPreview: SVGPathElement = SVG.path({ fill: \"none\", stroke: ColorConfig.hoverPreview, \"stroke-width\": \"2\", \"pointer-events\": \"none\" });\n    public modDragValueLabel: HTMLDivElement = HTML.div({ width: \"90\", \"text-anchor\": \"start\", contenteditable: \"true\", style: \"display: flex, justify-content: center; align-items:center; position:absolute; pointer-events: none;\", \"dominant-baseline\": \"central\", });\n    private readonly _svg: SVGSVGElement = SVG.svg({ style: `background-color: ${ColorConfig.editorBackground}; touch-action: none; position: absolute;`, width: \"100%\", height: \"100%\" },\n        SVG.defs(\n            this._svgNoteBackground,\n            this._svgDrumBackground,\n            this._svgModBackground,\n        ),\n        this._svgBackground,\n        this._selectionRect,\n        this._svgNoteContainer,\n        this._svgPreview,\n        this._svgPlayhead,\n    );\n    public readonly container: HTMLDivElement = HTML.div({ style: \"height: 100%; overflow:hidden; position: relative; flex-grow: 1;\" }, this._svg, this.modDragValueLabel);\n\n    private readonly _defaultModBorder: number = 34;\n    private readonly _backgroundPitchRows: SVGRectElement[] = [];\n    private readonly _backgroundDrumRow: SVGRectElement = SVG.rect();\n    private readonly _backgroundModRow: SVGRectElement = SVG.rect();\n\n    private _editorWidth: number;\n\n    private _modDragValueLabelLeft: number = 0;\n    private _modDragValueLabelTop: number = 0;\n    private _modDragValueLabelWidth: number = 0;\n    public editingModLabel: boolean = false;\n    private _modDragStartValue: number = 0;\n    private _modDragPin: NotePin;\n    private _modDragNote: Note;\n    private _modDragSetting: number;\n    private _modDragLowerBound: number = 0;\n    private _modDragUpperBound: number = 6;\n\n    private _editorHeight: number;\n    private _partWidth: number;\n    private _pitchHeight: number = -1;\n    private _pitchBorder: number;\n    private _pitchCount: number;\n    private _mouseX: number = 0;\n    private _mouseY: number = 0;\n    private _mouseDown: boolean = false;\n    private _mouseOver: boolean = false;\n    private _mouseDragging: boolean = false;\n    private _mouseHorizontal: boolean = false;\n    private _usingTouch: boolean = false;\n    private _copiedPinChannels: NotePin[][] = [];\n    private _copiedPins: NotePin[];\n    private _mouseXStart: number = 0;\n    private _mouseYStart: number = 0;\n    private _touchTime: number = 0;\n    private _shiftHeld: boolean = false;\n    private _dragConfirmed: boolean = false;\n    private _draggingStartOfSelection: boolean = false;\n    private _draggingEndOfSelection: boolean = false;\n    private _draggingSelectionContents: boolean = false;\n    private _dragTime: number = 0;\n    private _dragPitch: number = 0;\n    private _dragSize: number = 0;\n    private _dragVisible: boolean = false;\n    private _dragChange: UndoableChange | null = null;\n    private _changePatternSelection: UndoableChange | null = null;\n    private _lastChangeWasPatternSelection: boolean = false;\n    private _cursor: PatternCursor = new PatternCursor();\n    private _stashCursorPinVols: number[][] = [];\n    private _pattern: Pattern | null = null;\n    private _playheadX: number = 0.0;\n    private _octaveOffset: number = 0;\n    private _renderedWidth: number = -1;\n    private _renderedHeight: number = -1;\n    private _renderedBeatWidth: number = -1;\n    private _renderedPitchHeight: number = -1;\n    private _renderedFifths: boolean = false;\n    private _renderedDrums: boolean = false;\n    private _renderedMod: boolean = false;\n    private _renderedRhythm: number = -1;\n    private _renderedPitchChannelCount: number = -1;\n    private _renderedNoiseChannelCount: number = -1;\n    private _renderedModChannelCount: number = -1;\n    private _followPlayheadBar: number = -1;\n\n    constructor(private _doc: SongDocument, private _interactive: boolean, private _barOffset: number) {\n        for (let i: number = 0; i < Config.pitchesPerOctave; i++) {\n            const rectangle: SVGRectElement = SVG.rect();\n            rectangle.setAttribute(\"x\", \"1\");\n            rectangle.setAttribute(\"fill\", (i == 0) ? ColorConfig.tonic : ColorConfig.pitchBackground);\n            this._svgNoteBackground.appendChild(rectangle);\n            this._backgroundPitchRows[i] = rectangle;\n        }\n\n        this._backgroundDrumRow.setAttribute(\"x\", \"1\");\n        this._backgroundDrumRow.setAttribute(\"y\", \"1\");\n        this._backgroundDrumRow.setAttribute(\"fill\", ColorConfig.pitchBackground);\n        this._svgDrumBackground.appendChild(this._backgroundDrumRow);\n        this._backgroundModRow.setAttribute(\"fill\", ColorConfig.pitchBackground);\n        this._svgModBackground.appendChild(this._backgroundModRow);\n\n        if (this._interactive) {\n            this._updateCursorStatus();\n            this._updatePreview();\n            window.requestAnimationFrame(this._animatePlayhead);\n            this._svg.addEventListener(\"mousedown\", this._whenMousePressed);\n            document.addEventListener(\"mousemove\", this._whenMouseMoved);\n            document.addEventListener(\"mouseup\", this._whenCursorReleased);\n            this._svg.addEventListener(\"mouseover\", this._whenMouseOver);\n            this._svg.addEventListener(\"mouseout\", this._whenMouseOut);\n\n            this._svg.addEventListener(\"touchstart\", this._whenTouchPressed);\n            this._svg.addEventListener(\"touchmove\", this._whenTouchMoved);\n            this._svg.addEventListener(\"touchend\", this._whenCursorReleased);\n            this._svg.addEventListener(\"touchcancel\", this._whenCursorReleased);\n\n            this.modDragValueLabel.addEventListener(\"input\", this._validateModDragLabelInput);\n        } else {\n            this._svgPlayhead.style.display = \"none\";\n            this._svg.appendChild(SVG.rect({ x: 0, y: 0, width: 10000, height: 10000, fill: ColorConfig.editorBackground, style: \"opacity: 0.5;\" }));\n        }\n\n        this.resetCopiedPins();\n    }\n\n    private _getMaxPitch(): number {\n\t\treturn this._doc.song.getChannelIsMod(this._doc.channel) ? Config.modCount - 1 : ( this._doc.song.getChannelIsNoise(this._doc.channel) ? Config.drumCount - 1 : Config.maxPitch );\n\t}\n\n    private _validateModDragLabelInput = (event: Event): void => {\n        const label: HTMLDivElement = <HTMLDivElement>event.target;\n\n        // Special case - when user is typing a number between zero and min, allow it (the alternative is quite annoying, when min is nonzero)\n        let converted: number = Number(label.innerText);\n        if (!isNaN(converted) && converted >= 0 && converted < this._modDragLowerBound)\n            return;\n\n        // Another special case - allow \"\" e.g. the empty string and a single negative sign, but don't do anything about it.\n        if (label.innerText != \"\" && label.innerText != \"-\") {\n            // Force NaN results to be 0\n            if (isNaN(converted)) {\n                converted = this._modDragLowerBound;\n                label.innerText = \"\" + this._modDragLowerBound;\n            }\n\n            let presValue: number = Math.floor(Math.max(Number(this._modDragLowerBound), Math.min(Number(this._modDragUpperBound), converted)));\n            if (label.innerText != presValue + \"\")\n                label.innerText = presValue + \"\";\n\n            // This is me being too lazy to fiddle with the css to get it to align center.\n            let xOffset: number = (+(presValue >= 10.0)) + (+(presValue >= 100.0)) + (+(presValue < 0.0)) + (+(presValue <= -10.0));\n            this._modDragValueLabelLeft = +prettyNumber(Math.max(Math.min(this._editorWidth - 10 - xOffset * 8, this._partWidth * (this._modDragNote.start + this._modDragPin.time) - 4 - xOffset * 4), 2));\n            this.modDragValueLabel.style.setProperty(\"left\", \"\" + this._modDragValueLabelLeft + \"px\");\n\n            const sequence: ChangeSequence = new ChangeSequence();\n            this._dragChange = sequence;\n            this._doc.setProspectiveChange(this._dragChange);\n\n            sequence.append(new ChangeSizeBend(this._doc, this._modDragNote, this._modDragPin.time, presValue- Config.modulators[this._modDragSetting].convertRealFactor, this._modDragPin.interval, this.shiftMode));\n\n        }\n    }\n\n    private _getMaxDivision(): number {\n        if (this.controlMode && this._mouseHorizontal)\n            return Config.partsPerBeat;\n        const rhythmStepsPerBeat: number = Config.rhythms[this._doc.song.rhythm].stepsPerBeat;\n        if (rhythmStepsPerBeat % 4 == 0) {\n            // Beat is divisible by 2 (and 4).\n            return Config.partsPerBeat / 2;\n        } else if (rhythmStepsPerBeat % 3 == 0) {\n            // Beat is divisible by 3.\n            return Config.partsPerBeat / 3;\n        } else if (rhythmStepsPerBeat % 2 == 0) {\n            // Beat is divisible by 2.\n            return Config.partsPerBeat / 2;\n        }\n        return Config.partsPerBeat;\n    }\n\n    private _getMinDivision(): number {\n        if (this.controlMode && this._mouseHorizontal)\n            return 1;\n        return Config.partsPerBeat / Config.rhythms[this._doc.song.rhythm].stepsPerBeat;\n    }\n\n    private _snapToMinDivision(input: number): number {\n        const minDivision: number = this._getMinDivision();\n        return Math.floor(input / minDivision) * minDivision;\n    }\n\n    private _updateCursorStatus(): void {\n        this._cursor = new PatternCursor();\n\n        if (this._mouseX < 0 || this._mouseX > this._editorWidth || this._mouseY < 0 || this._mouseY > this._editorHeight || this._pitchHeight <= 0) return;\n\n        const minDivision: number = this._getMinDivision();\n        this._cursor.exactPart = this._mouseX / this._partWidth;\n        this._cursor.part =\n            Math.floor(\n                Math.max(0,\n                    Math.min(this._doc.song.beatsPerBar * Config.partsPerBeat - minDivision, this._cursor.exactPart)\n                )\n                / minDivision) * minDivision;\n\n        let foundNote: boolean = false;\n\n        if (this._pattern != null) {\n            for (const note of this._pattern.notes) {\n                if (note.end <= this._cursor.exactPart) {\n                    if (this._doc.song.getChannelIsMod(this._doc.channel)) {\n                        if (note.pitches[0] == Math.floor(this._findMousePitch(this._mouseY))) {\n                            this._cursor.prevNote = note;\n                        }\n                        if (!foundNote)\n                            this._cursor.curIndex++;\n\n                    } else {\n                        this._cursor.prevNote = note;\n                        this._cursor.curIndex++;\n                    }\n                } else if (note.start <= this._cursor.exactPart && note.end > this._cursor.exactPart) {\n                    if (this._doc.song.getChannelIsMod(this._doc.channel)) {\n                        if (note.pitches[0] == Math.floor(this._findMousePitch(this._mouseY))) {\n                            this._cursor.curNote = note;\n                            foundNote = true;\n                        }\n                        // Only increment index if the sought note has been found... or if this note truly starts before the other\n                        else if (!foundNote || (this._cursor.curNote != null && note.start < this._cursor.curNote.start))\n                            this._cursor.curIndex++;\n                    }\n                    else {\n                        this._cursor.curNote = note;\n                    }\n                } else if (note.start > this._cursor.exactPart) {\n                    if (this._doc.song.getChannelIsMod(this._doc.channel)) {\n                        if (note.pitches[0] == Math.floor(this._findMousePitch(this._mouseY))) {\n                            this._cursor.nextNote = note;\n                            break;\n                        }\n                    } else {\n                        this._cursor.nextNote = note;\n                        break;\n                    }\n                }\n            }\n\n            if (this._doc.song.getChannelIsMod(this._doc.channel) && !this.editingModLabel) {\n\n                if (this._pattern.notes[this._cursor.curIndex] != null && this._cursor.curNote != null) {\n\n                    let pinIdx: number = 0;\n\n                    while (this._cursor.curNote.start + this._cursor.curNote.pins[pinIdx].time < this._cursor.exactPart && pinIdx < this._cursor.curNote.pins.length) {\n                        pinIdx++;\n                    }\n                    // Decide if the previous pin is closer\n                    if (pinIdx > 0) {\n                        if (this._cursor.curNote.start + this._cursor.curNote.pins[pinIdx].time - this._cursor.exactPart > this._cursor.exactPart - (this._cursor.curNote.start + this._cursor.curNote.pins[pinIdx - 1].time)) {\n                            pinIdx--;\n                        }\n                    }\n\n                    this.modDragValueLabel.style.setProperty(\"color\", \"#666688\");\n                    this.modDragValueLabel.style.setProperty(\"display\", \"\");\n                    const mod: number = Math.max( 0, Config.modCount - 1 - this._cursor.curNote.pitches[0]);\n\n                    let setting: number = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument(this._barOffset)].modulators[mod];\n\n                    let presValue: number = this._cursor.curNote.pins[pinIdx].size + Config.modulators[setting].convertRealFactor;\n\n                    // This is me being too lazy to fiddle with the css to get it to align center.\n                    let xOffset: number = (+(presValue >= 10.0)) + (+(presValue >= 100.0)) + (+(presValue < 0.0)) + (+(presValue <= -10.0));\n\n                    this._modDragValueLabelWidth = 8 + xOffset * 8;\n                    this._modDragValueLabelLeft = +prettyNumber(Math.max(Math.min(this._editorWidth - 10 - xOffset * 8, this._partWidth * (this._cursor.curNote.start + this._cursor.curNote.pins[pinIdx].time) - 4 - xOffset * 4), 2));\n                    this._modDragValueLabelTop = +prettyNumber(this._pitchToPixelHeight(this._cursor.curNote.pitches[0] - this._octaveOffset) - 17 - (this._pitchHeight - this._pitchBorder) / 2);\n\n                    this._modDragStartValue = this._cursor.curNote.pins[pinIdx].size;\n                    this._modDragNote = this._cursor.curNote;\n                    this._modDragPin = this._cursor.curNote.pins[pinIdx];\n                    this._modDragLowerBound = Config.modulators[setting].convertRealFactor;\n                    this._modDragUpperBound = Config.modulators[setting].convertRealFactor + Config.modulators[setting].maxRawVol;\n                    this._modDragSetting = setting;\n\n                    this.modDragValueLabel.style.setProperty(\"left\", \"\" + this._modDragValueLabelLeft + \"px\");\n                    this.modDragValueLabel.style.setProperty(\"top\", \"\" + this._modDragValueLabelTop + \"px\");\n                    this.modDragValueLabel.textContent = \"\" + presValue;\n\n                }\n                else {\n                    this.modDragValueLabel.style.setProperty(\"display\", \"none\");\n                    this.modDragValueLabel.style.setProperty(\"pointer-events\", \"none\");\n                    this.modDragValueLabel.setAttribute(\"contenteditable\", \"false\");\n                }\n            }\n            else if (!this.editingModLabel) {\n                this.modDragValueLabel.style.setProperty(\"display\", \"none\");\n                this.modDragValueLabel.style.setProperty(\"pointer-events\", \"none\");\n                this.modDragValueLabel.setAttribute(\"contenteditable\", \"false\");\n            }\n        }\n        else {\n            this.modDragValueLabel.style.setProperty(\"display\", \"none\");\n            this.modDragValueLabel.style.setProperty(\"pointer-events\", \"none\");\n            this.modDragValueLabel.setAttribute(\"contenteditable\", \"false\");\n        }\n\n        let mousePitch: number = this._findMousePitch(this._mouseY);\n\n        if (this._cursor.curNote != null) {\n\n            this._cursor.start = this._cursor.curNote.start;\n            this._cursor.end = this._cursor.curNote.end;\n            this._cursor.pins = this._cursor.curNote.pins;\n\n            let interval: number = 0;\n            let error: number = 0;\n            let prevPin: NotePin;\n            let nextPin: NotePin = this._cursor.curNote.pins[0];\n            for (let j: number = 1; j < this._cursor.curNote.pins.length; j++) {\n                prevPin = nextPin;\n                nextPin = this._cursor.curNote.pins[j];\n                const leftSide: number = this._partWidth * (this._cursor.curNote.start + prevPin.time);\n                const rightSide: number = this._partWidth * (this._cursor.curNote.start + nextPin.time);\n                if (this._mouseX > rightSide) continue;\n                if (this._mouseX < leftSide) throw new Error();\n                const intervalRatio: number = (this._mouseX - leftSide) / (rightSide - leftSide);\n                const arc: number = Math.sqrt(1.0 / Math.sqrt(4.0) - Math.pow(intervalRatio - 0.5, 2.0)) - 0.5;\n                const bendHeight: number = Math.abs(nextPin.interval - prevPin.interval);\n                interval = prevPin.interval * (1.0 - intervalRatio) + nextPin.interval * intervalRatio;\n                error = arc * bendHeight + 0.95;\n                break;\n            }\n\n            let minInterval: number = Number.MAX_VALUE;\n            let maxInterval: number = -Number.MAX_VALUE;\n            let bestDistance: number = Number.MAX_VALUE;\n            for (const pin of this._cursor.curNote.pins) {\n                if (minInterval > pin.interval) minInterval = pin.interval;\n                if (maxInterval < pin.interval) maxInterval = pin.interval;\n                const pinDistance: number = Math.abs(this._cursor.curNote.start + pin.time - this._mouseX / this._partWidth);\n                if (bestDistance > pinDistance) {\n                    bestDistance = pinDistance;\n                    this._cursor.nearPinIndex = this._cursor.curNote.pins.indexOf(pin);\n                }\n            }\n\n            mousePitch -= interval;\n            this._cursor.pitch = this._snapToPitch(mousePitch, -minInterval, this._getMaxPitch() - maxInterval);\n\n            // Snap to nearby existing note if present.\n            if (!this._doc.song.getChannelIsNoise(this._doc.channel) && !this._doc.song.getChannelIsMod(this._doc.channel)) {\n                let nearest: number = error;\n                for (let i: number = 0; i < this._cursor.curNote.pitches.length; i++) {\n                    const distance: number = Math.abs(this._cursor.curNote.pitches[i] - mousePitch + 0.5);\n                    if (distance > nearest) continue;\n                    nearest = distance;\n                    this._cursor.pitch = this._cursor.curNote.pitches[i];\n                }\n            }\n\n            for (let i: number = 0; i < this._cursor.curNote.pitches.length; i++) {\n                if (this._cursor.curNote.pitches[i] == this._cursor.pitch) {\n                    this._cursor.pitchIndex = i;\n                    break;\n                }\n            }\n        } else {\n            this._cursor.pitch = this._snapToPitch(mousePitch, 0, this._getMaxPitch());\n            const defaultLength: number = this._copiedPins[this._copiedPins.length - 1].time;\n            const fullBeats: number = Math.floor(this._cursor.part / Config.partsPerBeat);\n            const maxDivision: number = this._getMaxDivision();\n            const modMouse: number = this._cursor.part % Config.partsPerBeat;\n            if (defaultLength == 1) {\n                this._cursor.start = this._cursor.part;\n            } else if (defaultLength > Config.partsPerBeat) {\n                this._cursor.start = fullBeats * Config.partsPerBeat;\n            } else if (defaultLength == Config.partsPerBeat) {\n                this._cursor.start = fullBeats * Config.partsPerBeat;\n                if (maxDivision < Config.partsPerBeat && modMouse > maxDivision) {\n                    this._cursor.start += Math.floor(modMouse / maxDivision) * maxDivision;\n                }\n            } else {\n                this._cursor.start = fullBeats * Config.partsPerBeat;\n                let division = Config.partsPerBeat % defaultLength == 0 ? defaultLength : Math.min(defaultLength, maxDivision);\n                while (division < maxDivision && Config.partsPerBeat % division != 0) {\n                    division++;\n                }\n                this._cursor.start += Math.floor(modMouse / division) * division;\n            }\n            this._cursor.end = this._cursor.start + defaultLength;\n            let forceStart: number = 0;\n            let forceEnd: number = this._doc.song.beatsPerBar * Config.partsPerBeat;\n            if (this._cursor.prevNote != null) {\n                forceStart = this._cursor.prevNote.end;\n            }\n            if (this._cursor.nextNote != null) {\n                forceEnd = this._cursor.nextNote.start;\n            }\n            if (this._cursor.start < forceStart) {\n                this._cursor.start = forceStart;\n                this._cursor.end = this._cursor.start + defaultLength;\n                if (this._cursor.end > forceEnd) {\n                    this._cursor.end = forceEnd;\n                }\n            } else if (this._cursor.end > forceEnd) {\n                this._cursor.end = forceEnd;\n                this._cursor.start = this._cursor.end - defaultLength;\n                if (this._cursor.start < forceStart) {\n                    this._cursor.start = forceStart;\n                }\n            }\n\n            if (this._cursor.end - this._cursor.start == defaultLength) {\n                if (this._copiedPinChannels.length > this._doc.channel) {\n                    this._copiedPins = this._copiedPinChannels[this._doc.channel];\n                    this._cursor.pins = this._copiedPins;\n                } else {\n                    const cap: number = this._doc.song.getVolumeCap(false);\n                    this._cursor.pins = [makeNotePin(0, 0, cap), makeNotePin(0, maxDivision, cap)];\n                }\n            } else {\n                this._cursor.pins = [];\n                for (const oldPin of this._copiedPins) {\n                    if (oldPin.time <= this._cursor.end - this._cursor.start) {\n                        this._cursor.pins.push(makeNotePin(0, oldPin.time, oldPin.size));\n                        if (oldPin.time == this._cursor.end - this._cursor.start) break;\n                    } else {\n                        this._cursor.pins.push(makeNotePin(0, this._cursor.end - this._cursor.start, oldPin.size));\n                        break;\n                    }\n                }\n            }\n\n            if (this._doc.song.getChannelIsMod(this._doc.channel)) {\n\n                this._cursor.pitch = Math.max(0, Math.min(Config.modCount - 1, this._cursor.pitch));\n\n                // Return cursor to stashed cursor volumes (so pins aren't destroyed by moving the preview around several volume scales.)\n                if (this._stashCursorPinVols != null && this._stashCursorPinVols[this._doc.channel] != null) {\n                    for (let pin: number = 0; pin < this._cursor.pins.length; pin++) {\n                        this._cursor.pins[pin].size = this._stashCursorPinVols[this._doc.channel][pin];\n                    }\n                }\n\n                // Scale volume of copied pin to cap for this row\n                let maxHeight: number = this._doc.song.getVolumeCap(this._doc.song.getChannelIsMod(this._doc.channel), this._doc.channel, this._doc.getCurrentInstrument(this._barOffset), this._cursor.pitch);\n                let maxFoundHeight: number = 0;\n                for (const pin of this._cursor.pins) {\n                    if (pin.size > maxFoundHeight) {\n                        maxFoundHeight = pin.size;\n                    }\n                }\n                // Apply scaling if the max height is below any pin setting.\n                if (maxFoundHeight > maxHeight) {\n                    for (const pin of this._cursor.pins) {\n                        pin.size = Math.round(pin.size * (maxHeight / maxFoundHeight));\n                    }\n                }\n            }\n\n        }\n\n        this._cursor.valid = true;\n\n    }\n\n    private _cursorIsInSelection(): boolean {\n        return this._cursor.valid && this._doc.selection.patternSelectionActive && this._doc.selection.patternSelectionStart <= this._cursor.exactPart && this._cursor.exactPart <= this._doc.selection.patternSelectionEnd;\n    }\n\n    private _cursorAtStartOfSelection(): boolean {\n        return this._cursor.valid && this._doc.selection.patternSelectionActive && this._cursor.pitchIndex == -1 && this._doc.selection.patternSelectionStart - 3 <= this._cursor.exactPart && this._cursor.exactPart <= this._doc.selection.patternSelectionStart + 1.25;\n    }\n\n    private _cursorAtEndOfSelection(): boolean {\n        return this._cursor.valid && this._doc.selection.patternSelectionActive && this._cursor.pitchIndex == -1 && this._doc.selection.patternSelectionEnd - 1.25 <= this._cursor.exactPart && this._cursor.exactPart <= this._doc.selection.patternSelectionEnd + 3;\n    }\n\n    private _findMousePitch(pixelY: number): number {\n        return Math.max(0, Math.min(this._pitchCount - 1, this._pitchCount - (pixelY / this._pitchHeight))) + this._octaveOffset;\n    }\n\n    private _snapToPitch(guess: number, min: number, max: number): number {\n        if (guess < min) guess = min;\n        if (guess > max) guess = max;\n        const scale: ReadonlyArray<boolean> = this._doc.prefs.notesOutsideScale ? Config.scales.dictionary[\"Free\"].flags : Config.scales[this._doc.song.scale].flags;\n        if (scale[Math.floor(guess) % Config.pitchesPerOctave] || this._doc.song.getChannelIsNoise(this._doc.channel) || this._doc.song.getChannelIsMod(this._doc.channel)) {\n\n            return Math.floor(guess);\n        } else {\n            let topPitch: number = Math.floor(guess) + 1;\n            let bottomPitch: number = Math.floor(guess) - 1;\n            while (!scale[topPitch % Config.pitchesPerOctave]) {\n                topPitch++;\n            }\n            while (!scale[(bottomPitch) % Config.pitchesPerOctave]) {\n                bottomPitch--;\n            }\n            if (topPitch > max) {\n                if (bottomPitch < min) {\n                    return min;\n                } else {\n                    return bottomPitch;\n                }\n            } else if (bottomPitch < min) {\n                return topPitch;\n            }\n            let topRange: number = topPitch;\n            let bottomRange: number = bottomPitch + 1;\n            if (topPitch % Config.pitchesPerOctave == 0 || topPitch % Config.pitchesPerOctave == 7) {\n                topRange -= 0.5;\n            }\n            if (bottomPitch % Config.pitchesPerOctave == 0 || bottomPitch % Config.pitchesPerOctave == 7) {\n                bottomRange += 0.5;\n            }\n            return guess - bottomRange > topRange - guess ? topPitch : bottomPitch;\n        }\n    }\n\n    private _copyPins(note: Note): void {\n        this._copiedPins = [];\n        for (const oldPin of note.pins) {\n            this._copiedPins.push(makeNotePin(0, oldPin.time, oldPin.size));\n        }\n        for (let i: number = 1; i < this._copiedPins.length - 1;) {\n            if (this._copiedPins[i - 1].size == this._copiedPins[i].size &&\n                this._copiedPins[i].size == this._copiedPins[i + 1].size) {\n                this._copiedPins.splice(i, 1);\n            } else {\n                i++;\n            }\n        }\n        this._copiedPinChannels[this._doc.channel] = this._copiedPins;\n\n        this._stashCursorPinVols[this._doc.channel] = [];\n        for (let pin: number = 0; pin < this._copiedPins.length; pin++) {\n            this._stashCursorPinVols[this._doc.channel].push(this._copiedPins[pin].size);\n        }\n    }\n\n    public movePlayheadToMouse(): boolean {\n\t\tif (this._mouseOver) {\n\t\t\tthis._doc.synth.playhead = this._doc.bar + this._barOffset + (this._mouseX / this._editorWidth);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n    public resetCopiedPins = (): void => {\n        const maxDivision: number = this._getMaxDivision();\n        let cap: number = this._doc.song.getVolumeCap(false);\n        this._copiedPinChannels.length = this._doc.song.getChannelCount();\n        this._stashCursorPinVols.length = this._doc.song.getChannelCount();\n        for (let i: number = 0; i < this._doc.song.pitchChannelCount; i++) {\n            this._copiedPinChannels[i] = [makeNotePin(0, 0, cap), makeNotePin(0, maxDivision, cap)];\n            this._stashCursorPinVols[i] = [cap, cap];\n        }\n        for (let i: number = this._doc.song.pitchChannelCount; i < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; i++) {\n            this._copiedPinChannels[i] = [makeNotePin(0, 0, cap), makeNotePin(0, maxDivision, 0)];\n            this._stashCursorPinVols[i] = [cap, 0];\n        }\n        for (let i: number = this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; i < this._doc.song.getChannelCount(); i++) {\n            this._copiedPinChannels[i] = [makeNotePin(0, 0, cap), makeNotePin(0, maxDivision, 0)];\n            this._stashCursorPinVols[i] = [cap, 0];\n        }\n    }\n\n    private _animatePlayhead = (timestamp: number): void => {\n\n        if (this._usingTouch && !this.shiftMode && !this._mouseDragging && this._mouseDown && performance.now() > this._touchTime + 1000 && this._cursor.valid && this._doc.lastChangeWas(this._dragChange)) {\n            // On a mobile device, the pattern editor supports using a long stationary touch to activate selection.\n            this._dragChange!.undo();\n            this._shiftHeld = true;\n            this._dragConfirmed = false;\n            this._whenCursorPressed();\n            // The full interface is usually only rerendered in response to user input events, not animation events, but in this case go ahead and rerender everything.\n            this._doc.notifier.notifyWatchers();\n        }\n\n        const playheadBar: number = Math.floor(this._doc.synth.playhead);\n\n        if (this._doc.synth.playing && ((this._pattern != null && this._doc.song.getPattern(this._doc.channel, Math.floor(this._doc.synth.playhead)) == this._pattern) || Math.floor(this._doc.synth.playhead) == this._doc.bar + this._barOffset)) {\n            this._svgPlayhead.setAttribute(\"visibility\", \"visible\");\n            const modPlayhead: number = this._doc.synth.playhead - playheadBar;\n            if (Math.abs(modPlayhead - this._playheadX) > 0.1) {\n                this._playheadX = modPlayhead;\n            } else {\n                this._playheadX += (modPlayhead - this._playheadX) * 0.2;\n            }\n            this._svgPlayhead.setAttribute(\"x\", \"\" + prettyNumber(this._playheadX * this._editorWidth - 2));\n        } else {\n            this._svgPlayhead.setAttribute(\"visibility\", \"hidden\");\n        }\n\n        if (this._doc.synth.playing && (this._doc.synth.recording || this._doc.prefs.autoFollow) && this._followPlayheadBar != playheadBar) {\n            // When autofollow is enabled, select the current bar (but don't record it in undo history).\n            new ChangeChannelBar(this._doc, this._doc.channel, playheadBar);\n            // The full interface is usually only rerendered in response to user input events, not animation events, but in this case go ahead and rerender everything.\n            this._doc.notifier.notifyWatchers();\n        }\n        this._followPlayheadBar = playheadBar;\n\n        if (this._doc.currentPatternIsDirty) {\n            this._redrawNotePatterns();\n        }\n\n        window.requestAnimationFrame(this._animatePlayhead);\n    }\n\n    private _whenMouseOver = (event: MouseEvent): void => {\n        if (this._mouseOver) return;\n        this._mouseOver = true;\n        this._usingTouch = false;\n    }\n\n    private _whenMouseOut = (event: MouseEvent): void => {\n        if (!this._mouseOver) return;\n        this._mouseOver = false;\n    }\n\n    private _whenMousePressed = (event: MouseEvent): void => {\n        event.preventDefault();\n        const boundingRect: ClientRect = this._svg.getBoundingClientRect();\n        this._mouseX = ((event.clientX || event.pageX) - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\n        this._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\n        if (isNaN(this._mouseX)) this._mouseX = 0;\n        if (isNaN(this._mouseY)) this._mouseY = 0;\n        this._usingTouch = false;\n        this._shiftHeld = event.shiftKey;\n        this._dragConfirmed = false;\n        this._whenCursorPressed();\n    }\n\n    private _whenTouchPressed = (event: TouchEvent): void => {\n        event.preventDefault();\n        const boundingRect: ClientRect = this._svg.getBoundingClientRect();\n        this._mouseX = (event.touches[0].clientX - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\n        this._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\n        if (isNaN(this._mouseX)) this._mouseX = 0;\n        if (isNaN(this._mouseY)) this._mouseY = 0;\n        this._usingTouch = true;\n        this._shiftHeld = event.shiftKey;\n        this._dragConfirmed = false;\n        this._touchTime = performance.now();\n        this._whenCursorPressed();\n    }\n\n    \n    // For a given change type, check the modulator channels for a matching mod to the changed parameter. If it exists, add a pin onto the latest note, or make a new note if enough time elapsed since the last pin. \n    public setModSettingsForChange(change: any, songEditor: SongEditor): boolean {\n        const thisRef: PatternEditor = this;\n        const timeQuantum = Math.max(4, (Config.partsPerBeat / Config.rhythms[this._doc.song.rhythm].stepsPerBeat));\n        const currentBar: number = Math.floor(this._doc.synth.playhead);\n        const realPart: number = this._doc.synth.getCurrentPart();\n        let changedPatterns: boolean = false;\n\n        // Ceiling is applied usually to give the synth time to catch the mod updates, but rounds to 0 to avoid skipping the first part.\n        const currentPart: number = (realPart < timeQuantum / 2 ) ? 0 : Math.ceil(realPart / timeQuantum) * timeQuantum;\n\n        // For a given setting and a given channel, find the instrument and mod number that influences the setting.\n        function getMatchingInstrumentAndMod(applyToMod: number, modChannel: Channel, modInsIndex?: number | undefined, modFilterIndex?: number | undefined): number[] {\n            let startIndex: number = (modInsIndex == undefined) ? 0 : modInsIndex;\n            let endIndex: number = (modInsIndex == undefined) ? modChannel.instruments.length - 1 : modInsIndex;\n            for (let instrumentIndex: number = startIndex; instrumentIndex <= endIndex; instrumentIndex++ ) {\n                let instrument: Instrument = modChannel.instruments[instrumentIndex];\n                for (let mod: number = 0; mod < Config.modCount; mod++) {\n                    // Non-song application\n                    if ( instrument.modulators[mod] == applyToMod && !Config.modulators[instrument.modulators[mod]].forSong && (instrument.modChannels[mod] == thisRef._doc.channel) ) {\n                        // This is a check if the instrument targeted is relevant. Is it the exact one being edited? An \"all\" or \"active\" target?\n                        // For \"active\" target it doesn't check if the instrument is active, allowing write to other active instruments from an inactive one. Should be fine since audibly while writing you'll hear what you'd expect -\n                        // the current channel's active instruments being modulated, which is what most people would expect even if editing an inactive instrument.\n                        if (  thisRef._doc.getCurrentInstrument() == instrument.modInstruments[mod]\n                            || instrument.modInstruments[mod] >= thisRef._doc.song.channels[thisRef._doc.channel].instruments.length )\n                        {\n                            // If it's an eq/note filter target, one additional step is performed to see if it matches the right modFilterType.\n                            if (modFilterIndex != undefined && (applyToMod == Config.modulators.dictionary[\"eq filter\"].index || applyToMod == Config.modulators.dictionary[\"note filter\"].index)) {\n                                if (instrument.modFilterTypes[mod] == modFilterIndex)\n                                    return [instrumentIndex, mod];\n                            }\n                            else\n                                return [instrumentIndex, mod];\n                        }\n                    }\n                    // Song wide application\n                    else if ( instrument.modulators[mod] == applyToMod && Config.modulators[instrument.modulators[mod]].forSong && (instrument.modChannels[mod] == -1) ) {\n                        return [instrumentIndex, mod];\n                    }\n                }\n            }\n            return [-1, -1];\n        }\n\n        // For the given duration, scans through and removes pins and notes that are within. If two pins of a note cross the interval boundary, the interior pin is moved to the boundary.\n        function sanitizeInterval(doc: SongDocument, startPart: number, endPart: number, pattern: Pattern, forMod: number, sequence: ChangeSequence) {\n            if (startPart >= endPart) return;\n            for (let noteIndex: number = 0; noteIndex < pattern.notes.length; noteIndex++) {\n                const note: Note = pattern.notes[noteIndex];\n                if (note.pitches[0] != forMod)\n                    continue;\n                if (note.start < endPart && note.end > startPart) {\n                    let couldIntersectStart: boolean = false;\n                    let intersectsEnd: boolean = false;\n                    let firstInteriorPin: number = -1;\n                    let interiorPinCount: number = 0;\n\n                    // The interval is spanned by the entire note. Just process internal pins, then done.\n                    if (note.start <= startPart && note.end >= endPart) {\n                        for (let pinIndex: number = 0; pinIndex < note.pins.length; pinIndex++) {\n                            const pin: NotePin = note.pins[pinIndex];\n                            if (note.start + pin.time > startPart && note.start + pin.time < endPart) {\n                                if (firstInteriorPin < 0)\n                                    firstInteriorPin = pinIndex;\n                                interiorPinCount++;\n                            }\n                        }\n                        // Splice pins inside the interval.\n                        if (interiorPinCount > 0)\n                            note.pins.splice(firstInteriorPin, interiorPinCount);\n                        return;\n                    }\n\n                    for (let pinIndex: number = 0; pinIndex < note.pins.length; pinIndex++) {\n                        const pin: NotePin = note.pins[pinIndex];\n                        if (note.start + pin.time >= startPart && note.start + pin.time <= endPart) {\n                            if (firstInteriorPin < 0)\n                                firstInteriorPin = pinIndex;\n                            interiorPinCount++;\n                        }\n                        else {\n                            if (interiorPinCount == 0)\n                                couldIntersectStart = true;\n                            if (interiorPinCount > 0)\n                                intersectsEnd = true;\n                        }\n                    }\n                    if (couldIntersectStart && interiorPinCount > 0) {\n                        note.pins[firstInteriorPin].time = startPart - note.start;\n                        firstInteriorPin++; interiorPinCount--;\n                    }\n                    if (intersectsEnd && interiorPinCount > 0) {\n                        note.pins[firstInteriorPin + interiorPinCount - 1].time = endPart - note.start;\n                        interiorPinCount--;\n                    }\n\n                    // Splice pins inside the interval.\n                    note.pins.splice(firstInteriorPin, interiorPinCount);\n\n                    if (note.pins.length < 2) {\n                        sequence.append(new ChangeNoteAdded(doc, pattern, note, noteIndex, true));\n                        noteIndex--;\n                        continue;\n                    }\n\n                    // Clean up properties.\n                    let timeAdjust: number = 0;\n                    timeAdjust = note.pins[0].time;\n                    note.start += timeAdjust;\n                    for (let i: number = 0; i < note.pins.length; i++) {\n                        note.pins[i].time -= timeAdjust;\n                    }\n                    note.end = note.start + note.pins[note.pins.length - 1].time;\n\n                    if (note.end <= note.start) {\n                        sequence.append(new ChangeNoteAdded(doc, pattern, note, noteIndex, true));\n                        noteIndex--;\n                    }\n                }\n            }\n        }\n\n        const sequence: ChangeSequence = new ChangeSequence();\n\n        const instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\n        let applyToMods: number[] = [];\n        let applyToFilterTargets: number[] = [];\n        let applyValues: number[] = [];\n        let toApply: boolean = true;\n        let slider: Slider | null = null;\n\n        // Special case, treat null change as Song volume.\n        if (change == null) {\n            var modulator = Config.modulators.dictionary[\"song volume\"];\n            applyToMods.push(modulator.index);\n            if (toApply) applyValues.push(this._doc.prefs.volume - modulator.convertRealFactor);\n        }\n        // Also for song volume, when holding the slider at a single value.\n        else if (this._doc.continuingModRecordingChange != null && this._doc.continuingModRecordingChange.storedChange == null && this._doc.continuingModRecordingChange.storedSlider == null) {\n            var modulator = Config.modulators.dictionary[\"song volume\"];\n            applyToMods.push(modulator.index);\n            if (toApply) applyValues.push(this._doc.continuingModRecordingChange.storedValues![0]);\n        }\n        else if (change instanceof ChangeTempo) {\n            var modulator = Config.modulators.dictionary[\"tempo\"];\n            applyToMods.push(modulator.index);\n            if (toApply) applyValues.push(this._doc.song.tempo - modulator.convertRealFactor);\n            // Move the actual value back, since we just want to update the modulated value and not the base slider.\n            slider = songEditor.getSliderForModSetting(modulator.index);\n            if ( slider != null ) {\n                this._doc.song.tempo = slider.getValueBeforeProspectiveChange();\n            }\n        }\n        /* Song reverb - a casualty of splitting to reverb per instrument, it's not modulate-able via slider!\n        else if (change instanceof ChangeSongReverb) { } */\n        else if (change instanceof ChangeVolume) {\n            var modulator = Config.modulators.dictionary[\"mix volume\"];\n            applyToMods.push(modulator.index);\n            if (toApply) applyValues.push(instrument.volume - modulator.convertRealFactor);\n            // Move the actual value back, since we just want to update the modulated value and not the base slider.\n            slider = songEditor.getSliderForModSetting(modulator.index);\n            if ( slider != null )\n                instrument.volume = slider.getValueBeforeProspectiveChange();\n        }\n        else if (change instanceof ChangePan) {\n            var modulator = Config.modulators.dictionary[\"pan\"];\n            applyToMods.push(modulator.index);\n            if (toApply) applyValues.push(instrument.pan - modulator.convertRealFactor);\n            // Move the actual value back, since we just want to update the modulated value and not the base slider.\n            slider = songEditor.getSliderForModSetting(modulator.index);\n            if (slider != null) {\n                instrument.pan = slider.getValueBeforeProspectiveChange();\n            }\n        }\n        else if (change instanceof ChangeReverb) {\n            var modulator = Config.modulators.dictionary[\"reverb\"];\n            applyToMods.push(modulator.index);\n            if (toApply) applyValues.push(instrument.reverb - modulator.convertRealFactor);\n            // Move the actual value back, since we just want to update the modulated value and not the base slider.\n            slider = songEditor.getSliderForModSetting(modulator.index);\n            if ( slider != null ) {\n                instrument.reverb = slider.getValueBeforeProspectiveChange();\n            }\n        }\n        else if (change instanceof ChangeDistortion) {\n            var modulator = Config.modulators.dictionary[\"distortion\"];\n            applyToMods.push(modulator.index);\n            if (toApply) applyValues.push(instrument.distortion - modulator.convertRealFactor);\n            // Move the actual value back, since we just want to update the modulated value and not the base slider.\n            slider = songEditor.getSliderForModSetting(modulator.index);\n            if ( slider != null ) {\n                instrument.distortion = slider.getValueBeforeProspectiveChange();\n            }\n        }\n        else if (change instanceof ChangeOperatorAmplitude) {\n            var modulator = Config.modulators.dictionary[\"fm slider \" + (change.operatorIndex + 1)];\n            applyToMods.push(modulator.index);\n            if (toApply) applyValues.push(instrument.operators[change.operatorIndex].amplitude - modulator.convertRealFactor);\n            // Move the actual value back, since we just want to update the modulated value and not the base slider.\n            slider = songEditor.getSliderForModSetting(modulator.index);\n            if ( slider != null ) {\n                instrument.operators[change.operatorIndex].amplitude = slider.getValueBeforeProspectiveChange();\n            }\n        }\n        else if (change instanceof ChangeFeedbackAmplitude) {\n            var modulator = Config.modulators.dictionary[\"fm feedback\"];\n            applyToMods.push(modulator.index);\n            if (toApply) applyValues.push(instrument.feedbackAmplitude - modulator.convertRealFactor);\n            // Move the actual value back, since we just want to update the modulated value and not the base slider.\n            slider = songEditor.getSliderForModSetting(modulator.index);\n            if ( slider != null ) {\n                instrument.feedbackAmplitude = slider.getValueBeforeProspectiveChange();\n            }\n        }\n        else if (change instanceof ChangePulseWidth) {\n            var modulator = Config.modulators.dictionary[\"pulse width\"];\n            applyToMods.push(modulator.index);\n            if (toApply) applyValues.push(instrument.pulseWidth - modulator.convertRealFactor);\n            // Move the actual value back, since we just want to update the modulated value and not the base slider.\n            slider = songEditor.getSliderForModSetting(modulator.index);\n            if ( slider != null ) {\n                instrument.pulseWidth = slider.getValueBeforeProspectiveChange();\n            }\n        }\n        else if (change instanceof ChangeDetune) {\n            var modulator = Config.modulators.dictionary[\"detune\"];\n            applyToMods.push(modulator.index);\n            if (toApply) applyValues.push(instrument.detune - modulator.convertRealFactor - Config.detuneCenter);\n            // Move the actual value back, since we just want to update the modulated value and not the base slider.\n            slider = songEditor.getSliderForModSetting(modulator.index);\n            if ( slider != null ) {\n                instrument.detune = slider.getValueBeforeProspectiveChange() + Config.detuneCenter;\n            }\n        }\n        else if (change instanceof ChangeVibratoDepth) {\n            var modulator = Config.modulators.dictionary[\"vibrato depth\"];\n            applyToMods.push(modulator.index);\n            if (toApply) applyValues.push(instrument.vibratoDepth * 25 - modulator.convertRealFactor);\n            // Move the actual value back, since we just want to update the modulated value and not the base slider.\n            slider = songEditor.getSliderForModSetting(modulator.index);\n            if ( slider != null ) {\n                instrument.vibratoDepth = slider.getValueBeforeProspectiveChange() / 25;\n            }\n        }\n        else if (change instanceof ChangeVibratoSpeed) {\n            var modulator = Config.modulators.dictionary[\"vibrato speed\"];\n            applyToMods.push(modulator.index);\n            if (toApply) applyValues.push(instrument.vibratoSpeed - modulator.convertRealFactor);\n            // Move the actual value back, since we just want to update the modulated value and not the base slider.\n            slider = songEditor.getSliderForModSetting(modulator.index);\n            if (slider != null) {\n                instrument.vibratoSpeed = slider.getValueBeforeProspectiveChange();\n            }\n        }\n        else if (change instanceof ChangeVibratoDelay) {\n            var modulator = Config.modulators.dictionary[\"vibrato delay\"];\n            applyToMods.push(modulator.index);\n            if (toApply) applyValues.push(instrument.vibratoDelay - modulator.convertRealFactor);\n            // Move the actual value back, since we just want to update the modulated value and not the base slider.\n            slider = songEditor.getSliderForModSetting(modulator.index);\n            if (slider != null) {\n                instrument.vibratoDelay = slider.getValueBeforeProspectiveChange();\n            }\n        }\n        else if (change instanceof ChangeArpeggioSpeed) {\n            var modulator = Config.modulators.dictionary[\"arp speed\"];\n            applyToMods.push(modulator.index);\n            if (toApply) applyValues.push(instrument.arpeggioSpeed - modulator.convertRealFactor);\n            // Move the actual value back, since we just want to update the modulated value and not the base slider.\n            slider = songEditor.getSliderForModSetting(modulator.index);\n            if (slider != null) {\n                instrument.arpeggioSpeed = slider.getValueBeforeProspectiveChange();\n            }\n        }\n        else if (change instanceof ChangePanDelay) {\n            var modulator = Config.modulators.dictionary[\"pan delay\"];\n            applyToMods.push(modulator.index);\n            if (toApply) applyValues.push(instrument.panDelay - modulator.convertRealFactor);\n            // Move the actual value back, since we just want to update the modulated value and not the base slider.\n            slider = songEditor.getSliderForModSetting(modulator.index);\n            if (slider != null) {\n                instrument.panDelay = slider.getValueBeforeProspectiveChange();\n            }\n        }\n        else if (change instanceof ChangeSequence && change.checkFirst() instanceof ChangeFilterMovePoint && !change.isCommitted()) {\n            // Pushes some pieces of data in each array, to be handled individually down below.\n            //   applyToMods:\n            //     mod index for eqFilter||noteFilter\n            //     mod index for eqFilter||noteFilter\n            //   applyValues:\n            //     new freq\n            //     new gain\n            //   applyToFilterTargets:\n            //     modFilterTarget freq index (X)\n            //     modFilterTarget gain index (Y)\n            //\n            const useChange: ChangeFilterMovePoint = change.checkFirst() as ChangeFilterMovePoint;\n            const preMoveData: FilterMoveData = useChange.getMoveData(true);\n            const postMoveData: FilterMoveData = useChange.getMoveData(false);\n            let useFilter: FilterSettings = instrument.eqFilter;\n            var modulatorIndex;\n\n            if (useChange.useNoteFilter) {\n                modulatorIndex = Config.modulators.dictionary[\"note filter\"].index;\n                useFilter = instrument.noteFilter;\n\n                if (instrument.tmpNoteFilterEnd == null) {\n                    instrument.tmpNoteFilterStart = new FilterSettings();\n                    instrument.tmpNoteFilterStart.fromJsonObject(instrument.noteFilter.toJsonObject());\n                    instrument.tmpNoteFilterEnd = instrument.tmpNoteFilterStart;\n                }\n\n                const modifyPoint: FilterControlPoint | null = instrument.tmpNoteFilterEnd.controlPoints[useChange.pointIndex];\n                if (modifyPoint != null && modifyPoint.type == useChange.pointType) {\n                    modifyPoint.freq = postMoveData.freq;\n                    modifyPoint.gain = postMoveData.gain;\n                }\n            }\n            else {\n                modulatorIndex = Config.modulators.dictionary[\"eq filter\"].index;\n\n                if (instrument.tmpEqFilterEnd == null) {\n                    instrument.tmpEqFilterStart = new FilterSettings();\n                    instrument.tmpEqFilterStart.fromJsonObject(instrument.eqFilter.toJsonObject());\n                    instrument.tmpEqFilterEnd = instrument.tmpEqFilterStart;\n                }\n\n                const modifyPoint: FilterControlPoint | null = instrument.tmpEqFilterEnd.controlPoints[useChange.pointIndex];\n                if (modifyPoint != null && modifyPoint.type == useChange.pointType) {\n                    modifyPoint.freq = postMoveData.freq;\n                    modifyPoint.gain = postMoveData.gain;\n                }\n            }\n\n            applyToMods.push(modulatorIndex);\n            applyToMods.push(modulatorIndex);\n            if (toApply) applyValues.push(postMoveData.freq);\n            if (toApply) applyValues.push(postMoveData.gain);\n\n            // ModFilterTypes indices, one each for X/Y.\n            applyToFilterTargets.push(1 + useChange.pointIndex * 2);\n            applyToFilterTargets.push(1 + useChange.pointIndex * 2 + 1);\n\n            // Reset the original point, if it was the instrument's default eq/note filter.\n            for (let i: number = 0; i < useFilter.controlPointCount; i++) {\n                var point = useFilter.controlPoints[i];\n                if (Object.is(point, preMoveData.point)) {\n                    // Reset the filter point to its previous value, as just the mods are being changed.\n                    point.freq = preMoveData.freq;\n                    point.gain = preMoveData.gain;\n                }\n            }\n            \n        }\n        else if (change instanceof ChangeBitcrusherQuantization) {\n            var modulator = Config.modulators.dictionary[\"bit crush\"];\n            applyToMods.push(modulator.index);\n            if (toApply) applyValues.push(instrument.bitcrusherQuantization - modulator.convertRealFactor);\n            // Move the actual value back, since we just want to update the modulated value and not the base slider.\n            slider = songEditor.getSliderForModSetting(modulator.index);\n            if (slider != null) {\n                instrument.bitcrusherQuantization = slider.getValueBeforeProspectiveChange();\n            }\n        }\n        else if (change instanceof ChangeBitcrusherFreq) {\n            var modulator = Config.modulators.dictionary[\"freq crush\"];\n            applyToMods.push(modulator.index);\n            if (toApply) applyValues.push(instrument.bitcrusherFreq - modulator.convertRealFactor);\n            // Move the actual value back, since we just want to update the modulated value and not the base slider.\n            slider = songEditor.getSliderForModSetting(modulator.index);\n            if (slider != null) {\n                instrument.bitcrusherFreq = slider.getValueBeforeProspectiveChange();\n            }\n        }\n        else if (change instanceof ChangeEchoSustain) {\n            var modulator = Config.modulators.dictionary[\"echo\"];\n            applyToMods.push(modulator.index);\n            if (toApply) applyValues.push(instrument.echoSustain - modulator.convertRealFactor);\n            // Move the actual value back, since we just want to update the modulated value and not the base slider.\n            slider = songEditor.getSliderForModSetting(modulator.index);\n            if (slider != null) {\n                instrument.echoSustain = slider.getValueBeforeProspectiveChange();\n            }\n        }\n        else if (change instanceof ChangeChorus) {\n            var modulator = Config.modulators.dictionary[\"chorus\"];\n            applyToMods.push(modulator.index);\n            if (toApply) applyValues.push(instrument.chorus - modulator.convertRealFactor);\n            // Move the actual value back, since we just want to update the modulated value and not the base slider.\n            slider = songEditor.getSliderForModSetting(modulator.index);\n            if (slider != null) {\n                instrument.chorus = slider.getValueBeforeProspectiveChange();\n            }\n        }\n        else if (change instanceof ChangeEQFilterSimpleCut) {\n            var modulator = Config.modulators.dictionary[\"eq filt cut\"];\n            applyToMods.push(modulator.index);\n            if (toApply) applyValues.push(instrument.eqFilterSimpleCut - modulator.convertRealFactor);\n            // Move the actual value back, since we just want to update the modulated value and not the base slider.\n            slider = songEditor.getSliderForModSetting(modulator.index);\n            if (slider != null) {\n                instrument.eqFilterSimpleCut = slider.getValueBeforeProspectiveChange();\n            }\n        }\n        else if (change instanceof ChangeEQFilterSimplePeak) {\n            var modulator = Config.modulators.dictionary[\"eq filt peak\"];\n            applyToMods.push(modulator.index);\n            if (toApply) applyValues.push(instrument.eqFilterSimplePeak - modulator.convertRealFactor);\n            // Move the actual value back, since we just want to update the modulated value and not the base slider.\n            slider = songEditor.getSliderForModSetting(modulator.index);\n            if (slider != null) {\n                instrument.eqFilterSimplePeak = slider.getValueBeforeProspectiveChange();\n            }\n        }\n        else if (change instanceof ChangeNoteFilterSimpleCut) {\n            var modulator = Config.modulators.dictionary[\"note filt cut\"];\n            applyToMods.push(modulator.index);\n            if (toApply) applyValues.push(instrument.noteFilterSimpleCut - modulator.convertRealFactor);\n            // Move the actual value back, since we just want to update the modulated value and not the base slider.\n            slider = songEditor.getSliderForModSetting(modulator.index);\n            if (slider != null) {\n                instrument.noteFilterSimpleCut = slider.getValueBeforeProspectiveChange();\n            }\n        }\n        else if (change instanceof ChangeNoteFilterSimplePeak) {\n            var modulator = Config.modulators.dictionary[\"note filt peak\"];\n            applyToMods.push(modulator.index);\n            if (toApply) applyValues.push(instrument.noteFilterSimplePeak - modulator.convertRealFactor);\n            // Move the actual value back, since we just want to update the modulated value and not the base slider.\n            slider = songEditor.getSliderForModSetting(modulator.index);\n            if (slider != null) {\n                instrument.noteFilterSimplePeak = slider.getValueBeforeProspectiveChange();\n            }\n        }\n        else if (change instanceof ChangePitchShift) {\n            var modulator = Config.modulators.dictionary[\"pitch shift\"];\n            applyToMods.push(modulator.index);\n            if (toApply) applyValues.push(instrument.pitchShift - Config.pitchShiftCenter - modulator.convertRealFactor);\n            // Move the actual value back, since we just want to update the modulated value and not the base slider.\n            slider = songEditor.getSliderForModSetting(modulator.index);\n            if (slider != null) {\n                instrument.pitchShift = slider.getValueBeforeProspectiveChange();\n            }\n        }\n        else if (change instanceof ChangeStringSustain) {\n            var modulator = Config.modulators.dictionary[\"sustain\"];\n            applyToMods.push(modulator.index);\n            if (toApply) applyValues.push(instrument.stringSustain - modulator.convertRealFactor);\n            // Move the actual value back, since we just want to update the modulated value and not the base slider.\n            slider = songEditor.getSliderForModSetting(modulator.index);\n            if (slider != null) {\n                instrument.stringSustain = slider.getValueBeforeProspectiveChange();\n            }\n        }\n        else if (change instanceof ChangeEnvelopeSpeed) {\n            var modulator = Config.modulators.dictionary[\"envelope speed\"];\n            applyToMods.push(modulator.index);\n            if (toApply) applyValues.push(instrument.envelopeSpeed - modulator.convertRealFactor);\n            // Move the actual value back, since we just want to update the modulated value and not the base slider.\n            slider = songEditor.getSliderForModSetting(modulator.index);\n            if (slider != null) {\n                instrument.envelopeSpeed = slider.getValueBeforeProspectiveChange();\n            }\n        }\n        else if (change instanceof ChangeSupersawDynamism) {\n            var modulator = Config.modulators.dictionary[\"dynamism\"];\n            applyToMods.push(modulator.index);\n            if (toApply) applyValues.push(instrument.supersawDynamism - modulator.convertRealFactor);\n            // Move the actual value back, since we just want to update the modulated value and not the base slider.\n            slider = songEditor.getSliderForModSetting(modulator.index);\n            if (slider != null) {\n                instrument.supersawDynamism = slider.getValueBeforeProspectiveChange();\n            }\n        }\n        else if (change instanceof ChangeSupersawSpread) {\n            var modulator = Config.modulators.dictionary[\"spread\"];\n            applyToMods.push(modulator.index);\n            if (toApply) applyValues.push(instrument.supersawSpread - modulator.convertRealFactor);\n            // Move the actual value back, since we just want to update the modulated value and not the base slider.\n            slider = songEditor.getSliderForModSetting(modulator.index);\n            if (slider != null) {\n                instrument.supersawSpread = slider.getValueBeforeProspectiveChange();\n            }\n        }\n        else if (change instanceof ChangeSupersawShape) {\n            var modulator = Config.modulators.dictionary[\"saw shape\"];\n            applyToMods.push(modulator.index);\n            if (toApply) applyValues.push(instrument.supersawShape - modulator.convertRealFactor);\n            // Move the actual value back, since we just want to update the modulated value and not the base slider.\n            slider = songEditor.getSliderForModSetting(modulator.index);\n            if (slider != null) {\n                instrument.supersawShape = slider.getValueBeforeProspectiveChange();\n            }\n        }\n\n        for (let applyIndex: number = 0; applyIndex < applyValues.length; applyIndex++) {\n            applyValues[applyIndex] = Math.round(applyValues[applyIndex]);\n        }\n\n        // Held value from previous call. Used to record flat durations/notes.\n        if (this._doc.continuingModRecordingChange != null && applyToFilterTargets.length == 0) {\n            if (slider == null && this._doc.continuingModRecordingChange.storedSlider != null)\n                slider = this._doc.continuingModRecordingChange.storedSlider;\n            if (slider != null && +slider.input.value == slider.getValueBeforeProspectiveChange()) {\n                applyValues = this._doc.continuingModRecordingChange.storedValues!;\n                toApply = false;\n            }\n            this._doc.continuingModRecordingChange = null;\n        }\n\n        // Set the slider back to its previous value.\n        if ( slider != null )\n            slider.updateValue(slider.getValueBeforeProspectiveChange());\n\n        for (let applyIndex: number = 0; applyIndex < applyToMods.length; applyIndex++ ) {\n            // Search the current bar (and only the current bar) for active instruments (and only active instruments) matching to the related mod to apply to.\n            let usedPatterns: Pattern[] = [];\n            let usedInstruments: Instrument[] = [];\n            let usedInstrumentIndices: number[] = [];\n            let usedModIndices: number[] = [];\n\n            for (let channelIndex: number = this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; channelIndex < this._doc.song.getChannelCount(); channelIndex++) {\n                const channel: Channel = this._doc.song.channels[channelIndex];\n                let pattern: Pattern | null = this._doc.song.getPattern(channelIndex, currentBar);\n                let useInstrumentIndex: number = 0;\n                let useModIndex: number = 0;\n\n                if ( pattern == null ) {\n                    // Hunt for instrument matching this setting and swap to it.\n                    var rtn;\n                    if (applyToFilterTargets.length > applyIndex)\n                        rtn = getMatchingInstrumentAndMod(applyToMods[applyIndex], channel, undefined, applyToFilterTargets[applyIndex]);\n                    else\n                        rtn = getMatchingInstrumentAndMod(applyToMods[applyIndex], channel);\n                    useInstrumentIndex = rtn[0];\n                    useModIndex = rtn[1];\n\n                    // Found it in this channel, but the pattern doesn't exist. So, add a new pattern and swap to that instrument.\n                    if (useInstrumentIndex != -1) {\n                        sequence.append(new ChangeEnsurePatternExists(this._doc, channelIndex, currentBar));\n                        new ChangeDuplicateSelectedReusedPatterns(this._doc, currentBar, 1, channelIndex, 1);\n\n                        pattern = this._doc.song.getPattern(channelIndex, currentBar)!;\n                    \n                        pattern.instruments[0] = useInstrumentIndex;\n\n                        changedPatterns = true;\n                    }\n                }\n                else {\n                    var rtn;\n                    if (applyToFilterTargets.length > applyIndex)\n                        rtn = getMatchingInstrumentAndMod(applyToMods[applyIndex], channel, pattern.instruments[0], applyToFilterTargets[applyIndex]);\n                    else\n                        rtn = getMatchingInstrumentAndMod(applyToMods[applyIndex], channel, pattern.instruments[0]);\n                    useInstrumentIndex = rtn[0];\n                    useModIndex = rtn[1];\n\n                    if (useInstrumentIndex != -1) {\n                        new ChangeDuplicateSelectedReusedPatterns(this._doc, currentBar, 1, channelIndex, 1);\n                        pattern = this._doc.song.getPattern(channelIndex, currentBar);\n\n                        changedPatterns = true;\n                    }\n                }\n\n                if (useInstrumentIndex != -1) {\n                    // Found the appropriate mod channel's mod instrument, mod number, and the pattern to modify (useInstrumentIndex, useModIndex, and pattern respectively).\n                    // Note these as needing modification, but continue on until all channels are checked.\n                    usedPatterns.push(pattern!);\n                    usedInstrumentIndices.push(useInstrumentIndex);\n                    usedInstruments.push(channel.instruments[useInstrumentIndex]);\n                    usedModIndices.push(useModIndex);\n                }\n            }\n\n            // If the setting wasn't found in any channel or instruments, add it to the first unused slot in any channel.\n            if ( usedInstrumentIndices.length == 0 ) {\n                for (let channelIndex: number = this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; channelIndex < this._doc.song.getChannelCount(); channelIndex++) {\n                    const channel: Channel = this._doc.song.channels[channelIndex];\n                    let pattern: Pattern | null = this._doc.song.getPattern(channelIndex, currentBar);\n                    let useInstrument: number = -1;\n                    // If there's a pattern for this channel in this bar, it only makes sense to add the new slot in that instrument somewhere or give up and move to the next.\n                    if ( pattern != null ) {\n                        useInstrument = pattern.instruments[0];\n                    }\n                    // No pattern for this channel, so check through all the instruments for a free slot, and add a pattern if there's a free one.\n                    else {\n                        for ( let instrumentIndex: number = 0; instrumentIndex < channel.instruments.length; instrumentIndex++ ) {\n                            for (let mod: number = 0; mod < Config.modCount; mod++ ) {\n                                if ( channel.instruments[instrumentIndex].modulators[mod] == Config.modulators.dictionary[\"none\"].index ) {\n                                    useInstrument = instrumentIndex;\n\n                                    sequence.append(new ChangeEnsurePatternExists(this._doc, channelIndex, currentBar));\n                    \n                                    pattern = this._doc.song.getPattern(channelIndex, currentBar)!;\n                    \n                                    pattern.instruments[0] = instrumentIndex;\n\n                                    mod = Config.modCount;\n                                    instrumentIndex = channel.instruments.length;\n                                    channelIndex = this._doc.song.getChannelCount();\n\n                                    changedPatterns = true;\n                                }\n                            }\n                        }\n                    }\n\n                    // Found a suitable instrument to use, now add the setting\n                    if ( useInstrument != -1 ) {\n                        let instrument: Instrument = channel.instruments[useInstrument];\n                        for (let mod: number = 0; mod < Config.modCount; mod++) {\n                            if ( instrument.modulators[mod] == Config.modulators.dictionary[\"none\"].index ) {\n                                instrument.modulators[mod] = applyToMods[applyIndex];\n                                if ( Config.modulators[applyToMods[applyIndex]].forSong ) {\n                                    instrument.modChannels[mod] = -1; // Song\n                                }\n                                else {\n                                    instrument.modChannels[mod] = this._doc.channel;\n                                    \n                                    if (this._doc.song.channels[this._doc.channel].instruments.length > 1) {\n                                        // Ctrl key or Shift key: set the new mod target to \"active\" modulation for the most flexibility, if there's more than one instrument in the channel.\n                                        if (!this.controlMode || !this.shiftMode)\n                                            instrument.modInstruments[mod] = this._doc.song.channels[this._doc.channel].instruments.length + 1;\n                                        // Control+Shift key: Set the new mod target to the currently viewed instrument only.\n                                        else\n                                            instrument.modInstruments[mod] = this._doc.getCurrentInstrument();\n                                    }\n                                    else\n                                        instrument.modInstruments[mod] = 0;\n\n                                    // Filter dot. Add appropriate filter target settings (dot# X and dot# Y mod).\n                                    if (applyToFilterTargets.length > applyIndex) {\n                                        instrument.modFilterTypes[mod] = applyToFilterTargets[applyIndex];\n                                    }\n                                }\n\n                                usedPatterns.push(pattern!);\n                                usedInstrumentIndices.push(useInstrument);\n                                usedInstruments.push(instrument);\n                                usedModIndices.push(mod);\n\n                                mod = Config.modCount; channelIndex = this._doc.song.getChannelCount(); // Skip after finding one\n                            }\n                        }\n                    }\n                }\n            }\n\n            // Now, finally, go through all the used patterns/instruments/mods and add appropriate pins\n            for (let i: number = 0; i < usedPatterns.length; i++) {\n\n                // When recording filter dots, have a longer minimum duration to lessen the chance of fighting with active morph mods.\n                const addLength: number = (applyToFilterTargets.length == 0) ? 0 : 24;\n\n                // The distance before previous notes won't be extended and a new one will be created instead. A bit longer at large time quanta since the chance of missing the end of a note is higher.\n                const newNoteDist: number = +(timeQuantum >= 6) * 6 + 12;\n\n                let latestPart: number = -1;\n                let latestNote: Note | null = null;\n                let latestPin: NotePin | null = null;\n                let latestPinIdx: number = -1;\n\n                let prevNotePart: number = -1;\n                let prevNote: Note | null = null;\n\n                // Debug, get an unaltered copy of the current pattern (usedPatterns[i]) for comparison if an error is thrown down below.\n                //let patternCopy: Pattern = JSON.parse(JSON.stringify(usedPatterns[i].notes));\n          \n                // Explicitly set the mod to the applied value, just in case the note we add isn't picked up in the next synth run.\n                const modNoteIndex: number = Config.modCount - 1 - usedModIndices[i];\n                const usedInstrument: Instrument = usedInstruments[i];\n                if ( usedInstrument.modChannels[usedModIndices[i]] >= -1 ) {\n                    // Generate list of used instruments\n                    let usedNewInstrumentIndices: number[] = [];\n                    if (Config.modulators[applyToMods[applyIndex]].forSong) {\n                        // Instrument doesn't matter for song, just push a random index to run the modsynth once\n                        usedNewInstrumentIndices.push(0);\n                    } else {\n                        // All\n                        if (usedInstrument.modInstruments[usedModIndices[i]] == this._doc.synth.song!.channels[usedInstrument.modChannels[usedModIndices[i]]].instruments.length) {\n                            for (let k: number = 0; k < this._doc.synth.song!.channels[usedInstrument.modChannels[usedModIndices[i]]].instruments.length; k++) {\n                                usedNewInstrumentIndices.push(k);\n                            }\n                        }\n                        // Active\n                        else if (usedInstrument.modInstruments[usedModIndices[i]] > this._doc.synth.song!.channels[usedInstrument.modChannels[usedModIndices[i]]].instruments.length) {\n                            if (this._doc.synth.song!.getPattern(usedInstrument.modChannels[usedModIndices[i]], currentBar) != null)\n                                usedNewInstrumentIndices = this._doc.synth.song!.getPattern(usedInstrument.modChannels[usedModIndices[i]], currentBar)!.instruments;\n                        } else {\n                            usedNewInstrumentIndices.push(usedInstrument.modInstruments[usedModIndices[i]]);\n                        }\n                    }\n\n                    for (let instrumentIndex: number = 0; instrumentIndex < usedNewInstrumentIndices.length; instrumentIndex++) {\n                        this._doc.synth.setModValue(applyValues[applyIndex], applyValues[applyIndex], usedInstruments[i].modChannels[usedModIndices[i]], usedNewInstrumentIndices[instrumentIndex], applyToMods[applyIndex] );\n                        this._doc.synth.forceHoldMods(applyValues[applyIndex], usedInstruments[i].modChannels[usedModIndices[i]], usedNewInstrumentIndices[instrumentIndex], applyToMods[applyIndex]);\n                    }\n                }\n                \n                // Scan for a note starting around this point.\n                for ( let j: number = 0; j < usedPatterns[i].notes.length; j++ ) {\n                    const note: Note = usedPatterns[i].notes[j];\n                    if ( note.pitches[0] == modNoteIndex && note.start <= currentPart ) {\n                        // Find latest pin that doesn't exceed this part.\n                        for (let pinIdx: number = 0; pinIdx < note.pins.length; pinIdx++ ) {\n                            const pin: NotePin = note.pins[pinIdx];\n                            // Special case in there to prioritize picking the start of a note over the end of another (though they share the same time).\n                            if ( note.start + pin.time <= currentPart && (note.start + pin.time > latestPart || (note.start == latestPart) ) ) {\n                                latestPart = note.start + pin.time;\n                                latestPin = pin;\n                                latestPinIdx = pinIdx;\n                                latestNote = note;\n                            }\n                        }\n                    }\n\n                    if (note.pitches[0] == modNoteIndex && note.end <= currentPart && note.end > prevNotePart) {\n                        prevNotePart = note.end;\n                        prevNote = note;\n                    }\n                }\n\n                let prevPart: number = Math.max(0, currentPart - timeQuantum);\n                let endPart: number = Math.min(currentPart + timeQuantum + addLength, Config.partsPerBeat * this._doc.song.beatsPerBar);\n\n                let continuous: boolean = (toApply == false);\n\n                // Make a new note if enough time has elapsed since the prior note.\n                if (latestNote == null || currentPart - latestNote.end >= newNoteDist) {\n                    // At end, so unable to make a new note.\n                    if (currentPart == endPart)\n                        continue;\n                    sanitizeInterval(this._doc, currentPart, endPart, usedPatterns[i], modNoteIndex, sequence);\n                    latestNote = new Note(modNoteIndex, currentPart, endPart, applyValues[applyIndex], this._doc.song.getChannelIsNoise(this._doc.channel));\n                    sequence.append(new ChangeNoteAdded(this._doc, usedPatterns[i], latestNote, usedPatterns[i].notes.length));\n                }\n                else if (latestPart == currentPart) {\n                    sanitizeInterval(this._doc, prevPart, currentPart, usedPatterns[i], modNoteIndex, sequence);\n                    sanitizeInterval(this._doc, currentPart, endPart, usedPatterns[i], modNoteIndex, sequence);\n\n                    latestPin!.size = applyValues[applyIndex];\n\n                    if (continuous) {\n                        for (let usePin: number = 0; usePin < latestNote.pins.length; usePin++) {\n                            if (latestNote.pins[usePin].time >= prevPart && latestNote.pins[usePin].time <= currentPart)\n                                latestNote.pins[usePin].size = applyValues[applyIndex];\n                        }\n                    }\n\n                    if (prevNote != null && prevNote.pins.length >= 2) {\n                        // Directly update the overlapping pin.\n                        if (prevNote.end == currentPart) {\n                            prevNote.pins[prevNote.pins.length - 1].size = applyValues[applyIndex];\n\n                            if (continuous) {\n                                for (let usePin: number = 0; usePin < prevNote.pins.length; usePin++) {\n                                    if (prevNote.pins[usePin].time + prevNote.start >= prevPart)\n                                        prevNote.pins[usePin].size = applyValues[applyIndex];\n                                }\n                            }\n                        }\n                        // Bridge the gap from previous note to this.\n                        else if (prevNote.end == prevPart && latestNote.start == currentPart) {\n                            prevNote.pins.push(makeNotePin(0, currentPart - prevNote.start, applyValues[applyIndex]));\n                            prevNote.end = currentPart;\n                        }\n                    }\n                }\n                else if (currentPart - latestPart < 8 && latestNote.pins[latestPinIdx].size == applyValues[applyIndex]) {\n                    // Don't record flat readings, prefer smooth interpolation.\n                    // But, we'll still smooth out previous pins if we're continuously holding.\n                    if (continuous) {\n                        for (let usePin: number = 0; usePin < latestNote.pins.length; usePin++) {\n                            if ( latestNote.pins[usePin].time >= prevPart && latestNote.pins[usePin].time <= currentPart)\n                            latestNote.pins[usePin].size = applyValues[applyIndex];\n                        }\n                    }\n                }\n                else {\n                    // Insert a pin in the current note.\n                    if (latestNote.pins.length - 1 > latestPinIdx) {\n                        sanitizeInterval(this._doc, prevPart, currentPart, usedPatterns[i], modNoteIndex, sequence);\n                        sanitizeInterval(this._doc, currentPart, endPart, usedPatterns[i], modNoteIndex, sequence);\n\n                        // Sanitization can cause a pin to snap to the insertion point. If so, use it instead.\n                        let k: number;\n                        let usePin: NotePin | null = null;\n                        for (k = 0; k < latestNote.pins.length; k++) {\n                            if (latestNote.pins[k].time == currentPart - latestNote.start) {\n                                usePin = latestNote.pins[k];\n                                break;\n                            }\n                            else if (latestNote.pins[k].time > currentPart - latestNote.start)\n                                break;\n                        }\n                        if (usePin != null)\n                            usePin.size = applyValues[applyIndex];\n                        else\n                            latestNote.pins.splice(k, 0, makeNotePin(0, currentPart - latestNote.start, applyValues[applyIndex]));\n                    }\n                    // Push a new pin at the end of the note.\n                    else {\n                        sanitizeInterval(this._doc, prevPart, currentPart, usedPatterns[i], modNoteIndex, sequence);\n                        sanitizeInterval(this._doc, currentPart, endPart, usedPatterns[i], modNoteIndex, sequence);\n                        latestNote.pins.push(makeNotePin(0, currentPart - latestNote.start, applyValues[applyIndex]));\n                        latestNote.end = currentPart;\n                    }\n\n                    if (continuous) {\n                        for (let usePin: number = 0; usePin < latestNote.pins.length; usePin++) {\n                            if ( latestNote.pins[usePin].time >= prevPart && latestNote.pins[usePin].time <= currentPart)\n                            latestNote.pins[usePin].size = applyValues[applyIndex];\n                        }\n                    }\n                }\n\n                // A few sanity checks.\n                let lastNoteEnds: number[] = [-1, -1, -1, -1, -1, -1];\n                usedPatterns[i].notes.sort(function (a, b) { return (a.start == b.start) ? a.pitches[0] - b.pitches[0] : a.start - b.start; });\n                for (let checkIndex: number = 0; checkIndex < usedPatterns[i].notes.length; checkIndex++) {\n                    const note: Note = usedPatterns[i].notes[checkIndex];\n                    if (note.start < lastNoteEnds[note.pitches[0]])\n                        throw new Error(\"Error in mod note recording!\");\n                    lastNoteEnds[note.pitches[0]] = note.end;\n                    if (note.pins.length < 2 || note.pins[0].time > 0 || note.start == note.end\n                        || note.pins[note.pins.length - 1].time != note.end - note.start) {\n                        throw new Error(\"Error in mod note recording!\");\n                    }\n                    let latestPinTime: number = -1;\n                    for (let k: number = 0; k < note.pins.length; k++) {\n                        if (note.pins[k].time <= latestPinTime) {\n                            throw new Error(\"Error in mod note recording!\");\n                        }\n                        latestPinTime = note.pins[k].time;\n                    }\n                }\n            }\n        }\n\n        // Re-render mod pattern since it may have new notes in it (e.g. if editing song mods from mod channel)\n        if (this._doc.channel >= this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\n            this._doc.currentPatternIsDirty = true;\n        }\n\n        if (applyValues.length > 0) {\n            //this._doc.record(sequence);\n            this._doc.continuingModRecordingChange = new ChangeHoldingModRecording(this._doc, change, applyValues, slider);\n        }\n\n        return changedPatterns;\n    }\n\n    public stopEditingModLabel(discardChanges: boolean) {\n        if (this.editingModLabel) {\n            this.editingModLabel = false;\n            this.modDragValueLabel.style.setProperty(\"pointer-events\", \"none\");\n\n            if (window.getSelection) {\n                let sel: Selection | null = window.getSelection();\n                if (sel != null)\n                    sel.removeAllRanges();\n            }\n            // Return pin to its state before text editing\n            if (discardChanges) {\n                this._modDragPin.size = this._modDragStartValue;\n\n                let presValue: number = this._modDragStartValue + Config.modulators[this._modDragSetting].convertRealFactor;\n\n                // This is me being too lazy to fiddle with the css to get it to align center.\n                let xOffset: number = (+(presValue >= 10.0)) + (+(presValue >= 100.0)) + (+(presValue < 0.0)) + (+(presValue <= -10.0));\n                this._modDragValueLabelLeft = +prettyNumber(Math.max(Math.min(this._editorWidth - 10 - xOffset * 8, this._partWidth * (this._modDragNote.start + this._modDragPin.time) - 4 - xOffset * 4), 2));\n                this.modDragValueLabel.style.setProperty(\"left\", \"\" + this._modDragValueLabelLeft + \"px\");\n\n                const sequence: ChangeSequence = new ChangeSequence();\n                this._dragChange = sequence;\n                this._doc.setProspectiveChange(this._dragChange);\n\n                sequence.append(new ChangeSizeBend(this._doc, this._modDragNote, this._modDragPin.time, this._modDragStartValue, this._modDragPin.interval, this.shiftMode));\n\n                this._dragChange = null;\n            }\n\n            const continuousState: boolean = this._doc.lastChangeWas(this._dragChange);\n            if (continuousState) {\n                if (this._dragChange != null) {\n                    this._doc.record(this._dragChange);\n                    this._dragChange = null;\n                }\n            }\n        }\n    }\n\n    private _whenCursorPressed(): void {\n        // Check for click on mod value label\n        if (this._doc.song.getChannelIsMod(this._doc.channel) && this.modDragValueLabel.style.getPropertyValue(\"display\") != \"none\" &&\n            this._mouseX > +this._modDragValueLabelLeft - 6 &&\n            this._mouseX < +this._modDragValueLabelLeft + this._modDragValueLabelWidth + 6 &&\n            this._mouseY > +this._modDragValueLabelTop - 8 &&\n            this._mouseY < +this._modDragValueLabelTop + 11) {\n            // Mod value label clicked, select it\n            this.modDragValueLabel.style.setProperty(\"pointer-events\", \"fill\");\n            this.modDragValueLabel.setAttribute(\"contenteditable\", \"true\");\n            if (window.getSelection) {\n                let sel: Selection | null = window.getSelection();\n                if (sel != null)\n                    sel.selectAllChildren(this.modDragValueLabel);\n            }\n\n            window.setTimeout(() => { this.modDragValueLabel.focus(); });\n            this.editingModLabel = true;\n        } else {\n            this.stopEditingModLabel(false);\n            if (this._doc.prefs.enableNotePreview) this._doc.synth.maintainLiveInput();\n            this._mouseDown = true;\n            this._mouseXStart = this._mouseX;\n            this._mouseYStart = this._mouseY;\n            this._updateCursorStatus();\n            this._updatePreview();\n            const sequence: ChangeSequence = new ChangeSequence();\n            this._dragChange = sequence;\n            this._lastChangeWasPatternSelection = this._doc.lastChangeWas(this._changePatternSelection);\n            this._doc.setProspectiveChange(this._dragChange);\n\n            if (this._cursorAtStartOfSelection()) {\n                this._draggingStartOfSelection = true;\n            } else if (this._cursorAtEndOfSelection()) {\n                this._draggingEndOfSelection = true;\n            } else if (this._shiftHeld) {\n                if ((this._doc.selection.patternSelectionActive && this._cursor.pitchIndex == -1) || this._cursorIsInSelection()) {\n                    sequence.append(new ChangePatternSelection(this._doc, 0, 0));\n                } else {\n                    if (this._cursor.curNote != null) {\n                        sequence.append(new ChangePatternSelection(this._doc, this._cursor.curNote.start, this._cursor.curNote.end));\n                    } else {\n                        const start: number = Math.max(0, Math.min((this._doc.song.beatsPerBar - 1) * Config.partsPerBeat, Math.floor(this._cursor.exactPart / Config.partsPerBeat) * Config.partsPerBeat));\n                        const end: number = start + Config.partsPerBeat;\n                        sequence.append(new ChangePatternSelection(this._doc, start, end));\n                    }\n                }\n            } else if (this._cursorIsInSelection()) {\n                this._draggingSelectionContents = true;\n            } else if (this._cursor.valid && this._cursor.curNote == null) {\n                sequence.append(new ChangePatternSelection(this._doc, 0, 0));\n\n                // If clicking in empty space, the result will be adding a note,\n                // so we can safely add it immediately. Note that if clicking on\n                // or near an existing note, the result will depend on whether\n                // a drag follows, so we couldn't add the note yet without being\n                // confusing.\n\n                const note: Note = new Note(this._cursor.pitch, this._cursor.start, this._cursor.end, Config.noteSizeMax, this._doc.song.getChannelIsNoise(this._doc.channel));\n                note.pins = [];\n                for (const oldPin of this._cursor.pins) {\n                    note.pins.push(makeNotePin(0, oldPin.time, oldPin.size));\n                }\n                sequence.append(new ChangeEnsurePatternExists(this._doc, this._doc.channel, this._doc.bar));\n                const pattern: Pattern | null = this._doc.getCurrentPattern(this._barOffset);\n                if (pattern == null) throw new Error();\n                sequence.append(new ChangeNoteAdded(this._doc, pattern, note, this._cursor.curIndex));\n\n                if (this._doc.prefs.enableNotePreview && !this._doc.synth.playing) {\n                    // Play the new note out loud if enabled.\n                    const duration: number = Math.min(Config.partsPerBeat, this._cursor.end - this._cursor.start);\n                    this._doc.performance.setTemporaryPitches([this._cursor.pitch], duration);\n                }\n            }\n            this._updateSelection();\n        }\n    }\n\n    private _whenMouseMoved = (event: MouseEvent): void => {\n        this.controlMode = event.ctrlKey;\n        this.shiftMode = event.shiftKey;\n\n        const boundingRect: ClientRect = this._svg.getBoundingClientRect();\n        this._mouseX = ((event.clientX || event.pageX) - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\n        this._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\n        if (isNaN(this._mouseX)) this._mouseX = 0;\n        if (isNaN(this._mouseY)) this._mouseY = 0;\n        this._usingTouch = false;\n        this._whenCursorMoved();\n    }\n\n    private _whenTouchMoved = (event: TouchEvent): void => {\n        if (!this._mouseDown) return;\n        event.preventDefault();\n        const boundingRect: ClientRect = this._svg.getBoundingClientRect();\n        this._mouseX = (event.touches[0].clientX - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\n        this._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\n        if (isNaN(this._mouseX)) this._mouseX = 0;\n        if (isNaN(this._mouseY)) this._mouseY = 0;\n        this._whenCursorMoved();\n    }\n\n    private _whenCursorMoved(): void {\n        if (this._doc.prefs.enableNotePreview && this._mouseOver) this._doc.synth.maintainLiveInput();\n\n        // HACK: Undoable pattern changes rely on persistent instance\n        // references. Loading song from hash via undo/redo breaks that,\n        // so changes are no longer undoable and the cursor status may be\n        // invalid. Abort further drag changes until the mouse is released.\n        const continuousState: boolean = this._doc.lastChangeWas(this._dragChange);\n\n        if (!this._mouseDragging && this._mouseDown && this._cursor.valid && continuousState) {\n            const dx: number = this._mouseX - this._mouseXStart;\n            const dy: number = this._mouseY - this._mouseYStart;\n            if (Math.sqrt(dx * dx + dy * dy) > 5) {\n                this._mouseDragging = true;\n                this._mouseHorizontal = Math.abs(dx) >= Math.abs(dy);\n            }\n        }\n\n        if (this._shiftHeld && this._mouseHorizontal && Math.abs(this._mouseXStart - this._mouseX) > 5) {\n            this._dragConfirmed = true;\n        }\n\n        if (this._mouseDragging && this._mouseDown && this._cursor.valid && continuousState) {\n            this._dragChange!.undo();\n            const sequence: ChangeSequence = new ChangeSequence();\n            this._dragChange = sequence;\n            this._doc.setProspectiveChange(this._dragChange);\n\n            const minDivision: number = this._getMinDivision();\n            const currentPart: number = this._snapToMinDivision(this._mouseX / this._partWidth);\n            if (this._draggingStartOfSelection) {\n                sequence.append(new ChangePatternSelection(this._doc, Math.max(0, Math.min(this._doc.song.beatsPerBar * Config.partsPerBeat, currentPart)), this._doc.selection.patternSelectionEnd));\n                this._updateSelection();\n            } else if (this._draggingEndOfSelection) {\n                sequence.append(new ChangePatternSelection(this._doc, this._doc.selection.patternSelectionStart, Math.max(0, Math.min(this._doc.song.beatsPerBar * Config.partsPerBeat, currentPart))));\n                this._updateSelection();\n            } else if (this._draggingSelectionContents) {\n                const pattern: Pattern | null = this._doc.getCurrentPattern(this._barOffset);\n                if (this._mouseDragging && pattern != null) {\n                    this._dragChange!.undo();\n                    const sequence: ChangeSequence = new ChangeSequence();\n                    this._dragChange = sequence;\n                    this._doc.setProspectiveChange(this._dragChange);\n\n                    const notesInScale: number = Config.scales[this._doc.song.scale].flags.filter(x => x).length;\n                    const pitchRatio: number = this._doc.song.getChannelIsNoise(this._doc.channel) ? 1 : 12 / notesInScale;\n                    const draggedParts: number = Math.round((this._mouseX - this._mouseXStart) / (this._partWidth * minDivision)) * minDivision;\n                    const draggedTranspose: number = Math.round((this._mouseYStart - this._mouseY) / (this._pitchHeight * pitchRatio));\n                    sequence.append(new ChangeDragSelectedNotes(this._doc, this._doc.channel, pattern, draggedParts, draggedTranspose));\n                }\n\n            } else if (this._shiftHeld && this._dragConfirmed) {\n\n                if (this._mouseDragging) {\n                    let start: number = Math.max(0, Math.min((this._doc.song.beatsPerBar - 1) * Config.partsPerBeat, Math.floor(this._cursor.exactPart / Config.partsPerBeat) * Config.partsPerBeat));\n                    let end: number = start + Config.partsPerBeat;\n                    if (this._cursor.curNote != null) {\n                        start = Math.max(start, this._cursor.curNote.start);\n                        end = Math.min(end, this._cursor.curNote.end);\n                    }\n\n                    // Todo: The following two conditional blocks could maybe be refactored.\n                    if (currentPart < start) {\n                        start = 0;\n                        const pattern: Pattern | null = this._doc.getCurrentPattern(this._barOffset);\n                        if (pattern != null) {\n                            for (let i: number = 0; i < pattern.notes.length; i++) {\n                                if (pattern.notes[i].start <= currentPart) {\n                                    start = pattern.notes[i].start;\n                                }\n                                if (pattern.notes[i].end <= currentPart) {\n                                    start = pattern.notes[i].end;\n                                }\n                            }\n                        }\n                        for (let beat: number = 0; beat <= this._doc.song.beatsPerBar; beat++) {\n                            const part: number = beat * Config.partsPerBeat;\n                            if (start <= part && part <= currentPart) {\n                                start = part;\n                            }\n                        }\n                    }\n\n                    if (currentPart > end) {\n                        end = Config.partsPerBeat * this._doc.song.beatsPerBar;\n                        const pattern: Pattern | null = this._doc.getCurrentPattern(this._barOffset);\n                        if (pattern != null) {\n                            for (let i: number = 0; i < pattern.notes.length; i++) {\n                                if (pattern.notes[i].start >= currentPart) {\n                                    end = pattern.notes[i].start;\n                                    break;\n                                }\n                                if (pattern.notes[i].end >= currentPart) {\n                                    end = pattern.notes[i].end;\n                                    break;\n                                }\n                            }\n                        }\n                        for (let beat: number = 0; beat <= this._doc.song.beatsPerBar; beat++) {\n                            const part: number = beat * Config.partsPerBeat;\n                            if (currentPart < part && part < end) {\n                                end = part;\n                            }\n                        }\n                    }\n\n                    sequence.append(new ChangePatternSelection(this._doc, start, end));\n                    this._updateSelection();\n                }\n            } else {\n\n                if (this._cursor.curNote == null) {\n                    sequence.append(new ChangePatternSelection(this._doc, 0, 0));\n\n\n                    let backwards: boolean;\n                    let directLength: number;\n                    if (currentPart < this._cursor.start) {\n                        backwards = true;\n                        directLength = this._cursor.start - currentPart;\n                    } else {\n                        backwards = false;\n                        directLength = currentPart - this._cursor.start + minDivision;\n                    }\n\n                    let defaultLength: number = minDivision;\n                    for (let i: number = minDivision; i <= this._doc.song.beatsPerBar * Config.partsPerBeat; i += minDivision) {\n                        if (minDivision == 1) {\n                            if (i < 5) {\n                                // Allow small lengths.\n                            } else if (i <= Config.partsPerBeat / 2.0) {\n                                if (i % 3 != 0 && i % 4 != 0) {\n                                    continue;\n                                }\n                            } else if (i <= Config.partsPerBeat * 1.5) {\n                                if (i % 6 != 0 && i % 8 != 0) {\n                                    continue;\n                                }\n                            } else if (i % Config.partsPerBeat != 0) {\n                                continue;\n                            }\n                        } else {\n                            if (i >= 5 * minDivision &&\n                                i % Config.partsPerBeat != 0 &&\n                                i != Config.partsPerBeat * 3.0 / 4.0 &&\n                                i != Config.partsPerBeat * 3.0 / 2.0 &&\n                                i != Config.partsPerBeat * 4.0 / 3.0) {\n                                continue;\n                            }\n                        }\n\n                        const blessedLength: number = i;\n                        if (blessedLength == directLength) {\n                            defaultLength = blessedLength;\n                            break;\n                        }\n                        if (blessedLength < directLength) {\n                            defaultLength = blessedLength;\n                        }\n\n                        if (blessedLength > directLength) {\n                            if (defaultLength < directLength - minDivision) {\n                                defaultLength = blessedLength;\n                            }\n                            break;\n                        }\n                    }\n\n                    let start: number;\n                    let end: number;\n\n                    if (backwards) {\n                        end = this._cursor.start;\n                        start = end - defaultLength;\n                    } else {\n                        start = this._cursor.start;\n                        end = start + defaultLength;\n                    }\n                    const continuesLastPattern: boolean = (start < 0 && this._doc.channel < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount);\n                    if (start < 0) start = 0;\n                    if (end > this._doc.song.beatsPerBar * Config.partsPerBeat) end = this._doc.song.beatsPerBar * Config.partsPerBeat;\n\n                    if (start < end) {\n                        sequence.append(new ChangeEnsurePatternExists(this._doc, this._doc.channel, this._doc.bar));\n                        const pattern: Pattern | null = this._doc.getCurrentPattern(this._barOffset);\n                        if (pattern == null) throw new Error();\n                        // Using parameter skipNote to force proper \"collision\" checking vis-a-vis pitch for mod channels.\n                        sequence.append(new ChangeNoteTruncate(this._doc, pattern, start, end, new Note(this._cursor.pitch, 0, 0, 0)));\n                        let i: number;\n                        for (i = 0; i < pattern.notes.length; i++) {\n                            if (pattern.notes[i].start >= end) break;\n                        }\n                        const theNote: Note = new Note(this._cursor.pitch, start, end,\n                            this._doc.song.getNewNoteVolume(this._doc.song.getChannelIsMod(this._doc.channel), this._doc.channel, this._doc.getCurrentInstrument(this._barOffset), this._cursor.pitch),\n                            this._doc.song.getChannelIsNoise(this._doc.channel));\n                        theNote.continuesLastPattern = continuesLastPattern;\n                        sequence.append(new ChangeNoteAdded(this._doc, pattern, theNote, i));\n                        this._copyPins(theNote);\n\n                        this._dragTime = backwards ? start : end;\n                        this._dragPitch = this._cursor.pitch;\n                        this._dragSize = theNote.pins[backwards ? 0 : 1].size;\n                        this._dragVisible = true;\n                    }\n\n                    let prevPattern: Pattern | null = this._pattern;\n\n                    this._pattern = this._doc.getCurrentPattern(this._barOffset);\n\n                    if (this._pattern != null && this._doc.song.getChannelIsMod(this._doc.channel) && this._interactive && prevPattern != this._pattern) {\n                        // Need to re-sort the notes by start time as they might change order if user drags them around.\n                        this._pattern.notes.sort(function (a, b) { return (a.start == b.start) ? a.pitches[0] - b.pitches[0] : a.start - b.start; });\n                    }\n\n                } else if (this._mouseHorizontal) {\n\n                    sequence.append(new ChangePatternSelection(this._doc, 0, 0));\n\n                    const shift: number = (this._mouseX - this._mouseXStart) / this._partWidth;\n\n                    const shiftedPin: NotePin = this._cursor.curNote.pins[this._cursor.nearPinIndex];\n                    let shiftedTime: number = Math.round((this._cursor.curNote.start + shiftedPin.time + shift) / minDivision) * minDivision;\n                    const continuesLastPattern: boolean = (shiftedTime < 0.0 && this._doc.channel < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount);\n                    if (shiftedTime < 0) shiftedTime = 0;\n                    if (shiftedTime > this._doc.song.beatsPerBar * Config.partsPerBeat) shiftedTime = this._doc.song.beatsPerBar * Config.partsPerBeat;\n\n                    if (this._pattern == null) throw new Error();\n\n                    if (shiftedTime <= this._cursor.curNote.start && this._cursor.nearPinIndex == this._cursor.curNote.pins.length - 1 ||\n                        shiftedTime >= this._cursor.curNote.end && this._cursor.nearPinIndex == 0) {\n\n                        sequence.append(new ChangeNoteAdded(this._doc, this._pattern, this._cursor.curNote, this._cursor.curIndex, true));\n\n                        this._dragVisible = false;\n                    } else {\n                        const start: number = Math.min(this._cursor.curNote.start, shiftedTime);\n                        const end: number = Math.max(this._cursor.curNote.end, shiftedTime);\n\n                        this._dragTime = shiftedTime;\n                        this._dragPitch = this._cursor.curNote.pitches[this._cursor.pitchIndex == -1 ? 0 : this._cursor.pitchIndex] + this._cursor.curNote.pins[this._cursor.nearPinIndex].interval;\n                        this._dragSize = this._cursor.curNote.pins[this._cursor.nearPinIndex].size;\n                        this._dragVisible = true;\n\n                        sequence.append(new ChangeNoteTruncate(this._doc, this._pattern, start, end, this._cursor.curNote));\n                        sequence.append(new ChangePinTime(this._doc, this._cursor.curNote, this._cursor.nearPinIndex, shiftedTime, continuesLastPattern));\n                        this._copyPins(this._cursor.curNote);\n                    }\n                } else if (this._cursor.pitchIndex == -1 || this._doc.song.getChannelIsMod(this._doc.channel)) {\n\n                    if (!this._mouseDragging)\n                    sequence.append(new ChangePatternSelection(this._doc, 0, 0));\n\n                    const bendPart: number =\n                        Math.max(this._cursor.curNote.start,\n                            Math.min(this._cursor.curNote.end,\n                                Math.round(this._mouseX / (this._partWidth * minDivision)) * minDivision\n                            )\n                        ) - this._cursor.curNote.start;\n\n                    let prevPin: NotePin;\n                    let nextPin: NotePin = this._cursor.curNote.pins[0];\n                    let bendSize: number = 0;\n                    let bendInterval: number = 0;\n                    let cap: number = this._doc.song.getVolumeCap(this._doc.song.getChannelIsMod(this._doc.channel), this._doc.channel, this._doc.getCurrentInstrument(this._barOffset), this._cursor.pitch);\n\n                    // Dragging gets a bit faster after difference in drag counts is >8.\n                    let dragFactorSlow: number = 25.0 / Math.pow(cap, 0.4);\n                    let dragFactorFast: number = 22.0 / Math.pow(cap, 0.5);\n                    let dragSign: number = (this._mouseYStart > this._mouseY ? 1 : -1);\n                    let dragCounts: number = Math.min(Math.abs(this._mouseYStart - this._mouseY) / dragFactorSlow, 8) + Math.max(0, Math.abs(this._mouseYStart - this._mouseY) / dragFactorFast - 8);\n\n                    // Note volume drag overrides attempts to make a pattern selection\n                    if (dragCounts > 0) {\n                        this._shiftHeld = false;\n                    }\n\n                    for (let i: number = 1; i < this._cursor.curNote.pins.length; i++) {\n                        prevPin = nextPin;\n                        nextPin = this._cursor.curNote.pins[i];\n                        if (bendPart > nextPin.time) continue;\n                        if (bendPart < prevPin.time) throw new Error();\n                        const sizeRatio: number = (bendPart - prevPin.time) / (nextPin.time - prevPin.time);\n                        bendSize = Math.round(prevPin.size * (1.0 - sizeRatio) + nextPin.size * sizeRatio + dragSign * dragCounts);\n                        // If not in fine control mode, round to 0~2~4~6 (normal 4 settings)\n                        if (!this.controlMode && !this._doc.prefs.alwaysFineNoteVol && !this._doc.song.getChannelIsMod(this._doc.channel)) {\n                            bendSize = Math.floor(bendSize / 2) * 2;\n                        }\n                        if (bendSize < 0) bendSize = 0;\n                        if (bendSize > cap) bendSize = cap;\n                        bendInterval = this._snapToPitch(prevPin.interval * (1.0 - sizeRatio) + nextPin.interval * sizeRatio + this._cursor.curNote.pitches[0], 0, this._getMaxPitch()) - this._cursor.curNote.pitches[0];\n                        break;\n                    }\n                    if (this._doc.song.getChannelIsMod(this._doc.channel) && this.controlMode) {\n                        // Link bend to the next note over\n                        if (bendPart >= this._cursor.curNote.pins[this._cursor.curNote.pins.length - 1].time) {\n                            if (this._cursor.curNote.start + this._cursor.curNote.pins[this._cursor.curNote.pins.length - 1].time < this._doc.song.beatsPerBar * Config.partsPerBeat) {\n                                for (const note of this._pattern!.notes) {\n                                    if (note.start == this._cursor.curNote.start + this._cursor.curNote.pins[this._cursor.curNote.pins.length - 1].time && note.pitches[0] == this._cursor.curNote.pitches[0]) {\n                                        sequence.append(new ChangeSizeBend(this._doc, note, note.pins[0].time, bendSize, bendInterval, this.shiftMode));\n                                    }\n                                }\n                            }\n                            else {\n                                // Try to bend to the next pattern over. Only do this if a note starts at 0, and instrument is identical in next pattern.\n                                const nextPattern: Pattern | null = this._doc.getCurrentPattern(1);\n\n                                if (nextPattern != null && nextPattern.instruments[0] == this._pattern!.instruments[0]) {\n                                    for (const note of nextPattern.notes) {\n                                        if (note.start == 0 && note.pitches[0] == this._cursor.curNote.pitches[0]) {\n                                            sequence.append(new ChangeSizeBend(this._doc, note, note.pins[0].time, bendSize, bendInterval, this.shiftMode));\n                                        }\n                                    }\n                                }\n\n                            }\n                        }\n                        // Link bend to the previous note\n                        else if (bendPart <= this._cursor.curNote.pins[0].time) {\n                            if (this._cursor.curNote.start > 0) {\n                                for (const note of this._pattern!.notes) {\n                                    if (note.end == this._cursor.curNote.start && note.pitches[0] == this._cursor.curNote.pitches[0]) {\n                                        sequence.append(new ChangeSizeBend(this._doc, note, note.pins[note.pins.length - 1].time, bendSize, bendInterval, this.shiftMode));\n                                    }\n                                }\n                            }\n                            else {\n                                // Try to bend to the previous pattern over. Only do this if a note starts at the end, and instrument is identical in previous pattern.\n                                const prevPattern: Pattern | null = this._doc.getCurrentPattern(-1);\n\n                                if (prevPattern != null && prevPattern.instruments[0] == this._pattern!.instruments[0]) {\n                                    for (const note of prevPattern.notes) {\n                                        if (note.end == this._doc.song.beatsPerBar * Config.partsPerBeat && note.pitches[0] == this._cursor.curNote.pitches[0]) {\n                                            sequence.append(new ChangeSizeBend(this._doc, note, note.pins[note.pins.length - 1].time, bendSize, bendInterval, this.shiftMode));\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n\n                    this._dragTime = this._cursor.curNote.start + bendPart;\n                    this._dragPitch = this._cursor.curNote.pitches[this._cursor.pitchIndex == -1 ? 0 : this._cursor.pitchIndex] + bendInterval;\n                    this._dragSize = bendSize;\n                    this._dragVisible = true;\n\n                    sequence.append(new ChangeSizeBend(this._doc, this._cursor.curNote, bendPart, bendSize, bendInterval, this.shiftMode));\n                    this._copyPins(this._cursor.curNote);\n                } else {\n                    sequence.append(new ChangePatternSelection(this._doc, 0, 0));\n\n                    this._dragSize = this._cursor.curNote.pins[this._cursor.nearPinIndex].size;\n\n                    if (this._pattern == null) throw new Error();\n\n                    let bendStart: number;\n                    let bendEnd: number;\n                    if (this._mouseX >= this._mouseXStart) {\n                        bendStart = Math.max(this._cursor.curNote.start, this._cursor.part);\n                        bendEnd = currentPart + minDivision;\n                    } else {\n                        bendStart = Math.min(this._cursor.curNote.end, this._cursor.part + minDivision);\n                        bendEnd = currentPart;\n                    }\n                    if (bendEnd < 0) bendEnd = 0;\n                    if (bendEnd > this._doc.song.beatsPerBar * Config.partsPerBeat) bendEnd = this._doc.song.beatsPerBar * Config.partsPerBeat;\n                    if (bendEnd > this._cursor.curNote.end) {\n                        sequence.append(new ChangeNoteTruncate(this._doc, this._pattern, this._cursor.curNote.start, bendEnd, this._cursor.curNote));\n                    }\n                    if (bendEnd < this._cursor.curNote.start) {\n                        sequence.append(new ChangeNoteTruncate(this._doc, this._pattern, bendEnd, this._cursor.curNote.end, this._cursor.curNote));\n                    }\n\n                    let minPitch: number = Number.MAX_VALUE;\n                    let maxPitch: number = -Number.MAX_VALUE;\n                    for (const pitch of this._cursor.curNote.pitches) {\n                        if (minPitch > pitch) minPitch = pitch;\n                        if (maxPitch < pitch) maxPitch = pitch;\n                    }\n                    minPitch -= this._cursor.curNote.pitches[this._cursor.pitchIndex];\n                    maxPitch -= this._cursor.curNote.pitches[this._cursor.pitchIndex];\n\n                    if (!this._doc.song.getChannelIsMod(this._doc.channel)) {\n                        const bendTo: number = this._snapToPitch(this._findMousePitch(this._mouseY), -minPitch, this._getMaxPitch() - maxPitch);\n                        sequence.append(new ChangePitchBend(this._doc, this._cursor.curNote, bendStart, bendEnd, bendTo, this._cursor.pitchIndex));\n                        this._dragPitch = bendTo;\n                    }\n                    else {\n                        const bendTo: number = this._snapToPitch(this._dragPitch, -minPitch, Config.modCount - 1);\n                        sequence.append(new ChangePitchBend(this._doc, this._cursor.curNote, bendStart, bendEnd, bendTo, this._cursor.pitchIndex));\n                        this._dragPitch = bendTo;\n                    }\n                    this._copyPins(this._cursor.curNote);\n\n                    this._dragTime = bendEnd;\n                    this._dragVisible = true;\n                }\n            }\n        }\n\n        if (!(this._mouseDown && this._cursor.valid && continuousState)) {\n            this._updateCursorStatus();\n            this._updatePreview();\n        }\n    }\n\n    private _whenCursorReleased = (event: Event | null): void => {\n        if (!this._cursor.valid) return;\n\n        const continuousState: boolean = this._doc.lastChangeWas(this._dragChange);\n        if (this._mouseDown && continuousState && this._dragChange != null) {\n\n            if (this._draggingSelectionContents) {\n                this._doc.record(this._dragChange);\n                this._dragChange = null;\n                // Need to re-sort the notes by start time as they might change order if user drags them around.\n                if (this._pattern != null && this._doc.song.getChannelIsMod(this._doc.channel)) this._pattern.notes.sort(function (a, b) { return (a.start == b.start) ? a.pitches[0] - b.pitches[0] : a.start - b.start; });\n\n            } else if (this._draggingStartOfSelection || this._draggingEndOfSelection || this._shiftHeld) {\n                this._setPatternSelection(this._dragChange);\n                this._dragChange = null;\n            } else if (this._mouseDragging || this._cursor.curNote == null || !this._dragChange.isNoop() || this._draggingStartOfSelection || this._draggingEndOfSelection || this._draggingSelectionContents || this._shiftHeld) {\n                this._doc.record(this._dragChange);\n                this._dragChange = null;\n                // Need to re-sort the notes by start time as they might change order if user drags them around.\n                if (this._pattern != null && this._doc.song.getChannelIsMod(this._doc.channel)) this._pattern.notes.sort(function (a, b) { return (a.start == b.start) ? a.pitches[0] - b.pitches[0] : a.start - b.start; });\n\n            } else {\n\n                if (this._pattern == null) throw new Error();\n\n                const sequence: ChangeSequence = new ChangeSequence();\n                sequence.append(new ChangePatternSelection(this._doc, 0, 0));\n\n                if (this._cursor.pitchIndex == -1) {\n                    if (this._cursor.curNote.pitches.length == Config.maxChordSize) {\n                        sequence.append(new ChangePitchAdded(this._doc, this._cursor.curNote, this._cursor.curNote.pitches[0], 0, true));\n                    }\n                    sequence.append(new ChangePitchAdded(this._doc, this._cursor.curNote, this._cursor.pitch, this._cursor.curNote.pitches.length));\n                    this._copyPins(this._cursor.curNote);\n\n                    if (this._doc.prefs.enableNotePreview && !this._doc.synth.playing) {\n                        const duration: number = Math.min(Config.partsPerBeat, this._cursor.end - this._cursor.start);\n                        this._doc.performance.setTemporaryPitches(this._cursor.curNote.pitches, duration);\n                    }\n                } else {\n                    if (this._cursor.curNote.pitches.length == 1) {\n                        sequence.append(new ChangeNoteAdded(this._doc, this._pattern, this._cursor.curNote, this._cursor.curIndex, true));\n                    } else {\n                        sequence.append(new ChangePitchAdded(this._doc, this._cursor.curNote, this._cursor.pitch, this._cursor.curNote.pitches.indexOf(this._cursor.pitch), true));\n                    }\n                }\n\n                this._doc.record(sequence);\n            }\n        }\n\n        this._mouseDown = false;\n        this._mouseDragging = false;\n        this._draggingStartOfSelection = false;\n        this._draggingEndOfSelection = false;\n        this._draggingSelectionContents = false;\n        this._lastChangeWasPatternSelection = false;\n        this.modDragValueLabel.setAttribute(\"fill\", ColorConfig.secondaryText);\n        this._updateCursorStatus();\n        this._updatePreview();\n    }\n\n    private _setPatternSelection(change: UndoableChange): void {\n        this._changePatternSelection = change;\n        this._doc.record(this._changePatternSelection, this._lastChangeWasPatternSelection);\n    }\n\n\n    private _updatePreview(): void {\n        if (this._usingTouch) {\n            if (!this._mouseDown || !this._cursor.valid || !this._mouseDragging || !this._dragVisible || this._shiftHeld || this._draggingStartOfSelection || this._draggingEndOfSelection || this._draggingSelectionContents) {\n                this._svgPreview.setAttribute(\"visibility\", \"hidden\");\n\n                if (!this.editingModLabel) {\n                    this.modDragValueLabel.style.setProperty(\"display\", \"none\");\n                    this.modDragValueLabel.style.setProperty(\"pointer-events\", \"none\");\n                    this.modDragValueLabel.setAttribute(\"contenteditable\", \"false\");\n                }\n\n            } else {\n                this._svgPreview.setAttribute(\"visibility\", \"visible\");\n\n                const x: number = this._partWidth * this._dragTime;\n                const y: number = this._pitchToPixelHeight(this._dragPitch - this._octaveOffset);\n                const radius: number = (this._pitchHeight - this._pitchBorder) / 2;\n                const width: number = 80;\n                const height: number = 60;\n                const cap: number = this._doc.song.getVolumeCap(this._doc.song.getChannelIsMod(this._doc.channel), this._doc.channel, this._doc.getCurrentInstrument(this._barOffset), this._cursor.pitch);\n                //this._drawNote(this._svgPreview, this._cursor.pitch, this._cursor.start, this._cursor.pins, this._pitchHeight / 2 + 1, true, this._octaveOffset);\n\n                let pathString: string = \"\";\n\n                pathString += \"M \" + prettyNumber(x) + \" \" + prettyNumber(y - radius * (this._dragSize / cap)) + \" \";\n                pathString += \"L \" + prettyNumber(x) + \" \" + prettyNumber(y - radius * (this._dragSize / cap) - height) + \" \";\n                pathString += \"M \" + prettyNumber(x) + \" \" + prettyNumber(y + radius * (this._dragSize / cap)) + \" \";\n                pathString += \"L \" + prettyNumber(x) + \" \" + prettyNumber(y + radius * (this._dragSize / cap) + height) + \" \";\n                pathString += \"M \" + prettyNumber(x) + \" \" + prettyNumber(y - radius * (this._dragSize / cap)) + \" \";\n                pathString += \"L \" + prettyNumber(x + width) + \" \" + prettyNumber(y - radius * (this._dragSize / cap)) + \" \";\n                pathString += \"M \" + prettyNumber(x) + \" \" + prettyNumber(y + radius * (this._dragSize / cap)) + \" \";\n                pathString += \"L \" + prettyNumber(x + width) + \" \" + prettyNumber(y + radius * (this._dragSize / cap)) + \" \";\n                pathString += \"M \" + prettyNumber(x) + \" \" + prettyNumber(y - radius * (this._dragSize / cap)) + \" \";\n                pathString += \"L \" + prettyNumber(x - width) + \" \" + prettyNumber(y - radius * (this._dragSize / cap)) + \" \";\n                pathString += \"M \" + prettyNumber(x) + \" \" + prettyNumber(y + radius * (this._dragSize / cap)) + \" \";\n                pathString += \"L \" + prettyNumber(x - width) + \" \" + prettyNumber(y + radius * (this._dragSize / cap)) + \" \";\n\n                this._svgPreview.setAttribute(\"d\", pathString);\n            }\n        } else {\n            if (!this._mouseOver || this._mouseDown || !this._cursor.valid) {\n                this._svgPreview.setAttribute(\"visibility\", \"hidden\");\n                if (!this.editingModLabel) {\n                    this.modDragValueLabel.style.setProperty(\"display\", \"none\");\n                    this.modDragValueLabel.style.setProperty(\"pointer-events\", \"none\");\n                    this.modDragValueLabel.setAttribute(\"contenteditable\", \"false\");\n                }\n            } else {\n                this._svgPreview.setAttribute(\"visibility\", \"visible\");\n\n                if (this._cursorAtStartOfSelection()) {\n                    const center: number = this._partWidth * this._doc.selection.patternSelectionStart;\n                    const left: string = prettyNumber(center - 4);\n                    const right: string = prettyNumber(center + 4);\n                    const bottom: number = this._pitchToPixelHeight(-0.5);\n                    this._svgPreview.setAttribute(\"d\", \"M \" + left + \" 0 L \" + left + \" \" + bottom + \" L \" + right + \" \" + bottom + \" L \" + right + \" 0 z\");\n                } else if (this._cursorAtEndOfSelection()) {\n                    const center: number = this._partWidth * this._doc.selection.patternSelectionEnd;\n                    const left: string = prettyNumber(center - 4);\n                    const right: string = prettyNumber(center + 4);\n                    const bottom: number = this._pitchToPixelHeight(-0.5);\n                    this._svgPreview.setAttribute(\"d\", \"M \" + left + \" 0 L \" + left + \" \" + bottom + \" L \" + right + \" \" + bottom + \" L \" + right + \" 0 z\");\n                } else if (this._cursorIsInSelection()) {\n                    const left: string = prettyNumber(this._partWidth * this._doc.selection.patternSelectionStart - 2);\n                    const right: string = prettyNumber(this._partWidth * this._doc.selection.patternSelectionEnd + 2);\n                    const bottom: number = this._pitchToPixelHeight(-0.5);\n                    this._svgPreview.setAttribute(\"d\", \"M \" + left + \" 0 L \" + left + \" \" + bottom + \" L \" + right + \" \" + bottom + \" L \" + right + \" 0 z\");\n                } else {\n                    this._drawNote(this._svgPreview, this._cursor.pitch, this._cursor.start, this._cursor.pins, (this._pitchHeight - this._pitchBorder) / 2 + 1, true, this._octaveOffset);\n                }\n            }\n        }\n    }\n\n    private _updateSelection(): void {\n        if (this._doc.selection.patternSelectionActive) {\n            this._selectionRect.setAttribute(\"visibility\", \"visible\");\n            this._selectionRect.setAttribute(\"x\", String(this._partWidth * this._doc.selection.patternSelectionStart));\n            this._selectionRect.setAttribute(\"width\", String(this._partWidth * (this._doc.selection.patternSelectionEnd - this._doc.selection.patternSelectionStart)));\n        } else {\n            this._selectionRect.setAttribute(\"visibility\", \"hidden\");\n        }\n    }\n\n    public render(): void {\n        const nextPattern: Pattern | null = this._doc.getCurrentPattern(this._barOffset);\n\n        if (this._pattern != nextPattern) {\n            if (this._doc.song.getChannelIsMod(this._doc.channel) && this._interactive && nextPattern != null) {\n                // Need to re-sort the notes by start time as they might change order if user drags them around.\n                nextPattern.notes.sort(function (a, b) { return (a.start == b.start) ? a.pitches[0] - b.pitches[0] : a.start - b.start; });\n            }\n            if (this._pattern != null) {\n                this._dragChange = null;\n                this._whenCursorReleased(null);\n            }\n        }\n        this._pattern = nextPattern;\n\n        this._editorWidth = this.container.clientWidth;\n        this._editorHeight = this.container.clientHeight;\n        this._partWidth = this._editorWidth / (this._doc.song.beatsPerBar * Config.partsPerBeat);\n        this._octaveOffset = (this._doc.channel >= this._doc.song.pitchChannelCount) ? 0 : this._doc.song.channels[this._doc.channel].octave * Config.pitchesPerOctave;\n\n        if (this._doc.song.getChannelIsNoise(this._doc.channel)) {\n            this._pitchBorder = 0;\n            this._pitchCount = Config.drumCount;\n        }\n        else if (this._doc.song.getChannelIsMod(this._doc.channel)) {\n            this._pitchBorder = this._defaultModBorder;\n            this._pitchCount = Config.modCount;\n\n            if (this._pattern != null) {\n                // Force max height of mod channels to conform to settings.\n                for (const note of this._pattern.notes) {\n                    let pitch = note.pitches[0]; // No pitch bend possible in mod channels.\n                    let maxHeight: number = this._doc.song.getVolumeCap(true, this._doc.channel, this._doc.getCurrentInstrument(this._barOffset), pitch);\n                    let maxFoundHeight: number = 0;\n                    for (const pin of note.pins) {\n                        if (pin.size > maxFoundHeight) {\n                            maxFoundHeight = pin.size;\n                        }\n                    }\n                    // Apply scaling if the max height is below any pin setting.\n                    if (maxFoundHeight > maxHeight) {\n                        for (const pin of note.pins) {\n                            pin.size = Math.round(pin.size * (maxHeight / maxFoundHeight));\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            this._pitchBorder = 0;\n            this._pitchCount = this._doc.getVisiblePitchCount();\n        }\n\n        this._pitchHeight = this._editorHeight / this._pitchCount;\n        this._octaveOffset = (this._doc.channel >= this._doc.song.pitchChannelCount) ? 0 : this._doc.getBaseVisibleOctave(this._doc.channel) * Config.pitchesPerOctave;\n\n        if (this._renderedRhythm != this._doc.song.rhythm ||\n            this._renderedPitchChannelCount != this._doc.song.pitchChannelCount ||\n            this._renderedNoiseChannelCount != this._doc.song.noiseChannelCount ||\n            this._renderedModChannelCount != this._doc.song.modChannelCount) {\n            this._renderedRhythm = this._doc.song.rhythm;\n            this._renderedPitchChannelCount = this._doc.song.pitchChannelCount;\n            this._renderedNoiseChannelCount = this._doc.song.noiseChannelCount;\n            this._renderedModChannelCount = this._doc.song.modChannelCount;\n            this.resetCopiedPins();\n        }\n\n        this._copiedPins = this._copiedPinChannels[this._doc.channel];\n\n        if (this._renderedWidth != this._editorWidth || this._renderedHeight != this._editorHeight) {\n            this._renderedWidth = this._editorWidth;\n            this._renderedHeight = this._editorHeight;\n            this._svgBackground.setAttribute(\"width\", \"\" + this._editorWidth);\n            this._svgBackground.setAttribute(\"height\", \"\" + this._editorHeight);\n            this._svgPlayhead.setAttribute(\"height\", \"\" + this._editorHeight);\n            this._selectionRect.setAttribute(\"y\", \"0\");\n            this._selectionRect.setAttribute(\"height\", \"\" + this._editorHeight);\n        }\n\n        const beatWidth = this._editorWidth / this._doc.song.beatsPerBar;\n        if (this._renderedBeatWidth != beatWidth || this._renderedPitchHeight != this._pitchHeight) {\n            this._renderedBeatWidth = beatWidth;\n            this._renderedPitchHeight = this._pitchHeight;\n            this._svgNoteBackground.setAttribute(\"width\", \"\" + beatWidth);\n            this._svgNoteBackground.setAttribute(\"height\", \"\" + (this._pitchHeight * Config.pitchesPerOctave));\n            this._svgDrumBackground.setAttribute(\"width\", \"\" + beatWidth);\n            this._svgDrumBackground.setAttribute(\"height\", \"\" + this._pitchHeight);\n            this._svgModBackground.setAttribute(\"width\", \"\" + beatWidth);\n            this._svgModBackground.setAttribute(\"height\", \"\" + (this._pitchHeight));\n            this._svgModBackground.setAttribute(\"y\", \"\" + (this._pitchBorder / 2));\n            this._backgroundDrumRow.setAttribute(\"width\", \"\" + (beatWidth - 2));\n            this._backgroundDrumRow.setAttribute(\"height\", \"\" + (this._pitchHeight - 2));\n            if (this._pitchHeight > this._pitchBorder) {\n                this._backgroundModRow.setAttribute(\"width\", \"\" + (beatWidth - 2));\n                this._backgroundModRow.setAttribute(\"height\", \"\" + (this._pitchHeight - this._pitchBorder));\n            }\n\n\n\n            for (let j: number = 0; j < Config.pitchesPerOctave; j++) {\n                const rectangle: SVGRectElement = this._backgroundPitchRows[j];\n                const y: number = (Config.pitchesPerOctave - j) % Config.pitchesPerOctave;\n                rectangle.setAttribute(\"width\", \"\" + (beatWidth - 2));\n                rectangle.setAttribute(\"y\", \"\" + (y * this._pitchHeight + 1));\n                rectangle.setAttribute(\"height\", \"\" + (this._pitchHeight - 2));\n            }\n        }\n\n        if (this._interactive) {\n            if (!this._mouseDown) this._updateCursorStatus();\n            this._updatePreview();\n            this._updateSelection();\n        }\n\n        if (this._renderedFifths != this._doc.prefs.showFifth) {\n            this._renderedFifths = this._doc.prefs.showFifth;\n            this._backgroundPitchRows[7].setAttribute(\"fill\", this._doc.prefs.showFifth ? ColorConfig.fifthNote : ColorConfig.pitchBackground);\n        }\n\n        for (let j: number = 0; j < Config.pitchesPerOctave; j++) {\n\n            this._backgroundPitchRows[j].style.visibility = Config.scales[this._doc.song.scale].flags[j] ? \"visible\" : \"hidden\";\n        }\n\n        if (this._doc.song.getChannelIsNoise(this._doc.channel)) {\n            if (!this._renderedDrums) {\n                this._renderedDrums = true;\n                this._renderedMod = false;\n                this._svgBackground.setAttribute(\"fill\", \"url(#patternEditorDrumBackground\" + this._barOffset + \")\");\n            }\n        } else if (this._doc.song.getChannelIsMod(this._doc.channel)) {\n            if (!this._renderedMod) {\n                this._renderedDrums = false;\n                this._renderedMod = true;\n                this._svgBackground.setAttribute(\"fill\", \"url(#patternEditorModBackground\" + this._barOffset + \")\");\n            }\n        } else {\n            if (this._renderedDrums || this._renderedMod) {\n                this._renderedDrums = false;\n                this._renderedMod = false;\n                this._svgBackground.setAttribute(\"fill\", \"url(#patternEditorNoteBackground\" + this._barOffset + \")\");\n            }\n        }\n\n        this._redrawNotePatterns();\n    }\n\n    private _redrawNotePatterns(): void {\n        this._svgNoteContainer = makeEmptyReplacementElement(this._svgNoteContainer);\n\n        if (this._doc.prefs.showChannels) {\n            if (!this._doc.song.getChannelIsMod(this._doc.channel)) {\n                for (let channel: number = this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount - 1; channel >= 0; channel--) {\n                    if (channel == this._doc.channel) continue;\n                    if (this._doc.song.getChannelIsNoise(channel) != this._doc.song.getChannelIsNoise(this._doc.channel)) continue;\n\n                    const pattern2: Pattern | null = this._doc.song.getPattern(channel, this._doc.bar + this._barOffset);\n                    if (pattern2 == null) continue;\n\n                    const octaveOffset: number = this._doc.getBaseVisibleOctave(channel) * Config.pitchesPerOctave;\n                    for (const note of pattern2.notes) {\n                        for (const pitch of note.pitches) {\n                            const notePath: SVGPathElement = SVG.path();\n                            notePath.setAttribute(\"fill\", ColorConfig.getChannelColor(this._doc.song, channel).secondaryNote);\n                            notePath.setAttribute(\"pointer-events\", \"none\");\n                            this._drawNote(notePath, pitch, note.start, note.pins, this._pitchHeight * 0.19, false, octaveOffset);\n                            this._svgNoteContainer.appendChild(notePath);\n                        }\n                    }\n                }\n            }\n        }\n\n        if (this._pattern != null) {\n            const instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument(this._barOffset)];\n            const chord: Chord = instrument.getChord();\n            const transition: Transition = instrument.getTransition();\n            const displayNumberedChords: boolean = chord.customInterval || chord.arpeggiates || chord.strumParts > 0 || transition.slides;\n            for (const note of this._pattern.notes) {\n                let disabled: boolean = false;\n                if (this._doc.song.getChannelIsMod(this._doc.channel)) {\n                    const modIndex: number = instrument.modulators[Config.modCount - 1 - note.pitches[0]];\n                    if ((modIndex == Config.modulators.dictionary[\"none\"].index)\n                    || instrument.invalidModulators[Config.modCount - 1 - note.pitches[0]])\n                        disabled = true;\n                }\n                for (let i: number = 0; i < note.pitches.length; i++) {\n                    const pitch: number = note.pitches[i];\n                    let notePath: SVGPathElement = SVG.path();\n                    let colorPrimary: string = (disabled ? ColorConfig.disabledNotePrimary : ColorConfig.getChannelColor(this._doc.song, this._doc.channel).primaryNote);\n                    let colorSecondary: string = (disabled ? ColorConfig.disabledNoteSecondary : ColorConfig.getChannelColor(this._doc.song, this._doc.channel).secondaryNote);\n                    notePath.setAttribute(\"fill\", colorSecondary);\n                    notePath.setAttribute(\"pointer-events\", \"none\");\n                    this._drawNote(notePath, pitch, note.start, note.pins, (this._pitchHeight - this._pitchBorder) / 2 + 1, false, this._octaveOffset);\n                    this._svgNoteContainer.appendChild(notePath);\n                    notePath = SVG.path();\n                    notePath.setAttribute(\"fill\", colorPrimary);\n                    notePath.setAttribute(\"pointer-events\", \"none\");\n                    this._drawNote(notePath, pitch, note.start, note.pins, (this._pitchHeight - this._pitchBorder) / 2 + 1, true, this._octaveOffset);\n                    this._svgNoteContainer.appendChild(notePath);\n\n                    let indicatorOffset: number = 2;\n                    if (note.continuesLastPattern) {\n                        const arrowHeight: number = Math.min(this._pitchHeight, 20);\n                        let arrowPath: string;\n                        arrowPath = \"M \" + prettyNumber(this._partWidth * note.start + indicatorOffset) + \" \" + prettyNumber(this._pitchToPixelHeight(pitch - this._octaveOffset) - 0.1 * arrowHeight);\n                        arrowPath += \"L \" + prettyNumber(this._partWidth * note.start + indicatorOffset) + \" \" + prettyNumber(this._pitchToPixelHeight(pitch - this._octaveOffset) + 0.1 * arrowHeight);\n                        arrowPath += \"L \" + prettyNumber(this._partWidth * note.start + indicatorOffset + 4) + \" \" + prettyNumber(this._pitchToPixelHeight(pitch - this._octaveOffset) + 0.1 * arrowHeight);\n                        arrowPath += \"L \" + prettyNumber(this._partWidth * note.start + indicatorOffset + 4) + \" \" + prettyNumber(this._pitchToPixelHeight(pitch - this._octaveOffset) + 0.3 * arrowHeight);\n                        arrowPath += \"L \" + prettyNumber(this._partWidth * note.start + indicatorOffset + 12) + \" \" + prettyNumber(this._pitchToPixelHeight(pitch - this._octaveOffset));\n                        arrowPath += \"L \" + prettyNumber(this._partWidth * note.start + indicatorOffset + 4) + \" \" + prettyNumber(this._pitchToPixelHeight(pitch - this._octaveOffset) - 0.3 * arrowHeight);\n                        arrowPath += \"L \" + prettyNumber(this._partWidth * note.start + indicatorOffset + 4) + \" \" + prettyNumber(this._pitchToPixelHeight(pitch - this._octaveOffset) - 0.1 * arrowHeight);\n                        const arrow: SVGPathElement = SVG.path();\n                        arrow.setAttribute(\"d\", arrowPath);\n                        arrow.setAttribute(\"fill\", ColorConfig.invertedText);\n                        this._svgNoteContainer.appendChild(arrow);\n                        indicatorOffset += 12;\n                    }\n\n                    if (note.pitches.length > 1) {\n                        if (displayNumberedChords) {\n                            const oscillatorLabel: SVGTextElement = SVG.text();\n                            oscillatorLabel.setAttribute(\"x\", \"\" + prettyNumber(this._partWidth * note.start + indicatorOffset));\n                            oscillatorLabel.setAttribute(\"y\", \"\" + prettyNumber(this._pitchToPixelHeight(pitch - this._octaveOffset)));\n                            oscillatorLabel.setAttribute(\"width\", \"30\");\n                            oscillatorLabel.setAttribute(\"fill\", ColorConfig.invertedText);\n                            oscillatorLabel.setAttribute(\"text-anchor\", \"start\");\n                            oscillatorLabel.setAttribute(\"dominant-baseline\", \"central\");\n                            oscillatorLabel.setAttribute(\"pointer-events\", \"none\");\n                            oscillatorLabel.textContent = \"\" + (i + 1);\n                            this._svgNoteContainer.appendChild(oscillatorLabel);\n                        }\n                    }\n                }\n\n\n                if (this._doc.song.getChannelIsMod(this._doc.channel) && this._mouseDragging && !this._mouseHorizontal && note == this._cursor.curNote) {\n\n                    this.modDragValueLabel.style.setProperty(\"display\", \"\");\n                    this.modDragValueLabel.style.setProperty(\"pointer-events\", \"none\");\n                    this.modDragValueLabel.setAttribute(\"contenteditable\", \"false\");\n                    this.modDragValueLabel.style.setProperty(\"color\", \"#FFFFFF\");\n                    let setting: number = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument(this._barOffset)].modulators[Config.modCount - 1 - note.pitches[0]];\n                    let presValue: number = this._dragSize + Config.modulators[setting].convertRealFactor;\n\n                    // This is me being too lazy to fiddle with the css to get it to align center.\n                    let xOffset: number = (+(presValue >= 10.0)) + (+(presValue >= 100.0)) + (+(presValue < 0.0)) + (+(presValue <= -10.0));\n\n                    this._modDragValueLabelWidth = 8 + xOffset * 8;\n                    this._modDragValueLabelLeft = +prettyNumber(Math.max(Math.min(this._editorWidth - 10 - xOffset * 8, this._partWidth * this._dragTime - 4 - xOffset * 4), 2));\n                    this._modDragValueLabelTop = +prettyNumber(this._pitchToPixelHeight(note.pitches[0] - this._octaveOffset) - 17 - (this._pitchHeight - this._pitchBorder) / 2);\n\n                    this.modDragValueLabel.style.setProperty(\"left\", \"\" + this._modDragValueLabelLeft + \"px\");\n                    this.modDragValueLabel.style.setProperty(\"top\", \"\" + this._modDragValueLabelTop + \"px\");\n                    this.modDragValueLabel.textContent = \"\" + presValue;\n\n                }\n            }\n        }\n\n        this._doc.currentPatternIsDirty = false;\n    }\n\n    private _drawNote(svgElement: SVGPathElement, pitch: number, start: number, pins: NotePin[], radius: number, showSize: boolean, offset: number): void {\n        const totalWidth: number = this._partWidth * (pins[pins.length - 1].time + pins[0].time);\n        const endOffset: number = 0.5 * Math.min(2, totalWidth - 1);\n\n        let nextPin: NotePin = pins[0];\n\n        const cap: number = this._doc.song.getVolumeCap(this._doc.song.getChannelIsMod(this._doc.channel), this._doc.channel, this._doc.getCurrentInstrument(this._barOffset), pitch);\n\n        let pathString: string = \"M \" + prettyNumber(this._partWidth * (start + nextPin.time) + endOffset) + \" \" + prettyNumber(this._pitchToPixelHeight(pitch - offset) + radius * (showSize ? nextPin.size / cap : 1.0)) + \" \";\n\n        for (let i: number = 1; i < pins.length; i++) {\n            let prevPin: NotePin = nextPin;\n            nextPin = pins[i];\n            let prevSide: number = this._partWidth * (start + prevPin.time) + (i == 1 ? endOffset : 0);\n            let nextSide: number = this._partWidth * (start + nextPin.time) - (i == pins.length - 1 ? endOffset : 0);\n            let prevHeight: number = this._pitchToPixelHeight(pitch + prevPin.interval - offset);\n            let nextHeight: number = this._pitchToPixelHeight(pitch + nextPin.interval - offset);\n            let prevSize: number = showSize ? prevPin.size / cap : 1.0;\n            let nextSize: number = showSize ? nextPin.size / cap : 1.0;\n            pathString += \"L \" + prettyNumber(prevSide) + \" \" + prettyNumber(prevHeight - radius * prevSize) + \" \";\n            if (prevPin.interval > nextPin.interval) pathString += \"L \" + prettyNumber(prevSide + 1) + \" \" + prettyNumber(prevHeight - radius * prevSize) + \" \";\n            if (prevPin.interval < nextPin.interval) pathString += \"L \" + prettyNumber(nextSide - 1) + \" \" + prettyNumber(nextHeight - radius * nextSize) + \" \";\n            pathString += \"L \" + prettyNumber(nextSide) + \" \" + prettyNumber(nextHeight - radius * nextSize) + \" \";\n        }\n        for (let i: number = pins.length - 2; i >= 0; i--) {\n            let prevPin: NotePin = nextPin;\n            nextPin = pins[i];\n            let prevSide: number = this._partWidth * (start + prevPin.time) - (i == pins.length - 2 ? endOffset : 0);\n            let nextSide: number = this._partWidth * (start + nextPin.time) + (i == 0 ? endOffset : 0);\n            let prevHeight: number = this._pitchToPixelHeight(pitch + prevPin.interval - offset);\n            let nextHeight: number = this._pitchToPixelHeight(pitch + nextPin.interval - offset);\n            let prevSize: number = showSize ? prevPin.size / cap : 1.0;\n            let nextSize: number = showSize ? nextPin.size / cap : 1.0;\n            pathString += \"L \" + prettyNumber(prevSide) + \" \" + prettyNumber(prevHeight + radius * prevSize) + \" \";\n            if (prevPin.interval < nextPin.interval) pathString += \"L \" + prettyNumber(prevSide - 1) + \" \" + prettyNumber(prevHeight + radius * prevSize) + \" \";\n            if (prevPin.interval > nextPin.interval) pathString += \"L \" + prettyNumber(nextSide + 1) + \" \" + prettyNumber(nextHeight + radius * nextSize) + \" \";\n            pathString += \"L \" + prettyNumber(nextSide) + \" \" + prettyNumber(nextHeight + radius * nextSize) + \" \";\n        }\n        pathString += \"z\";\n\n        svgElement.setAttribute(\"d\", pathString);\n    }\n\n    private _pitchToPixelHeight(pitch: number): number {\n        return this._pitchHeight * (this._pitchCount - (pitch) - 0.5);\n    }\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nimport { Config } from \"../synth/SynthConfig\";\nimport { SongDocument } from \"./SongDocument\";\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\nimport { ColorConfig } from \"./ColorConfig\";\nimport { Instrument } from \"../synth/synth\";\n\nexport class Piano {\n\t\tprivate readonly _pianoContainer: HTMLDivElement = HTML.div({style: \"width: 100%; height: 100%; display: flex; flex-direction: column-reverse; align-items: stretch;\"});\n\t\tprivate readonly _drumContainer: HTMLDivElement = HTML.div({style: \"width: 100%; height: 100%; display: flex; flex-direction: column-reverse; align-items: stretch;\"});\n\t\tprivate readonly _modContainer: HTMLDivElement = HTML.div({ style: \"width: 100%; height: 100%; display: flex; flex-direction: column-reverse; align-items: stretch;\" });\n\t\tprivate readonly _preview: HTMLDivElement = HTML.div({style: `width: 100%; height: 40px; border: 2px solid ${ColorConfig.primaryText}; position: absolute; box-sizing: border-box; pointer-events: none;`});\n\t\tpublic readonly container: HTMLDivElement = HTML.div({style: \"width: 32px; height: 100%; overflow: hidden; position: relative; flex-shrink: 0; touch-action: none;\"},\n\t\tthis._pianoContainer,\n\t\tthis._drumContainer,\n\t\tthis._modContainer,\n\t\tthis._preview,\n\t);\n\tprivate readonly _editorHeight: number = 481;\n\tprivate readonly _pianoKeys: HTMLDivElement[] = [];\n\tprivate readonly _pianoLabels: HTMLDivElement[] = [];\n\tprivate readonly _modFirstLabels: SVGTextElement[] = [];\n\tprivate readonly _modSecondLabels: SVGTextElement[] = [];\n\tprivate readonly _modCountLabels: SVGTextElement[] = [];\n\tprivate readonly _modCountRects: SVGRectElement[] = [];\n\t\t\n\tprivate _pitchHeight: number;\n\tprivate _pitchCount: number;\n\t//private _mouseX: number = 0;\n\tprivate _mouseY: number = 0;\n\tprivate _mouseDown: boolean = false;\n\tprivate _mouseOver: boolean = false;\n\tprivate _cursorPitch: number;\n\tprivate _playedPitch: number = -1;\n\tprivate _renderedScale: number = -1;\n\tprivate _renderedDrums: boolean = false;\n\tprivate _renderedMod: boolean = false;\n\tprivate _renderedKey: number = -1;\n\tprivate _renderedPitchCount: number = -1;\n\tprivate readonly _renderedLiveInputPitches: number[] = [];\n\t\n\t\t\n\tpublic forceRender(): void {\n\t\tthis._renderedScale = -1;\n\t\tthis._documentChanged();\n\t}\n\n\t// Bass cutoff pitch is roughly half of the viewed window and below, though on odd-numbered octave counts the lead has priority for the middle octave.\n\tpublic static getBassCutoffPitch(doc: SongDocument): number {\n\t\tconst octaveOffset: number = doc.getBaseVisibleOctave(doc.channel);\n\t\treturn octaveOffset * Config.pitchesPerOctave + Math.floor( doc.getVisiblePitchCount() / ( Config.pitchesPerOctave * 2 ) ) * Config.pitchesPerOctave;\n\t}\n\n\tconstructor(private _doc: SongDocument) {\n\t\t\t\n\t\tfor (let i: number = 0; i < Config.drumCount; i++) {\n\t\t\tconst scale: number = (1.0 - (i / Config.drumCount) * 0.35) * 100;\n\t\t\tthis._drumContainer.appendChild(HTML.div({class: \"drum-button\", style: `background-size: ${scale}% ${scale}%;`}));\n\t\t}\n\t\t\t\n\t\tfor (let i: number = 0; i < Config.modCount; i++) {\n\n\t\t\tconst firstRowText: SVGTextElement = SVG.text({ class: \"modulator-label\", \"text-anchor\": \"left\", fill: ColorConfig.modLabelPrimaryText, style: \"font-weight: bold; align-self: flex-start; transform-origin: center; transform: rotate(-90deg) translate(-19px, 39px); font-size: 11px; font-family: sans-serif;\" });\n\t\t\tconst secondRowText: SVGTextElement = SVG.text({ class: \"modulator-label\", \"text-anchor\": \"left\", fill: ColorConfig.modLabelPrimaryText, style: \"font-weight: bold; align-self: flex-end; transform-origin: center; transform: rotate(-90deg) translate(-26px, 42px); font-size: 11px; font-family: sans-serif;\" });\n\t\t\tconst countText: SVGTextElement = SVG.text({ class: \"modulator-inverse-label\", fill: ColorConfig.modLabelPrimary, style: \"font-weight: bold; align-self: flex-start; transform-origin: center; transform: rotate(-90deg) translate(4px, 13px); font-size: 11px; font-family: sans-serif;\" });\n\t\t\tconst countRect: SVGRectElement = SVG.rect({ width: \"12px\", height: \"9px\", fill: ColorConfig.indicatorPrimary, style: \"pointer-events: none; transform: translate(4px, 4px);\" });\n\n\t\t\tconst firstRowSVG: SVGSVGElement = SVG.svg({ viewBox: \"0 0 16 66\", width: \"16px\", style: \"pointer-events: none; flex-grow: 1;\" }, [\n\t\t\t\tfirstRowText,\n\t\t\t]);\n\t\t\tconst countSVG: SVGSVGElement = SVG.svg({ viewBox: \"0 0 16 14\", width: \"16px\", style: \"pointer-events: none;\" }, [\n\t\t\t\tcountRect,\n\t\t\t\tcountText,\n\t\t\t]);\n\t\t\tconst secondRowSVG: SVGSVGElement = SVG.svg({ viewBox: \"0 0 16 80\", width: \"16px\", style: \"pointer-events: none;\" }, [\n\t\t\t\tsecondRowText,\n\t\t\t]);\n\n\t\t\tconst flexRow1: HTMLDivElement = HTML.div({ style: \"display: flex; flex-direction: column; justify-content: space-between; pointer-events: none;\" }, [\n\t\t\t\tcountSVG,\n\t\t\t\tfirstRowSVG,\n\t\t\t]);\n\t\t\tconst flexRow2: HTMLDivElement = HTML.div({ style: \"display: flex; flex-direction: column-reverse; justify-content: space-between; pointer-events: none;\" }, [\n\t\t\t\tsecondRowSVG,\n\t\t\t]);\n\n\t\t\tconst flexContainer: HTMLDivElement = HTML.div({ style: \"display: flex; flex-direction: row; justify-content: space-between; padding: 0px; width: 32px; height: 100%; overflow: hidden; pointer-events: none;\" }, [\n\t\t\t\tflexRow1,\n\t\t\t\tflexRow2,\n\t\t\t]);\n\n\t\t\tconst modKey: HTMLDivElement = HTML.div({ class: \"modulator-button\", style: \"background: \" + ColorConfig.modLabelPrimary + \";\" }, flexContainer);\n\t\t\tthis._modContainer.appendChild(modKey);\n\t\t\tthis._modFirstLabels.push(firstRowText);\n\t\t\tthis._modSecondLabels.push(secondRowText);\n\t\t\tthis._modCountLabels.push(countText);\n\t\t\tthis._modCountRects.push(countRect);\n\t\t}\n\n\t\tthis.container.addEventListener(\"mousedown\", this._whenMousePressed);\n\t\tdocument.addEventListener(\"mousemove\", this._whenMouseMoved);\n\t\tdocument.addEventListener(\"mouseup\", this._whenMouseReleased);\n\t\tthis.container.addEventListener(\"mouseover\", this._whenMouseOver);\n\t\tthis.container.addEventListener(\"mouseout\", this._whenMouseOut);\n\t\t\t\n\t\tthis.container.addEventListener(\"touchstart\", this._whenTouchPressed);\n\t\tthis.container.addEventListener(\"touchmove\", this._whenTouchMoved);\n\t\tthis.container.addEventListener(\"touchend\", this._whenTouchReleased);\n\t\tthis.container.addEventListener(\"touchcancel\", this._whenTouchReleased);\n\t\t\t\n\t\tthis._doc.notifier.watch(this._documentChanged);\n\t\tthis._documentChanged();\n\t\t\n\t\twindow.requestAnimationFrame(this._onAnimationFrame);\n\t}\n\t\t\n\tprivate _updateCursorPitch(): void {\n\t\tconst scale: ReadonlyArray<boolean> = Config.scales[this._doc.song.scale].flags;\n\t\t\tconst mousePitch: number = Math.max(0, Math.min(this._pitchCount-1, this._pitchCount - (this._mouseY / this._pitchHeight)));\n\t\tif (scale[Math.floor(mousePitch) % Config.pitchesPerOctave] || this._doc.song.getChannelIsNoise(this._doc.channel)) {\n\t\t\tthis._cursorPitch = Math.floor(mousePitch);\n\t\t} else {\n\t\t\tlet topPitch: number = Math.floor(mousePitch) + 1;\n\t\t\tlet bottomPitch: number = Math.floor(mousePitch) - 1;\n\t\t\twhile (!scale[topPitch % Config.pitchesPerOctave]) {\n\t\t\t\ttopPitch++;\n\t\t\t}\n\t\t\twhile (!scale[(bottomPitch) % Config.pitchesPerOctave]) {\n\t\t\t\tbottomPitch--;\n\t\t\t}\n\t\t\tlet topRange: number = topPitch;\n\t\t\tlet bottomRange: number = bottomPitch + 1;\n\t\t\tif (topPitch % Config.pitchesPerOctave == 0 || topPitch % Config.pitchesPerOctave == 7) {\n\t\t\t\ttopRange -= 0.5;\n\t\t\t}\n\t\t\tif (bottomPitch % Config.pitchesPerOctave == 0 || bottomPitch % Config.pitchesPerOctave == 7) {\n\t\t\t\tbottomRange += 0.5;\n\t\t\t}\n\t\t\tthis._cursorPitch = mousePitch - bottomRange > topRange - mousePitch ? topPitch : bottomPitch;\n\t\t}\n\t}\n\t\t\n\tprivate _playLiveInput(): void {\n\t\tconst octaveOffset: number = this._doc.getBaseVisibleOctave(this._doc.channel) * Config.pitchesPerOctave;\n\t\tconst currentPitch: number = this._cursorPitch + octaveOffset;\n\t\tif (this._playedPitch == currentPitch) return;\n\t\tthis._doc.performance.removePerformedPitch(this._playedPitch);\n\t\tthis._playedPitch = currentPitch;\n\t\tthis._doc.performance.addPerformedPitch(currentPitch);\n\t}\n\t\t\n\tprivate _releaseLiveInput(): void {\n\t\tthis._doc.performance.removePerformedPitch(this._playedPitch);\n\t\tthis._playedPitch = -1;\n\t}\n\t\t\n\tprivate _whenMouseOver = (event: MouseEvent): void => {\n\t\tif (this._mouseOver) return;\n\t\tthis._mouseOver = true;\n\t\tthis._updatePreview();\n\t}\n\t\t\n\tprivate _whenMouseOut = (event: MouseEvent): void => {\n\t\tif (!this._mouseOver) return;\n\t\tthis._mouseOver = false;\n\t\tthis._updatePreview();\n\t}\n\t\t\n\tprivate _whenMousePressed = (event: MouseEvent): void => {\n\t\tevent.preventDefault();\n\t\tthis._doc.synth.maintainLiveInput();\n\t\tthis._mouseDown = true;\n\t\tconst boundingRect: ClientRect = this.container.getBoundingClientRect();\n\t\t//this._mouseX = (event.clientX || event.pageX) - boundingRect.left;\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\n\t\tthis._updateCursorPitch();\n\t\tthis._playLiveInput();\n\t\tthis._updatePreview();\n\t}\n\t\t\n\tprivate _whenMouseMoved = (event: MouseEvent): void => {\n\t\tif (this._mouseDown || this._mouseOver) this._doc.synth.maintainLiveInput();\n\t\tconst boundingRect: ClientRect = this.container.getBoundingClientRect();\n\t\t//this._mouseX = (event.clientX || event.pageX) - boundingRect.left;\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\n\t\tthis._updateCursorPitch();\n\t\tif (this._mouseDown) this._playLiveInput();\n\t\tthis._updatePreview();\n\t}\n\t\t\n\tprivate _whenMouseReleased = (event: MouseEvent): void => {\n\t\tif (this._mouseDown) this._releaseLiveInput();\n\t\tthis._mouseDown = false;\n\t\tthis._updatePreview();\n\t}\n\t\t\n\tprivate _whenTouchPressed = (event: TouchEvent): void => {\n\t\tevent.preventDefault();\n\t\tthis._doc.synth.maintainLiveInput();\n\t\tthis._mouseDown = true;\n\t\tconst boundingRect: ClientRect = this.container.getBoundingClientRect();\n\t\t//this._mouseX = event.touches[0].clientX - boundingRect.left;\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\n\t\tthis._updateCursorPitch();\n\t\tthis._playLiveInput();\n\t}\n\t\t\n\tprivate _whenTouchMoved = (event: TouchEvent): void => {\n\t\tevent.preventDefault();\n\t\tthis._doc.synth.maintainLiveInput();\n\t\tconst boundingRect: ClientRect = this.container.getBoundingClientRect();\n\t\t//this._mouseX = event.touches[0].clientX - boundingRect.left;\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\n\t\tthis._updateCursorPitch();\n\t\tif (this._mouseDown) this._playLiveInput();\n\t}\n\t\t\n\tprivate _whenTouchReleased = (event: TouchEvent): void => {\n\t\tevent.preventDefault();\n\t\tthis._mouseDown = false;\n\t\tthis._releaseLiveInput();\n\t}\n\t\n\tprivate _onAnimationFrame = (): void => {\n\t\twindow.requestAnimationFrame(this._onAnimationFrame);\n\t\t\n\t\tlet liveInputChanged: boolean = false;\n\t\tlet liveInputPitchCount: number = !this._doc.performance.pitchesAreTemporary() ? this._doc.synth.liveInputPitches.length : 0;\n\t\tliveInputPitchCount += !this._doc.performance.bassPitchesAreTemporary() ? this._doc.synth.liveBassInputPitches.length : 0;\n\t\tif (this._renderedLiveInputPitches.length != liveInputPitchCount) {\n\t\t\tliveInputChanged = true;\n\t\t}\n\t\tfor (let i: number = 0; i < this._doc.synth.liveInputPitches.length; i++) {\n\t\t\tif (this._renderedLiveInputPitches[i] != this._doc.synth.liveInputPitches[i]) {\n\t\t\t\tthis._renderedLiveInputPitches[i] = this._doc.synth.liveInputPitches[i];\n\t\t\t\tliveInputChanged = true;\n\t\t\t}\n\t\t}\n\t\tfor (let i: number = this._doc.synth.liveInputPitches.length; i < liveInputPitchCount; i++) {\n\t\t\tif (this._renderedLiveInputPitches[i] != this._doc.synth.liveBassInputPitches[i - this._doc.synth.liveInputPitches.length]) {\n\t\t\t\tthis._renderedLiveInputPitches[i] = this._doc.synth.liveBassInputPitches[i - this._doc.synth.liveInputPitches.length];\n\t\t\t\tliveInputChanged = true;\n\t\t\t}\n\t\t}\n\t\tthis._renderedLiveInputPitches.length = liveInputPitchCount;\n\t\t\n\t\tif (liveInputChanged) {\n\t\t\tthis._updatePreview();\n\t\t}\n\t}\n\t\n\tprivate _updatePreview(): void {\n\t\tthis._preview.style.visibility = (!this._mouseOver || this._mouseDown) ? \"hidden\" : \"visible\";\n\t\t\n\t\tif (this._mouseOver && !this._mouseDown) {\n\t\t\tconst boundingRect: ClientRect = this.container.getBoundingClientRect();\n\t\t\tconst pitchHeight: number = this._pitchHeight / (this._editorHeight / (boundingRect.bottom - boundingRect.top));\n\t\t\t\n\t\t\tthis._preview.style.left = \"0px\";\n\t\t\tthis._preview.style.top = pitchHeight * (this._pitchCount - this._cursorPitch - 1) + \"px\";\n\t\t\tthis._preview.style.height = pitchHeight + \"px\";\n\t\t}\n\t\t\n\t\tconst octaveOffset: number = this._doc.getBaseVisibleOctave(this._doc.channel) * Config.pitchesPerOctave;\n\t\tconst container: HTMLDivElement = this._doc.song.getChannelIsNoise(this._doc.channel) ? this._drumContainer : this._pianoContainer;\n\t\tconst children: HTMLCollection = container.children;\n\t\tfor (let i: number = 0; i < children.length; i++) {\n\t\t\tconst child: Element = children[i];\n\t\t\tif (this._renderedLiveInputPitches.indexOf(i + octaveOffset) == -1) {\n\t\t\t\tchild.classList.remove(\"pressed\");\n\t\t\t} else {\n\t\t\t\tchild.classList.add(\"pressed\");\n\t\t\t}\n\t\t}\n\t}\n\t\n\tprivate _documentChanged = (): void => {\n\t\tconst isDrum: boolean = this._doc.song.getChannelIsNoise(this._doc.channel);\n\t\tconst isMod: boolean = this._doc.song.getChannelIsMod(this._doc.channel);\n\t\tthis._pitchCount = isMod ? Config.modCount : ( isDrum ? Config.drumCount : this._doc.getVisiblePitchCount() );\n\n\t\tthis._pitchHeight = this._editorHeight / this._pitchCount;\n\t\tthis._updateCursorPitch();\n\t\tif (this._mouseDown) this._playLiveInput();\n\t\t\n\t\tif (!this._doc.prefs.showLetters) return;\n\t\tif (this._renderedScale == this._doc.song.scale && this._renderedKey == this._doc.song.key && this._renderedDrums == isDrum && this._renderedMod == isMod && this._renderedPitchCount == this._pitchCount) return;\n\t\t\n\t\tthis._renderedScale = this._doc.song.scale;\n\t\tthis._renderedKey = this._doc.song.key;\n\t\tthis._renderedDrums = isDrum;\n\t\tthis._renderedMod = isMod;\n\t\tconst instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\n\t\t\n\t\tthis._pianoContainer.style.display = (isDrum || isMod) ? \"none\" : \"flex\";\n\t\tthis._drumContainer.style.display = isDrum ? \"flex\" : \"none\";\n\t\tthis._modContainer.style.display = isMod ? \"flex\" : \"none\";\n\t\t\n\t\tif (!isDrum && !isMod) {\n\t\t\tif (this._renderedPitchCount != this._pitchCount) {\n\t\t\t\tthis._pianoContainer.innerHTML = \"\";\n\t\t\t\tfor (let i: number = 0; i < this._pitchCount; i++) {\n\t\t\t\t\tconst pianoLabel: HTMLDivElement = HTML.div({class: \"piano-label\", style: \"font-weight: bold; -webkit-text-stroke-width: 0; font-size: 11px; font-family: sans-serif; position: absolute; padding-left: 15px;\"});\n\t\t\t\t\tconst pianoKey: HTMLDivElement = HTML.div({class: \"piano-button\", style: \"background: gray;\"}, pianoLabel);\n\t\t\t\t\tthis._pianoContainer.appendChild(pianoKey);\n\t\t\t\t\tthis._pianoLabels[i] = pianoLabel;\n\t\t\t\t\tthis._pianoKeys[i] = pianoKey;\n\t\t\t\t}\n\t\t\t\tthis._pianoLabels.length = this._pitchCount;\n\t\t\t\tthis._pianoKeys.length = this._pitchCount;\n\t\t\t\tthis._renderedPitchCount = this._pitchCount;\n\t\t\t}\n\t\t\t\n\t\t\tfor (let j: number = 0; j < this._pitchCount; j++) {\n\t\t\t\tconst pitchNameIndex: number = (j + Config.keys[this._doc.song.key].basePitch) % Config.pitchesPerOctave;\n\t\t\t\tconst isWhiteKey: boolean = Config.keys[pitchNameIndex].isWhiteKey;\n\t\t\t\tthis._pianoKeys[j].style.background = isWhiteKey ? ColorConfig.whitePianoKey : ColorConfig.blackPianoKey;\n\t\t\t\tif (!Config.scales[this._doc.song.scale].flags[j % Config.pitchesPerOctave]) {\n\t\t\t\t\tthis._pianoKeys[j].classList.add(\"disabled\");\n\t\t\t\t\tthis._pianoLabels[j].style.display = \"none\";\n\t\t\t\t} else {\n\t\t\t\t\tthis._pianoKeys[j].classList.remove(\"disabled\");\n\t\t\t\t\tthis._pianoLabels[j].style.display = \"\";\n\t\t\t\t\t\t\n\t\t\t\t\tconst label: HTMLDivElement = this._pianoLabels[j];\n\n\t\t\t\t\tif ((j % 12) == 0) {\n\t\t\t\t\t\tlabel.style.transform = \"translate(-5px, 0px)\";\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tlabel.style.transform = \"translate(0px, 0px)\";\n\t\t\t\t\t}\n\n\t\t\t\t\t/* @jummbus - Visual distinciton for bass notes during live input. Axed for now... maybe needs new colors?\n\t\t\t\t\tI want to do filter: hue-shift(60deg) but keys are usually grayscale, and filter: is used already anyway for displaying played notes as pressed.\n\t\t\t\t\tif ( j + octaveOffset <= Piano.getBassCutoffPitch(this._doc) && this._doc.prefs.bassOffset != 0) {\n\t\t\t\t\t\tlabel.style.setProperty(\"font-style\", \"italic\");\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis._pianoKeys[j].style.setProperty(\"font-style\", \"\");\n\t\t\t\t\t}\n\t\t\t\t\t*/\n\n\n\t\t\t\t\tlabel.style.color = Config.keys[pitchNameIndex].isWhiteKey ? \"black\" : \"white\";\n\t\t\t\t\tlabel.textContent = Piano.getPitchName(pitchNameIndex, j, this._doc.getBaseVisibleOctave(this._doc.channel));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (isMod) {\n\t\t\tlet firstRow: string = \"\";\n\t\t\tlet secondRow: string = \"\";\n\t\t\tlet useFirstColor: string = ColorConfig.modLabelPrimaryText;\n\t\t\tlet useSecondColor: string = ColorConfig.modLabelSecondaryText;\n\t\t\tfor (let j: number = 0; j < Config.modCount; j++) {\n\n\t\t\t\tlet usingSecondRow: boolean = true;\n\t\t\t\tlet usingMod: boolean = true;\n\t\t\t\tlet instrumentVal: number = instrument.modInstruments[Config.modCount - j - 1] + 1;\n\t\t\t\tlet channelVal: number = instrument.modChannels[Config.modCount - j - 1] + 1;\n\t\t\t\tlet modulator: number = instrument.modulators[Config.modCount - j - 1];\n\t\t\t\tlet status: number = 1 + +(channelVal - 1 >= this._doc.song.pitchChannelCount);\n\t\t\t\tif (instrument.modChannels[Config.modCount - j - 1] == -2)\n\t\t\t\t\tstatus = 0;\n\t\t\t\telse if (instrument.modChannels[Config.modCount - j - 1] == -1)\n\t\t\t\t\tstatus = 3;\n\t\t\t\tlet instrumentsLength: number = this._doc.song.channels[Math.max(0,channelVal - 1)].instruments.length;\n\t\t\t\t// 0 - none\n\t\t\t\t// 1 - pitch\n\t\t\t\t// 2 - noise\n\t\t\t\t// 3 - song\n\n\n\t\t\t\tswitch (status) {\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\tfirstRow = \"Mod\"\n\t\t\t\t\t\tusingSecondRow = false;\n\t\t\t\t\t\tuseSecondColor = ColorConfig.modLabelSecondaryText;\n\t\t\t\t\t\tusingMod = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tif (this._doc.song.channels[channelVal - 1].name == \"\") {\n\n\t\t\t\t\t\t\tif (instrumentsLength > 1) {\n\t\t\t\t\t\t\t\tif (channelVal >= 10 || instrumentVal >= 10) {\n\t\t\t\t\t\t\t\t\tfirstRow = \"P\" + channelVal;\n\t\t\t\t\t\t\t\t\tif (instrumentVal - 1 == instrumentsLength) {\n\t\t\t\t\t\t\t\t\t\tfirstRow += \" All\";\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse if (instrumentVal - 1 > instrumentsLength) {\n\t\t\t\t\t\t\t\t\t\tfirstRow += \" Act\";\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tfirstRow += \" I\" + instrumentVal;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tfirstRow = \"Pitch\" + channelVal;\n\t\t\t\t\t\t\t\t\tif (instrumentVal-1 == instrumentsLength) {\n\t\t\t\t\t\t\t\t\t\tfirstRow += \" All\";\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse if (instrumentVal - 1 > instrumentsLength) {\n\t\t\t\t\t\t\t\t\t\tfirstRow += \" Act\";\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tfirstRow += \" Ins\" + instrumentVal;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tfirstRow = \"Pitch \" + channelVal;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// Channel name display\n\t\t\t\t\t\t\tlet insText: string;\n\t\t\t\t\t\t\tif (instrumentVal - 1 == instrumentsLength) {\n\t\t\t\t\t\t\t\tinsText = \" All\";\n\t\t\t\t\t\t\t} else if (instrumentVal - 1 > instrumentsLength) {\n\t\t\t\t\t\t\t\tinsText = \" Act\";\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tinsText = \" I\" + instrumentVal;\n                            }\n\t\t\t\t\t\t\tif (instrumentsLength > 1) {\n\t\t\t\t\t\t\t\tfirstRow = \"P\" + channelVal + \" \" + this._doc.song.channels[channelVal - 1].name + insText;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tfirstRow = \"P\" + channelVal + \" \" + this._doc.song.channels[channelVal - 1].name;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tconst absoluteChannelVal: number = instrument.modChannels[Config.modCount - j - 1];\n\t\t\t\t\t\tconst relativeChannelVal: number = absoluteChannelVal - this._doc.song.pitchChannelCount;\n\n\t\t\t\t\t\tif (this._doc.song.channels[absoluteChannelVal].name == \"\") {\n\n\t\t\t\t\t\t\tif (instrumentsLength > 1) {\n\n\t\t\t\t\t\t\t\tif ((relativeChannelVal + 1) >= 10 || instrumentVal >= 10) {\n\t\t\t\t\t\t\t\t\tfirstRow = \"N\" + (relativeChannelVal + 1);\n\t\t\t\t\t\t\t\t\tif (instrumentVal - 1 == instrumentsLength) {\n\t\t\t\t\t\t\t\t\t\tfirstRow += \" All\";\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse if (instrumentVal - 1 > instrumentsLength) {\n\t\t\t\t\t\t\t\t\t\tfirstRow += \" Act\";\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\t\tfirstRow += \" I\" + instrumentVal;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tfirstRow = \"Noise\" + (relativeChannelVal + 1);\n\t\t\t\t\t\t\t\t\tif (instrumentVal - 1 == instrumentsLength) {\n\t\t\t\t\t\t\t\t\t\tfirstRow += \" All\";\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse if (instrumentVal - 1 > instrumentsLength) {\n\t\t\t\t\t\t\t\t\t\tfirstRow += \" Act\";\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\t\tfirstRow += \" Ins\" + instrumentVal;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tfirstRow = \"Noise \" + (relativeChannelVal + 1);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// Channel name display\n\t\t\t\t\t\t\tif (instrumentsLength > 1) {\n\t\t\t\t\t\t\t\tlet insText: string;\n\t\t\t\t\t\t\t\tif (instrumentVal - 1 == instrumentsLength) {\n\t\t\t\t\t\t\t\t\tinsText = \" All\";\n\t\t\t\t\t\t\t\t} else if (instrumentVal - 1 > instrumentsLength) {\n\t\t\t\t\t\t\t\t\tinsText = \" Act\";\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tinsText = \" I\" + instrumentVal;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tfirstRow = \"N\" + (relativeChannelVal + 1) + \" \" + this._doc.song.channels[absoluteChannelVal].name + insText;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tfirstRow = \"N\" + (relativeChannelVal + 1) + \" \" + this._doc.song.channels[absoluteChannelVal].name;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\tfirstRow = \"Song\";\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t// When unused, show name of mod on second row\n\t\t\t\tif (usingSecondRow) {\n\t\t\t\t\tsecondRow = Config.modulators[modulator].pianoName;\n\t\t\t\t\tif (modulator == Config.modulators.dictionary[\"none\"].index) {\n\t\t\t\t\t\tuseSecondColor = ColorConfig.modLabelSecondaryText;\n\t\t\t\t\t\tusingMod = false;\n\t\t\t\t\t}\n\t\t\t\t\telse if (modulator == Config.modulators.dictionary[\"eq filter\"].index || modulator == Config.modulators.dictionary[\"note filter\"].index) {\n\t\t\t\t\t\tvar text = \" Morph\";\n\t\t\t\t\t\tvar filterVal = instrument.modFilterTypes[Config.modCount - j - 1];\n\t\t\t\t\t\tif (filterVal > 0 && (filterVal % 2)) {\n\t\t\t\t\t\t\ttext = \" Dot\" + Math.ceil(filterVal / 2) + \"X\";\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (filterVal > 0) {\n\t\t\t\t\t\t\ttext = \" Dot\" + Math.ceil(filterVal / 2) + \"Y\";\n                        }\n\t\t\t\t\t\t\n\t\t\t\t\t\tsecondRow += text;\n                    }\n\t\t\t\t}\n\n\t\t\t\tconst firstLabel: SVGTextElement = this._modFirstLabels[j];\n\t\t\t\tconst secondLabel: SVGTextElement = this._modSecondLabels[j];\n\t\t\t\tconst modCountLabel: SVGTextElement = this._modCountLabels[j];\n\t\t\t\tconst modCountRect: SVGRectElement = this._modCountRects[j];\n\t\t\t\tfirstLabel.style.fill = useFirstColor;\n\t\t\t\tfirstLabel.textContent = firstRow;\n\t\t\t\tsecondLabel.style.fill = useSecondColor;\n\t\t\t\tsecondLabel.textContent = usingSecondRow ? secondRow : \"Not set\";\n\t\t\t\tmodCountLabel.textContent = \"\" + (Config.modCount - j);\n\t\t\t\tmodCountRect.style.fill = usingMod ? ColorConfig.indicatorPrimary : ColorConfig.modLabelSecondaryText;\n\n\t\t\t\t// Check if text is too long, if name is set\n\t\t\t\tif (this._doc.song.channels[Math.max(0,instrument.modChannels[Config.modCount - j - 1])].name != \"\") {\n\t\t\t\t\tlet scaleFactor: string = \"1\";\n\t\t\t\t\tlet height: number = firstLabel.parentElement!.parentElement!.getBoundingClientRect().height;\n\t\t\t\t\tlet length: number = firstLabel.getComputedTextLength();\n\t\t\t\t\tlet squeeze: number = 0;\n\t\t\t\t\tif (length > height - 8) {\n\t\t\t\t\t\tscaleFactor = \"0.65\";\n\t\t\t\t\t\tsqueeze = 2;\n\t\t\t\t\t}\n\t\t\t\t\telse if (length > height - 24) {\n\t\t\t\t\t\tscaleFactor = \"0.8\";\n\t\t\t\t\t\tsqueeze = 1;\n\t\t\t\t\t}\n\t\t\t\t\tfirstLabel.style.transform = \"rotate(-90deg) translate(\" + (-20 - squeeze - Math.round(Math.max(0, (height - 80) / 2))) + \"px, 39px) scale(\" + scaleFactor + \", 1)\";\n\t\t\t\t\t// Truncate end of string if it's too long, but keep instrument num\n\t\t\t\t\twhile (scaleFactor == \"0.65\" && firstLabel.getComputedTextLength() > height + 8) {\n\t\t\t\t\t\tvar offset = 4 + (instrumentVal >= 10 ? 1 : 0);\n\t\t\t\t\t\tfirstLabel.textContent = firstLabel.textContent.substr(0, firstLabel.textContent.length - offset) + firstLabel.textContent.substr(firstLabel.textContent.length - offset + 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlet height: number = firstLabel.parentElement!.parentElement!.getBoundingClientRect().height;\n\t\t\t\t\tfirstLabel.style.transform = \"rotate(-90deg) translate(\" + (-20 - Math.round(Math.max(0, (height - 80) / 2))) + \"px, 39px) scale(1, 1)\";\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis._updatePreview();\n\t}\n\n\tpublic static getPitchName(pitchNameIndex: number, scaleIndex: number, baseVisibleOctave: number): string {\n\t\tlet text: string;\n\n\t\tif (Config.keys[pitchNameIndex].isWhiteKey) {\n\t\t\ttext = Config.keys[pitchNameIndex].name;\n\t\t} else {\n\t\t\tconst shiftDir: number = Config.blackKeyNameParents[scaleIndex % Config.pitchesPerOctave];\n\t\t\ttext = Config.keys[(pitchNameIndex + Config.pitchesPerOctave + shiftDir) % Config.pitchesPerOctave].name;\n\t\t\tif (shiftDir == 1) {\n\t\t\t\ttext += \"♭\";\n\t\t\t} else if (shiftDir == -1) {\n\t\t\t\ttext += \"♯\";\n\t\t\t}\n\t\t}\n\n\t\tif (scaleIndex % 12 == 0) {\n\t\t\ttext += Math.floor(scaleIndex / 12) + baseVisibleOctave;\n\t\t}\n\n\t\treturn text;\n\t}\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nimport { Config } from \"../synth/SynthConfig\";\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\nimport { SongDocument } from \"./SongDocument\";\nimport { Prompt } from \"./Prompt\";\nimport { ChangeGroup } from \"./Change\";\nimport { ChangeBarCount } from \"./changes\";\nimport { ColorConfig } from \"./ColorConfig\";\n\n\tconst {button, div, span, h2, input, br, select, option} = HTML;\n\nexport class SongDurationPrompt implements Prompt {\n\t\tprivate readonly _barsStepper: HTMLInputElement = input({style: \"width: 3em; margin-left: 1em;\", type: \"number\", step: \"1\"});\n\t\tprivate readonly _positionSelect: HTMLSelectElement = select({style: \"width: 100%;\"},\n\t\t\toption({value: \"end\"},       \"Apply change at end of song.\"),\n\t\t\toption({value: \"beginning\"}, \"Apply change at beginning of song.\"),\n\t);\n\t\tprivate readonly _cancelButton: HTMLButtonElement = button({class: \"cancelButton\"});\n\t\tprivate readonly _okayButton: HTMLButtonElement = button({class: \"okayButton\", style: \"width:45%;\"}, \"Okay\");\n\t\t\n\t\tpublic readonly container: HTMLDivElement = div({class: \"prompt noSelection\", style: \"width: 250px;\"},\n\t\th2(\"Song Length\"),\n\t\t\tdiv({style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\"},\n\t\t\t\tdiv({style: \"display: inline-block; text-align: right;\"},\n\t\t\t\t\"Bars per song:\",\n\t\t\t\tbr(),\n\t\t\t\t\tspan({style: `font-size: smaller; color: ${ColorConfig.secondaryText};`}, \"(Multiples of 4 are recommended)\"),\n\n\t\t\t),\n\t\t\tthis._barsStepper,\n\t\t),\n\t\t\tdiv({style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\"},\n\t\t\t\tdiv({class: \"selectContainer\", style: \"width: 100%;\"}, this._positionSelect),\n\t\t),\n\t\t\tdiv({style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\"},\n\t\t\tthis._okayButton,\n\t\t),\n\t\tthis._cancelButton,\n\t);\n\t\t\n\tconstructor(private _doc: SongDocument) {\n\n\t\tthis._barsStepper.value = this._doc.song.barCount + \"\";\n\t\tthis._barsStepper.min = Config.barCountMin + \"\";\n\t\tthis._barsStepper.max = Config.barCountMax + \"\";\n\t\t\t\n\t\tconst lastPosition: string | null = window.localStorage.getItem(\"barCountPosition\");\n\t\tif (lastPosition != null) {\n\t\t\tthis._positionSelect.value = lastPosition;\n\t\t}\n\t\t\t\n\t\tthis._barsStepper.select();\n\t\t\tsetTimeout(()=>this._barsStepper.focus());\n\t\t\t\n\t\tthis._okayButton.addEventListener(\"click\", this._saveChanges);\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\n\t\tthis._barsStepper.addEventListener(\"keypress\", SongDurationPrompt._validateKey);\n\t\tthis._barsStepper.addEventListener(\"blur\", SongDurationPrompt._validateNumber);\n\t\tthis.container.addEventListener(\"keydown\", this._whenKeyPressed);\n\t}\n\t\t\n\t\tprivate _close = (): void => { \n\t\tthis._doc.undo();\n\t}\n\t\t\n\tpublic cleanUp = (): void => {\n\t\tthis._okayButton.removeEventListener(\"click\", this._saveChanges);\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\n\t\tthis._barsStepper.removeEventListener(\"keypress\", SongDurationPrompt._validateKey);\n\t\tthis._barsStepper.removeEventListener(\"blur\", SongDurationPrompt._validateNumber);\n\t\tthis.container.removeEventListener(\"keydown\", this._whenKeyPressed);\n\t}\n\t\t\n\tprivate _whenKeyPressed = (event: KeyboardEvent): void => {\n\t\t\tif ((<Element> event.target).tagName != \"BUTTON\" && event.keyCode == 13) { // Enter key\n\t\t\tthis._saveChanges();\n\t\t}\n\t}\n\t\t\n\tprivate static _validateKey(event: KeyboardEvent): boolean {\n\t\tconst charCode = (event.which) ? event.which : event.keyCode;\n\t\tif (charCode != 46 && charCode > 31 && (charCode < 48 || charCode > 57)) {\n\t\t\tevent.preventDefault();\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\t\t\n\tprivate static _validateNumber(event: Event): void {\n\t\tconst input: HTMLInputElement = <HTMLInputElement>event.target;\n\t\tinput.value = String(SongDurationPrompt._validate(input));\n\t}\n\t\t\n\tprivate static _validate(input: HTMLInputElement): number {\n\t\treturn Math.floor(Math.max(Number(input.min), Math.min(Number(input.max), Number(input.value))));\n\t}\n\t\t\n\tprivate _saveChanges = (): void => {\n\t\twindow.localStorage.setItem(\"barCountPosition\", this._positionSelect.value);\n\t\tconst group: ChangeGroup = new ChangeGroup();\n\t\tgroup.append(new ChangeBarCount(this._doc, SongDurationPrompt._validate(this._barsStepper), this._positionSelect.value == \"beginning\"));\n\t\tthis._doc.prompt = null;\n\t\tthis._doc.record(group, true);\n\t}\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nimport {Config} from \"../synth/SynthConfig\";\nimport {Instrument} from \"../synth/synth\";\nimport {HTML} from \"imperative-html/dist/esm/elements-strict\";\nimport {SongDocument} from \"./SongDocument\";\nimport {Prompt} from \"./Prompt\";\nimport {ChangeGroup} from \"./Change\";\nimport {ChangeStringSustainType} from \"./changes\";\n\nconst {button, div, h2, p, select, option} = HTML;\n\nexport class SustainPrompt implements Prompt {\n\tprivate readonly _typeSelect: HTMLSelectElement = select({style: \"width: 100%;\"},\n\t\toption({value: \"acoustic\"}, \"(A) Acoustic\"),\n\t\toption({value: \"bright\"}, \"(B) Bright\"),\n\t);\n\tprivate readonly _cancelButton: HTMLButtonElement = button({class: \"cancelButton\"});\n\tprivate readonly _okayButton: HTMLButtonElement = button({class: \"okayButton\", style: \"width:45%;\"}, \"Okay\");\n\t\n\tpublic readonly container: HTMLDivElement = div({class: \"prompt\", style: \"width: 300px;\"},\n\t\tdiv(\n\t\t\th2(\"String Sustain\"),\n\t\t\tp(\"This setting controls how quickly the picked string vibration decays.\"),\n\t\t\tp(\"Unlike most of BeepBox's instrument synthesizer features, a picked string cannot change frequency suddenly while maintaining its decay. If a tone's pitch changes suddenly (e.g. if the chord type is set to \\\"arpeggio\\\" or the transition type is set to \\\"continues\\\") then the string will be re-picked and start decaying from the beginning again, even if the envelopes don't otherwise restart.\"),\n\t\t),\n\t\tdiv({style: {display: Config.enableAcousticSustain ? undefined : \"none\"}},\n\t\t\tp(\"BeepBox comes with two slightly different sustain designs. You can select one here and press \\\"Okay\\\" to confirm it.\"),\n\t\t\tdiv({class: \"selectContainer\", style: \"width: 100%;\"}, this._typeSelect),\n\t\t),\n\t\tdiv({style: {display: Config.enableAcousticSustain ? \"flex\" : \"none\", \"flex-direction\": \"row-reverse\", \"justify-content\": \"space-between\"}},\n\t\t\tthis._okayButton,\n\t\t),\n\t\tthis._cancelButton,\n\t);\n\t\n\tconstructor(private _doc: SongDocument) {\n\t\tconst instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\n\t\tthis._typeSelect.value = Config.sustainTypeNames[instrument.stringSustainType];\n\t\t\n\t\tsetTimeout(()=>this._cancelButton.focus());\n\t\t\n\t\tthis._okayButton.addEventListener(\"click\", this._saveChanges);\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\n\t\tthis.container.addEventListener(\"keydown\", this._whenKeyPressed);\n\t}\n\t\n\tprivate _close = (): void => { \n\t\tthis._doc.undo();\n\t}\n\t\n\tpublic cleanUp = (): void => { \n\t\tthis._okayButton.removeEventListener(\"click\", this._saveChanges);\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\n\t\tthis.container.removeEventListener(\"keydown\", this._whenKeyPressed);\n\t}\n\t\n\tprivate _whenKeyPressed = (event: KeyboardEvent): void => {\n\t\tif ((<Element> event.target).tagName != \"BUTTON\" && event.keyCode == 13) { // Enter key\n\t\t\tthis._saveChanges();\n\t\t}\n\t}\n\t\n\tprivate _saveChanges = (): void => {\n\t\tif (Config.enableAcousticSustain) {\n\t\t\tconst group: ChangeGroup = new ChangeGroup();\n\t\t\tgroup.append(new ChangeStringSustainType(this._doc, <any> Config.sustainTypeNames.indexOf(this._typeSelect.value)));\n\t\t\tthis._doc.prompt = null;\n\t\t\tthis._doc.record(group, true);\n\t\t} else {\n\t\t\tthis._close();\n\t\t}\n\t}\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nimport { Dictionary } from \"../synth/SynthConfig\";\nimport { Song } from \"../synth/synth\";\n\n\t\nexport interface RecoveredVersion {\n\tuid: string;\n\ttime: number;\n\tname: string;\n\twork: number;\n}\n\nexport interface RecoveredSong {\n\tversions: RecoveredVersion[];\n}\n\nconst versionPrefix = \"songVersion: \";\nconst maximumSongCount = 8;\nconst maximumWorkPerVersion = 3 * 60 * 1000; // 3 minutes\nconst minimumWorkPerSpan = 1 * 60 * 1000; // 1 minute\n\nfunction keyIsVersion(key: string): boolean {\n\treturn key.indexOf(versionPrefix) == 0;\n}\n\nfunction keyToVersion(key: string): RecoveredVersion {\n\treturn JSON.parse(key.substring(versionPrefix.length));\n}\n\nexport function versionToKey(version: RecoveredVersion): string {\n\treturn versionPrefix + JSON.stringify(version);\n}\n\nexport function generateUid(): string {\n\t// Not especially robust, but simple and effective!\n\treturn ((Math.random() * (-1 >>> 0)) >>> 0).toString(32);\n}\n\nexport function errorAlert(error: any): void {\n\tconsole.warn(error);\n\twindow.alert(\"Whoops, the song data appears to have been corrupted! Please try to recover the last working version of the song from the \\\"Recover Recent Song...\\\" option in BeepBox's \\\"File\\\" menu.\");\n}\n\n\nfunction compareSongs(a: RecoveredSong, b: RecoveredSong): number {\n\treturn b.versions[0].time - a.versions[0].time;\n}\n\nfunction compareVersions(a: RecoveredVersion, b: RecoveredVersion): number {\n\treturn b.time - a.time;\n}\n\t\t\nexport class SongRecovery {\n\tprivate _saveVersionTimeoutHandle: ReturnType<typeof setTimeout>;\n\t\t\n\tprivate _song: Song = new Song();\n\t\t\n\tpublic static getAllRecoveredSongs(): RecoveredSong[] {\n\t\tconst songs: RecoveredSong[] = [];\n\t\tconst songsByUid: Dictionary<RecoveredSong> = {};\n\t\tfor (let i = 0; i < localStorage.length; i++) {\n\t\t\tconst itemKey: string = localStorage.key(i)!;\n\t\t\tif (keyIsVersion(itemKey)) {\n\t\t\t\tconst version: RecoveredVersion = keyToVersion(itemKey);\n\t\t\t\tlet song: RecoveredSong | undefined = songsByUid[version.uid];\n\t\t\t\tif (song == undefined) {\n\t\t\t\t\t\tsong = {versions: []};\n\t\t\t\t\tsongsByUid[version.uid] = song;\n\t\t\t\t\tsongs.push(song);\n\t\t\t\t}\n\t\t\t\tsong.versions.push(version);\n\t\t\t}\n\t\t}\n\t\tfor (const song of songs) {\n\t\t\tsong.versions.sort(compareVersions);\n\t\t}\n\t\tsongs.sort(compareSongs);\n\t\treturn songs;\n\t}\n\t\t\n\tpublic saveVersion(uid: string, name: string, songData: string): void {\n\t\tconst newName: string = name;\n\t\tconst newTime: number = Math.round(Date.now());\n\t\t\t\n\t\tclearTimeout(this._saveVersionTimeoutHandle);\n\t\tthis._saveVersionTimeoutHandle = setTimeout((): void => {\n\t\t\ttry {\n\t\t\t\t// Ensure that the song is not corrupted.\n\t\t\t\tthis._song.fromBase64String(songData);\n\t\t\t} catch (error) {\n\t\t\t\terrorAlert(error);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\t\n\t\t\tconst songs: RecoveredSong[] = SongRecovery.getAllRecoveredSongs();\n\t\t\tlet currentSong: RecoveredSong | null = null;\n\t\t\tfor (const song of songs) {\n\t\t\t\tif (song.versions[0].uid == uid) {\n\t\t\t\t\tcurrentSong = song;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (currentSong == null) {\n\t\t\t\t\tcurrentSong = {versions: []};\n\t\t\t\tsongs.unshift(currentSong);\n\t\t\t}\n\t\t\tlet versions: RecoveredVersion[] = currentSong.versions;\n\t\t\t\t\n\t\t\tlet newWork: number = 1000; // default to 1 second of work for the first change.\n\t\t\tif (versions.length > 0) {\n\t\t\t\tconst mostRecentTime: number = versions[0].time;\n\t\t\t\tconst mostRecentWork: number = versions[0].work;\n\t\t\t\tnewWork = mostRecentWork + Math.min(maximumWorkPerVersion, newTime - mostRecentTime);\n\t\t\t}\n\t\t\t\t\n\t\t\tconst newVersion: RecoveredVersion = { uid: uid, name: newName, time: newTime, work: newWork };\n\t\t\tconst newKey: string = versionToKey(newVersion);\n\t\t\tversions.unshift(newVersion);\n\t\t\tlocalStorage.setItem(newKey, songData);\n\t\t\t\t\n\t\t\t// Consider deleting an old version to free up space.\n\t\t\tlet minSpan: number = minimumWorkPerSpan; // start out with a gap between versions.\n\t\t\tconst spanMult: number = Math.pow(2, 1 / 2); // Double the span every 2 versions back.\n\t\t\tfor (var i: number = 1; i < versions.length; i++) {\n\t\t\t\tconst currentWork: number = versions[i].work;\n\t\t\t\tconst olderWork: number = (i == versions.length - 1) ? 0.0 : versions[i + 1].work;\n\t\t\t\t// If not enough work happened between two versions, discard one of them.\n\t\t\t\tif (currentWork - olderWork < minSpan) {\n\t\t\t\t\tlet indexToDiscard: number = i;\n\t\t\t\t\tif (i < versions.length - 1) {\n\t\t\t\t\t\tconst currentTime: number = versions[i].time;\n\t\t\t\t\t\tconst newerTime: number = versions[i - 1].time;\n\t\t\t\t\t\tconst olderTime: number = versions[i + 1].time;\n\t\t\t\t\t\t// Weird heuristic: Between the three adjacent versions, prefer to keep\n\t\t\t\t\t\t// the newest and the oldest, discarding the middle one (i), unless\n\t\t\t\t\t\t// there is a large gap of time between the newest and middle one, in\n\t\t\t\t\t\t// which case the middle one represents the end of a span of work and is\n\t\t\t\t\t\t// thus more memorable.\n\t\t\t\t\t\tif ((currentTime - olderTime) < 0.5 * (newerTime - currentTime)) {\n\t\t\t\t\t\t\tindexToDiscard = i + 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tlocalStorage.removeItem(versionToKey(versions[indexToDiscard]));\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tminSpan *= spanMult;\n\t\t\t}\n\t\t\t\t\n\t\t\t// If there are too many songs, discard the least important ones.\n\t\t\t// Songs that are older, or have less work, are less important.\n\t\t\twhile (songs.length > maximumSongCount) {\n\t\t\t\tlet leastImportantSong: RecoveredSong | null = null;\n\t\t\t\tlet leastImportance: number = Number.POSITIVE_INFINITY;\n\t\t\t\tfor (let i: number = Math.round(maximumSongCount / 2); i < songs.length; i++) {\n\t\t\t\t\tconst song: RecoveredSong = songs[i];\n\t\t\t\t\tconst timePassed: number = newTime - song.versions[0].time;\n\t\t\t\t\t// Convert the time into a factor of 12 hours, add one, then divide by the result.\n\t\t\t\t\t// This creates a curve that starts at 1, and then gradually drops off.\n\t\t\t\t\tconst timeScale: number = 1.0 / ((timePassed / (12 * 60 * 60 * 1000)) + 1.0);\n\t\t\t\t\t// Add 5 minutes of work, to balance out simple songs a little bit.\n\t\t\t\t\tconst adjustedWork: number = song.versions[0].work + 5 * 60 * 1000;\n\t\t\t\t\tconst weight: number = adjustedWork * timeScale;\n\t\t\t\t\tif (leastImportance > weight) {\n\t\t\t\t\t\tleastImportance = weight;\n\t\t\t\t\t\tleastImportantSong = song;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (const version of leastImportantSong!.versions) {\n\t\t\t\t\tlocalStorage.removeItem(versionToKey(version));\n\t\t\t\t}\n\t\t\t\tsongs.splice(songs.indexOf(leastImportantSong!), 1);\n\t\t\t}\n\t\t}, 750); // Wait 3/4 of a second before saving a version.\n\t}\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nimport { SongDocument } from \"./SongDocument\";\nimport { RecoveredSong, RecoveredVersion, SongRecovery, versionToKey } from \"./SongRecovery\";\nimport { Prompt } from \"./Prompt\";\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\n\n\tconst {button, div, h2, p, select, option, iframe} = HTML;\n\nexport class SongRecoveryPrompt implements Prompt {\n\tprivate readonly _songContainer: HTMLDivElement = div();\n\t\tprivate readonly _cancelButton: HTMLButtonElement = button({class: \"cancelButton\"});\n\t\t\n\t\tpublic readonly container: HTMLDivElement = div({class: \"prompt\", style: \"width: 300px;\"},\n\t\th2(\"Song Recovery\"),\n\t\t\tdiv({style: \"max-height: 385px; overflow-y: auto;\"},\n\t\t\tp(\"This is a TEMPORARY list of songs you have recently modified. Please keep your own backups of songs you care about!\"),\n\t\t\tthis._songContainer,\n\t\t\tp(\"(If \\\"Display Song Data in URL\\\" is enabled in your preferences, then you may also be able to find song versions in your browser history. However, song recovery won't work if you were browsing in private/incognito mode.)\"),\n\t\t),\n\t\tthis._cancelButton,\n\t);\n\t\t\n\tconstructor(private _doc: SongDocument) {\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\n\t\t\t\n\t\tconst songs: RecoveredSong[] = SongRecovery.getAllRecoveredSongs();\n\t\t\t\n\t\tif (songs.length == 0) {\n\t\t\tthis._songContainer.appendChild(p(\"There are no recovered songs available yet. Try making a song!\"));\n\t\t}\n\t\t\t\n\t\tfor (const song of songs) {\n\t\t\t\tconst versionMenu: HTMLSelectElement = select({style: \"width: 100%;\"});\n\t\t\t\t\n\t\t\tfor (const version of song.versions) {\n\t\t\t\tversionMenu.appendChild(option({ value: version.time }, version.name + \": \" + new Date(version.time).toLocaleString()));\n\t\t\t}\n\t\t\t\t\n\t\t\t\tconst player: HTMLIFrameElement = iframe({style: \"width: 100%; height: 60px; border: none; display: block;\"});\n\t\t\tplayer.src = \"player/#song=\" + window.localStorage.getItem(versionToKey(song.versions[0]));\n\t\t\t\tconst container: HTMLDivElement = div({style: \"margin: 4px 0;\"}, div({class: \"selectContainer\", style: \"width: 100%; margin: 2px 0;\"}, versionMenu), player);\n\t\t\tthis._songContainer.appendChild(container);\n\t\t\t\t\n\t\t\tversionMenu.addEventListener(\"change\", () => {\n\t\t\t\tconst version: RecoveredVersion = song.versions[versionMenu.selectedIndex];\n\t\t\t\tplayer.contentWindow!.location.replace(\"player/#song=\" + window.localStorage.getItem(versionToKey(version)));\n\t\t\t\tplayer.contentWindow!.dispatchEvent(new Event(\"hashchange\"));\n\t\t\t});\n\t\t}\n\t}\n\t\t\n\t\tprivate _close = (): void => { \n\t\tthis._doc.undo();\n\t}\n\t\t\n\t\tpublic cleanUp = (): void => { \n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\n\t}\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nimport {Config} from \"../synth/SynthConfig\";\nimport {EditorConfig} from \"./EditorConfig\";\nimport {SongDocument} from \"./SongDocument\";\nimport {Prompt} from \"./Prompt\";\nimport {HTML} from \"imperative-html/dist/esm/elements-strict\";\nimport {ColorConfig} from \"./ColorConfig\";\nimport {KeyboardLayout} from \"./KeyboardLayout\";\nimport {Piano} from \"./Piano\";\n\nconst {button, label, div, p, a, h2, input, select, option} = HTML;\n\nexport class RecordingSetupPrompt implements Prompt {\n\tprivate readonly _keyboardMode: HTMLSelectElement = select({style: \"width: 100%;\"},\n\t\toption({value: \"useCapsLockForNotes\"}, \"simple shortcuts, use caps lock to play notes\"),\n\t\toption({value: \"pressControlForShortcuts\"}, \"simple notes, press \" + EditorConfig.ctrlName + \" for shortcuts\"),\n\t);\n\tprivate readonly _keyboardLayout: HTMLSelectElement = select({style: \"width: 100%;\"},\n\t\toption({value: \"wickiHayden\"}, \"Wicki-Hayden\"),\n\t\toption({value: \"songScale\"}, \"selected song scale\"),\n\t\toption({value: \"pianoAtC\"}, \"piano starting at C :)\"),\n\t\toption({value: \"pianoAtA\"}, \"piano starting at A :(\"),\n\t\toption({value: \"pianoTransposingC\"}, \"piano transposing C :) to song key\"),\n\t\toption({value: \"pianoTransposingA\"}, \"piano transposing A :( to song key\"),\n\t);\n\tprivate readonly _bassOffset: HTMLSelectElement = select({style: \"width: 100%;\"},\n\t\toption({value: \"0\"}, \"disabled\"),\n\t\toption({value: \"-1\"}, \"before\"),\n\t\toption({value: \"1\"}, \"after\"),\n\t);\n\tprivate readonly _keyboardLayoutPreview: HTMLDivElement = div({style: \"display: grid; row-gap: 4px; margin: 4px auto; font-size: 10px;\"});\n\tprivate readonly _enableMidi: HTMLInputElement = input({style: \"width: 2em; margin-left: 1em;\", type: \"checkbox\"});\n\tprivate readonly _showRecordButton: HTMLInputElement = input({style: \"width: 2em; margin-left: 1em;\", type: \"checkbox\"});\n\tprivate readonly _snapRecordedNotesToRhythm: HTMLInputElement = input({style: \"width: 2em; margin-left: 1em;\", type: \"checkbox\"});\n\tprivate readonly _ignorePerformedNotesNotInScale: HTMLInputElement = input({style: \"width: 2em; margin-left: 1em;\", type: \"checkbox\"});\n\tprivate readonly _metronomeCountIn: HTMLInputElement = input({style: \"width: 2em; margin-left: 1em;\", type: \"checkbox\"});\n\tprivate readonly _metronomeWhileRecording: HTMLInputElement = input({style: \"width: 2em; margin-left: 1em;\", type: \"checkbox\"});\n\t\n\tprivate readonly _okayButton: HTMLButtonElement = button({class: \"okayButton\", style: \"width:45%;\"}, \"Okay\");\n\tprivate readonly _cancelButton: HTMLButtonElement = button({class: \"cancelButton\"});\n\tpublic readonly container: HTMLDivElement = div({class: \"prompt noSelection recordingSetupPrompt\", style: \"width: 600px; text-align: right; max-height: 90%;\"},\n\t\th2({style: \"align-self: center;\"}, \"Note Recording Setup\"),\n\t\tdiv({style: \"display: grid; overflow-y: auto; overflow-x: hidden; flex-shrink: 1;\"},\n\t\t\tp(\"JummBox can record notes as you perform them. You can start recording by pressing Ctrl+Space (or \" + EditorConfig.ctrlSymbol + \"P).\"),\n\t\t\tlabel({style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: center;\"},\n\t\t\t\t\"Add ● record button next to ▶ play button:\",\n\t\t\t\tthis._showRecordButton,\n\t\t\t),\n\t\t\tlabel({style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: center;\"},\n\t\t\t\t\"Snap recorded notes to the song's rhythm:\",\n\t\t\t\tthis._snapRecordedNotesToRhythm,\n\t\t\t),\n\t\t\tlabel({style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: center;\"},\n\t\t\t\t\"Ignore notes not in the song's scale:\",\n\t\t\t\tthis._ignorePerformedNotesNotInScale,\n\t\t\t),\n\t\t\tp(\"While recording, you can perform notes on your keyboard!\"),\n\t\t\tlabel({style: \"display: flex; flex-direction: row; align-items: center; margin-top: 0.5em; margin-bottom: 0.5em; height: 2em; justify-content: center;\"},\n\t\t\t\t\"Keyboard layout:\",\n\t\t\t\tdiv({class: \"selectContainer\", style: \"width: 50%; margin-left: 1em;\"}, this._keyboardLayout),\n\t\t\t),\n\t\t\tthis._keyboardLayoutPreview,\n\t\t\tp(\"When not recording, you can use the computer keyboard either for shortcuts (like C and V for copy and paste) or for performing notes, depending on this mode:\"),\n\t\t\tlabel({style: \"display: flex; margin-top: 0.5em; margin-bottom: 0.5em; flex-direction: row; align-items: center; height: 2em; justify-content: center;\"},\n\t\t\t\tdiv({class: \"selectContainer\", style: \"width: 50%;\"}, this._keyboardMode),\n\t\t\t),\n\t\t\tp(\"Performing music takes practice! Try slowing the tempo and using this metronome to help you keep a rhythm.\"),\n\t\t\tlabel({style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: center;\"},\n\t\t\t\t\"Hear metronome while recording:\",\n\t\t\t\tthis._metronomeWhileRecording,\n\t\t\t),\n\t\t\tlabel({style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: center;\"},\n\t\t\t\t\"Count-in 1 bar of metronome before recording:\",\n\t\t\t\tthis._metronomeCountIn,\n\t\t\t),\n\t\t\tp(\"If you have a \", a({href: \"https://caniuse.com/midi\", target: \"_blank\"}, \"compatible browser\"), \" on a device connected to a MIDI keyboard, you can use it to perform notes in JummBox! (Or you could buy \", a({href: \"https://imitone.com/\", target: \"_blank\"}, \"Imitone\"), \" or \", a({href: \"https://vochlea.com/\", target: \"_blank\"}, \"Dubler\"), \" to hum notes into a microphone while wearing headphones!)\"),\n\t\t\tlabel({style: \"display: flex; flex-direction: row; align-items: center; margin-top: 0.5em; height: 2em; justify-content: center;\"},\n\t\t\t\t\"Enable MIDI performance:\",\n\t\t\t\tthis._enableMidi,\n\t\t\t),\n\t\t\tp(\"The range of pitches available to play via your computer keyboard is affected by the octave scrollbar of the currently selected channel.\"),\n\t\t\tp(\"If you set the channel offset below to 'before' or 'after', notes below the middle octave in the view will be 'bass' notes, and placed in the channel before or after the viewed one. Using this, you can play bass and lead at the same time!\"),\n\t\t\tlabel({style: \"display: flex; flex-direction: row; align-items: center; margin-top: 0.5em; margin-bottom: 0.5em; height: 2em; justify-content: center;\"},\n\t\t\t\t\"Bass Offset:\",\n\t\t\t\tdiv({class: \"selectContainer\", style: \"width: 50%; margin-left: 1em;\"}, this._bassOffset),\n\t\t\t),\n\t\t\tp(\"Once you enable the setting, the keyboard layout above will darken to denote the new bass notes. The notes will be recorded with independent timing and this works with MIDI devices, too. Be aware that the octave offset of both used channels will impact how high/low the bass/lead are relative to one another.\"),\n\t\t\tp(\"Recorded notes often overlap such that one note ends after the next note already started. In JummBox, these notes get split into multiple notes which may sound different when re-played than they did when you were recording. To fix the sound, you can either manually clean up the notes in the pattern editor, or you could try enabling the \\\"transition type\\\" effect on the instrument and setting it to \\\"continue\\\".\"),\n\t\t\tdiv({style: `width: 100%; height: 80px; background: linear-gradient(rgba(0,0,0,0), ${ColorConfig.editorBackground}); position: sticky; bottom: 0; pointer-events: none;`}),\n\t\t),\n\t\tdiv({style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\"},\n\t\t\tthis._okayButton,\n\t\t),\n\t\tthis._cancelButton,\n\t);\n\t\n\tconstructor(private _doc: SongDocument) {\n\t\tthis._keyboardMode.value = this._doc.prefs.pressControlForShortcuts ? \"pressControlForShortcuts\" : \"useCapsLockForNotes\";\n\t\tthis._keyboardLayout.value = this._doc.prefs.keyboardLayout;\n\t\tthis._bassOffset.value = String(this._doc.prefs.bassOffset);\n\t\tthis._enableMidi.checked = this._doc.prefs.enableMidi;\n\t\tthis._showRecordButton.checked = this._doc.prefs.showRecordButton;\n\t\tthis._snapRecordedNotesToRhythm.checked = this._doc.prefs.snapRecordedNotesToRhythm;\n\t\tthis._ignorePerformedNotesNotInScale.checked = this._doc.prefs.ignorePerformedNotesNotInScale;\n\t\tthis._metronomeCountIn.checked = this._doc.prefs.metronomeCountIn;\n\t\tthis._metronomeWhileRecording.checked = this._doc.prefs.metronomeWhileRecording;\n\t\t\n\t\tsetTimeout(()=>this._showRecordButton.focus());\n\t\t\n\t\tthis._okayButton.addEventListener(\"click\", this._confirm);\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\n\t\tthis.container.addEventListener(\"keydown\", this._whenKeyPressed);\n\t\t\n\t\tthis._renderKeyboardLayoutPreview();\n\t\tthis._keyboardLayout.addEventListener(\"change\", this._renderKeyboardLayoutPreview);\n\t\tthis._bassOffset.addEventListener(\"change\", this._renderKeyboardLayoutPreview);\n\t}\n\t\n\tprivate _close = (): void => { \n\t\tthis._doc.undo();\n\t}\n\t\n\tpublic cleanUp = (): void => { \n\t\tthis._okayButton.removeEventListener(\"click\", this._confirm);\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\n\t\tthis.container.removeEventListener(\"keydown\", this._whenKeyPressed);\n\t}\n\t\n\tprivate _whenKeyPressed = (event: KeyboardEvent): void => {\n\t\tif ((<Element> event.target).tagName != \"BUTTON\" && event.keyCode == 13) { // Enter key\n\t\t\tthis._confirm();\n\t\t}\n\t}\n\t\n\tprivate _confirm = (): void => { \n\t\tthis._doc.prefs.pressControlForShortcuts = (this._keyboardMode.value == \"pressControlForShortcuts\");\n\t\tthis._doc.prefs.keyboardLayout = this._keyboardLayout.value;\n\t\tthis._doc.prefs.bassOffset = Number(this._bassOffset.value);\n\t\tthis._doc.prefs.enableMidi = this._enableMidi.checked;\n\t\tthis._doc.prefs.showRecordButton = this._showRecordButton.checked;\n\t\tthis._doc.prefs.snapRecordedNotesToRhythm = this._snapRecordedNotesToRhythm.checked;\n\t\tthis._doc.prefs.ignorePerformedNotesNotInScale = this._ignorePerformedNotesNotInScale.checked;\n\t\tthis._doc.prefs.metronomeCountIn = this._metronomeCountIn.checked;\n\t\tthis._doc.prefs.metronomeWhileRecording = this._metronomeWhileRecording.checked;\n\t\tthis._doc.prefs.save();\n\t\tthis._close();\n\t}\n\t\n\tprivate _renderKeyboardLayoutPreview = (): void => {\n\t\twhile (this._keyboardLayoutPreview.firstChild) {\n\t\t\tthis._keyboardLayoutPreview.removeChild(this._keyboardLayoutPreview.firstChild);\n\t\t}\n\t\tconst rowLengths: number[] = [12, 12, 11, 10];\n\t\tconst scale: ReadonlyArray<boolean> = Config.scales[this._doc.song.scale].flags;\n\t\tfor (let rowIndex: number = 0; rowIndex < 4; rowIndex++) {\n\t\t\tconst row: HTMLDivElement = div({style: \"display: flex;\"});\n\t\t\tthis._keyboardLayoutPreview.appendChild(row);\n\t\t\tconst spacer: HTMLDivElement = div({style: \"width: \" + (rowIndex * 12) + \"px; height: 20px; flex-shrink: 0;\"});\n\t\t\trow.appendChild(spacer);\n\t\t\tfor (let colIndex: number = 0; colIndex < rowLengths[rowIndex]; colIndex++) {\n\t\t\t\tconst key: HTMLDivElement = div({style: `width: 20px; height: 20px; margin: 0 2px; box-sizing: border-box; flex-shrink: 0; display: flex; justify-content: center; align-items: center;`});\n\t\t\t\trow.appendChild(key);\n\t\t\t\tconst pitch: number | null = KeyboardLayout.keyPosToPitch(this._doc, colIndex, 3 - rowIndex, this._keyboardLayout.value);\n\t\t\t\tif (pitch != null) {\n\t\t\t\t\tconst scalePitch: number = pitch % 12;\n\t\t\t\t\tif (scale[scalePitch]) {\n\t\t\t\t\t\tif (scalePitch == 0) {\n\t\t\t\t\t\t\tkey.style.background = ColorConfig.tonic;\n\t\t\t\t\t\t} else if (scalePitch == 7 && this._doc.prefs.showFifth) {\n\t\t\t\t\t\t\tkey.style.background = ColorConfig.fifthNote;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tkey.style.background = ColorConfig.pitchBackground;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tkey.style.border = \"2px solid \" + ColorConfig.pitchBackground;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (this._bassOffset.selectedIndex != 0 && pitch <= Piano.getBassCutoffPitch(this._doc)) {\n\t\t\t\t\t\tkey.style.setProperty(\"filter\", \"hue-rotate(60deg) brightness(0.5)\");\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tkey.style.setProperty(\"filter\", \"\");\n\t\t\t\t\t}\n\n\t\t\t\t\tconst pitchNameIndex: number = (scalePitch + Config.keys[this._doc.song.key].basePitch) % Config.pitchesPerOctave;\n\t\t\t\t\tkey.textContent = Piano.getPitchName(pitchNameIndex, scalePitch, Math.floor(pitch / 12));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nimport { Config } from \"../synth/SynthConfig\";\nimport { SpectrumWave, Instrument } from \"../synth/synth\";\nimport { SongDocument } from \"./SongDocument\";\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\nimport { ColorConfig } from \"./ColorConfig\";\nimport { ChangeSpectrum } from \"./changes\";\nimport { prettyNumber } from \"./EditorConfig\";\n\nexport class SpectrumEditor {\n\tprivate readonly _editorWidth: number = 120;\n\tprivate readonly _editorHeight: number = 26;\n\t\tprivate readonly _fill: SVGPathElement = SVG.path({fill: ColorConfig.uiWidgetBackground, \"pointer-events\": \"none\"});\n\t\tprivate readonly _octaves: SVGSVGElement = SVG.svg({\"pointer-events\": \"none\"});\n\t\tprivate readonly _fifths: SVGSVGElement = SVG.svg({\"pointer-events\": \"none\"});\n\t\tprivate readonly _curve: SVGPathElement = SVG.path({fill: \"none\", stroke: \"currentColor\", \"stroke-width\": 2, \"pointer-events\": \"none\"});\n\t\tprivate readonly _arrow: SVGPathElement = SVG.path({fill: \"currentColor\", \"pointer-events\": \"none\"});\n\t\tprivate readonly _svg: SVGSVGElement = SVG.svg({style: `background-color: ${ColorConfig.editorBackground}; touch-action: none; cursor: crosshair;`, width: \"100%\", height: \"100%\", viewBox: \"0 0 \"+this._editorWidth+\" \"+this._editorHeight, preserveAspectRatio: \"none\"},\n\t\tthis._fill,\n\t\tthis._octaves,\n\t\tthis._fifths,\n\t\tthis._curve,\n\t\tthis._arrow,\n\t);\n\t\t\n\tpublic readonly container: HTMLElement = HTML.div({class: \"spectrum\", style: \"height: 100%;\"}, this._svg);\n\t\t\n\tprivate _mouseX: number = 0;\n\tprivate _mouseY: number = 0;\n\tprivate _freqPrev: number = 0;\n\tprivate _ampPrev: number = 0;\n\tprivate _mouseDown: boolean = false;\n\tprivate _change: ChangeSpectrum | null = null;\n\tprivate _renderedPath: String = \"\";\n\tprivate _renderedFifths: boolean = true;\n\t\t\n\tconstructor(private _doc: SongDocument, private _spectrumIndex: number | null) {\n\t\tfor (let i: number = 0; i < Config.spectrumControlPoints; i += Config.spectrumControlPointsPerOctave) {\n\t\t\t\tthis._octaves.appendChild(SVG.rect({fill: ColorConfig.tonic, x: (i+1) * this._editorWidth / (Config.spectrumControlPoints + 2) - 1, y: 0, width: 2, height: this._editorHeight}));\n\t\t}\n\t\tfor (let i: number = 4; i <= Config.spectrumControlPoints; i += Config.spectrumControlPointsPerOctave) {\n\t\t\t\tthis._fifths.appendChild(SVG.rect({fill: ColorConfig.fifthNote, x: (i+1) * this._editorWidth / (Config.spectrumControlPoints + 2) - 1, y: 0, width: 2, height: this._editorHeight}));\n\t\t}\n\t\t\t\n\t\tthis.container.addEventListener(\"mousedown\", this._whenMousePressed);\n\t\tdocument.addEventListener(\"mousemove\", this._whenMouseMoved);\n\t\tdocument.addEventListener(\"mouseup\", this._whenCursorReleased);\n\t\t\t\n\t\tthis.container.addEventListener(\"touchstart\", this._whenTouchPressed);\n\t\tthis.container.addEventListener(\"touchmove\", this._whenTouchMoved);\n\t\tthis.container.addEventListener(\"touchend\", this._whenCursorReleased);\n\t\tthis.container.addEventListener(\"touchcancel\", this._whenCursorReleased);\n\t}\n\t\t\n\tprivate _xToFreq(x: number): number {\n\t\treturn (Config.spectrumControlPoints + 2) * x / this._editorWidth - 1;\n\t}\n\t\t\n\tprivate _yToAmp(y: number): number {\n\t\treturn Config.spectrumMax * (1 - (y - 1) / (this._editorHeight - 2));\n\t}\n\t\t\n\tprivate _whenMousePressed = (event: MouseEvent): void => {\n\t\tevent.preventDefault();\n\t\tthis._mouseDown = true;\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\n\t\tthis._mouseX = ((event.clientX || event.pageX) - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\n\t\t    \n\t\tthis._freqPrev = this._xToFreq(this._mouseX);\n\t\tthis._ampPrev = this._yToAmp(this._mouseY);\n\t\tthis._whenCursorMoved();\n\t}\n\t\t\n\tprivate _whenTouchPressed = (event: TouchEvent): void => {\n\t\tevent.preventDefault();\n\t\tthis._mouseDown = true;\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\n\t\tthis._mouseX = (event.touches[0].clientX - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\n\t\t    \n\t\tthis._freqPrev = this._xToFreq(this._mouseX);\n\t\tthis._ampPrev = this._yToAmp(this._mouseY);\n\t\tthis._whenCursorMoved();\n\t}\n\t\t\n\tprivate _whenMouseMoved = (event: MouseEvent): void => {\n\t\tif (this.container.offsetParent == null) return;\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\n\t\tthis._mouseX = ((event.clientX || event.pageX) - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\n\t\tthis._whenCursorMoved();\n\t}\n\t\t\n\tprivate _whenTouchMoved = (event: TouchEvent): void => {\n\t\tif (this.container.offsetParent == null) return;\n\t\tif (!this._mouseDown) return;\n\t\tevent.preventDefault();\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\n\t\tthis._mouseX = (event.touches[0].clientX - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\n\t\tthis._whenCursorMoved();\n\t}\n\t\t\n\tprivate _whenCursorMoved(): void {\n\t\tif (this._mouseDown) {\n\t\t\tconst freq: number = this._xToFreq(this._mouseX);\n\t\t\tconst amp: number = this._yToAmp(this._mouseY);\n\t\t\t\t\n\t\t\tconst instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\n\t\t\tconst spectrumWave: SpectrumWave = (this._spectrumIndex == null) ? instrument.spectrumWave : instrument.drumsetSpectrumWaves[this._spectrumIndex];\n\t\t\t\t\n\t\t\tif (freq != this._freqPrev) {\n\t\t\t\tconst slope: number = (amp - this._ampPrev) / (freq - this._freqPrev);\n\t\t\t\tconst offset: number = this._ampPrev - this._freqPrev * slope;\n\t\t\t\tconst lowerFreq: number = Math.ceil(Math.min(this._freqPrev, freq));\n\t\t\t\tconst upperFreq: number = Math.floor(Math.max(this._freqPrev, freq));\n\t\t\t\tfor (let i: number = lowerFreq; i <= upperFreq; i++) {\n\t\t\t\t\tif (i < 0 || i >= Config.spectrumControlPoints) continue;\n\t\t\t\t\tspectrumWave.spectrum[i] = Math.max(0, Math.min(Config.spectrumMax, Math.round(i * slope + offset)));\n\t\t\t\t}\n\t\t\t}\n\t\t\t\t\n\t\t\tspectrumWave.spectrum[Math.max(0, Math.min(Config.spectrumControlPoints - 1, Math.round(freq)))] = Math.max(0, Math.min(Config.spectrumMax, Math.round(amp)));\n\t\t\t\t\n\t\t\tthis._freqPrev = freq;\n\t\t\tthis._ampPrev = amp;\n\t\t\t\t\n\t\t\tthis._change = new ChangeSpectrum(this._doc, instrument, spectrumWave);\n\t\t\tthis._doc.setProspectiveChange(this._change);\n\t\t}\n\t}\n\t\t\n\tprivate _whenCursorReleased = (event: Event): void => {\n\t\tif (this._mouseDown) {\n\t\t\tthis._doc.record(this._change!);\n\t\t\tthis._change = null;\n\t\t}\n\t\tthis._mouseDown = false;\n\t}\n\t\t\n\tpublic render(): void {\n\t\tconst instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\n\t\tconst spectrumWave: SpectrumWave = (this._spectrumIndex == null) ? instrument.spectrumWave : instrument.drumsetSpectrumWaves[this._spectrumIndex];\n\t\tconst controlPointToHeight = (point: number): number => {\n\t\t\treturn (1 - (point / Config.spectrumMax)) * (this._editorHeight - 1) + 1;\n\t\t}\n\t\t\t\n\t\tlet lastValue: number = 0;\n\t\tlet path: string = \"M 0 \" + prettyNumber(this._editorHeight) + \" \";\n\t\tfor (let i: number = 0; i < Config.spectrumControlPoints; i++) {\n\t\t\tlet nextValue: number = spectrumWave.spectrum[i];\n\t\t\tif (lastValue != 0 || nextValue != 0) {\n\t\t\t\tpath += \"L \";\n\t\t\t} else {\n\t\t\t\tpath += \"M \";\n\t\t\t}\n\t\t\tpath += prettyNumber((i + 1) * this._editorWidth / (Config.spectrumControlPoints + 2)) + \" \" + prettyNumber(controlPointToHeight(nextValue)) + \" \";\n\t\t\tlastValue = nextValue;\n\t\t}\n\t\t\t\n\t\tconst lastHeight: number = controlPointToHeight(lastValue);\n\t\tif (lastValue > 0) {\n\t\t\tpath += \"L \" + (this._editorWidth - 1) + \" \" + prettyNumber(lastHeight) + \" \";\n\t\t}\n\t\t\t\n\t\tif (this._renderedPath != path) {\n\t\t\tthis._renderedPath = path;\n\t\t\tthis._curve.setAttribute(\"d\", path);\n\t\t\tthis._fill.setAttribute(\"d\", path + \"L \" + this._editorWidth + \" \" + prettyNumber(lastHeight) + \" L \" + this._editorWidth + \" \" + prettyNumber(this._editorHeight) + \" L 0 \" + prettyNumber(this._editorHeight) + \" z \");\n\t\t\t\t\n\t\t\tthis._arrow.setAttribute(\"d\", \"M \" + this._editorWidth + \" \" + prettyNumber(lastHeight) + \" L \" + (this._editorWidth - 4) + \" \" + prettyNumber(lastHeight - 4) + \" L \" + (this._editorWidth - 4) + \" \" + prettyNumber(lastHeight + 4) + \" z\");\n\t\t\tthis._arrow.style.display = (lastValue > 0) ? \"\" : \"none\";\n\t\t}\n\t\tif (this._renderedFifths != this._doc.prefs.showFifth) {\n\t\t\tthis._renderedFifths = this._doc.prefs.showFifth;\n\t\t\tthis._fifths.style.display = this._doc.prefs.showFifth ? \"\" : \"none\";\n\t\t}\n\t}\n}\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\n\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\nimport { Prompt } from \"./Prompt\";\nimport { SongDocument } from \"./SongDocument\";\nimport { ColorConfig } from \"./ColorConfig\";\n\n//namespace beepbox {\nconst { button, div, h2, select, option } = HTML;\n\nexport class ThemePrompt implements Prompt {\n\tprivate readonly _themeSelect: HTMLSelectElement = select({ style: \"width: 100%;\" },\n\t\toption({ value: \"dark classic\" }, \"BeepBox Dark\"),\n\t\toption({ value: \"light classic\" }, \"BeepBox Light\"),\n\t\toption({ value: \"dark competition\" }, \"BeepBox Competition Dark\"),\n\t\toption({ value: \"jummbox classic\" }, \"JummBox Dark\"),\n\t\t// option({ value: \"jummbox light\" }, \"JummBox Light\"), // It's not ready to see the world yet...\n\t\toption({ value: \"forest\" }, \"Forest\"),\n\t\toption({ value: \"canyon\" }, \"Canyon\"),\n\t\toption({ value: \"midnight\" }, \"Midnight\"),\n\t\toption({ value: \"beachcombing\" }, \"Beachcombing\"),\n\t\toption({ value: \"violet verdant\" }, \"Violet Verdant\"),\n\t\toption({ value: \"sunset\" }, \"Sunset\"),\n\t\toption({ value: \"autumn\" }, \"Autumn\"),\n\t\toption({ value: \"fruit\" }, \"Shadowfruit\"),\n\t\toption({ value: \"toxic\" }, \"Toxic\"),\n\t\toption({ value: \"roe\" }, \"Roe\"),\n\t\toption({ value: \"moonlight\" }, \"Moonlight\"),\n\t\toption({ value: \"portal\" }, \"Portal\"),\n\t\toption({ value: \"fusion\" }, \"Fusion\"),\n\t\toption({ value: \"inverse\" }, \"Inverse\"),\n\t\toption({ value: \"nebula\" }, \"Nebula\"),\n\t\toption({ value: \"roe light\" }, \"Roe Light\"),\n\t\toption({ value: \"energized\" }, \"Energized\"),\n\t\toption({ value: \"neapolitan\" }, \"Neapolitan\"),\n\t\toption({ value: \"poly\" }, \"Poly\"),\n\t\toption({ value: \"blutonium\" }, \"Blutonium\"),\n\t);\n\tprivate readonly _cancelButton: HTMLButtonElement = button({ class: \"cancelButton\" });\n\tprivate readonly _okayButton: HTMLButtonElement = button({ class: \"okayButton\", style: \"width:45%;\" }, \"Okay\");\n\n\tpublic readonly container: HTMLDivElement = div({ class: \"prompt noSelection\", style: \"width: 220px;\" },\n\t\th2(\"Set Theme\"),\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\n\t\t\tdiv({ class: \"selectContainer\", style: \"width: 100%;\" }, this._themeSelect),\n\t\t),\n\t\tdiv({ style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\" },\n\t\t\tthis._okayButton,\n\t\t),\n\t\tthis._cancelButton,\n\t);\n\tprivate readonly lastTheme: string | null = window.localStorage.getItem(\"colorTheme\")\n\n\tconstructor(private _doc: SongDocument) {\n\t\tif (this.lastTheme != null) {\n\t\t\tthis._themeSelect.value = this.lastTheme;\n\t\t}\n\t\tthis._okayButton.addEventListener(\"click\", this._saveChanges);\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\n\t\tthis.container.addEventListener(\"keydown\", this._whenKeyPressed);\n\t\tthis._themeSelect.addEventListener(\"change\", this._previewTheme);\n\t}\n\n\tprivate _close = (): void => {\n\t\tif (this.lastTheme != null) {\n\t\t\tColorConfig.setTheme(this.lastTheme);\n\t\t} else {\n\t\t\tColorConfig.setTheme(\"jummbox classic\");\n\t\t}\n\t\tthis._doc.undo();\n\t}\n\n\tpublic cleanUp = (): void => {\n\t\tthis._okayButton.removeEventListener(\"click\", this._saveChanges);\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\n\t\tthis.container.removeEventListener(\"keydown\", this._whenKeyPressed);\n\t}\n\n\tprivate _whenKeyPressed = (event: KeyboardEvent): void => {\n\t\tif ((<Element>event.target).tagName != \"BUTTON\" && event.keyCode == 13) { // Enter key\n\t\t\tthis._saveChanges();\n\t\t}\n\t}\n\n\tprivate _saveChanges = (): void => {\n\t\twindow.localStorage.setItem(\"colorTheme\", this._themeSelect.value);\n\t\tthis._doc.prompt = null;\n\t\tthis._doc.prefs.colorTheme = this._themeSelect.value;\n\t\tthis._doc.undo();\n\t}\n\n\tprivate _previewTheme = (): void => {\n\t\tColorConfig.setTheme(this._themeSelect.value);\n\t\tthis._doc.notifier.changed();\n\t}\n}\n//}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\nimport { Prompt } from \"./Prompt\";\nimport { SongDocument } from \"./SongDocument\";\nimport { Config } from \"../synth/SynthConfig\";\n\nconst { button, div, p, h2, h3 } = HTML;\n\nexport class TipPrompt implements Prompt {\n\t\tprivate readonly _closeButton: HTMLButtonElement = button({class: \"cancelButton\"});\n\t\t\n\tpublic readonly container: HTMLDivElement;\n\t\t\n\tconstructor(private _doc: SongDocument, type: string) {\n\t\tlet message: HTMLDivElement;\n\t\t\t\n\t\tswitch (type) {\n\t\t\tcase \"scale\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Scale\"),\n\t\t\t\t\tp(\"This setting limits the available pitches for adding notes. You may think that there's no point in limiting your choices, but the set of pitches you use has a strong influence on the mood and feel of your song, and these scales serve as guides to help you choose appropriate pitches. Don't worry, you can change the scale at any time, so you're not locked into it. Try making little melodies using all the available pitches of a scale to get a sense for how it sounds.\"),\n\t\t\t\t\tp(\"The most common scales are major and minor. Assuming your song uses all pitches in the scale and especially \\\"tonic\\\" pitches (the purple rows in the pattern editor) then major scales tend to sound more playful or optimistic, whereas minor scales sound more serious or sad.\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"key\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Song Key\"),\n\t\t\t\t\tp(\"This setting can shift the frequency of every note in your entire song up or down, keeping the \\\"tonic\\\" pitches (the brown rows in the pattern editor) aligned with the selected \\\"key\\\" pitch.\"),\n\t\t\t\t\tp(\"If you've already placed some notes but they don't emphasize \\\"tonic\\\" pitches then the selected key isn't very meaningful. You can select the \\\"Detect Key\\\" option in the key menu to automatically align the most emphasized notes with \\\"tonic\\\" pitches.\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"tempo\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Song Tempo\"),\n\t\t\t\t\tp(\"This setting controls the speed of your song, measured in beats-per-minute. A \\\"beat\\\" is the duration of the little gray rectangles in the pattern editor. (In conventional music notation, a \\\"quarter note\\\" is usually equivalent to \\\"beat\\\".)\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"reverb\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Reverb\"),\n\t\t\t\t\tp(\"Reverb is like a continuous echo effect. A little bit helps instruments sound more natural. Adding a lot of reverb can add sense of depth or mystery, but too much reverb can kinda \\\"smear\\\" sounds so that it's harder to distinguish notes or instruments, especially for lower \\\"bass\\\" notes.\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"rhythm\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Rhythm\"),\n\t\t\t\t\tp(\"This setting determines how beats are divided. The pattern editor helps you align notes to fractions of a beat based on this setting.\"),\n\t\t\t\t\tp(\"If you've already placed some notes but they don't align with the selected rhythm, you can select the \\\"Snap Notes To Rhythm\\\" option in the rhythm menu to force the notes in the currently selected pattern(s) to align with the selected rhythm.\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"instrumentIndex\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Instrument Number\"),\n\t\t\t\t\tp(\"In the \\\"Channel Settings\\\" option from JummBox's \\\"Edit\\\" menu, there are a few ways to enable multiple instruments per channel.\"),\n\t\t\t\t\tp(\"First, you could enable multiple simultaneous instruments per channel. All of the channel's instruments will play all of the notes in the channel at the same time, and you can click an instrument number to view and edit its settings.\"),\n\t\t\t\t\tp(\"Second, you could enable different instruments per pattern. Only one of the instruments will play at any given time, but you can click the instrument number to change which instrument is used for the currently selected pattern(s).\"),\n\t\t\t\t\tp(\"Finally, you can enable them both, in which case you can click an instrument number once to view it, and again to toggle whether the instrument is used for the currently selected pattern(s).\"),\n\t\t\t\t\tp(\"Either way, you can click the + button to add more instruments to a channel, and you can press shift and a number key on your keyboard to select an instrument as if you had clicked the corresponding button here.\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"instrumentVolume\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Instrument Volume\"),\n\t\t\t\t\tp(\"This setting controls the volume of the selected instrument without affecting the volume of the other instruments. This allows you to balance the loudness of each instrument relative to each other.\"),\n\t\t\t\t\tp(\"Please be careful when using volume settings above 0. This indicates amplification and too much of that can trip the audio limiter built into this tool. This can lead to your song sounding muffled if overused. But when used carefully, amplification can be a powerful tool!\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"pan\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Instrument Panning\"),\n\t\t\t\t\tp(\"If you're listening through headphones or some other stereo sound system, this controls the position of the instrument and where the sound is coming from, ranging from left to right.\"),\n\t\t\t\t\tp(\"As a suggestion, composers often put lead melodies, drums, and basses in the center, and spread other instruments toward either side. If too many instruments seem like they're coming from the same place, it can feel crowded and harder to distinguish individual sounds, especially if they cover a similar pitch range.\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"panDelay\":\n\t\t\t\t{\n\t\t\t\t\tmessage = div(\n\t\t\t\t\t\th2(\"Stereo Delay\"),\n\t\t\t\t\t\tp(\"When panning, a slight delay is often added between the left and right ear to help make a sound feel more 'directional'. For example, in the real world your left ear will hear a sound coming from the left just slightly before the right ear.\"),\n\t\t\t\t\t\tp(\"This setting controls how much delay is added. When this is set to minimum, panning only affects the volume of the left/right ear without changing the delay. This can help to get a more 'uniform' feeling sound, which can be desirable for making 8-bit music.\")\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"arpeggioSpeed\":\n\t\t\t\t{\n\t\t\t\t\tmessage = div(\n\t\t\t\t\t\th2(\"Arpeggio Speed\"),\n\t\t\t\t\t\tp(\"This setting affects how fast your chord will 'arpeggiate', or cycle between notes. With a fast arpeggio speed it will sound rapid-fire, with a slow speed you can hear each note one after another.\")\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"twoNoteArpeggio\":\n\t\t\t\t{\n\t\t\t\t\tmessage = div(\n\t\t\t\t\t\th2(\"Faster Two-Note Arpeggio\"),\n\t\t\t\t\t\tp(\"This setting makes arpeggios with only two notes in them happen twice as fast. Arpeggios with more notes in them are unaffected.\")\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"detune\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Detune\"),\n\t\t\t\t\tp(\"This setting can be used to finely control the pitch of your instrument. It is in units of 'cents', 100 of which equal a pitch shift of one semitone.\"),\n\t\t\t\t\tp(\"Careful - you can quickly get very dissonant sounding songs by using this setting.\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"instrumentType\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Instrument Type\"),\n\t\t\t\t\tp(\"JummBox comes with many instrument presets, try them out! You can also create your own custom instruments!\"),\n\t\t\t\t\tp(\"There are also buttons for copying and pasting instruments at the bottom of the instrument settings tab, and for generating random instruments in the \\\"Randomize\\\" category in the instrument type menu.\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"eqFilter\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"EQ Filter\"),\n\t\t\t\t\tp(\"Filters are a way of emphasizing or diminishing different parts of a sound. Musical notes have a fundamental (base) frequency, but the sound of a musical note also has parts at higher frequencies and filters can adjust the volume of each of these parts based on their frequency.\"),\n\t\t\t\t\tp(\"Click in the filter editor to insert, delete, or drag a filter control point. The horizontal position of the point determines which frequencies it affects, and the vertical position determines how the volume is affected at that frequency.\"),\n\t\t\t\t\tp(\"Insert a new point on the left side of the filter editor to add a \\\"high-pass\\\" filter point, which additionally reduces the volume of lower frequencies, or insert a new point on the right side to add a \\\"low-pass\\\" filter point which reduces the volume of higher frequencies.\"),\n\t\t\t\t\tp(\"You can also enable a \\\"Note Filter\\\" as an effect. EQ and note filters are mostly the same, but have different purposes. EQ filters are for overall adjustments, whereas note filters are for dynamic control and can be moved with envelopes. Note filters also change how the distortion effect sounds.\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"noteFilter\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Note Filter\"),\n\t\t\t\t\tp(\"Note filters are mostly the same as EQ filters, but have a different purpose. EQ filters are for overall adjustments, whereas note filters are for dynamic control and can be moved with envelopes. Note filters also change how the distortion effect sounds.\"),\n\t\t\t\t\tp(\"Filters are a way of emphasizing or diminishing different parts of a sound. Musical notes have a fundamental (base) frequency, but the sound of a musical note also has parts at higher frequencies and filters can adjust the volume of each of these parts based on their frequency.\"),\n\t\t\t\t\tp(\"Click in the filter editor to insert, delete, or drag a filter control point. The horizontal position of the point determines which frequencies it affects, and the vertical position determines how the volume is affected at that frequency.\"),\n\t\t\t\t\tp(\"Insert a new point on the left side of the filter editor to add a \\\"high-pass\\\" filter point, which additionally reduces the volume of lower frequencies, or insert a new point on the right side to add a \\\"low-pass\\\" filter point which reduces the volume of higher frequencies.\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"fadeInOut\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Fade In/Out\"),\n\t\t\t\t\tp(\"This setting controls how long it takes for notes to reach full volume at the beginning or decay to silence at the end.\"),\n\t\t\t\t\tp(\"An instant fade-in sounds like instruments that are played by hitting or plucking, whereas slower fade-ins sound like instruments that are played by blowing air.\"),\n\t\t\t\t\tp(\"You can also make the fade-out start before the note ends to leave a gap before the next note starts, or after the note ends to allow the sound of the end of the note to overlap with the start of the next note.\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"transition\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Transition\"),\n\t\t\t\t\tp(\"Usually, when one note ends at the same time another begins, the old note will fade out and the new note will fade in based on the fade in/out settings, but this setting can override that, connecting the end of one note to the beginning of the next.\"),\n\t\t\t\t\tp(\"The \\\"interrupt\\\" transition makes the wave suddenly change from the old note's frequency to the new note's frequency without any fading, but still restarts envelopes at the beginning of the new note. The \\\"continue\\\" transition is similar but it doesn't even restart envelopes, and can be used to make each of the notes in a chord start or stop at different times!\"),\n\t\t\t\t\tp(\"The \\\"slide\\\" transition makes the pitch shift quickly but not instantaneously from the old note's frequency to the new note's frequency, and softly restarts envelopes. The \\\"slide in pattern\\\" transition is the same except it doesn't connect the last note in a pattern to the first note in the next pattern.\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"chipWave\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Chip Wave\"),\n\t\t\t\t\tp(\"JummBox comes with some sound waves based on classic electronic sound chips, as well as several unique waves. This is the basic source of the sound of the instrument, which is modified by the other instrument settings.\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"chipNoise\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Noise\"),\n\t\t\t\t\tp(\"JummBox comes with several basic noise sounds. These do not have any distinct musical pitch, and can be used like drums to create beats and emphasize your song's rhythm.\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"supersawDynamism\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Supersaw Dynamism\"),\n\t\t\t\t\tp(\"A supersaw is a combination of many sawtooth waves, and this setting controls the contribution of extra sawtooth waves.\"),\n\t\t\t\t\tp(\"At the low end of the slider, only the first wave is contributing to the sound, which sounds like an ordinary static sawtooth wave. At the maximum setting, all of the waves are contributing equally and the resulting tone can randomly shift depending on how the waves line up with each other, similar to the \\\"unison\\\" and \\\"chorus\\\" settings.\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"supersawSpread\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Supersaw Spread\"),\n\t\t\t\t\tp(\"A supersaw is a combination of many sawtooth waves, and this setting controls the distance between their frequencies. The dynamism setting must be used for the extra waves to have any effect.\"),\n\t\t\t\t\tp(\"At the low end of the spread slider, all of the voices have the same frequency but random phase, resulting in a different sound every time a note starts. In the middle, the waves all have slightly different frequencies that shift in and out of phase over time similar to the \\\"unison\\\" and \\\"chorus\\\" settings, creating a classic supersaw sound. At the extreme end, the frequencies are so far apart they sound dissonant.\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"supersawShape\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Supersaw Shape\"),\n\t\t\t\t\tp(\"This supersaw instrument includes an option to change the shape of the waves from sawtooth waves to pulse waves. Use this setting to morph between the two shapes.\"),\n\t\t\t\t\tp(\"When a pulse wave shape is used, you can also control the pulse width with a separate setting.\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"pulseWidth\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Pulse Wave Width\"),\n\t\t\t\t\tp(\"This setting controls the shape and sound of a pulse wave. At the minimum width, it sounds light and buzzy. At the maximum width, it is shaped like a classic square wave.\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"unison\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Unison\"),\n\t\t\t\t\tp(\"This instrument can play two identical waves at different frequencies. When two waves play at slightly different frequencies, they move in and out of phase with each other over time as different parts of the waves line up. This creates a dynamic, shifting sound. Pianos are a common example of this kind of sound, because each piano key strikes multiple strings that are tuned to slightly different frequencies.\"),\n\t\t\t\t\tp(\"The distance between two frequencies is called an \\\"interval\\\", and this setting controls how large it is. If the interval is too wide, then the waves may sound out-of-tune and \\\"dissonant\\\". However, if the interval is even larger, then the two frequencies can even be distinct pitches.\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"chords\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Chords\"),\n\t\t\t\t\tp(\"When multiple different notes occur at the same time, this is called a chord. Chords can be created in JummBox's pattern editor by adding notes above or below another note.\"),\n\t\t\t\t\tp(\"This setting determines how chords are played. The standard option is \\\"simultaneous\\\" which starts playing all of the pitches in a chord at the same instant. The \\\"strum\\\" option is similar, but plays the notes starting at slightly different times. The \\\"arpeggio\\\" option is used in \\\"chiptune\\\" style music and plays a single tone that rapidly alternates between all of the pitches in the chord.\"),\n\t\t\t\t\tp(\"Some JummBox instruments have an option called \\\"custom interval\\\" which uses the chord notes to control the interval between the waves of a single tone. This can create strange sound effects when combined with FM modulators.\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"vibrato\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Vibrato\"),\n\t\t\t\t\tp(\"This setting causes the frequency of a note to wobble slightly. Singers and violinists often use vibrato.\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"vibratoDepth\":\n\t\t\t\t{\n\t\t\t\t\tmessage = div(\n\t\t\t\t\t\th2(\"Vibrato Depth\"),\n\t\t\t\t\t\tp(\"This setting affects the depth of your instrument's vibrato, making the wobbling effect sound stronger or weaker.\")\n\t\t\t\t\t);\n\t\t\t\t} break;\n\t\t\tcase \"vibratoDelay\":\n\t\t\t\t{\n\t\t\t\t\tmessage = div(\n\t\t\t\t\t\th2(\"Vibrato Delay\"),\n\t\t\t\t\t\tp(\"This setting changes when vibrato starts to kick in after a note is played. Vibrato is most common for long held notes and less common in short notes, so this can help you achieve that effect.\")\n\t\t\t\t\t);\n\t\t\t\t} break;\n\t\t\tcase \"vibratoSpeed\":\n\t\t\t\t{\n\t\t\t\t\tmessage = div(\n\t\t\t\t\t\th2(\"Vibrato Speed\"),\n\t\t\t\t\t\tp(\"This setting determines how fast the vibrato's up-and-down wobble effect will happen for your instrument.\")\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"vibratoType\":\n\t\t\t\t{\n\t\t\t\t\tmessage = div(\n\t\t\t\t\t\th2(\"Vibrato Type\"),\n\t\t\t\t\t\tp(\"This determines the way vibrato causes your instrument's pitch to wobble. The normal type is smooth up and down, the shaky type is chaotic.\")\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"algorithm\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"FM Algorithm\"),\n\t\t\t\t\tp('FM Synthesis is a mysterious but powerful technique for crafting sounds, popularized by Yamaha keyboards and the Sega Genesis/Mega Drive. It may seem confusing, but try playing around with the options until you get a feel for it, or check out some of the preset examples!'),\n\t\t\t\t\tp('This FM synthesizer uses up to four waves, numbered 1, 2, 3, and 4. Each wave may have its own frequency and volume.'),\n\t\t\t\t\tp('There are two kinds of waves: \"carrier\" waves play a tone out loud, but \"modulator\" waves distort other waves instead. Wave 1 is always a carrier and plays a tone, but other waves may distort it. The \"Algorithm\" setting determines which waves are modulators, and which other waves those modulators distort. For example, \"1←2\" means that wave 2 modulates wave 1, and wave 1 plays out loud.'),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"feedbackType\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Feedback Type\"),\n\t\t\t\t\tp('Modulators distort in one direction (like 1←2), but you can also use the feedback setting to make any wave distort in the opposite direction (1→2), or even itself (1⟲).'),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"feedbackVolume\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Feedback Distortion\"),\n\t\t\t\t\tp(\"This setting controls the amount of feedback distortion based on the feedback type setting.\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"operatorFrequency\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Operator Frequency\"),\n\t\t\t\t\tp('This setting controls the frequency of an individual FM wave, relative to the fundamental frequency of the note. The multiplier 1× is the same as the fundamental frequency, whereas 2x would be an octave (12 semitones) above it. The frequencies with a \"~\" are slightly detuned and shift in and out of phase over time compared to the other frequencies.'),\n\t\t\t\t\tp('Try different combinations of a \"carrier\" wave and a \"modulator\" wave with different frequencies to get a feel for how they sound together.'),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"operatorVolume\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Operator Volume\"),\n\t\t\t\t\tp(\"This setting controls the volume of \\\"carrier\\\" waves, or the amount of distortion that \\\"modulator\\\" waves apply to other waves.\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"spectrum\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Spectrum\"),\n\t\t\t\t\tp(\"This setting allows you to draw your own noise spectrum! This is good for making drum sounds.\"),\n\t\t\t\t\tp(\"If you only use certain frequencies and a soft fade in/out, it's also possible to make howling wind sounds or even musical wind instruments.\"),\n\t\t\t\t\tp(\"The left side of the spectrum editor controls the noise energy at lower frequencies, and the right side controls higher frequencies.\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"harmonics\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Harmonics\"),\n\t\t\t\t\tp(\"This setting allows you to design your own sound wave! Most musical waves are actually a combination of sine waves at certain frequencies, and this lets you control the volume of each sine wave individually.\"),\n\t\t\t\t\tp(\"The left side of the harmonics editor controls the sine wave volumes at lower frequencies, and the right side controls higher frequencies.\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"effects\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Effects\"),\n\t\t\t\t\tp(\"JummBox has many different kinds of special effects you can add to instruments. You can turn on multiple effects at once, and they can be configured individually. Try them all out!\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"drumsetEnvelope\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Drumset Envelope\"),\n\t\t\t\t\tp(\"This drumset comes with a low-pass filter, and this setting can dynamically change the low-pass filter frequency over time. Each row in the pattern editor can have a different envelope shape.\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"drumsetSpectrum\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Drumset Spectrum\"),\n\t\t\t\t\tp(\"This setting allows you to draw your own noise spectrum! This is good for making drumsets. Each row in the pattern editor gets its own spectrum.\"),\n\t\t\t\t\tp(\"The left side of the spectrum editor controls the noise energy at lower frequencies, and the right side controls higher frequencies.\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"chorus\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Chorus\"),\n\t\t\t\t\tp(\"The chorus effect combines multiple copies of the instrument's sound and adds a bit of vibrato to simulate an ensemble of instruments or voices. Drag the slider to control how much chorus is added.\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"echoSustain\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Echo Volume\"),\n\t\t\t\t\tp(\"The echo effect repeats the instrument's sound after a delay. Each echo is a little bit quieter than the last, and this setting controls how much quieter.\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"echoDelay\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Echo Delay\"),\n\t\t\t\t\tp(\"The echo effect repeats the instrument's sound after a delay, and this setting controls how long the delay is.\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"pitchShift\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Pitch Shift\"),\n\t\t\t\t\tp(\"This setting makes instruments play higher or lower pitches than the ones displayed in the pattern editor. Be careful that you don't confuse yourself!\"),\n\t\t\t\t\tp(\"You can combine this with envelopes to bend pitch over time, or play multiple simultaneous instruments with different pitch shifts for interesting layered sounds.\"),\n\t\t\t\t\tp(\"The intervals created by this setting are in \\\"just intonation\\\" which means they stay in phase with the original pitch instead of shifting in and out of phase over time. If you want the shifting, add the detune effect!\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"detune\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Detune\"),\n\t\t\t\t\tp(\"This setting slightly adjusts the frequency of notes played by the instrument. You can use a little bit to add a pleasing shifting sound similar to the \\\"unison\\\" feature when combined with other instruments. If you use too much, then the instrument may sound unpleasantly out-of-tune.\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"distortion\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Distortion\"),\n\t\t\t\t\tp(\"This is the famous electric guitar effect! However, there are some things to be aware of.\"),\n\t\t\t\t\tp(\"First, most chords don't sound right when combined with heavy distortion. The only chords commonly used with distorted electric guitars are \\\"power chords\\\" which consist of a root note, a \\\"fifth\\\" note above that, and/or any octaves of those two notes.\"),\n\t\t\t\t\tp(\"Second, the distortion sound depends a lot on filtering. In particular, I recommend enabling the note filter effect, and adding both high-pass and low-pass points to the note filter. (Note filters are applied first, then distortion which transforms the sound based on that filtering, then the EQ filter is applied last.)\"),\n\t\t\t\t\tp(\"Finally, I recommend adjusting the fade-out setting to allow the end of each note to overlap a little bit with the beginning of the next, but not too much!\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"bitcrusherQuantization\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Bitcrusher Quantization\"),\n\t\t\t\t\tp(\"This effect makes stuff sounds harsher, artificial, and \\\"low quality\\\", which is great if that's what you're going for!\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"bitcrusherFreq\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Frequency Quantization\"),\n\t\t\t\t\tp(\"The bitcrusher effect comes with an additional frequency quantization effect! This is a fun one to play with, especially when combined with the note filter effect.\"),\n\t\t\t\t\tp(\"Every other notch on this slider is aligned with the currently selected key of the song, and the in-between notches are aligned with the tritones of the key.\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"envelopes\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Envelopes\"),\n\t\t\t\t\tp(\"Envelopes are a way to dynamically adjust various other settings over time, usually based on how long the note lasts. Press the + button to add an envelope, then use the menus below to select which setting to control and the curve of the envelope. Try different combinations to see how they sound!\"),\n\t\t\t\t\tp(\"Most envelope curves restart from the beginning every time a new note plays. The \\\"note size\\\" option is based on the note width as drawn in the pattern editor.\"),\n\t\t\t\t\tp(\"Envelope curves move in the range from 0 to 1 (or vice versa), where 0 means as quiet as possible and 1 is the same as the corresponding position selected in the instrument settings above. If multiple envelopes are targetting the same setting, they are multiplied before applying to the setting.\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"discreteEnvelope\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Use Discrete Envelopes?\"),\n\t\t\t\t\tp(\"Envelopes are usually interpolated, meaning they change continuously and smoothly. This setting, when ticked, makes envelopes not interpolate. It's a small difference, but can be helpful for some chip noises, and it's most noticeable with the 'blip' transitions.\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"envelopeSpeed\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Envelope Speed\"),\n\t\t\t\t\tp(\"This setting controls the speed of ALL envelopes for the instrument. Each envelope 'plays' at a certain speed, and this slider can scale it to play faster or slower. Use this to fine-tune your tremolo or how fast something decays to get just the right effect.\"),\n\t\t\t\t\tp(\"Note that, while this setting is limited in the sense that it controls all envelopes at once, you can still achieve a variety of outcomes by trying combinations of modes of each envelope type, which typically differ only in speed.\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"usedInstrument\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th3(\"'Is this instrument used somewhere else?'\"),\n\t\t\t\t\tp(\"This indicator will light up when the instrument you're currently looking at is used in another place in your song (outside the selection).\"),\n\t\t\t\t\tp(\"This can be useful when you're not sure if you've used the instrument before and making edits carelessly could change other parts of the song.\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"usedPattern\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th3(\"'Is this pattern used somewhere else?'\"),\n\t\t\t\t\tp(\"This indicator will light up when the pattern you're currently looking at is used in another place in your song (outside the selection).\"),\n\t\t\t\t\tp(\"This can be useful when you're not sure if you've used the pattern before and making edits carelessly could change other parts of the song.\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"modChannel\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Modulator Channel\"),\n\t\t\t\t\tp(\"Modulators can be used to change settings in your song automatically over time. This technique is also known as automation.\"),\n\t\t\t\t\tp(\"This setting controls which channel the modulators will take effect for. If you choose 'Song', you can change song-wide settings too!\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"modInstrument\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Modulator Instrument\"),\n\t\t\t\t\tp(\"Modulators can be used to change settings in your song automatically over time. This technique is also known as automation.\"),\n\t\t\t\t\tp(\"This setting controls which instrument your modulator will apply to within the given channel you've chosen.\"),\n\t\t\t\t\tp(\"If you choose 'all', every instrument in the channel will be affected. If you choose 'active', just the current ones used in this pattern will be instead.\"),\n\t\t\t\t\tp(\"Note that with 'all' or 'active', effects will only be applied to instruments that the effect is applicable on. For example if an instrument does not have panning effects, modulating panning will not affect it.\")\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"modSet\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Modulator Setting\"),\n\t\t\t\t\tp(\"This is the parameter that you want to change with this modulator. For example, if you set this to 'Tempo', you can speed up or slow down your song by laying notes in the pattern editor.\"),\n\t\t\t\t\tp(\"Note that you'll see different options if your channel is set to 'Song' versus a channel number. With 'Song', you'll see song-wide settings such as tempo. With a channel, you'll see specific instrument settings. Adding more effects to the instrument causes modulators for them to be available, so be sure to experiment!\"),\n\t\t\t\t\tp(\"Most modulators behave as you'd expect and work just as if you were moving their associated slider. Click the '?' when you have a setting selected to get more info about it!\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"modFilter\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Filter Target\"),\n\t\t\t\t\tp(\"This setting specifies which parameter of your targeted filter you would like to change.\"),\n\t\t\t\t\tp(\"With the 'morph' setting, the note value for your modulator represents the number of a subfilter to 'morph' into over time. For example, dragging a note from 0 to 7 will morph from your main filter to the 7th subfilter. To change how your subfilters are set up, click the '+' button on the target filter.\"),\n\t\t\t\t\tp(\"With a Dot setting, you can fine-tune the exact location of every dot on your filter graph. Note that this is extremely intensive if you want to modulate all dots - a morph is better in that case - but this can come in handy for small adjustments.\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"transitionBar\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Tie Notes Over Bars\"),\n\t\t\t\t\tp(\"With this option ticked, notes won't transition across bars if you put notes with the same pitches at the start of the next bar. Instead they will 'tie over' and sound like one long note.\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"clicklessTransition\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Clickless Transition\"),\n\t\t\t\t\tp(\"Sometimes, seamless and other transition types can make audible 'clicks' when changing between notes. Ticking this option will cause those clicks to be silenced as much as possible.\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"aliases\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Aliasing\"),\n\t\t\t\t\tp(\"JummBox applies a technique called 'anti-aliasing' to instruments normally to help them sound cleaner even at high frequencies and low sample rates.\"),\n\t\t\t\t\tp(\"When this setting is ticked that technique is disabled, so you may hear strange audio artifacts especially at high pitches and when bending notes. However, this can lend a grungy sound to an instrument that could be desirable.\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"operatorWaveform\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Operator Waveform\"),\n\t\t\t\t\tp('This setting controls the what kind of sound wave an individual FM wave uses. By defualt the FM synth only uses sinewaves.'),\n\t\t\t\t\tp('This feature was ported from Aury system`s GoldBox!'),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"filterType\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Filter Type\"),\n\t\t\t\t\tp('Toggling these buttons lets you choose between a simple filter interface with two sliders, or the more advanced filter graph.'),\n\t\t\t\t\tp('The two-slider version controls a single low-pass filter and was used in legacy versions. It is not as powerful, but if you feel overwhelmed you can start with this.'),\n\t\t\t\t\tp('Note that switching from the simple interface to the advanced interface will convert your current settings, so you can also use it as a basis for later tweaking.'),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"filterCutoff\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Low-Pass Filter Cutoff Frequency\"),\n\t\t\t\t\tp(\"The lowest setting feels \\\"muffled\\\" or \\\"dark\\\", and the highest setting feels \\\"harsh\\\" or \\\"bright\\\".\"),\n\t\t\t\t\tp(\"Most sounds include a range of frequencies from low to high. JummBox instruments have a filter that allows the lowest frequencies to pass through at full volume, but can reduce the volume of the higher frequencies that are above a cutoff frequency. This setting controls the cutoff frequency and thus the range of higher frequencies that are reduced.\"),\n\t\t\t\t\tp(\"This cutoff setting also determines which frequency resonates when the resonance peak setting is used.\"),\n\t\t\t\t);\n\t\t\t} break;\n\t\t\tcase \"filterResonance\": {\n\t\t\t\tmessage = div(\n\t\t\t\t\th2(\"Low-Pass Filter Resonance Peak\"),\n\t\t\t\t\tp(\"Increasing this setting emphasizes a narrow range of frequencies, based on the position of the filter cutoff setting. This can be used to imitate the resonant bodies of acoustic instruments and other interesting effects.\"),\n\t\t\t\t\tp(\"The filter preserves the volume of frequencies that are below the cutoff frequency, and reduces the volume of frequencies that are above the cutoff. If this setting is used, the filter also increases the volume of frequencies that are near the cutoff.\"),\n\t\t\t\t);\n\t\t\t} break;\n\n\t\t\tdefault:\n\t\t\t\t// Check for modSetinfo#\n\t\t\t\tif (type.indexOf(\"modSetInfo\") >= 0) {\n\t\t\t\t\tlet modNum: number = +type[type.length - 1];\n\t\t\t\t\tlet modulator: number = _doc.song.channels[_doc.channel].instruments[_doc.getCurrentInstrument()].modulators[modNum];\n\t\t\t\t\tlet pList: HTMLParagraphElement[] = [];\n\t\t\t\t\tfor (let s: number = 0; s < Config.modulators[modulator].promptDesc.length; s++) {\n\t\t\t\t\t\tpList.push(p(\n\t\t\t\t\t\t\tConfig.modulators[modulator].promptDesc[s]\n\t\t\t\t\t\t\t\t.replace(\"$LO\", \"\" + Config.modulators[modulator].convertRealFactor)\n\t\t\t\t\t\t\t\t.replace(\"$MID\", \"\" + (Config.modulators[modulator].convertRealFactor + Config.modulators[modulator].maxRawVol / 2))\n\t\t\t\t\t\t\t\t.replace(\"$HI\", \"\" + (Config.modulators[modulator].convertRealFactor + Config.modulators[modulator].maxRawVol))\n\n\t\t\t\t\t\t));\n\t\t\t\t\t}\n\t\t\t\t\t// Last element for mod settings is just some miscellaneous data for nerds like me.\n\t\t\t\t\tpList[pList.length-1].style.setProperty(\"color\", \"var(--secondary-text)\");\n\t\t\t\t\tmessage = div(\n\t\t\t\t\t\th2(Config.modulators[modulator].promptName),\n\t\t\t\t\t\tpList,\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthrow new Error(\"Unhandled TipPrompt type: \" + type);\n\t\t\t\t}\n\t\t}\n\t\t\n\t\tthis.container = div({class: \"prompt\", style: \"width: 300px;\"},\n\t\t\tmessage,\n\t\t\tthis._closeButton,\n\t\t);\n\t\t\t\n\t\t\tsetTimeout(()=>this._closeButton.focus());\n\t\t\t\n\t\tthis._closeButton.addEventListener(\"click\", this._close);\n\t}\n\t\t\n\t\tprivate _close = (): void => { \n\t\tthis._doc.undo();\n\t}\n\t\t\n\t\tpublic cleanUp = (): void => { \n\t\tthis._closeButton.removeEventListener(\"click\", this._close);\n\t}\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nimport { ColorConfig } from \"./ColorConfig\";\nimport { Config } from \"../synth/SynthConfig\";\nimport { isMobile } from \"./EditorConfig\";\nimport { SongDocument } from \"./SongDocument\";\nimport { ChannelRow } from \"./ChannelRow\";\nimport { SongEditor } from \"./SongEditor\";\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\n\nexport class TrackEditor {\n\tpublic readonly _barDropDown: HTMLSelectElement = HTML.select({ style: \"width: 32px; height: \" + Config.barEditorHeight + \"px; top: 0px; position: absolute; opacity: 0\" },\n\n\t\tHTML.option({ value: \"barBefore\" }, \"Insert Bar Before\"),\n\t\tHTML.option({ value: \"barAfter\" }, \"Insert Bar After\"),\n\t\tHTML.option({ value: \"deleteBar\" }, \"Delete This Bar\"),\n\t);\n\tprivate readonly _channelRowContainer: HTMLElement = HTML.div({style: `display: flex; flex-direction: column; padding-top: ${Config.barEditorHeight}px`});\n\tprivate readonly _barNumberContainer: SVGGElement = SVG.g();\n\tprivate readonly _playhead: SVGRectElement = SVG.rect({fill: ColorConfig.playhead, x: 0, y: 0, width: 4, height: 128});\n\tprivate readonly _boxHighlight: SVGRectElement = SVG.rect({fill: \"none\", stroke: ColorConfig.hoverPreview, \"stroke-width\": 2, \"pointer-events\": \"none\", x: 1, y: 1, width: 30, height: 30});\n\tprivate readonly _upHighlight: SVGPathElement = SVG.path({fill: ColorConfig.invertedText, stroke: ColorConfig.invertedText, \"stroke-width\": 1, \"pointer-events\": \"none\"});\n\tprivate readonly _downHighlight: SVGPathElement = SVG.path({fill: ColorConfig.invertedText, stroke: ColorConfig.invertedText, \"stroke-width\": 1, \"pointer-events\": \"none\"});\n\tprivate readonly _barEditorPath: SVGPathElement = SVG.path({ fill: ColorConfig.uiWidgetBackground, stroke: ColorConfig.uiWidgetBackground, \"stroke-width\": 1, \"pointer-events\": \"none\" });\n\tprivate readonly _selectionRect: SVGRectElement = SVG.rect({ class: \"dashed-line dash-move\", fill: ColorConfig.boxSelectionFill, stroke: ColorConfig.hoverPreview, \"stroke-width\": 2, \"stroke-dasharray\": \"5, 3\", \"fill-opacity\": \"0.4\", \"pointer-events\": \"none\", visibility: \"hidden\", x: 1, y: 1, width: 62, height: 62 });\n\tprivate readonly _svg: SVGSVGElement = SVG.svg({style: `position: absolute; top: 0;`},\n\t\tthis._barEditorPath,\n\t\tthis._selectionRect,\n\t\tthis._barNumberContainer,\n\t\tthis._boxHighlight,\n\t\tthis._upHighlight,\n\t\tthis._downHighlight,\n\t\tthis._playhead,\n\t);\n\tprivate readonly _select: HTMLSelectElement = HTML.select({class: \"trackSelectBox\", style: \"background: none; border: none; appearance: none; border-radius: initial; box-shadow: none; color: transparent; position: absolute; touch-action: none;\"});\n\tpublic readonly container: HTMLElement = HTML.div({class: \"noSelection\", style: \"position: relative; overflow: hidden;\"},\n\t\tthis._channelRowContainer,\n\t\tthis._svg,\n\t\tthis._select,\n\t\tthis._barDropDown\n\t);\n\tprivate readonly _channels: ChannelRow[] = [];\n\tprivate readonly _barNumbers: SVGTextElement[] = [];\n\tprivate _mouseX: number = 0;\n\tprivate _mouseY: number = 0;\n\t//private _lastScrollTime: number = 0;\n\t//private _selecting: boolean = false;\n\t//private _selectionStartBar: number = 0;\n\t//private _selectionStartChannel: number = 0;\n\t//private _pattern: Pattern | null = null;\n\tprivate _mouseStartBar: number = 0;\n\tprivate _mouseStartChannel: number = 0;\n\tprivate _mouseBar: number = 0;\n\tprivate _mouseChannel: number = 0;\n\tprivate _mouseOver: boolean = false;\n\tprivate _mousePressed: boolean = false;\n\tprivate _mouseDragging = false;\n\tprivate _barWidth: number = 32;\n\tprivate _renderedBarCount: number = -1;\n\tprivate _renderedEditorWidth: number = -1;\n\tprivate _renderedEditorHeight: number = -1;\n\tprivate _renderedPatternCount: number = 0;\n\tprivate _renderedPlayhead: number = -1;\n\tprivate _touchMode: boolean = isMobile;\n\tprivate _barDropDownBar: number = 0;\n\tprivate _lastScrollTime: number = 0;\n\t\t\n\tconstructor(private _doc: SongDocument, private _songEditor: SongEditor) {\n\t\twindow.requestAnimationFrame(this._animatePlayhead);\n\t\tthis._svg.addEventListener(\"mousedown\", this._whenMousePressed);\n\t\tdocument.addEventListener(\"mousemove\", this._whenMouseMoved);\n\t\tdocument.addEventListener(\"mouseup\", this._whenMouseReleased);\n\t\tthis._svg.addEventListener(\"mouseover\", this._whenMouseOver);\n\t\tthis._svg.addEventListener(\"mouseout\", this._whenMouseOut);\n\t\t\t\n\t\tthis._select.addEventListener(\"change\", this._whenSelectChanged);\n\t\tthis._select.addEventListener(\"touchstart\", this._whenSelectPressed);\n\t\tthis._select.addEventListener(\"touchmove\", this._whenSelectMoved);\n\t\tthis._select.addEventListener(\"touchend\", this._whenSelectReleased);\n\t\tthis._select.addEventListener(\"touchcancel\", this._whenSelectReleased);\n\t\t\t\n\t\tlet determinedCursorType: boolean = false;\n\t\tdocument.addEventListener(\"mousedown\", () => {\n\t\t\tif (!determinedCursorType) {\n\t\t\t\tthis._touchMode = false;\n\t\t\t\tthis._updatePreview();\n\t\t\t}\n\t\t\tdeterminedCursorType = true;\n\t\t}, true);\n\t\tdocument.addEventListener(\"touchstart\", () => {\n\t\t\tif (!determinedCursorType) {\n\t\t\t\tthis._touchMode = true;\n\t\t\t\tthis._updatePreview();\n\t\t\t}\n\t\t\tdeterminedCursorType = true;\n\t\t}, true);\n\n\t\tthis._barDropDown.selectedIndex = -1;\n\t\tthis._barDropDown.addEventListener(\"change\", this._barDropDownHandler);\n\t\tthis._barDropDown.addEventListener(\"mousedown\", this._barDropDownGetOpenedPosition);\n\n\t}\n\n\tprivate _barDropDownGetOpenedPosition = (event: MouseEvent): void => {\n\t\tthis._barDropDownBar = Math.floor(Math.min(this._doc.song.barCount - 1, Math.max(0, this._mouseX / this._barWidth)));\n\t}\n\n\tprivate _barDropDownHandler = (event: Event): void => {\n\n\t\tvar moveBarOffset = (this._barDropDown.value == \"barBefore\") ? 0 : 1;\n\n\t\tif (this._barDropDown.value == \"barBefore\" || this._barDropDown.value == \"barAfter\") {\n\n\t\t\t//var prevBar = this._doc.bar;\n\n\t\t\tthis._doc.bar = this._barDropDownBar - 1 + moveBarOffset;\n\n\t\t\tthis._doc.selection.resetBoxSelection();\n\t\t\tthis._doc.selection.insertBars();\n\n\t\t\t// This moves doc.bar back. I kind of like moving it to the inserted zone, though.\n\t\t\t// this._doc.bar = prevBar + ((prevBar < this._barDropDownBar + moveBarOffset) ? 0 : 1);\n\n\t\t\t// Adjust song playhead\n\t\t\tif (this._doc.synth.playhead >= this._barDropDownBar + moveBarOffset) {\n\t\t\t\tthis._doc.synth.playhead++;\n\t\t\t\tthis._songEditor._barScrollBar.animatePlayhead();\n\t\t\t}\n\n\t}\n\t\telse if (this._barDropDown.value == \"deleteBar\") {\n\t\t\n\t\t\t//var prevBar = this._doc.bar;\n\n\t\t\tthis._doc.bar = this._barDropDownBar;\n\n\t\t\tthis._doc.selection.resetBoxSelection();\n\t\t\tthis._doc.selection.deleteBars();\n\n\t\t\t// This moves doc.bar back. I kind of like moving it to the deleted zone, though.\n\t\t\t// this._doc.bar = prevBar - ((prevBar <= this._barDropDownBar) ? 0 : 1);\n\n\t\t\t// Adjust song playhead\n\t\t\tif (this._doc.synth.playhead > this._barDropDownBar) {\n\t\t\t\tthis._doc.synth.playhead--;\n\t\t\t\tthis._songEditor._barScrollBar.animatePlayhead();\n\t\t\t}\n\n\t\t}\n\n\t\tthis._barDropDown.selectedIndex = -1;\n\t}\n\n\tprivate _whenSelectChanged = (): void => {\n\t\tthis._doc.selection.setPattern(this._select.selectedIndex);\n\t}\n\t\t\n\tprivate _animatePlayhead = (timestamp: number): void => {\n\t\tconst playhead = (this._barWidth * this._doc.synth.playhead - 2);\n\t\tif (this._renderedPlayhead != playhead) {\n\t\t\tthis._renderedPlayhead = playhead;\n\t\t\tthis._playhead.setAttribute(\"x\", \"\" + playhead);\n\t\t}\n\t\twindow.requestAnimationFrame(this._animatePlayhead);\n\t}\n\t\n\tpublic movePlayheadToMouse(): boolean {\n\t\tif (this._mouseOver) {\n\t\t\tthis._doc.synth.playhead = this._mouseBar + (this._mouseX % this._barWidth) / this._barWidth;\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\t\n\tprivate _dragBoxSelection(): void {\n\t\tthis._doc.selection.setTrackSelection(this._doc.selection.boxSelectionX0, this._mouseBar, this._doc.selection.boxSelectionY0, this._mouseChannel);\n\t\tthis._doc.selection.selectionUpdated();\n\t}\n\t\t\n\tprivate _updateSelectPos(event: TouchEvent): void {\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\n\t\tthis._mouseX = event.touches[0].clientX - boundingRect.left;\n\t\tthis._mouseY = event.touches[0].clientY - boundingRect.top;\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\n\t\tthis._mouseBar = Math.floor(Math.min(this._doc.song.barCount - 1, Math.max(0, this._mouseX / this._barWidth)));\n\t\tthis._mouseChannel = Math.floor(Math.min(this._doc.song.getChannelCount() - 1, Math.max(0, (this._mouseY - Config.barEditorHeight) / ChannelRow.patternHeight)));\n\t}\n\t\t\n\tprivate _whenSelectPressed = (event: TouchEvent): void => {\n\t\tthis._mousePressed = true;\n\t\tthis._mouseDragging = true;\n\t\tthis._updateSelectPos(event);\n\t\tthis._mouseStartBar = this._mouseBar;\n\t\tthis._mouseStartChannel = this._mouseChannel;\n\t}\n\t\t\n\tprivate _whenSelectMoved = (event: TouchEvent): void => {\n\t\tthis._updateSelectPos(event);\n\t\tif (this._mouseStartBar != this._mouseBar || this._mouseStartChannel != this._mouseChannel) {\n\t\t\t// if the touch has started dragging, cancel opening the select menu.\n\t\t\tevent.preventDefault();\n\t\t}\n\t\tif (this._mousePressed) this._dragBoxSelection();\n\t\tthis._updatePreview();\n\t}\n\t\t\n\tprivate _whenSelectReleased = (event: TouchEvent): void => {\n\t\tthis._mousePressed = false;\n\t\tthis._mouseDragging = false;\n\t\tthis._updatePreview();\n\t}\n\t\t\n\tprivate _whenMouseOver = (event: MouseEvent): void => {\n\t\tif (this._mouseOver) return;\n\t\tthis._mouseOver = true;\n\t}\n\t\t\n\tprivate _whenMouseOut = (event: MouseEvent): void => {\n\t\tif (!this._mouseOver) return;\n\t\tthis._mouseOver = false;\n\t}\n\t\t\n\tprivate _updateMousePos(event: MouseEvent): void {\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\n\t\tthis._mouseX = (event.clientX || event.pageX) - boundingRect.left;\n\t\tthis._mouseY = (event.clientY || event.pageY) - boundingRect.top;\n\t\tthis._mouseBar = Math.floor(Math.min(this._doc.song.barCount - 1, Math.max(0, this._mouseX / this._barWidth)));\n\t\tthis._mouseChannel = Math.floor(Math.min(this._doc.song.getChannelCount() - 1, Math.max(0, (this._mouseY - Config.barEditorHeight) / ChannelRow.patternHeight)));\n\t}\n\t\t\n\tprivate _whenMousePressed = (event: MouseEvent): void => {\n\t\tevent.preventDefault();\n\t\tthis._mousePressed = true;\n\t\tthis._updateMousePos(event);\n\t\tthis._mouseStartBar = this._mouseBar;\n\t\tthis._mouseStartChannel = this._mouseChannel;\n\n\t\t// Act on track portion\n\t\tif (this._mouseY >= Config.barEditorHeight) {\n\n\t\tif (event.shiftKey) {\n\t\t\tthis._mouseDragging = true;\n\t\t\tthis._doc.selection.setTrackSelection(this._doc.selection.boxSelectionX0, this._mouseBar, this._doc.selection.boxSelectionY0, this._mouseChannel);\n\t\t\tthis._doc.selection.selectionUpdated();\n\t\t} else {\n\t\t\tthis._mouseDragging = false;\n\t\t\tif (this._doc.channel != this._mouseChannel || this._doc.bar != this._mouseBar) {\n\t\t\t\tthis._doc.selection.setChannelBar(this._mouseChannel, this._mouseBar);\n\t\t\t\tthis._mouseDragging = true;\n\t\t\t}\n\t\t\tthis._doc.selection.resetBoxSelection();\n\t\t}\n\t}\n\t}\n\t\t\n\tprivate _whenMouseMoved = (event: MouseEvent): void => {\n\t\tthis._updateMousePos(event);\n\t\tif (this._mousePressed) {\n\t\t\tif (this._mouseStartBar != this._mouseBar || this._mouseStartChannel != this._mouseChannel) {\n\t\t\t\tthis._mouseDragging = true;\n\t\t\t}\n\t\t\tthis._dragBoxSelection();\n\t\t}\n\t\tthis._updatePreview();\n\t}\n\t\t\n\tprivate _whenMouseReleased = (event: MouseEvent): void => {\n\t\tif (this._mousePressed && !this._mouseDragging) {\n\t\t\tif (this._doc.channel == this._mouseChannel && this._doc.bar == this._mouseBar) {\n\t\t\t\tconst up: boolean = ((this._mouseY - Config.barEditorHeight) % ChannelRow.patternHeight) < ChannelRow.patternHeight / 2;\n\t\t\t\tconst patternCount: number = this._doc.song.patternsPerChannel;\n\t\t\t\tthis._doc.selection.setPattern((this._doc.song.channels[this._mouseChannel].bars[this._mouseBar] + (up ? 1 : patternCount)) % (patternCount + 1));\n\t\t\t}\n\t\t}\n\t\tthis._mousePressed = false;\n\t\tthis._mouseDragging = false;\n\t\tthis._updatePreview();\n\t}\n\t\t\n\tprivate _updatePreview(): void {\n\t\tlet channel: number = this._mouseChannel;\n\t\tlet bar: number = this._mouseBar;\n\t\t\t\n\t\tif (this._touchMode) {\n\t\t\tbar = this._doc.bar;\n\t\t\tchannel = this._doc.channel;\n\t\t}\n\t\t\t\n\t\tconst selected: boolean = (bar == this._doc.bar && channel == this._doc.channel);\n\t\tconst overTrackEditor: boolean = (this._mouseY >= Config.barEditorHeight);\n\t\t\t\n\t\tif (this._mouseDragging && this._mouseStartBar != this._mouseBar) {\n\n\t\t\t// Handle auto-scroll in selection. Only @50ms or slower.\n\t\t\tvar timestamp: number = Date.now();\n\n\t\t\tif (timestamp - this._lastScrollTime >= 50) {\n\n\t\t\t\tif (bar > this._doc.barScrollPos + this._doc.trackVisibleBars - 1 && this._doc.barScrollPos < this._doc.song.barCount - this._doc.trackVisibleBars) {\n\n\t\t\t\t\tthis._songEditor.changeBarScrollPos(1);\n\t\t\t\t}\n\t\t\t\tif (bar < this._doc.barScrollPos && this._doc.barScrollPos > 0) {\n\n\t\t\t\t\tthis._songEditor.changeBarScrollPos(-1);\n\t\t\t\t}\n\n\t\t\t\tthis._lastScrollTime = timestamp;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif (this._mouseOver && !this._mousePressed && !selected && overTrackEditor) {\n\t\t\tthis._boxHighlight.setAttribute(\"x\", \"\" + (1 + this._barWidth * bar));\n\t\t\tthis._boxHighlight.setAttribute(\"y\", \"\" + (1 + Config.barEditorHeight + ChannelRow.patternHeight * channel));\n\t\t\tthis._boxHighlight.setAttribute(\"height\", \"\" + (ChannelRow.patternHeight - 2));\n\t\t\tthis._boxHighlight.setAttribute(\"width\", \"\" + (this._barWidth - 2));\n\t\t\tthis._boxHighlight.style.visibility = \"visible\";\n\t\t} else if ((this._mouseOver || ((this._mouseX >= bar * this._barWidth) && (this._mouseX < bar * this._barWidth + this._barWidth) && (this._mouseY > 0))) && (!overTrackEditor)) {\n\t\t\tthis._boxHighlight.setAttribute(\"x\", \"\" + (1 + this._barWidth * bar));\n\t\t\tthis._boxHighlight.setAttribute(\"y\", \"1\"); // The y is set to 1 instead of 0 due to the thickness of the box causing it to go slightly outside the frame at y=0.\n\t\t\tthis._boxHighlight.setAttribute(\"height\", \"\" + (Config.barEditorHeight - 3));\n\t\t\tthis._boxHighlight.style.visibility = \"visible\";\n\t\t} else {\n\t\t\tthis._boxHighlight.style.visibility = \"hidden\";\n\t\t}\n\t\t\t\n\t\tif ((this._mouseOver || this._touchMode) && selected && overTrackEditor) {\n\t\t\tconst up: boolean = ((this._mouseY - Config.barEditorHeight) % ChannelRow.patternHeight) < ChannelRow.patternHeight / 2;\n\t\t\tconst center: number = this._barWidth * (bar + 0.8);\n\t\t\tconst middle: number = Config.barEditorHeight + ChannelRow.patternHeight * (channel + 0.5);\n\t\t\tconst base: number = ChannelRow.patternHeight * 0.1;\n\t\t\tconst tip: number = ChannelRow.patternHeight * 0.4;\n\t\t\tconst width: number = ChannelRow.patternHeight * 0.175;\n\t\t\t\t\n\t\t\tthis._upHighlight.setAttribute(\"fill\", up && !this._touchMode ? ColorConfig.hoverPreview : ColorConfig.invertedText);\n\t\t\tthis._downHighlight.setAttribute(\"fill\", !up && !this._touchMode ? ColorConfig.hoverPreview : ColorConfig.invertedText);\n\t\t\t\t\n\t\t\tthis._upHighlight.setAttribute(\"d\", `M ${center} ${middle - tip} L ${center + width} ${middle - base} L ${center - width} ${middle - base} z`);\n\t\t\tthis._downHighlight.setAttribute(\"d\", `M ${center} ${middle + tip} L ${center + width} ${middle + base} L ${center - width} ${middle + base} z`);\n\t\t\t\t\n\t\t\tthis._upHighlight.style.visibility = \"visible\";\n\t\t\tthis._downHighlight.style.visibility = \"visible\";\n\t\t} else {\n\t\t\tthis._upHighlight.style.visibility = \"hidden\";\n\t\t\tthis._downHighlight.style.visibility = \"hidden\";\n\t\t}\n\t\t\t\n\t\tthis._selectionRect.style.left = (this._barWidth * this._doc.bar) + \"px\";\n\t\tthis._selectionRect.style.top = (Config.barEditorHeight + (ChannelRow.patternHeight * this._doc.channel)) + \"px\";\n\n\t\tthis._select.style.left = (this._barWidth * this._doc.bar) + \"px\";\n\n\t\tthis._select.style.width = this._barWidth + \"px\";\n\t\tthis._select.style.top = (Config.barEditorHeight + ChannelRow.patternHeight * this._doc.channel) + \"px\";\n\t\tthis._select.style.height = ChannelRow.patternHeight + \"px\";\n\t\t\t\n\t\tthis._barDropDown.style.left = (this._barWidth * bar) + \"px\";\n\n\t\tconst patternCount: number = this._doc.song.patternsPerChannel + 1;\n\t\tfor (let i: number = this._renderedPatternCount; i < patternCount; i++) {\n\t\t\t\tthis._select.appendChild(HTML.option({value: i}, i));\n\t\t}\n\t\tfor (let i: number = patternCount; i < this._renderedPatternCount; i++) {\n\t\t\t\tthis._select.removeChild(<Node> this._select.lastChild);\n\t\t}\n\t\tthis._renderedPatternCount = patternCount;\n\t\tconst selectedPattern: number = this._doc.song.channels[this._doc.channel].bars[this._doc.bar];\n\t\tif (this._select.selectedIndex != selectedPattern) this._select.selectedIndex = selectedPattern;\n\t}\n\t\t\n\tpublic render(): void {\n\n\t\tthis._barWidth = this._doc.getBarWidth();\n\t\t\t\n\t\tif (this._channels.length != this._doc.song.getChannelCount()) {\n\n\t\t\t// Add new channel boxes if needed\n\t\t\tfor (let y: number = this._channels.length; y < this._doc.song.getChannelCount(); y++) {\n\t\t\t\tconst channelRow: ChannelRow = new ChannelRow(this._doc, y);\n\t\t\t\tthis._channels[y] = channelRow;\n\t\t\t\tthis._channelRowContainer.appendChild(channelRow.container);\n\t\t\t}\n\t\t\t\t\n\t\t\t// Remove old channel boxes\n\t\t\tfor (let y: number = this._doc.song.getChannelCount(); y < this._channels.length; y++) {\n\t\t\t\tthis._channelRowContainer.removeChild(this._channels[y].container);\n\t\t\t}\n\t\t\t\n\t\t\tthis._channels.length = this._doc.song.getChannelCount();\n\t\t\tthis._mousePressed = false;\n\t\t}\n\n\t\tfor (let j: number = 0; j < this._doc.song.getChannelCount(); j++) {\n\t\t\tthis._channels[j].render();\n\t\t}\n\t\t\t\n\t\tconst editorWidth: number = this._barWidth * this._doc.song.barCount;\n\t\tif (this._renderedEditorWidth != editorWidth) {\n\t\t\tthis._renderedEditorWidth = editorWidth;\n\t\t\tthis._channelRowContainer.style.width = editorWidth + \"px\";\n\t\t\tthis.container.style.width = editorWidth + \"px\";\n\t\t\tthis._svg.setAttribute(\"width\", editorWidth + \"\");\n\t\t\tthis._mousePressed = false;\n\n\t\t\t// Update bar editor's SVG\n\t\t\t// this._upHighlight.setAttribute(\"d\", `M ${center} ${middle - tip} L ${center + width} ${middle - base} L ${center - width} ${middle - base} z`);\n\t\t\t//this._downHighlight.setAttribute(\"d\", `M ${center} ${middle + tip} L ${center + width} ${middle + base} L ${center - width} ${middle + base} z`);\n\n\t\t\tvar pathString = \"\";\n\n\t\t\tfor (let x: number = 0; x < this._doc.song.barCount; x++) {\n\t\t\t\tvar pathLeft = x * this._barWidth + 2;\n\t\t\t\tvar pathTop = 1;\n\t\t\t\tvar pathRight = x * this._barWidth + this._barWidth - 2;\n\t\t\t\tvar pathBottom = Config.barEditorHeight - 3;\n\n\t\t\t\tpathString += `M ${pathLeft} ${pathTop} H ${pathRight} V ${pathBottom} H ${pathLeft} V ${pathTop} Z `;\n\t\t}\n\t\t\t\n\t\t\tthis._barEditorPath.setAttribute(\"d\", pathString);\n\n\t\t\tif (this._renderedBarCount < this._doc.song.barCount) {\n\t\t\t\tthis._barNumbers.length = this._doc.song.barCount;\n\t\t\t\tfor (var pos = this._renderedBarCount; pos < this._barNumbers.length; pos++) {\n\t\t\t\t\tthis._barNumbers[pos] = SVG.text({ \"font-family\": \"sans-serif\", \"font-size\": \"8px\", \"text-anchor\": \"middle\", \"font-weight\": \"bold\", \"x\": (pos * this._barWidth + this._barWidth / 2) + \"px\", \"y\": \"7px\", fill: ColorConfig.secondaryText }, \"\" + (pos + 1));\n\t\t\t\t\tif (pos % 4 == 0) {\n\t\t\t\t\t\t// Highlighting every 4 bars\n\t\t\t\t\t\tthis._barNumbers[pos].setAttribute(\"fill\", ColorConfig.primaryText);\n\t\t\t\t\t}\n\t\t\t\t\tthis._barNumberContainer.appendChild(this._barNumbers[pos]);\n\t\t\t\t}\n\t\t\t\tthis._renderedBarCount = this._doc.song.barCount;\n\t\t\t}\n\t\t\telse if (this._renderedBarCount > this._doc.song.barCount) {\n\t\t\t\tfor (var pos = this._renderedBarCount - 1; pos >= this._doc.song.barCount; pos--) {\n\t\t\t\t\tthis._barNumberContainer.removeChild(this._barNumbers[pos]);\n\t\t\t\t}\n\t\t\t\tthis._barNumbers.length = this._doc.song.barCount;\n\t\t\t\tthis._renderedBarCount = this._doc.song.barCount;\n\t\t\t}\n\n\t\t\t// Update x of bar editor numbers\n\t\t\tfor (var pos = 0; pos < this._barNumbers.length; pos++) {\n\t\t\t\tthis._barNumbers[pos].setAttribute(\"x\", (pos * this._barWidth + this._barWidth / 2) + \"px\");\n\t\t\t}\n\t\t\n\t\t\tthis._renderedEditorWidth = editorWidth;\n\t\t\tthis._channelRowContainer.style.width = editorWidth + \"px\";\n\t\t\tthis.container.style.width = editorWidth + \"px\";\n\t\t\tthis._svg.setAttribute(\"width\", editorWidth + \"\");\n\t\t\tthis._mousePressed = false;\n\t\t}\n\t\t\n\t\tconst editorHeight: number = this._doc.song.getChannelCount() * ChannelRow.patternHeight;\n\t\tif (this._renderedEditorHeight != editorHeight) {\n\t\t\tthis._renderedEditorHeight = editorHeight;\n\t\t\tthis._svg.setAttribute(\"height\", \"\" + editorHeight + Config.barEditorHeight);\n\t\t\tthis._playhead.setAttribute(\"height\", \"\" + editorHeight + Config.barEditorHeight);\n\t\t\tthis.container.style.height = (editorHeight + Config.barEditorHeight) + \"px\";\n\t\t}\n\t\t\t\n\t\tthis._select.style.display = this._touchMode ? \"\" : \"none\";\n\t\t\n\t\tif (this._doc.selection.boxSelectionActive) {\n\t\t\t// TODO: This causes the selection rectangle to repaint every time the\n\t\t\t// editor renders and the selection is visible. Check if anything changed\n\t\t\t// before overwriting the attributes?\n\t\t\tthis._selectionRect.setAttribute(\"x\", String(this._barWidth * this._doc.selection.boxSelectionBar + 1));\n\t\t\tthis._selectionRect.setAttribute(\"y\", String(Config.barEditorHeight + ChannelRow.patternHeight * this._doc.selection.boxSelectionChannel + 1));\n\t\t\tthis._selectionRect.setAttribute(\"width\", String(this._barWidth * this._doc.selection.boxSelectionWidth - 2));\n\t\t\tthis._selectionRect.setAttribute(\"height\", String(ChannelRow.patternHeight * this._doc.selection.boxSelectionHeight - 2));\n\t\t\tthis._selectionRect.setAttribute(\"visibility\", \"visible\");\n\t\t} else {\n\t\t\tthis._selectionRect.setAttribute(\"visibility\", \"hidden\");\n\t\t}\n\t\t\t\n\t\tthis._updatePreview();\n\t}\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\n//import {Layout} from \"./Layout\";\nimport { InstrumentType, EffectType, Config, effectsIncludeTransition, effectsIncludeChord, effectsIncludePitchShift, effectsIncludeDetune, effectsIncludeVibrato, effectsIncludeNoteFilter, effectsIncludeDistortion, effectsIncludeBitcrusher, effectsIncludePanning, effectsIncludeChorus, effectsIncludeEcho, effectsIncludeReverb, DropdownID } from \"../synth/SynthConfig\";\nimport { BarScrollBar } from \"./BarScrollBar\";\nimport { BeatsPerBarPrompt } from \"./BeatsPerBarPrompt\";\nimport { Change, ChangeGroup } from \"./Change\";\nimport { ChannelSettingsPrompt } from \"./ChannelSettingsPrompt\";\nimport { ColorConfig, ChannelColors } from \"./ColorConfig\";\nimport { CustomChipPrompt } from \"./CustomChipPrompt\";\nimport { CustomFilterPrompt } from \"./CustomFilterPrompt\";\nimport { EditorConfig, isMobile, prettyNumber, Preset, PresetCategory } from \"./EditorConfig\";\nimport { ExportPrompt } from \"./ExportPrompt\";\nimport \"./Layout\"; // Imported here for the sake of ensuring this code is transpiled early.\nimport { Instrument, Channel, Synth } from \"../synth/synth\";\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\nimport { Preferences } from \"./Preferences\";\nimport { HarmonicsEditor } from \"./HarmonicsEditor\";\nimport { InputBox, Slider } from \"./HTMLWrapper\";\nimport { ImportPrompt } from \"./ImportPrompt\";\nimport { ChannelRow } from \"./ChannelRow\";\nimport { LayoutPrompt } from \"./LayoutPrompt\";\nimport { EnvelopeEditor } from \"./EnvelopeEditor\";\nimport { FadeInOutEditor } from \"./FadeInOutEditor\";\nimport { FilterEditor } from \"./FilterEditor\";\nimport { LimiterPrompt } from \"./LimiterPrompt\";\nimport { LoopEditor } from \"./LoopEditor\";\nimport { MoveNotesSidewaysPrompt } from \"./MoveNotesSidewaysPrompt\";\nimport { MuteEditor } from \"./MuteEditor\";\nimport { OctaveScrollBar } from \"./OctaveScrollBar\";\nimport { MidiInputHandler } from \"./MidiInput\";\nimport { KeyboardLayout } from \"./KeyboardLayout\";\nimport { PatternEditor } from \"./PatternEditor\";\nimport { Piano } from \"./Piano\";\nimport { Prompt } from \"./Prompt\";\nimport { SongDocument } from \"./SongDocument\";\nimport { SongDurationPrompt } from \"./SongDurationPrompt\";\nimport { SustainPrompt } from \"./SustainPrompt\";\nimport { SongRecoveryPrompt } from \"./SongRecoveryPrompt\";\nimport { RecordingSetupPrompt } from \"./RecordingSetupPrompt\";\nimport { SpectrumEditor } from \"./SpectrumEditor\";\nimport { ThemePrompt } from \"./ThemePrompt\";\nimport { TipPrompt } from \"./TipPrompt\";\nimport { ChangeTempo, ChangeChorus, ChangeEchoDelay, ChangeEchoSustain, ChangeReverb, ChangeVolume, ChangePan, ChangePatternSelection, ChangePatternsPerChannel, ChangePatternNumbers, ChangeSupersawDynamism, ChangeSupersawSpread, ChangeSupersawShape, ChangePulseWidth, ChangeFeedbackAmplitude, ChangeOperatorAmplitude, ChangeOperatorFrequency, ChangeDrumsetEnvelope, ChangePasteInstrument, ChangePreset, pickRandomPresetValue, ChangeRandomGeneratedInstrument, ChangeEQFilterType, ChangeNoteFilterType, ChangeEQFilterSimpleCut, ChangeEQFilterSimplePeak, ChangeNoteFilterSimpleCut, ChangeNoteFilterSimplePeak, ChangeScale, ChangeDetectKey, ChangeKey, ChangeRhythm, ChangeFeedbackType, ChangeAlgorithm, ChangeChipWave, ChangeNoiseWave, ChangeTransition, ChangeToggleEffects, ChangeVibrato, ChangeUnison, ChangeChord, ChangeSong, ChangePitchShift, ChangeDetune, ChangeDistortion, ChangeStringSustain, ChangeBitcrusherFreq, ChangeBitcrusherQuantization, ChangeAddEnvelope, ChangeEnvelopeSpeed, ChangeDiscreteEnvelope, ChangeAddChannelInstrument, ChangeRemoveChannelInstrument, ChangeCustomWave, ChangeOperatorWaveform, ChangeOperatorPulseWidth, ChangeSongTitle, ChangeVibratoDepth, ChangeVibratoSpeed, ChangeVibratoDelay, ChangeVibratoType, ChangePanDelay, ChangeArpeggioSpeed, ChangeFastTwoNoteArp, ChangeClicklessTransition, ChangeAliasing, ChangeSetPatternInstruments, ChangeHoldingModRecording } from \"./changes\";\n\nimport { TrackEditor } from \"./TrackEditor\";\n\nconst { button, div, input, select, span, optgroup, option, canvas } = HTML;\n\nfunction buildOptions(menu: HTMLSelectElement, items: ReadonlyArray<string | number>): HTMLSelectElement {\n    for (let index: number = 0; index < items.length; index++) {\n        menu.appendChild(option({ value: index }, items[index]));\n    }\n    return menu;\n}\n\n// Similar to the above, but adds a non-interactive header to the list.\n// @jummbus: Honestly not necessary with new HTML options interface, but not exactly necessary to change either!\n\nfunction buildHeaderedOptions(header: string, menu: HTMLSelectElement, items: ReadonlyArray<string | number>): HTMLSelectElement {\n    menu.appendChild(option({ selected: true, disabled: true, value: header }, header));\n\n    for (const item of items) {\n        menu.appendChild(option({ value: item }, item));\n    }\n    return menu;\n}\n\nfunction buildPresetOptions(isNoise: boolean, idSet: string): HTMLSelectElement {\n    const menu: HTMLSelectElement = select({ id: idSet });\n\n\n    // Show the \"spectrum\" custom type in both pitched and noise channels.\n    //const customTypeGroup: HTMLElement = optgroup({label: EditorConfig.presetCategories[0].name});\n    if (isNoise) {\n        menu.appendChild(option({ value: InstrumentType.noise }, EditorConfig.valueToPreset(InstrumentType.noise)!.name));\n        menu.appendChild(option({ value: InstrumentType.spectrum }, EditorConfig.valueToPreset(InstrumentType.spectrum)!.name));\n        menu.appendChild(option({ value: InstrumentType.drumset }, EditorConfig.valueToPreset(InstrumentType.drumset)!.name));\n    } else {\n        menu.appendChild(option({ value: InstrumentType.chip }, EditorConfig.valueToPreset(InstrumentType.chip)!.name));\n        menu.appendChild(option({ value: InstrumentType.pwm }, EditorConfig.valueToPreset(InstrumentType.pwm)!.name));\n        menu.appendChild(option({ value: InstrumentType.supersaw}, EditorConfig.valueToPreset(InstrumentType.supersaw)!.name));\n        menu.appendChild(option({ value: InstrumentType.harmonics }, EditorConfig.valueToPreset(InstrumentType.harmonics)!.name));\n        menu.appendChild(option({ value: InstrumentType.pickedString }, EditorConfig.valueToPreset(InstrumentType.pickedString)!.name));\n        menu.appendChild(option({ value: InstrumentType.spectrum }, EditorConfig.valueToPreset(InstrumentType.spectrum)!.name));\n        menu.appendChild(option({ value: InstrumentType.fm }, EditorConfig.valueToPreset(InstrumentType.fm)!.name));\n        menu.appendChild(option({ value: InstrumentType.customChipWave }, EditorConfig.valueToPreset(InstrumentType.customChipWave)!.name));\n    }\n\n    const randomGroup: HTMLElement = optgroup({ label: \"Randomize ▾\" });\n    randomGroup.appendChild(option({ value: \"randomPreset\" }, \"Random Preset\"));\n    randomGroup.appendChild(option({ value: \"randomGenerated\" }, \"Random Generated\"));\n    menu.appendChild(randomGroup);\n\n\n    for (let categoryIndex: number = 1; categoryIndex < EditorConfig.presetCategories.length; categoryIndex++) {\n        const category: PresetCategory = EditorConfig.presetCategories[categoryIndex];\n        const group: HTMLElement = optgroup({ label: category.name + \" ▾\" });\n        let foundAny: boolean = false;\n        for (let presetIndex: number = 0; presetIndex < category.presets.length; presetIndex++) {\n            const preset: Preset = category.presets[presetIndex];\n            if ((preset.isNoise == true) == isNoise) {\n                group.appendChild(option({ value: (categoryIndex << 6) + presetIndex }, preset.name));\n                foundAny = true;\n            }\n        }\n\n        // Need to re-sort some elements for readability. Can't just do this in the menu, because indices are saved in URLs and would get broken if the ordering actually changed.\n        if (category.name == \"String Presets\" && foundAny) {\n\n            // Put violin 2 after violin 1\n            let moveViolin2 = group.removeChild(group.children[11]);\n            group.insertBefore(moveViolin2, group.children[1]);\n        }\n\n        if (category.name == \"Flute Presets\" && foundAny) {\n\n            // Put flute 2 after flute 1\n            let moveFlute2 = group.removeChild(group.children[11]);\n            group.insertBefore(moveFlute2, group.children[1]);\n        }\n\n        if (category.name == \"Keyboard Presets\" && foundAny) {\n\n            // Put grand piano 2 and 3 after grand piano 1\n            let moveGrandPiano2 = group.removeChild(group.children[9]);\n            let moveGrandPiano3 = group.removeChild(group.children[9]);\n            group.insertBefore(moveGrandPiano3, group.children[1]);\n            group.insertBefore(moveGrandPiano2, group.children[1]);\n        }\n\n        if (foundAny) menu.appendChild(group);\n    }\n\n    return menu;\n}\n\nfunction setSelectedValue(menu: HTMLSelectElement, value: number, isSelect2: boolean = false): void {\n    const stringValue = value.toString();\n    if (menu.value != stringValue) {\n        menu.value = stringValue;\n\n        // Change select2 value, if this select is a member of that class.\n        if (isSelect2) {\n            $(menu).val(value).trigger('change.select2');\n        }\n    }\n}\n\nclass CustomChipCanvas {\n    private mouseDown: boolean;\n    private continuousEdit: boolean;\n    private lastX: number;\n    private lastY: number;\n    public newArray: Float32Array;\n    public renderedArray: Float32Array;\n    public renderedColor: string;\n\n    private _change: Change | null = null;\n\n    constructor(public readonly canvas: HTMLCanvasElement, private readonly _doc: SongDocument, private readonly _getChange: (newArray: Float32Array) => Change) {\n        canvas.addEventListener(\"mousemove\", this._onMouseMove);\n        canvas.addEventListener(\"mousedown\", this._onMouseDown);\n        canvas.addEventListener(\"mouseup\", this._onMouseUp);\n        canvas.addEventListener(\"mouseleave\", this._onMouseUp);\n\n        this.mouseDown = false;\n        this.continuousEdit = false;\n        this.lastX = 0;\n        this.lastY = 0;\n\n        this.newArray = new Float32Array(64);\n        this.renderedArray = new Float32Array(64);\n        this.renderedColor = \"\";\n\n        // Init waveform\n        this.redrawCanvas();\n\n    }\n\n    public redrawCanvas(): void {\n        const chipData: Float32Array = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()].customChipWave;\n        const renderColor: string = ColorConfig.getComputedChannelColor(this._doc.song, this._doc.channel).primaryNote;\n\n        // Check if the data has changed from the last render.\n        let needsRedraw: boolean = false;\n        if (renderColor != this.renderedColor) {\n            needsRedraw = true;\n        } else for (let i: number = 0; i < 64; i++) {\n            if (chipData[i] != this.renderedArray[i]) {\n                needsRedraw = true;\n                i = 64;\n            }\n        }\n        if (!needsRedraw) {\n            return;\n        }\n\n        this.renderedArray.set(chipData);\n\n        var ctx = this.canvas.getContext(\"2d\") as CanvasRenderingContext2D;\n\n        // Black BG\n        ctx.fillStyle = ColorConfig.getComputed(\"--editor-background\");\n        ctx.fillRect(0, 0, 128, 52);\n\n        // Mid-bar\n        ctx.fillStyle = ColorConfig.getComputed(\"--ui-widget-background\");\n        ctx.fillRect(0, 25, 128, 2);\n\n        // 25-75 bars\n        ctx.fillStyle = ColorConfig.getComputed(\"--track-editor-bg-pitch-dim\");\n        ctx.fillRect(0, 13, 128, 1);\n        ctx.fillRect(0, 39, 128, 1);\n\n        // Waveform\n        ctx.fillStyle = renderColor;\n\n        for (let x: number = 0; x < 64; x++) {\n            var y: number = chipData[x] + 26;\n            ctx.fillRect(x * 2, y - 2, 2, 4);\n\n            this.newArray[x] = y - 26;\n        }\n    }\n\n    private _onMouseMove = (event: MouseEvent): void => {\n        if (this.mouseDown) {\n\n            var x = (event.clientX || event.pageX) - this.canvas.getBoundingClientRect().left;\n            var y = Math.floor((event.clientY || event.pageY) - this.canvas.getBoundingClientRect().top);\n\n            if (y < 2) y = 2;\n            if (y > 50) y = 50;\n\n            var ctx = this.canvas.getContext(\"2d\") as CanvasRenderingContext2D;\n\n            if (this.continuousEdit == true && Math.abs(this.lastX - x) < 40) {\n\n                var lowerBound = (x < this.lastX) ? x : this.lastX;\n                var upperBound = (x < this.lastX) ? this.lastX : x;\n\n                for (let i = lowerBound; i <= upperBound; i += 2) {\n\n                    var progress = (Math.abs(x - this.lastX) > 2.0) ? ((x > this.lastX) ?\n                        1.0 - ((i - lowerBound) / (upperBound - lowerBound))\n                        : ((i - lowerBound) / (upperBound - lowerBound))) : 0.0;\n                    var j = Math.round(y + (this.lastY - y) * progress);\n\n                    ctx.fillStyle = ColorConfig.getComputed(\"--editor-background\");\n                    ctx.fillRect(Math.floor(i / 2) * 2, 0, 2, 53);\n                    ctx.fillStyle = ColorConfig.getComputed(\"--ui-widget-background\");\n                    ctx.fillRect(Math.floor(i / 2) * 2, 25, 2, 2);\n                    ctx.fillStyle = ColorConfig.getComputed(\"--track-editor-bg-pitch-dim\");\n                    ctx.fillRect(Math.floor(i / 2) * 2, 13, 2, 1);\n                    ctx.fillRect(Math.floor(i / 2) * 2, 39, 2, 1);\n                    ctx.fillStyle = ColorConfig.getComputedChannelColor(this._doc.song, this._doc.channel).primaryNote;\n                    ctx.fillRect(Math.floor(i / 2) * 2, j - 2, 2, 4);\n\n                    // Actually update current instrument's custom waveform\n                    this.newArray[Math.floor(i / 2)] = (j - 26);\n                }\n\n            }\n            else {\n\n                ctx.fillStyle = ColorConfig.getComputed(\"--editor-background\");\n                ctx.fillRect(Math.floor(x / 2) * 2, 0, 2, 52);\n                ctx.fillStyle = ColorConfig.getComputed(\"--ui-widget-background\");\n                ctx.fillRect(Math.floor(x / 2) * 2, 25, 2, 2);\n                ctx.fillStyle = ColorConfig.getComputed(\"--track-editor-bg-pitch-dim\");\n                ctx.fillRect(Math.floor(x / 2) * 2, 13, 2, 1);\n                ctx.fillRect(Math.floor(x / 2) * 2, 39, 2, 1);\n                ctx.fillStyle = ColorConfig.getComputedChannelColor(this._doc.song, this._doc.channel).primaryNote;\n                ctx.fillRect(Math.floor(x / 2) * 2, y - 2, 2, 4);\n\n                // Actually update current instrument's custom waveform\n                this.newArray[Math.floor(x / 2)] = (y - 26);\n\n            }\n\n            this.continuousEdit = true;\n            this.lastX = x;\n            this.lastY = y;\n\n            // Preview - update integral used for sound synthesis based on new array, not actual stored array. When mouse is released, real update will happen.\n            let instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\n\n            let sum: number = 0.0;\n            for (let i: number = 0; i < this.newArray.length; i++) {\n                sum += this.newArray[i];\n            }\n            const average: number = sum / this.newArray.length;\n\n            // Perform the integral on the wave. The chipSynth will perform the derivative to get the original wave back but with antialiasing.\n            let cumulative: number = 0;\n            let wavePrev: number = 0;\n            for (let i: number = 0; i < this.newArray.length; i++) {\n                cumulative += wavePrev;\n                wavePrev = this.newArray[i] - average;\n                instrument.customChipWaveIntegral[i] = cumulative;\n            }\n\n            instrument.customChipWaveIntegral[64] = 0.0;\n        }\n\n    }\n\n    private _onMouseDown = (event: MouseEvent): void => {\n        this.mouseDown = true;\n\n        // Allow single-click edit\n        this._onMouseMove(event);\n    }\n    private _onMouseUp = (): void => {\n        this.mouseDown = false;\n        this.continuousEdit = false;\n\n        this._whenChange();\n    }\n\n    private _whenChange = (): void => {\n        this._change = this._getChange(this.newArray);\n\n        this._doc.record(this._change!);\n\n        this._change = null;\n    };\n\n}\n\nexport class SongEditor {\n    public prompt: Prompt | null = null;\n\n    private readonly _keyboardLayout: KeyboardLayout = new KeyboardLayout(this._doc);\n    private readonly _patternEditorPrev: PatternEditor = new PatternEditor(this._doc, false, -1);\n    private readonly _patternEditor: PatternEditor = new PatternEditor(this._doc, true, 0);\n    private readonly _patternEditorNext: PatternEditor = new PatternEditor(this._doc, false, 1);\n    private readonly _trackEditor: TrackEditor = new TrackEditor(this._doc, this);\n    private readonly _muteEditor: MuteEditor = new MuteEditor(this._doc, this);\n    private readonly _loopEditor: LoopEditor = new LoopEditor(this._doc, this._trackEditor);\n    private readonly _piano: Piano = new Piano(this._doc);\n    private readonly _octaveScrollBar: OctaveScrollBar = new OctaveScrollBar(this._doc, this._piano);\n    private readonly _playButton: HTMLButtonElement = button({ class: \"playButton\", type: \"button\", title: \"Play (Space)\" }, span(\"Play\"));\n    private readonly _pauseButton: HTMLButtonElement = button({ class: \"pauseButton\", style: \"display: none;\", type: \"button\", title: \"Pause (Space)\" }, \"Pause\");\n    private readonly _recordButton: HTMLButtonElement = button({ class: \"recordButton\", style: \"display: none;\", type: \"button\", title: \"Record (Ctrl+Space)\" }, span(\"Record\"));\n    private readonly _stopButton: HTMLButtonElement = button({ class: \"stopButton\", style: \"display: none;\", type: \"button\", title: \"Stop Recording (Space)\" }, \"Stop Recording\");\n    private readonly _prevBarButton: HTMLButtonElement = button({ class: \"prevBarButton\", type: \"button\", title: \"Previous Bar (left bracket)\" });\n    private readonly _nextBarButton: HTMLButtonElement = button({ class: \"nextBarButton\", type: \"button\", title: \"Next Bar (right bracket)\" });\n    private readonly _volumeSlider: Slider = new Slider(input({ title: \"main volume\", style: \"width: 5em; flex-grow: 1; margin: 0;\", type: \"range\", min: \"0\", max: \"75\", value: \"50\", step: \"1\" }), this._doc, null, false);\n    private readonly _outVolumeBarBg: SVGRectElement = SVG.rect({ \"pointer-events\": \"none\", width: \"90%\", height: \"50%\", x: \"5%\", y: \"25%\", fill: ColorConfig.uiWidgetBackground });\n    private readonly _outVolumeBar: SVGRectElement = SVG.rect({ \"pointer-events\": \"none\", height: \"50%\", width: \"0%\", x: \"5%\", y: \"25%\", fill: \"url('#volumeGrad2')\" });\n    private readonly _outVolumeCap: SVGRectElement = SVG.rect({ \"pointer-events\": \"none\", width: \"2px\", height: \"50%\", x: \"5%\", y: \"25%\", fill: ColorConfig.uiWidgetFocus });\n    private readonly _stop1: SVGStopElement = SVG.stop({ \"stop-color\": \"lime\", offset: \"60%\" });\n    private readonly _stop2: SVGStopElement = SVG.stop({ \"stop-color\": \"orange\", offset: \"90%\" });\n    private readonly _stop3: SVGStopElement = SVG.stop({ \"stop-color\": \"red\", offset: \"100%\" });\n    private readonly _gradient: SVGGradientElement = SVG.linearGradient({ id: \"volumeGrad2\", gradientUnits: \"userSpaceOnUse\" }, this._stop1, this._stop2, this._stop3);\n    private readonly _defs: SVGDefsElement = SVG.defs({}, this._gradient);\n    private readonly _volumeBarContainer: SVGSVGElement = SVG.svg({ style: `touch-action: none; overflow: visible; margin: auto; max-width: 20vw;`, width: \"160px\", height: \"100%\", preserveAspectRatio: \"none\", viewBox: \"0 0 160 12\" },\n        this._defs,\n        this._outVolumeBarBg,\n        this._outVolumeBar,\n        this._outVolumeCap,\n    );\n    private readonly _volumeBarBox: HTMLDivElement = div({ class: \"playback-volume-bar\", style: \"height: 12px; align-self: center;\" },\n        this._volumeBarContainer,\n    );\n    private readonly _fileMenu: HTMLSelectElement = select({ style: \"width: 100%;\" },\n        option({ selected: true, disabled: true, hidden: false }, \"File\"), // todo: \"hidden\" should be true but looks wrong on mac chrome, adds checkmark next to first visible option even though it's not selected. :(\n        option({ value: \"new\" }, \"+ New Blank Song\"),\n        option({ value: \"import\" }, \"↑ Import Song... (\" + EditorConfig.ctrlSymbol + \"O)\"),\n        option({ value: \"export\" }, \"↓ Export Song... (\" + EditorConfig.ctrlSymbol + \"S)\"),\n        option({ value: \"copyUrl\" }, \"⎘ Copy Song URL\"),\n        option({ value: \"shareUrl\" }, \"⤳ Share Song URL\"),\n        option({ value: \"shortenUrl\" }, \"… Shorten Song URL\"),\n        option({ value: \"viewPlayer\" }, \"▶ View in Song Player\"),\n        option({ value: \"copyEmbed\" }, \"⎘ Copy HTML Embed Code\"),\n        option({ value: \"songRecovery\" }, \"⚠ Recover Recent Song...\"),\n    );\n    private readonly _editMenu: HTMLSelectElement = select({ style: \"width: 100%;\" },\n        option({ selected: true, disabled: true, hidden: false }, \"Edit\"), // todo: \"hidden\" should be true but looks wrong on mac chrome, adds checkmark next to first visible option even though it's not selected. :(\n        option({ value: \"undo\" }, \"Undo (Z)\"),\n        option({ value: \"redo\" }, \"Redo (Y)\"),\n        option({ value: \"copy\" }, \"Copy Pattern (C)\"),\n        option({ value: \"pasteNotes\" }, \"Paste Pattern Notes (V)\"),\n        option({ value: \"pasteNumbers\" }, \"Paste Pattern Numbers (\" + EditorConfig.ctrlSymbol + \"⇧V)\"),\n        option({ value: \"insertBars\" }, \"Insert Bar (⏎)\"),\n        option({ value: \"deleteBars\" }, \"Delete Selected Bars (⌫)\"),\n        option({ value: \"insertChannel\" }, \"Insert Channel (\" + EditorConfig.ctrlSymbol + \"⏎)\"),\n        option({ value: \"deleteChannel\" }, \"Delete Selected Channels (\" + EditorConfig.ctrlSymbol + \"⌫)\"),\n        option({ value: \"selectChannel\" }, \"Select Channel (⇧A)\"),\n        option({ value: \"selectAll\" }, \"Select All (A)\"),\n        option({ value: \"duplicatePatterns\" }, \"Duplicate Reused Patterns (D)\"),\n        option({ value: \"transposeUp\" }, \"Move Notes Up (+ or ⇧+)\"),\n        option({ value: \"transposeDown\" }, \"Move Notes Down (- or ⇧-)\"),\n        option({ value: \"moveNotesSideways\" }, \"Move All Notes Sideways... (W)\"),\n        option({ value: \"beatsPerBar\" }, \"Change Beats Per Bar...\"),\n        option({ value: \"barCount\" }, \"Change Song Length... (L)\"),\n        option({ value: \"channelSettings\" }, \"Channel Settings... (Q)\"),\n        option({ value: \"limiterSettings\" }, \"Limiter Settings... (⇧L)\"),\n    );\n    private readonly _optionsMenu: HTMLSelectElement = select({ style: \"width: 100%;\" },\n        option({ selected: true, disabled: true, hidden: false }, \"Preferences\"), // todo: \"hidden\" should be true but looks wrong on mac chrome, adds checkmark next to first visible option even though it's not selected. :(\n        option({ value: \"autoPlay\" }, \"Auto Play on Load\"),\n        option({ value: \"autoFollow\" }, \"Auto Follow Playhead\"),\n        option({ value: \"enableNotePreview\" }, \"Hear Added Notes\"),\n        option({ value: \"showLetters\" }, \"Show Piano Keys\"),\n        option({ value: \"showFifth\" }, 'Highlight \"Fifth\" Note'),\n        option({ value: \"notesOutsideScale\" }, \"Place Notes Out of Scale\"),\n        option({ value: \"setDefaultScale\" }, \"Set Current Scale as Default\"),\n        option({ value: \"showChannels\" }, \"Show All Channels\"),\n        option({ value: \"showScrollBar\" }, \"Show Octave Scroll Bar\"),\n        option({ value: \"alwaysFineNoteVol\" }, \"Always Fine Note Volume\"),\n        option({ value: \"enableChannelMuting\" }, \"Enable Channel Muting\"),\n        option({ value: \"displayBrowserUrl\" }, \"Show Song Data in URL\"),\n        option({ value: \"displayVolumeBar\" }, \"Show Playback Volume\"),\n        option({ value: \"layout\" }, \"Set Layout...\"),\n        option({ value: \"colorTheme\" }, \"Set Theme...\"),\n        option({ value: \"recordingSetup\" }, \"Note Recording...\"),\n    );\n    private readonly _scaleSelect: HTMLSelectElement = buildOptions(select(), Config.scales.map(scale => scale.name));\n    private readonly _keySelect: HTMLSelectElement = buildOptions(select(), Config.keys.map(key => key.name).reverse());\n    private readonly _tempoSlider: Slider = new Slider(input({ style: \"margin: 0; vertical-align: middle;\", type: \"range\", min: \"30\", max: \"320\", value: \"160\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeTempo(this._doc, oldValue, newValue), false);\n    private readonly _tempoStepper: HTMLInputElement = input({ style: \"width: 4em; font-size: 80%; margin-left: 0.4em; vertical-align: middle;\", type: \"number\", step: \"1\" });\n    private readonly _chorusSlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"0\", max: Config.chorusRange - 1, value: \"0\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeChorus(this._doc, oldValue, newValue), false);\n    private readonly _chorusRow: HTMLDivElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"chorus\") }, \"Chorus:\"), this._chorusSlider.container);\n    private readonly _reverbSlider: Slider = new Slider(input({ style: \"margin: 0; position: sticky,\", type: \"range\", min: \"0\", max: Config.reverbRange - 1, value: \"0\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeReverb(this._doc, oldValue, newValue), false);\n    private readonly _reverbRow: HTMLDivElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"reverb\") }, \"Reverb:\"), this._reverbSlider.container);\n    private readonly _echoSustainSlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"0\", max: Config.echoSustainRange - 1, value: \"0\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeEchoSustain(this._doc, oldValue, newValue), false);\n    private readonly _echoSustainRow: HTMLDivElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"echoSustain\") }, \"Echo:\"), this._echoSustainSlider.container);\n    private readonly _echoDelaySlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"0\", max: Config.echoDelayRange - 1, value: \"0\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeEchoDelay(this._doc, oldValue, newValue), false);\n    private readonly _echoDelayRow: HTMLDivElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"echoDelay\") }, \"Echo Delay:\"), this._echoDelaySlider.container);\n    private readonly _rhythmSelect: HTMLSelectElement = buildOptions(select(), Config.rhythms.map(rhythm => rhythm.name));\n    private readonly _pitchedPresetSelect: HTMLSelectElement = buildPresetOptions(false, \"pitchPresetSelect\");\n    private readonly _drumPresetSelect: HTMLSelectElement = buildPresetOptions(true, \"drumPresetSelect\");\n    private readonly _algorithmSelect: HTMLSelectElement = buildOptions(select(), Config.algorithms.map(algorithm => algorithm.name));\n    private readonly _algorithmSelectRow: HTMLDivElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"algorithm\") }, \"Algorithm: \"), div({ class: \"selectContainer\" }, this._algorithmSelect));\n    private readonly _instrumentButtons: HTMLButtonElement[] = [];\n    private readonly _instrumentAddButton: HTMLButtonElement = button({ type: \"button\", class: \"add-instrument last-button\" });\n    private readonly _instrumentRemoveButton: HTMLButtonElement = button({ type: \"button\", class: \"remove-instrument\" });\n    private readonly _instrumentsButtonBar: HTMLDivElement = div({ class: \"instrument-bar\" }, this._instrumentRemoveButton, this._instrumentAddButton);\n    private readonly _instrumentsButtonRow: HTMLDivElement = div({ class: \"selectRow\", style: \"display: none;\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"instrumentIndex\") }, \"Instrument:\"), this._instrumentsButtonBar);\n    private readonly _instrumentVolumeSlider: Slider = new Slider(input({ style: \"margin: 0; position: sticky;\", type: \"range\", min: Math.floor(-Config.volumeRange / 2), max: Math.floor(Config.volumeRange / 2), value: \"0\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeVolume(this._doc, oldValue, newValue), true);\n    private readonly _instrumentVolumeSliderInputBox: HTMLInputElement = input({ style: \"width: 4em; font-size: 80%\", id: \"volumeSliderInputBox\", type: \"number\", step: \"1\", min: Math.floor(-Config.volumeRange / 2), max: Math.floor(Config.volumeRange / 2), value: \"0\" });\n    private readonly _instrumentVolumeSliderTip: HTMLDivElement = div({ class: \"selectRow\", style: \"height: 1em\" }, span({ class: \"tip\", style: \"font-size: smaller;\", onclick: () => this._openPrompt(\"instrumentVolume\") }, \"Volume: \"));\n    private readonly _instrumentVolumeSliderRow: HTMLDivElement = div({ class: \"selectRow\" }, div({},\n        div({ style: `color: ${ColorConfig.secondaryText};` }, span({ class: \"tip\" }, this._instrumentVolumeSliderTip)),\n        div({ style: `color: ${ColorConfig.secondaryText}; margin-top: -3px;` }, this._instrumentVolumeSliderInputBox),\n    ), this._instrumentVolumeSlider.container);\n    private readonly _panSlider: Slider = new Slider(input({ style: \"margin: 0; position: sticky;\", type: \"range\", min: \"0\", max: Config.panMax, value: Config.panCenter, step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangePan(this._doc, oldValue, newValue), true);\n    private readonly _panDropdown: HTMLButtonElement = button({ style: \"margin-left:0em; height:1.5em; width: 10px; padding: 0px; font-size: 8px;\", onclick: () => this._toggleDropdownMenu(DropdownID.Pan) }, \"▼\");\n    private readonly _panSliderInputBox: HTMLInputElement = input({ style: \"width: 4em; font-size: 80%; \", id: \"panSliderInputBox\", type: \"number\", step: \"1\", min: \"0\", max: \"100\", value: \"0\" });\n    private readonly _panSliderRow: HTMLDivElement = div({ class: \"selectRow\" }, div({},\n        span({ class: \"tip\", tabindex: \"0\", style: \"height:1em; font-size: smaller;\", onclick: () => this._openPrompt(\"pan\") }, \"Pan: \"),\n        div({ style: \"color: \" + ColorConfig.secondaryText + \"; margin-top: -3px;\" }, this._panSliderInputBox),\n    ), this._panDropdown, this._panSlider.container);\n    private readonly _panDelaySlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"0\", max: Config.modulators.dictionary[\"pan delay\"].maxRawVol, value: \"0\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangePanDelay(this._doc, oldValue, newValue), false);\n    private readonly _panDelayRow: HTMLElement = div({ class: \"selectRow dropFader\" }, span({ class: \"tip\", style: \"margin-left:4px;\", onclick: () => this._openPrompt(\"panDelay\") }, \"‣ Delay:\"), this._panDelaySlider.container);\n    private readonly _panDropdownGroup: HTMLElement = div({ class: \"editor-controls\", style: \"display: none;\" }, this._panDelayRow);\n    private readonly _chipWaveSelect: HTMLSelectElement = buildOptions(select(), Config.chipWaves.map(wave => wave.name));\n    private readonly _chipNoiseSelect: HTMLSelectElement = buildOptions(select(), Config.chipNoises.map(wave => wave.name));\n    private readonly _chipWaveSelectRow: HTMLDivElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"chipWave\") }, \"Wave: \"), div({ class: \"selectContainer\" }, this._chipWaveSelect));\n    private readonly _chipNoiseSelectRow: HTMLDivElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"chipNoise\") }, \"Noise: \"), div({ class: \"selectContainer\" }, this._chipNoiseSelect));\n    private readonly _fadeInOutEditor: FadeInOutEditor = new FadeInOutEditor(this._doc);\n    private readonly _fadeInOutRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"fadeInOut\") }, \"Fade:\"), this._fadeInOutEditor.container);\n    private readonly _transitionSelect: HTMLSelectElement = buildOptions(select(), Config.transitions.map(transition => transition.name));\n    private readonly _transitionDropdown: HTMLButtonElement = button({ style: \"margin-left:0em; height:1.5em; width: 10px; padding: 0px; font-size: 8px;\", onclick: () => this._toggleDropdownMenu(DropdownID.Transition) }, \"▼\");\n    private readonly _transitionRow: HTMLDivElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"transition\") }, \"Transition:\"), this._transitionDropdown, div({ class: \"selectContainer\", style: \"width: 52.5%;\" }, this._transitionSelect));\n    private readonly _clicklessTransitionBox: HTMLInputElement = input({ type: \"checkbox\", style: \"width: 1em; padding: 0; margin-right: 4em;\" });\n    private readonly _clicklessTransitionRow: HTMLElement = div({ class: \"selectRow dropFader\" }, span({ class: \"tip\", style: \"margin-left:4px;\", onclick: () => this._openPrompt(\"clicklessTransition\") }, \"‣ Clickless:\"), this._clicklessTransitionBox);\n    private readonly _transitionDropdownGroup: HTMLElement = div({ class: \"editor-controls\", style: \"display: none;\" }, this._clicklessTransitionRow);\n\n    private readonly _effectsSelect: HTMLSelectElement = select(option({ selected: true, disabled: true, hidden: false })); // todo: \"hidden\" should be true but looks wrong on mac chrome, adds checkmark next to first visible option even though it's not selected. :(\n    private readonly _eqFilterSimpleButton: HTMLButtonElement = button({ style: \"font-size: x-small; width: 50%; height: 40%\", class: \"no-underline\", onclick: () => this._switchEQFilterType(true) }, \"simple\");\n    private readonly _eqFilterAdvancedButton: HTMLButtonElement = button({ style: \"font-size: x-small; width: 50%; height: 40%\", class: \"last-button no-underline\", onclick: () => this._switchEQFilterType(false) }, \"advanced\");\n    private readonly _eqFilterTypeRow: HTMLElement = div({ class: \"selectRow\", style: \"padding-top: 4px; margin-bottom: 0px;\" }, span({ style: \"font-size: x-small;\", class: \"tip\", onclick: () => this._openPrompt(\"filterType\") }, \"EQ Filt.Type:\"), div({ class: \"instrument-bar\" }, this._eqFilterSimpleButton, this._eqFilterAdvancedButton));\n    private readonly _eqFilterEditor: FilterEditor = new FilterEditor(this._doc);\n    private readonly _eqFilterZoom: HTMLButtonElement = button({ style: \"margin-left:0em; padding-left:0.2em; height:1.5em; max-width: 12px;\", onclick: () => this._openPrompt(\"customEQFilterSettings\") }, \"+\");\n    private readonly _eqFilterRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"eqFilter\") }, \"EQ Filt:\"), this._eqFilterZoom, this._eqFilterEditor.container);\n    private readonly _eqFilterSimpleCutSlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"0\", max: Config.filterSimpleCutRange - 1, value: \"6\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeEQFilterSimpleCut(this._doc, oldValue, newValue), false);\n    private _eqFilterSimpleCutRow: HTMLDivElement = div({ class: \"selectRow\", title: \"Low-pass Filter Cutoff Frequency\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"filterCutoff\") }, \"Filter Cut:\"), this._eqFilterSimpleCutSlider.container);\n    private readonly _eqFilterSimplePeakSlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"0\", max: Config.filterSimplePeakRange - 1, value: \"6\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeEQFilterSimplePeak(this._doc, oldValue, newValue), false);\n    private _eqFilterSimplePeakRow: HTMLDivElement = div({ class: \"selectRow\", title: \"Low-pass Filter Peak Resonance\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"filterResonance\") }, \"Filter Peak:\"), this._eqFilterSimplePeakSlider.container);\n\n    private readonly _noteFilterSimpleButton: HTMLButtonElement = button({ style: \"font-size: x-small; width: 50%; height: 40%\", class: \"no-underline\", onclick: () => this._switchNoteFilterType(true) }, \"simple\");\n    private readonly _noteFilterAdvancedButton: HTMLButtonElement = button({ style: \"font-size: x-small; width: 50%; height: 40%\", class: \"last-button no-underline\", onclick: () => this._switchNoteFilterType(false) }, \"advanced\");\n    private readonly _noteFilterTypeRow: HTMLElement = div({ class: \"selectRow\", style: \"padding-top: 4px; margin-bottom: 0px;\" }, span({ style: \"font-size: x-small;\", class: \"tip\", onclick: () => this._openPrompt(\"filterType\") }, \"Note Filt.Type:\"), div({ class: \"instrument-bar\" }, this._noteFilterSimpleButton, this._noteFilterAdvancedButton));\n    private readonly _noteFilterEditor: FilterEditor = new FilterEditor(this._doc, true);\n    private readonly _noteFilterZoom: HTMLButtonElement = button({ style: \"margin-left:0em; padding-left:0.2em; height:1.5em; max-width: 12px;\", onclick: () => this._openPrompt(\"customNoteFilterSettings\") }, \"+\");\n    private readonly _noteFilterRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"noteFilter\") }, \"Note Filt:\"), this._noteFilterZoom, this._noteFilterEditor.container);\n    private readonly _supersawDynamismSlider: Slider = new Slider(input({style: \"margin: 0;\", type: \"range\", min: \"0\", max: Config.supersawDynamismMax, value: \"0\", step: \"1\"}), this._doc, (oldValue: number, newValue: number) => new ChangeSupersawDynamism(this._doc, oldValue, newValue), false);\n\tprivate readonly _supersawDynamismRow: HTMLDivElement = div({class: \"selectRow\"}, span({class: \"tip\", onclick: ()=>this._openPrompt(\"supersawDynamism\")}, \"Dynamism:\"), this._supersawDynamismSlider.container);\n\tprivate readonly _supersawSpreadSlider: Slider = new Slider(input({style: \"margin: 0;\", type: \"range\", min: \"0\", max: Config.supersawSpreadMax, value: \"0\", step: \"1\"}), this._doc, (oldValue: number, newValue: number) => new ChangeSupersawSpread(this._doc, oldValue, newValue), false);\n\tprivate readonly _supersawSpreadRow: HTMLDivElement = div({class: \"selectRow\"}, span({class: \"tip\", onclick: ()=>this._openPrompt(\"supersawSpread\")}, \"Spread:\"), this._supersawSpreadSlider.container);\n\tprivate readonly _supersawShapeSlider: Slider = new Slider(input({style: \"margin: 0;\", type: \"range\", min: \"0\", max: Config.supersawShapeMax, value: \"0\", step: \"1\"}), this._doc, (oldValue: number, newValue: number) => new ChangeSupersawShape(this._doc, oldValue, newValue), false);\n\tprivate readonly _supersawShapeRow: HTMLDivElement = div({class: \"selectRow\"}, span({class: \"tip\", onclick: ()=>this._openPrompt(\"supersawShape\"), style: \"overflow: clip;\"}, \"Saw↔Pulse:\"), this._supersawShapeSlider.container);\n\t\n    private readonly _noteFilterSimpleCutSlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"0\", max: Config.filterSimpleCutRange - 1, value: \"6\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeNoteFilterSimpleCut(this._doc, oldValue, newValue), false);\n    private _noteFilterSimpleCutRow: HTMLDivElement = div({ class: \"selectRow\", title: \"Low-pass Filter Cutoff Frequency\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"filterCutoff\") }, \"Filter Cut:\"), this._noteFilterSimpleCutSlider.container);\n    private readonly _noteFilterSimplePeakSlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"0\", max: Config.filterSimplePeakRange - 1, value: \"6\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeNoteFilterSimplePeak(this._doc, oldValue, newValue), false);\n    private _noteFilterSimplePeakRow: HTMLDivElement = div({ class: \"selectRow\", title: \"Low-pass Filter Peak Resonance\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"filterResonance\") }, \"Filter Peak:\"), this._noteFilterSimplePeakSlider.container);\n\n    private readonly _pulseWidthSlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"1\", max: Config.pulseWidthRange, value: \"1\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangePulseWidth(this._doc, oldValue, newValue), false);\n    private readonly _pwmSliderInputBox: HTMLInputElement = input({ style: \"width: 4em; font-size: 80%; \", id: \"pwmSliderInputBox\", type: \"number\", step: \"1\", min: \"1\", max: Config.pulseWidthRange, value: \"1\" });\n    private readonly _pulseWidthRow: HTMLDivElement = div({ class: \"selectRow\" }, div({},\n        span({ class: \"tip\", tabindex: \"0\", style: \"height:1em; font-size: smaller;\", onclick: () => this._openPrompt(\"pulseWidth\") }, \"PulseWidth:\"),\n        div({ style: `color: ${ColorConfig.secondaryText}; margin-top: -3px;` }, this._pwmSliderInputBox)\n        ), this._pulseWidthSlider.container);\n\n    private readonly _pitchShiftSlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"0\", max: Config.pitchShiftRange - 1, value: \"0\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangePitchShift(this._doc, oldValue, newValue), true);\n    private readonly _pitchShiftTonicMarkers: HTMLDivElement[] = [div({ class: \"pitchShiftMarker\", style: { color: ColorConfig.tonic } }), div({ class: \"pitchShiftMarker\", style: { color: ColorConfig.tonic, left: \"50%\" } }), div({ class: \"pitchShiftMarker\", style: { color: ColorConfig.tonic, left: \"100%\" } })];\n    private readonly _pitchShiftFifthMarkers: HTMLDivElement[] = [div({ class: \"pitchShiftMarker\", style: { color: ColorConfig.fifthNote, left: (100 * 7 / 24) + \"%\" } }), div({ class: \"pitchShiftMarker\", style: { color: ColorConfig.fifthNote, left: (100 * 19 / 24) + \"%\" } })];\n    private readonly _pitchShiftMarkerContainer: HTMLDivElement = div({ style: \"display: flex; position: relative;\" }, this._pitchShiftSlider.container, div({ class: \"pitchShiftMarkerContainer\" }, this._pitchShiftTonicMarkers, this._pitchShiftFifthMarkers));\n    private readonly _pitchShiftRow: HTMLDivElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"pitchShift\") }, \"Pitch Shift:\"), this._pitchShiftMarkerContainer);\n    private readonly _detuneSlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: Config.detuneMin - Config.detuneCenter, max: Config.detuneMax - Config.detuneCenter, value: 0, step: \"4\" }), this._doc, (oldValue: number, newValue: number) => new ChangeDetune(this._doc, oldValue, newValue), true);\n    private readonly _detuneSliderInputBox: HTMLInputElement = input({ style: \"width: 4em; font-size: 80%; \", id: \"detuneSliderInputBox\", type: \"number\", step: \"1\", min: Config.detuneMin - Config.detuneCenter, max: Config.detuneMax - Config.detuneCenter, value: 0 });\n    private readonly _detuneSliderRow: HTMLDivElement = div({ class: \"selectRow\" }, div({},\n        span({ class: \"tip\", style: \"height:1em; font-size: smaller;\", onclick: () => this._openPrompt(\"detune\") }, \"Detune: \"),\n        div({ style: `color: ${ColorConfig.secondaryText}; margin-top: -3px;` }, this._detuneSliderInputBox),\n    ), this._detuneSlider.container);\n    private readonly _distortionSlider: Slider = new Slider(input({ style: \"margin: 0; position: sticky;\", type: \"range\", min: \"0\", max: Config.distortionRange - 1, value: \"0\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeDistortion(this._doc, oldValue, newValue), false);\n    private readonly _distortionRow: HTMLDivElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"distortion\") }, \"Distortion:\"), this._distortionSlider.container);\n    private readonly _aliasingBox: HTMLInputElement = input({ type: \"checkbox\", style: \"width: 1em; padding: 0; margin-right: 4em;\" });\n    private readonly _aliasingRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", style: \"margin-left:10px;\", onclick: () => this._openPrompt(\"aliases\") }, \"Aliasing:\"), this._aliasingBox);\n    private readonly _bitcrusherQuantizationSlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"0\", max: Config.bitcrusherQuantizationRange - 1, value: \"0\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeBitcrusherQuantization(this._doc, oldValue, newValue), false);\n    private readonly _bitcrusherQuantizationRow: HTMLDivElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"bitcrusherQuantization\") }, \"Bit Crush:\"), this._bitcrusherQuantizationSlider.container);\n    private readonly _bitcrusherFreqSlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"0\", max: Config.bitcrusherFreqRange - 1, value: \"0\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeBitcrusherFreq(this._doc, oldValue, newValue), false);\n    private readonly _bitcrusherFreqRow: HTMLDivElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"bitcrusherFreq\") }, \"Freq Crush:\"), this._bitcrusherFreqSlider.container);\n    private readonly _stringSustainSlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"0\", max: Config.stringSustainRange - 1, value: \"0\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeStringSustain(this._doc, oldValue, newValue), false);\n    private readonly _stringSustainLabel: HTMLSpanElement = span({class: \"tip\", onclick: ()=>this._openPrompt(\"stringSustain\")}, \"Sustain:\");\n\tprivate readonly _stringSustainRow: HTMLDivElement = div({class: \"selectRow\"}, this._stringSustainLabel, this._stringSustainSlider.container);\n\tprivate readonly _unisonSelect: HTMLSelectElement = buildOptions(select(), Config.unisons.map(unison => unison.name));\n    private readonly _unisonSelectRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"unison\") }, \"Unison:\"), div({ class: \"selectContainer\" }, this._unisonSelect));\n    private readonly _chordSelect: HTMLSelectElement = buildOptions(select(), Config.chords.map(chord => chord.name));\n    private readonly _chordDropdown: HTMLButtonElement = button({ style: \"margin-left:0em; height:1.5em; width: 10px; padding: 0px; font-size: 8px;\", onclick: () => this._toggleDropdownMenu(DropdownID.Chord) }, \"▼\");\n\n    private readonly _chordSelectRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"chords\") }, \"Chords:\"), this._chordDropdown, div({ class: \"selectContainer\" }, this._chordSelect));\n    private readonly _arpeggioSpeedDisplay: HTMLSpanElement = span({ style: `color: ${ColorConfig.secondaryText}; font-size: smaller; text-overflow: clip;` }, \"x1\");\n    private readonly _arpeggioSpeedSlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"0\", max: Config.modulators.dictionary[\"arp speed\"].maxRawVol, value: \"0\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeArpeggioSpeed(this._doc, oldValue, newValue), false);\n    private readonly _arpeggioSpeedRow: HTMLElement = div({ class: \"selectRow dropFader\" }, span({ class: \"tip\", style: \"margin-left:4px;\", onclick: () => this._openPrompt(\"arpeggioSpeed\") }, \"‣ Spd:\"), this._arpeggioSpeedDisplay, this._arpeggioSpeedSlider.container);\n    private readonly _twoNoteArpBox: HTMLInputElement = input({ type: \"checkbox\", style: \"width: 1em; padding: 0; margin-right: 4em;\" });\n    private readonly _twoNoteArpRow: HTMLElement = div({ class: \"selectRow dropFader\" }, span({ class: \"tip\", style: \"margin-left:4px;\", onclick: () => this._openPrompt(\"twoNoteArpeggio\") }, \"‣ Fast Two-Note:\"), this._twoNoteArpBox);\n    private readonly _chordDropdownGroup: HTMLElement = div({ class: \"editor-controls\", style: \"display: none;\" }, this._arpeggioSpeedRow, this._twoNoteArpRow);\n\n    private readonly _vibratoSelect: HTMLSelectElement = buildOptions(select(), Config.vibratos.map(vibrato => vibrato.name));\n    private readonly _vibratoDropdown: HTMLButtonElement = button({ style: \"margin-left:0em; height:1.5em; width: 10px; padding: 0px; font-size: 8px;\", onclick: () => this._toggleDropdownMenu(DropdownID.Vibrato) }, \"▼\");\n    private readonly _vibratoSelectRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"vibrato\") }, \"Vibrato:\"), this._vibratoDropdown, div({ class: \"selectContainer\", style: \"width: 61.5%;\" }, this._vibratoSelect));\n    private readonly _vibratoDepthSlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"0\", max: Config.modulators.dictionary[\"vibrato depth\"].maxRawVol, value: \"0\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeVibratoDepth(this._doc, oldValue, newValue), false);\n    private readonly _vibratoDepthRow: HTMLElement = div({ class: \"selectRow dropFader\" }, span({ class: \"tip\", style: \"margin-left:4px;\", onclick: () => this._openPrompt(\"vibratoDepth\") }, \"‣ Depth:\"), this._vibratoDepthSlider.container);\n    private readonly _vibratoSpeedDisplay: HTMLSpanElement = span({ style: `color: ${ColorConfig.secondaryText}; font-size: smaller; text-overflow: clip;` }, \"x1\");\n    private readonly _vibratoSpeedSlider: Slider = new Slider(input({ style: \"margin: 0; text-overflow: clip;\", type: \"range\", min: \"0\", max: Config.modulators.dictionary[\"vibrato speed\"].maxRawVol, value: \"0\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeVibratoSpeed(this._doc, oldValue, newValue), false);\n    private readonly _vibratoSpeedRow: HTMLElement = div({ class: \"selectRow dropFader\" }, span({ class: \"tip\", style: \"margin-left:4px;\", onclick: () => this._openPrompt(\"vibratoSpeed\") }, \"‣ Spd:\"), this._vibratoSpeedDisplay, this._vibratoSpeedSlider.container);\n    private readonly _vibratoDelaySlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"0\", max: Config.modulators.dictionary[\"vibrato delay\"].maxRawVol, value: \"0\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeVibratoDelay(this._doc, oldValue, newValue), false);\n    private readonly _vibratoDelayRow: HTMLElement = div({ class: \"selectRow dropFader\" }, span({ class: \"tip\", style: \"margin-left:4px;\", onclick: () => this._openPrompt(\"vibratoDelay\") }, \"‣ Delay:\"), this._vibratoDelaySlider.container);\n    private readonly _vibratoTypeSelect: HTMLSelectElement = buildOptions(select(), Config.vibratoTypes.map(vibrato => vibrato.name));\n    private readonly _vibratoTypeSelectRow: HTMLElement = div({ class: \"selectRow dropFader\" }, span({ class: \"tip\", style: \"margin-left:4px;\", onclick: () => this._openPrompt(\"vibratoType\") }, \"‣ Type:\"), div({ class: \"selectContainer\", style: \"width: 61.5%;\" }, this._vibratoTypeSelect));\n    private readonly _vibratoDropdownGroup: HTMLElement = div({ class: \"editor-controls\", style: `display: none;` }, this._vibratoDepthRow, this._vibratoSpeedRow, this._vibratoDelayRow, this._vibratoTypeSelectRow);\n    private readonly _phaseModGroup: HTMLElement = div({ class: \"editor-controls\" });\n    private readonly _feedbackTypeSelect: HTMLSelectElement = buildOptions(select(), Config.feedbacks.map(feedback => feedback.name));\n    private readonly _feedbackRow1: HTMLDivElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"feedbackType\") }, \"Feedback:\"), div({ class: \"selectContainer\" }, this._feedbackTypeSelect));\n    private readonly _spectrumEditor: SpectrumEditor = new SpectrumEditor(this._doc, null);\n    private readonly _spectrumRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"spectrum\") }, \"Spectrum:\"), this._spectrumEditor.container);\n    private readonly _harmonicsEditor: HarmonicsEditor = new HarmonicsEditor(this._doc);\n    private readonly _harmonicsRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"harmonics\") }, \"Harmonics:\"), this._harmonicsEditor.container);\n\n    private readonly _envelopeEditor: EnvelopeEditor = new EnvelopeEditor(this._doc);\n    private readonly _discreteEnvelopeBox: HTMLInputElement = input({ type: \"checkbox\", style: \"width: 1em; padding: 0; margin-right: 4em;\" });\n    private readonly _discreteEnvelopeRow: HTMLElement = div({ class: \"selectRow dropFader\" }, span({ class: \"tip\", style: \"margin-left:4px;\", onclick: () => this._openPrompt(\"discreteEnvelope\") }, \"‣ Discrete:\"), this._discreteEnvelopeBox);\n    private readonly _envelopeSpeedDisplay: HTMLSpanElement = span({ style: `color: ${ColorConfig.secondaryText}; font-size: smaller; text-overflow: clip;` }, \"x1\");\n    private readonly _envelopeSpeedSlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"0\", max: Config.modulators.dictionary[\"envelope speed\"].maxRawVol, value: \"0\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeEnvelopeSpeed(this._doc, oldValue, newValue), false);\n    private readonly _envelopeSpeedRow: HTMLElement = div({ class: \"selectRow dropFader\" }, span({ class: \"tip\", style: \"margin-left:4px;\", onclick: () => this._openPrompt(\"envelopeSpeed\") }, \"‣ Spd:\"), this._envelopeSpeedDisplay, this._envelopeSpeedSlider.container);\n    private readonly _envelopeDropdownGroup: HTMLElement = div({ class: \"editor-controls\", style: \"display: none;\" }, this._discreteEnvelopeRow, this._envelopeSpeedRow);\n    private readonly _envelopeDropdown: HTMLButtonElement = button({ style: \"margin-left:0em; margin-right: 1em; height:1.5em; width: 10px; padding: 0px; font-size: 8px;\", onclick: () => this._toggleDropdownMenu(DropdownID.Envelope) }, \"▼\");\n   \n    private readonly _drumsetGroup: HTMLElement = div({ class: \"editor-controls\" });\n    private readonly _modulatorGroup: HTMLElement = div({ class: \"editor-controls\" });\n    private readonly _modNameRows: HTMLElement[];\n    private readonly _modChannelBoxes: HTMLSelectElement[];\n    private readonly _modInstrumentBoxes: HTMLSelectElement[];\n    private readonly _modSetRows: HTMLElement[];\n    private readonly _modSetBoxes: HTMLSelectElement[];\n    private readonly _modFilterRows: HTMLElement[];\n    private readonly _modFilterBoxes: HTMLSelectElement[];\n    private readonly _modTargetIndicators: SVGElement[];\n\n    private readonly _instrumentCopyButton: HTMLButtonElement = button({ style: \"max-width:86px; width: 86px;\", class: \"copyButton\", title: \"Copy Instrument (⇧C)\" }, [\n        \"Copy\",\n        // Copy icon:\n        SVG.svg({ style: \"flex-shrink: 0; position: absolute; left: 0; top: 50%; margin-top: -1em; pointer-events: none;\", width: \"2em\", height: \"2em\", viewBox: \"-5 -21 26 26\" }, [\n            SVG.path({ d: \"M 0 -15 L 1 -15 L 1 0 L 13 0 L 13 1 L 0 1 L 0 -15 z M 2 -1 L 2 -17 L 10 -17 L 14 -13 L 14 -1 z M 3 -2 L 13 -2 L 13 -12 L 9 -12 L 9 -16 L 3 -16 z\", fill: \"currentColor\" }),\n        ]),\n    ]);\n    private readonly _instrumentPasteButton: HTMLButtonElement = button({ style: \"max-width:86px;\", class: \"pasteButton\", title: \"Paste Instrument (⇧V)\" }, [\n        \"Paste\",\n        // Paste icon:\n        SVG.svg({ style: \"flex-shrink: 0; position: absolute; left: 0; top: 50%; margin-top: -1em; pointer-events: none;\", width: \"2em\", height: \"2em\", viewBox: \"0 0 26 26\" }, [\n            SVG.path({ d: \"M 8 18 L 6 18 L 6 5 L 17 5 L 17 7 M 9 8 L 16 8 L 20 12 L 20 22 L 9 22 z\", stroke: \"currentColor\", fill: \"none\" }),\n            SVG.path({ d: \"M 9 3 L 14 3 L 14 6 L 9 6 L 9 3 z M 16 8 L 20 12 L 16 12 L 16 8 z\", fill: \"currentColor\", }),\n        ]),\n    ]);\n\n    private readonly _customWaveDrawCanvas: CustomChipCanvas = new CustomChipCanvas(canvas({ width: 128, height: 52, style: \"border:2px solid \" + ColorConfig.uiWidgetBackground, id: \"customWaveDrawCanvas\" }), this._doc, (newArray: Float32Array) => new ChangeCustomWave(this._doc, newArray));\n    private readonly _customWavePresetDrop: HTMLSelectElement = buildHeaderedOptions(\"Load Preset\", select({ style: \"width: 50%; height:1.5em; text-align: center; text-align-last: center;\" }),\n        Config.chipWaves.map(wave => wave.name)\n    );\n    private readonly _customWaveZoom: HTMLButtonElement = button({ style: \"margin-left:0.5em; height:1.5em; max-width: 20px;\", onclick: () => this._openPrompt(\"customChipSettings\") }, \"+\");\n\n    private readonly _customWaveDraw: HTMLDivElement = div({ style: \"height:80px; margin-top:10px; margin-bottom:5px\" }, [\n        div({ style: \"height:54px; display:flex; justify-content:center;\" }, [this._customWaveDrawCanvas.canvas]),\n        div({ style: \"margin-top:5px; display:flex; justify-content:center;\" }, [this._customWavePresetDrop, this._customWaveZoom]),\n    ]);\n\n    private readonly _songTitleInputBox: InputBox = new InputBox(input({ style: \"font-weight:bold; border:none; width: 98%; background-color:${ColorConfig.editorBackground}; color:${ColorConfig.primaryText}; text-align:center\", maxlength: \"30\", type: \"text\", value: EditorConfig.versionDisplayName }), this._doc, (oldValue: string, newValue: string) => new ChangeSongTitle(this._doc, oldValue, newValue));\n\n\n    private readonly _feedbackAmplitudeSlider: Slider = new Slider(input({ type: \"range\", min: \"0\", max: Config.operatorAmplitudeMax, value: \"0\", step: \"1\", title: \"Feedback Amplitude\" }), this._doc, (oldValue: number, newValue: number) => new ChangeFeedbackAmplitude(this._doc, oldValue, newValue), false);\n    private readonly _feedbackRow2: HTMLDivElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"feedbackVolume\") }, \"Fdback Vol:\"), this._feedbackAmplitudeSlider.container);\n    /*\n     * @jummbus - my very real, valid reason for cutting this button: I don't like it.\n     * \n    private readonly _customizeInstrumentButton: HTMLButtonElement = button({type: \"button\", style: \"margin: 2px 0\"},\n\n        \"Customize Instrument\",\n    );\n    */\n    private readonly _addEnvelopeButton: HTMLButtonElement = button({ type: \"button\", class: \"add-envelope\" });\n    private readonly _customInstrumentSettingsGroup: HTMLDivElement = div({ class: \"editor-controls\" },\n        this._panSliderRow,\n        this._panDropdownGroup,\n        this._chipWaveSelectRow,\n        this._chipNoiseSelectRow,\n        this._customWaveDraw,\n        this._eqFilterTypeRow,\n        this._eqFilterRow,\n        this._eqFilterSimpleCutRow,\n        this._eqFilterSimplePeakRow,\n        this._fadeInOutRow,\n        this._algorithmSelectRow,\n        this._phaseModGroup,\n        this._feedbackRow1,\n        this._feedbackRow2,\n        this._spectrumRow,\n        this._harmonicsRow,\n        this._drumsetGroup,\n\t\tthis._supersawDynamismRow,\n\t\tthis._supersawSpreadRow,\n\t\tthis._supersawShapeRow,\n        this._pulseWidthRow,\n        this._stringSustainRow,\n        this._unisonSelectRow,\n        div({ style: `padding: 2px 0; margin-left: 2em; display: flex; align-items: center;` },\n            span({ style: `flex-grow: 1; text-align: center;` }, span({ class: \"tip\", onclick: () => this._openPrompt(\"effects\") }, \"Effects\")),\n            div({ class: \"effects-menu\" }, this._effectsSelect),\n        ),\n        this._transitionRow,\n        this._transitionDropdownGroup,\n        this._chordSelectRow,\n        this._chordDropdownGroup,\n        this._pitchShiftRow,\n        this._detuneSliderRow,\n        this._vibratoSelectRow,\n        this._vibratoDropdownGroup,\n        this._noteFilterTypeRow,\n        this._noteFilterRow,\n        this._noteFilterSimpleCutRow,\n        this._noteFilterSimplePeakRow,\n        this._distortionRow,\n        this._aliasingRow,\n        this._bitcrusherQuantizationRow,\n        this._bitcrusherFreqRow,\n        this._chorusRow,\n        this._echoSustainRow,\n        this._echoDelayRow,\n        this._reverbRow,\n        div({ style: `padding: 2px 0; margin-left: 2em; display: flex; align-items: center;` },\n            span({ style: `flex-grow: 1; text-align: center;` }, span({ class: \"tip\", onclick: () => this._openPrompt(\"envelopes\") }, \"Envelopes\")),\n            this._envelopeDropdown,\n            this._addEnvelopeButton,\n        ),\n        this._envelopeDropdownGroup,\n        this._envelopeEditor.container,\n    );\n    private readonly _instrumentCopyGroup: HTMLDivElement = div({ class: \"editor-controls\" },\n        div({ class: \"selectRow\" },\n            this._instrumentCopyButton,\n            this._instrumentPasteButton,\n        ),\n    );\n    private readonly _instrumentSettingsTextRow: HTMLDivElement = div({ id: \"instrumentSettingsText\", style: `padding: 3px 0; max-width: 15em; text-align: center; color: ${ColorConfig.secondaryText};` },\n        \"Instrument Settings\"\n    );\n    private readonly _instrumentTypeSelectRow: HTMLDivElement = div({ class: \"selectRow\", id: \"typeSelectRow\" },\n        span({ class: \"tip\", onclick: () => this._openPrompt(\"instrumentType\") }, \"Type:\"),\n        div(\n            div({ class: \"pitchSelect\" }, this._pitchedPresetSelect),\n            div({ class: \"drumSelect\" }, this._drumPresetSelect)\n        ),\n    );\n    private readonly _instrumentSettingsGroup: HTMLDivElement = div({ class: \"editor-controls\" },\n        this._instrumentSettingsTextRow,\n        this._instrumentsButtonRow,\n        this._instrumentTypeSelectRow,\n        this._instrumentVolumeSliderRow,\n        //this._customizeInstrumentButton,\n        this._customInstrumentSettingsGroup,\n    );\n    private readonly _usedPatternIndicator: SVGElement = SVG.path({ d: \"M -6 -6 H 6 V 6 H -6 V -6 M -2 -3 L -2 -3 L -1 -4 H 1 V 4 H -1 V -1.2 L -1.2 -1 H -2 V -3 z\", fill: ColorConfig.indicatorSecondary, \"fill-rule\": \"evenodd\" });\n    private readonly _usedInstrumentIndicator: SVGElement = SVG.path({ d: \"M -6 -0.8 H -3.8 V -6 H 0.8 V 4.4 H 2.2 V -0.8 H 6 V 0.8 H 3.8 V 6 H -0.8 V -4.4 H -2.2 V 0.8 H -6 z\", fill: ColorConfig.indicatorSecondary });\n    private readonly _jumpToModIndicator: SVGElement = SVG.svg({ style: \"width: 92%; height: 1.3em; flex-shrink: 0; position: absolute;\", viewBox: \"0 0 200 200\" }, [\n        SVG.path({ d: \"M90 155 l0 -45 -45 0 c-25 0 -45 -4 -45 -10 0 -5 20 -10 45 -10 l45 0 0 -45 c0 -25 5 -45 10 -45 6 0 10 20 10 45 l0 45 45 0 c25 0 45 5 45 10 0 6 -20 10 -45 10 l -45 0 0 45 c0 25 -4 45 -10 45 -5 0 -10 -20 -10 -45z\" }),\n        SVG.path({ d: \"M42 158 c-15 -15 -16 -38 -2 -38 6 0 10 7 10 15 0 8 7 15 15 15 8 0 15 5 15 10 0 14 -23 13 -38 -2z\" }),\n        SVG.path({ d: \"M120 160 c0 -5 7 -10 15 -10 8 0 15 -7 15 -15 0 -8 5 -15 10 -15 14 0 13 23 -2 38 -15 15 -38 16 -38 2z\" }),\n        SVG.path({ d: \"M32 58 c3 -23 48 -40 48 -19 0 6 -7 11 -15 11 -8 0 -15 7 -15 15 0 8 -5 15 -11 15 -6 0 -9 -10 -7 -22z\" }),\n        SVG.path({ d: \"M150 65 c0 -8 -7 -15 -15 -15 -8 0 -15 -4 -15 -10 0 -14 23 -13 38 2 15 15 16 38 2 38 -5 0 -10 -7 -10 -15z\" })]);\n\n    private readonly _promptContainer: HTMLDivElement = div({ class: \"promptContainer\", style: \"display: none;\" });\n    private readonly _zoomInButton: HTMLButtonElement = button({ class: \"zoomInButton\", type: \"button\", title: \"Zoom In\" });\n    private readonly _zoomOutButton: HTMLButtonElement = button({ class: \"zoomOutButton\", type: \"button\", title: \"Zoom Out\" });\n    private readonly _patternEditorRow: HTMLDivElement = div({ style: \"flex: 1; height: 100%; display: flex; overflow: hidden; justify-content: center;\" },\n        this._patternEditorPrev.container,\n        this._patternEditor.container,\n        this._patternEditorNext.container,\n    );\n    private readonly _patternArea: HTMLDivElement = div({ class: \"pattern-area\" },\n        this._piano.container,\n        this._patternEditorRow,\n        this._octaveScrollBar.container,\n        this._zoomInButton,\n        this._zoomOutButton,\n    );\n    private readonly _trackContainer: HTMLDivElement = div({ class: \"trackContainer\" },\n        this._trackEditor.container,\n        this._loopEditor.container,\n    );\n    private readonly _trackVisibleArea: HTMLDivElement = div({ style: \"position: absolute; width: 100%; height: 100%; pointer-events: none;\" });\n    private readonly _trackAndMuteContainer: HTMLDivElement = div({ class: \"trackAndMuteContainer\" },\n        this._muteEditor.container,\n        this._trackContainer,\n        this._trackVisibleArea,\n    );\n    public readonly _barScrollBar: BarScrollBar = new BarScrollBar(this._doc);\n    private readonly _trackArea: HTMLDivElement = div({ class: \"track-area\" },\n        this._trackAndMuteContainer,\n        this._barScrollBar.container,\n    );\n\n    private readonly _menuArea: HTMLDivElement = div({ class: \"menu-area\" },\n        div({ class: \"selectContainer menu file\" },\n            this._fileMenu,\n        ),\n        div({ class: \"selectContainer menu edit\" },\n            this._editMenu,\n        ),\n        div({ class: \"selectContainer menu preferences\" },\n            this._optionsMenu,\n        ),\n    );\n    private readonly _songSettingsArea: HTMLDivElement = div({ class: \"song-settings-area\" },\n        div({ class: \"editor-controls\" },\n            div({ class: \"editor-song-settings\" },\n                div({ style: \"margin: 3px 0; position: relative; text-align: center; color: ${ColorConfig.secondaryText};\" },\n                    div({ class: \"tip\", style: \"flex-shrink: 0; position:absolute; left: 0; top: 0; width: 12px; height: 12px\", onclick: () => this._openPrompt(\"usedPattern\") },\n                        SVG.svg({ style: \"flex-shrink: 0; position: absolute; left: 0; top: 0; pointer-events: none;\", width: \"12px\", height: \"12px\", \"margin-right\": \"0.5em\", viewBox: \"-6 -6 12 12\" },\n                            this._usedPatternIndicator,\n                        ),\n                    ),\n                    div({ class: \"tip\", style: \"flex-shrink: 0; position: absolute; left: 14px; top: 0; width: 12px; height: 12px\", onclick: () => this._openPrompt(\"usedInstrument\") },\n                        SVG.svg({ style: \"flex-shrink: 0; position: absolute; left: 0; top: 0; pointer-events: none;\", width: \"12px\", height: \"12px\", \"margin-right\": \"1em\", viewBox: \"-6 -6 12 12\" },\n                            this._usedInstrumentIndicator,\n                        ),\n                    ),\n                    \"Song Settings\",\n                    div({ style: \"width: 100%; left: 0; top: -1px; position:absolute; overflow-x:clip;\" }, this._jumpToModIndicator),\n                ),\n            ),\n            div({ class: \"selectRow\" },\n                span({ class: \"tip\", onclick: () => this._openPrompt(\"scale\") }, \"Scale: \"),\n                div({ class: \"selectContainer\" }, this._scaleSelect),\n            ),\n            div({ class: \"selectRow\" },\n                span({ class: \"tip\", onclick: () => this._openPrompt(\"key\") }, \"Key: \"),\n                div({ class: \"selectContainer\" }, this._keySelect),\n            ),\n            div({ class: \"selectRow\" },\n                span({ class: \"tip\", onclick: () => this._openPrompt(\"tempo\") }, \"Tempo: \"),\n                span({ style: \"display: flex;\" },\n                    this._tempoSlider.container,\n                    this._tempoStepper,\n                ),\n            ),\n            div({ class: \"selectRow\" },\n                span({ class: \"tip\", onclick: () => this._openPrompt(\"rhythm\") }, \"Rhythm: \"),\n                div({ class: \"selectContainer\" }, this._rhythmSelect),\n            ),\n        ),\n    );\n    private readonly _instrumentSettingsArea: HTMLDivElement = div({ class: \"instrument-settings-area\" },\n        this._instrumentSettingsGroup,\n        this._modulatorGroup);\n    public readonly _settingsArea: HTMLDivElement = div({ class: \"settings-area noSelection\" },\n        div({ class: \"version-area\" },\n            div({ style: `text-align: center; margin: 3px 0; color: ${ColorConfig.secondaryText};` },\n                this._songTitleInputBox.input,\n            ),\n        ),\n        div({ class: \"play-pause-area\" },\n            this._volumeBarBox,\n            div({ class: \"playback-bar-controls\" },\n                this._playButton,\n                this._pauseButton,\n                this._recordButton,\n                this._stopButton,\n                this._prevBarButton,\n                this._nextBarButton,\n            ),\n            div({ class: \"playback-volume-controls\" },\n                span({ class: \"volume-speaker\" }),\n                this._volumeSlider.container,\n            ),\n        ),\n        this._menuArea,\n        this._songSettingsArea,\n        this._instrumentSettingsArea,\n    );\n\n    public readonly mainLayer: HTMLDivElement = div({ class: \"beepboxEditor\", tabIndex: \"0\" },\n        this._patternArea,\n        this._trackArea,\n        this._settingsArea,\n        this._promptContainer,\n    );\n\n    private _wasPlaying: boolean = false;\n    private _currentPromptName: string | null = null;\n    private _highlightedInstrumentIndex: number = -1;\n    private _renderedInstrumentCount: number = 0;\n    private _renderedIsPlaying: boolean = false;\n    private _renderedIsRecording: boolean = false;\n    private _renderedShowRecordButton: boolean = false;\n    private _renderedCtrlHeld: boolean = false;\n    private _ctrlHeld: boolean = false;\n    private _shiftHeld: boolean = false;\n    private _deactivatedInstruments: boolean = false;\n    private readonly _operatorRows: HTMLDivElement[] = [];\n    private readonly _operatorAmplitudeSliders: Slider[] = [];\n    private readonly _operatorFrequencySelects: HTMLSelectElement[] = [];\n    private readonly _operatorDropdowns: HTMLButtonElement[] = [];\n    private readonly _operatorWaveformSelects: HTMLSelectElement[] = [];\n    private readonly _operatorWaveformHints: HTMLSpanElement[] = [];\n    private readonly _operatorWaveformPulsewidthSliders: Slider[] = [];\n    private readonly _operatorDropdownRows: HTMLElement[] = []\n    private readonly _operatorDropdownGroups: HTMLDivElement[] = [];\n    private readonly _drumsetSpectrumEditors: SpectrumEditor[] = [];\n    private readonly _drumsetEnvelopeSelects: HTMLSelectElement[] = [];\n    private _showModSliders: boolean[] = [];\n    private _newShowModSliders: boolean[] = [];\n    private _modSliderValues: number[] = [];\n    private _hasActiveModSliders: boolean = false;\n\n    private _openPanDropdown: boolean = false;\n    private _openVibratoDropdown: boolean = false;\n    private _openEnvelopeDropdown: boolean = false;\n    private _openChordDropdown: boolean = false;\n    private _openTransitionDropdown: boolean = false;\n    private _openOperatorDropdowns: boolean[] = [];\n\n    private outVolumeHistoricTimer: number = 0;\n    private outVolumeHistoricCap: number = 0;\n    private lastOutVolumeCap: number = 0;\n    public patternUsed: boolean = false;\n    private _modRecTimeout: number = -1;\n\n    constructor(private _doc: SongDocument) {\n\n        this._doc.notifier.watch(this.whenUpdated);\n        this._doc.modRecordingHandler = () => { this.handleModRecording() };\n        new MidiInputHandler(this._doc);\n        window.addEventListener(\"resize\", this.whenUpdated);\n        window.requestAnimationFrame(this.updatePlayButton);\n        window.requestAnimationFrame(this._animate);\n\n        if (!(\"share\" in navigator)) {\n            this._fileMenu.removeChild(this._fileMenu.querySelector(\"[value='shareUrl']\")!);\n        }\n\n        this._scaleSelect.appendChild(optgroup({ label: \"Edit\" },\n            option({ value: \"forceScale\" }, \"Snap Notes To Scale\"),\n        ));\n        this._keySelect.appendChild(optgroup({ label: \"Edit\" },\n            option({ value: \"detectKey\" }, \"Detect Key\"),\n        ));\n        this._rhythmSelect.appendChild(optgroup({ label: \"Edit\" },\n            option({ value: \"forceRhythm\" }, \"Snap Notes To Rhythm\"),\n        ));\n\n        this._vibratoSelect.appendChild(option({ hidden: true, value: 5 }, \"custom\"));\n\n        this._showModSliders = new Array<boolean>(Config.modulators.length);\n        this._modSliderValues = new Array<number>(Config.modulators.length);\n\n        this._phaseModGroup.appendChild(div({ class: \"selectRow\", style: `color: ${ColorConfig.secondaryText}; height: 1em; margin-top: 0.5em;` },\n            div({ style: \"margin-right: .1em; visibility: hidden;\" }, 1 + \".\"),\n            div({ style: \"width: 3em; margin-right: .3em;\", class: \"tip\", onclick: () => this._openPrompt(\"operatorFrequency\") }, \"Freq:\"),\n            div({ class: \"tip\", onclick: () => this._openPrompt(\"operatorVolume\") }, \"Volume:\"),\n        ));\n        for (let i: number = 0; i < Config.operatorCount; i++) {\n            const operatorIndex: number = i;\n            const operatorNumber: HTMLDivElement = div({ style: \"margin-right: 0px; color: \" + ColorConfig.secondaryText + \";\" }, i + 1 + \"\");\n            const frequencySelect: HTMLSelectElement = buildOptions(select({ style: \"width: 100%;\", title: \"Frequency\" }), Config.operatorFrequencies.map(freq => freq.name));\n            const amplitudeSlider: Slider = new Slider(input({ type: \"range\", min: \"0\", max: Config.operatorAmplitudeMax, value: \"0\", step: \"1\", title: \"Volume\" }), this._doc, (oldValue: number, newValue: number) => new ChangeOperatorAmplitude(this._doc, operatorIndex, oldValue, newValue), false);\n            const waveformSelect: HTMLSelectElement = buildOptions(select({ style: \"width: 100%;\", title: \"Waveform\" }), Config.operatorWaves.map(wave => wave.name));\n            const waveformDropdown: HTMLButtonElement = button({ style: \"margin-left:0em; margin-right: 2px; height:1.5em; width: 8px; max-width: 10px; padding: 0px; font-size: 8px;\", onclick: () => this._toggleDropdownMenu(DropdownID.FM, i) }, \"▼\");\n            const waveformDropdownHint: HTMLSpanElement = span({ class: \"tip\", style: \"margin-left: 10px;\", onclick: () => this._openPrompt(\"operatorWaveform\") }, \"Wave:\");\n            const waveformPulsewidthSlider: Slider = new Slider(input({ style: \"margin-left: 10px; width: 85%;\", type: \"range\", min: \"0\", max: Config.pwmOperatorWaves.length - 1, value: \"0\", step: \"1\", title: \"Pulse Width\" }), this._doc, (oldValue: number, newValue: number) => new ChangeOperatorPulseWidth(this._doc, operatorIndex, oldValue, newValue), true);\n            const waveformDropdownRow: HTMLElement = div({ class: \"selectRow\" }, waveformDropdownHint, waveformPulsewidthSlider.container,\n                div({ class: \"selectContainer\", style: \"width: 6em; margin-left: .3em;\" }, waveformSelect));\n            const waveformDropdownGroup: HTMLDivElement = div({ class: \"operatorRow\" }, waveformDropdownRow);\n            const row: HTMLDivElement = div({ class: \"selectRow\" },\n                operatorNumber,\n                waveformDropdown,\n                div({ class: \"selectContainer\", style: \"width: 3em; margin-right: .3em;\" }, frequencySelect),\n                amplitudeSlider.container,\n            );\n            this._phaseModGroup.appendChild(row);\n            this._operatorRows[i] = row;\n            this._operatorAmplitudeSliders[i] = amplitudeSlider;\n            this._operatorFrequencySelects[i] = frequencySelect;\n            this._operatorDropdowns[i] = waveformDropdown;\n            this._operatorWaveformHints[i] = waveformDropdownHint;\n            this._operatorWaveformSelects[i] = waveformSelect;\n            this._operatorWaveformPulsewidthSliders[i] = waveformPulsewidthSlider;\n            this._operatorDropdownRows[i] = waveformDropdownRow;\n            this._phaseModGroup.appendChild(waveformDropdownGroup);\n            this._operatorDropdownGroups[i] = waveformDropdownGroup;\n            this._openOperatorDropdowns[i] = false;\n\n            waveformSelect.addEventListener(\"change\", () => {\n                this._doc.record(new ChangeOperatorWaveform(this._doc, operatorIndex, waveformSelect.selectedIndex));\n            });\n\n            frequencySelect.addEventListener(\"change\", () => {\n                this._doc.record(new ChangeOperatorFrequency(this._doc, operatorIndex, frequencySelect.selectedIndex));\n            });\n        }\n\n        this._drumsetGroup.appendChild(\n            div({ class: \"selectRow\" },\n                span({ class: \"tip\", onclick: () => this._openPrompt(\"drumsetEnvelope\") }, \"Envelope:\"),\n                span({ class: \"tip\", onclick: () => this._openPrompt(\"drumsetSpectrum\") }, \"Spectrum:\"),\n            ),\n        );\n        for (let i: number = Config.drumCount - 1; i >= 0; i--) {\n            const drumIndex: number = i;\n            const spectrumEditor: SpectrumEditor = new SpectrumEditor(this._doc, drumIndex);\n            spectrumEditor.container.addEventListener(\"mousedown\", this.refocusStage);\n            this._drumsetSpectrumEditors[i] = spectrumEditor;\n\n            const envelopeSelect: HTMLSelectElement = buildOptions(select({ style: \"width: 100%;\", title: \"Filter Envelope\" }), Config.envelopes.map(envelope => envelope.name));\n            this._drumsetEnvelopeSelects[i] = envelopeSelect;\n            envelopeSelect.addEventListener(\"change\", () => {\n                this._doc.record(new ChangeDrumsetEnvelope(this._doc, drumIndex, envelopeSelect.selectedIndex));\n            });\n\n            const row: HTMLDivElement = div({ class: \"selectRow\" },\n                div({ class: \"selectContainer\", style: \"width: 5em; margin-right: .3em;\" }, envelopeSelect),\n                this._drumsetSpectrumEditors[i].container,\n            );\n            this._drumsetGroup.appendChild(row);\n        }\n\n        this._modNameRows = [];\n        this._modChannelBoxes = [];\n        this._modInstrumentBoxes = [];\n        this._modSetRows = [];\n        this._modSetBoxes = [];\n        this._modFilterRows = [];\n        this._modFilterBoxes = [];\n        this._modTargetIndicators = [];\n        for (let mod: number = 0; mod < Config.modCount; mod++) {\n\n            let modChannelBox: HTMLSelectElement = select({ style: \"width: 100%; color: currentColor; text-overflow:ellipsis;\" });\n            let modInstrumentBox: HTMLSelectElement = select({ style: \"width: 100%; color: currentColor;\" });\n\n            let modNameRow: HTMLDivElement = div({ class: \"operatorRow\", style: \"height: 1em; margin-bottom: 0.65em;\" },\n                div({ class: \"tip\", style: \"width: 10%; max-width: 5.4em;\", id: \"modChannelText\" + mod, onclick: () => this._openPrompt(\"modChannel\") }, \"Ch:\"),\n                div({ class: \"selectContainer\", style: 'width: 35%;' }, modChannelBox),\n                div({ class: \"tip\", style: \"width: 1.2em; margin-left: 0.8em;\", id: \"modInstrumentText\" + mod, onclick: () => this._openPrompt(\"modInstrument\") }, \"Ins:\"),\n                div({ class: \"selectContainer\", style: \"width: 10%;\" }, modInstrumentBox),\n            );\n\n            let modSetBox: HTMLSelectElement = select();\n            let modFilterBox: HTMLSelectElement = select();\n            let modSetRow: HTMLDivElement = div({ class: \"selectRow\", id: \"modSettingText\" + mod, style: \"margin-bottom: 0.9em; color: currentColor;\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"modSet\") }, \"Setting: \"), span({ class: \"tip\", style: \"font-size:x-small;\", onclick: () => this._openPrompt(\"modSetInfo\" + mod) }, \"?\"), div({ class: \"selectContainer\" }, modSetBox));\n            let modFilterRow: HTMLDivElement = div({ class: \"selectRow\", id: \"modFilterText\" + mod, style: \"margin-bottom: 0.9em; color: currentColor;\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"modFilter\" + mod) }, \"Target: \"), div({ class: \"selectContainer\" }, modFilterBox));\n\n            // @jummbus: I could template this up above and simply create from the template, especially since I also reuse it in song settings, but unsure how to do that with imperative-html :P\n            let modTarget: SVGElement = SVG.svg({ style: \"transform: translate(0px, 1px);\", width: \"1.5em\", height: \"1em\", viewBox: \"0 0 200 200\" }, [\n                SVG.path({ d: \"M90 155 l0 -45 -45 0 c-25 0 -45 -4 -45 -10 0 -5 20 -10 45 -10 l45 0 0 -45 c0 -25 5 -45 10 -45 6 0 10 20 10 45 l0 45 45 0 c25 0 45 5 45 10 0 6 -20 10 -45 10 l -45 0 0 45 c0 25 -4 45 -10 45 -5 0 -10 -20 -10 -45z\" }),\n                SVG.path({ d: \"M42 158 c-15 -15 -16 -38 -2 -38 6 0 10 7 10 15 0 8 7 15 15 15 8 0 15 5 15 10 0 14 -23 13 -38 -2z\" }),\n                SVG.path({ d: \"M120 160 c0 -5 7 -10 15 -10 8 0 15 -7 15 -15 0 -8 5 -15 10 -15 14 0 13 23 -2 38 -15 15 -38 16 -38 2z\" }),\n                SVG.path({ d: \"M32 58 c3 -23 48 -40 48 -19 0 6 -7 11 -15 11 -8 0 -15 7 -15 15 0 8 -5 15 -11 15 -6 0 -9 -10 -7 -22z\" }),\n                SVG.path({ d: \"M150 65 c0 -8 -7 -15 -15 -15 -8 0 -15 -4 -15 -10 0 -14 23 -13 38 2 15 15 16 38 2 38 -5 0 -10 -7 -10 -15z\" })]);\n\n            this._modNameRows.push(modNameRow);\n            this._modChannelBoxes.push(modChannelBox);\n            this._modInstrumentBoxes.push(modInstrumentBox);\n            this._modSetRows.push(modSetRow);\n            this._modSetBoxes.push(modSetBox);\n            this._modFilterRows.push(modFilterRow);\n            this._modFilterBoxes.push(modFilterBox);\n            this._modTargetIndicators.push(modTarget);\n\n            this._modulatorGroup.appendChild(div({ style: \"margin: 3px 0; font-weight: bold; margin-bottom: 0.7em; text-align: center; color: \" + ColorConfig.secondaryText + \"; background: \" + ColorConfig.uiWidgetBackground + \";\" }, [\"Modulator \" + (mod + 1), modTarget]));\n            this._modulatorGroup.appendChild(modNameRow);\n            this._modulatorGroup.appendChild(modSetRow);\n            this._modulatorGroup.appendChild(modFilterRow);\n\n        }\n\n        // @jummbus - Unsure why this hack is needed for alignment, but I've never been a css wiz...\n        this._pitchShiftSlider.container.style.setProperty(\"transform\", \"translate(0px, 3px)\");\n        this._pitchShiftSlider.container.style.setProperty(\"width\", \"100%\");\n\n        this._fileMenu.addEventListener(\"change\", this._fileMenuHandler);\n        this._editMenu.addEventListener(\"change\", this._editMenuHandler);\n        this._optionsMenu.addEventListener(\"change\", this._optionsMenuHandler);\n        this._customWavePresetDrop.addEventListener(\"change\", this._customWavePresetHandler);\n        this._tempoStepper.addEventListener(\"change\", this._whenSetTempo);\n        this._scaleSelect.addEventListener(\"change\", this._whenSetScale);\n        this._keySelect.addEventListener(\"change\", this._whenSetKey);\n        this._rhythmSelect.addEventListener(\"change\", this._whenSetRhythm);\n        //this._pitchedPresetSelect.addEventListener(\"change\", this._whenSetPitchedPreset);\n        //this._drumPresetSelect.addEventListener(\"change\", this._whenSetDrumPreset);\n        this._algorithmSelect.addEventListener(\"change\", this._whenSetAlgorithm);\n        this._instrumentsButtonBar.addEventListener(\"click\", this._whenSelectInstrument);\n        //this._customizeInstrumentButton.addEventListener(\"click\", this._whenCustomizePressed);\n        this._feedbackTypeSelect.addEventListener(\"change\", this._whenSetFeedbackType);\n        this._chipWaveSelect.addEventListener(\"change\", this._whenSetChipWave);\n        this._chipNoiseSelect.addEventListener(\"change\", this._whenSetNoiseWave);\n        this._transitionSelect.addEventListener(\"change\", this._whenSetTransition);\n        this._effectsSelect.addEventListener(\"change\", this._whenSetEffects);\n        this._unisonSelect.addEventListener(\"change\", this._whenSetUnison);\n        this._chordSelect.addEventListener(\"change\", this._whenSetChord);\n        this._vibratoSelect.addEventListener(\"change\", this._whenSetVibrato);\n        this._vibratoTypeSelect.addEventListener(\"change\", this._whenSetVibratoType);\n        this._playButton.addEventListener(\"click\", this.togglePlay);\n        this._pauseButton.addEventListener(\"click\", this.togglePlay);\n        this._recordButton.addEventListener(\"click\", this._toggleRecord);\n        this._stopButton.addEventListener(\"click\", this._toggleRecord);\n        // Start recording instead of opening context menu when control-clicking the record button on a Mac.\n        this._recordButton.addEventListener(\"contextmenu\", (event: MouseEvent) => {\n            if (event.ctrlKey) {\n                event.preventDefault();\n                this._toggleRecord();\n            }\n        });\n        this._stopButton.addEventListener(\"contextmenu\", (event: MouseEvent) => {\n            if (event.ctrlKey) {\n                event.preventDefault();\n                this._toggleRecord();\n            }\n        });\n        this._prevBarButton.addEventListener(\"click\", this._whenPrevBarPressed);\n        this._nextBarButton.addEventListener(\"click\", this._whenNextBarPressed);\n        this._volumeSlider.input.addEventListener(\"input\", this._setVolumeSlider);\n        this._zoomInButton.addEventListener(\"click\", this._zoomIn);\n        this._zoomOutButton.addEventListener(\"click\", this._zoomOut);\n        this._patternArea.addEventListener(\"mousedown\", this._refocusStageNotEditing);\n        this._trackArea.addEventListener(\"mousedown\", this.refocusStage);\n\n        // The song volume slider is styled slightly different than the class' default.\n        this._volumeSlider.container.style.setProperty(\"flex-grow\", \"1\");\n        this._volumeSlider.container.style.setProperty(\"display\", \"flex\");\n\n        this._volumeBarContainer.style.setProperty(\"flex-grow\", \"1\");\n        this._volumeBarContainer.style.setProperty(\"display\", \"flex\");\n\n        // Also, any slider with a multiplicative effect instead of a replacement effect gets a different mod color, and a round slider.\n        this._volumeSlider.container.style.setProperty(\"--mod-color\", ColorConfig.multiplicativeModSlider);\n        this._volumeSlider.container.style.setProperty(\"--mod-border-radius\", \"50%\");\n        this._instrumentVolumeSlider.container.style.setProperty(\"--mod-color\", ColorConfig.multiplicativeModSlider);\n        this._instrumentVolumeSlider.container.style.setProperty(\"--mod-border-radius\", \"50%\");\n        this._feedbackAmplitudeSlider.container.style.setProperty(\"--mod-color\", ColorConfig.multiplicativeModSlider);\n        this._feedbackAmplitudeSlider.container.style.setProperty(\"--mod-border-radius\", \"50%\");\n        for (let i: number = 0; i < Config.operatorCount; i++) {\n            this._operatorAmplitudeSliders[i].container.style.setProperty(\"--mod-color\", ColorConfig.multiplicativeModSlider);\n            this._operatorAmplitudeSliders[i].container.style.setProperty(\"--mod-border-radius\", \"50%\");\n        }\n\n        let thisRef: SongEditor = this;\n        for (let mod: number = 0; mod < Config.modCount; mod++) {\n            this._modChannelBoxes[mod].addEventListener(\"change\", function () { thisRef._whenSetModChannel(mod); });\n            this._modInstrumentBoxes[mod].addEventListener(\"change\", function () { thisRef._whenSetModInstrument(mod); });\n            this._modSetBoxes[mod].addEventListener(\"change\", function () { thisRef._whenSetModSetting(mod); });\n            this._modFilterBoxes[mod].addEventListener(\"change\", function () { thisRef._whenSetModFilter(mod); });\n            this._modTargetIndicators[mod].addEventListener(\"click\", function () { thisRef._whenClickModTarget(mod); });\n        }\n\n        this._jumpToModIndicator.addEventListener(\"click\", function () { thisRef._whenClickJumpToModTarget() });\n\n        this._patternArea.addEventListener(\"mousedown\", this.refocusStage);\n        this._fadeInOutEditor.container.addEventListener(\"mousedown\", this.refocusStage);\n        this._spectrumEditor.container.addEventListener(\"mousedown\", this.refocusStage);\n        this._eqFilterEditor.container.addEventListener(\"mousedown\", this.refocusStage);\n        this._noteFilterEditor.container.addEventListener(\"mousedown\", this.refocusStage);\n        this._harmonicsEditor.container.addEventListener(\"mousedown\", this.refocusStage);\n        this._tempoStepper.addEventListener(\"keydown\", this._tempoStepperCaptureNumberKeys, false);\n        this._addEnvelopeButton.addEventListener(\"click\", this._addNewEnvelope);\n        this._patternArea.addEventListener(\"contextmenu\", this._disableCtrlContextMenu);\n        this._trackArea.addEventListener(\"contextmenu\", this._disableCtrlContextMenu);\n        this.mainLayer.addEventListener(\"keydown\", this._whenKeyPressed);\n        this.mainLayer.addEventListener(\"keyup\", this._whenKeyReleased);\n        this.mainLayer.addEventListener(\"focusin\", this._onFocusIn);\n        this._instrumentCopyButton.addEventListener(\"click\", this._copyInstrument.bind(this));\n        this._instrumentPasteButton.addEventListener(\"click\", this._pasteInstrument.bind(this));\n\n        this._instrumentVolumeSliderInputBox.addEventListener(\"input\", () => { this._doc.record(new ChangeVolume(this._doc, this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()].volume, Math.min(25.0, Math.max(-25.0, Math.round(+this._instrumentVolumeSliderInputBox.value))))) });\n        this._panSliderInputBox.addEventListener(\"input\", () => { this._doc.record(new ChangePan(this._doc, this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()].pan, Math.min(100.0, Math.max(0.0, Math.round(+this._panSliderInputBox.value))))) });\n        this._pwmSliderInputBox.addEventListener(\"input\", () => { this._doc.record(new ChangePulseWidth(this._doc, this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()].pulseWidth, Math.min(Config.pulseWidthRange, Math.max(1.0, Math.round(+this._pwmSliderInputBox.value))))) });\n        this._detuneSliderInputBox.addEventListener(\"input\", () => { this._doc.record(new ChangeDetune(this._doc, this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()].detune, Math.min(Config.detuneMax - Config.detuneCenter, Math.max(Config.detuneMin - Config.detuneCenter, Math.round(+this._detuneSliderInputBox.value))))) });\n        this._customWaveDraw.addEventListener(\"input\", () => { this._doc.record(new ChangeCustomWave(this._doc, this._customWaveDrawCanvas.newArray)) });\n        this._twoNoteArpBox.addEventListener(\"input\", () => { this._doc.record(new ChangeFastTwoNoteArp(this._doc, this._twoNoteArpBox.checked)) });\n        this._clicklessTransitionBox.addEventListener(\"input\", () => { this._doc.record(new ChangeClicklessTransition(this._doc, this._clicklessTransitionBox.checked)) });\n        this._aliasingBox.addEventListener(\"input\", () => { this._doc.record(new ChangeAliasing(this._doc, this._aliasingBox.checked)) });\n        this._discreteEnvelopeBox.addEventListener(\"input\", () => { this._doc.record(new ChangeDiscreteEnvelope(this._doc, this._discreteEnvelopeBox.checked)) });\n\n        this._promptContainer.addEventListener(\"click\", (event) => {\n            if (event.target == this._promptContainer) {\n                this._doc.undo();\n            }\n        });\n\n        // Sorry, bypassing typescript type safety on this function because I want to use the new \"passive\" option.\n\t\t//this._trackAndMuteContainer.addEventListener(\"scroll\", this._onTrackAreaScroll, {capture: false, passive: true});\n\t\t(<Function>this._trackAndMuteContainer.addEventListener)(\"scroll\", this._onTrackAreaScroll, {capture: false, passive: true});\n\n        if (isMobile) {\n            const autoPlayOption: HTMLOptionElement = <HTMLOptionElement>this._optionsMenu.querySelector(\"[value=autoPlay]\");\n            autoPlayOption.disabled = true;\n            autoPlayOption.setAttribute(\"hidden\", \"\");\n        }\n\n        // Beepbox uses availHeight too, but I have a display that fails the check even when one of the other layouts would look better on it. -jummbus\n        if (window.screen.availWidth < 710 /*|| window.screen.availHeight < 710*/) {\n            const layoutOption: HTMLOptionElement = <HTMLOptionElement>this._optionsMenu.querySelector(\"[value=layout]\");\n            layoutOption.disabled = true;\n            layoutOption.setAttribute(\"hidden\", \"\");\n        }\n    }\n\n    private _toggleDropdownMenu(dropdown: DropdownID, submenu: number = 0): void {\n        let target: HTMLButtonElement = this._vibratoDropdown;\n        let group: HTMLElement = this._vibratoDropdownGroup;\n        switch (dropdown) {\n            case DropdownID.Envelope:\n                target = this._envelopeDropdown;\n                this._openEnvelopeDropdown = this._openEnvelopeDropdown ? false : true;\n                group = this._envelopeDropdownGroup;\n                break;\n            case DropdownID.Vibrato:\n                target = this._vibratoDropdown;\n                this._openVibratoDropdown = this._openVibratoDropdown ? false : true;\n                group = this._vibratoDropdownGroup;\n                break;\n            case DropdownID.Pan:\n                target = this._panDropdown;\n                this._openPanDropdown = this._openPanDropdown ? false : true;\n                group = this._panDropdownGroup;\n                break;\n            case DropdownID.Chord:\n                target = this._chordDropdown;\n                this._openChordDropdown = this._openChordDropdown ? false : true;\n                group = this._chordDropdownGroup;\n                break;\n            case DropdownID.Transition:\n                target = this._transitionDropdown;\n                this._openTransitionDropdown = this._openTransitionDropdown ? false : true;\n                group = this._transitionDropdownGroup;\n                break;\n            case DropdownID.FM:\n                target = this._operatorDropdowns[submenu];\n                this._openOperatorDropdowns[submenu] = this._openOperatorDropdowns[submenu] ? false : true;\n                group = this._operatorDropdownGroups[submenu];\n                break;\n        }\n\n        if (target.textContent == \"▼\") {\n            let instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\n            target.textContent = \"▲\";\n            if (group != this._chordDropdownGroup) {\n                group.style.display = \"\";\n            } // Only show arpeggio dropdown if chord arpeggiates\n            else if (instrument.chord == Config.chords.dictionary[\"arpeggio\"].index) {\n                group.style.display = \"\";\n            }\n\n            for (let i: number = 0; i < group.children.length; i++) {\n                // A timeout is needed so that the previous 0s, 0 opacity settings can be applied. They're not done until the group is visible again because display: none prunes animation steps.\n                setTimeout(() => {\n                    (group.children[i] as HTMLElement).style.animationDelay = '0.17s';\n                    (group.children[i] as HTMLElement).style.opacity = '1';}\n                );\n            }\n\n        }\n        else {\n            for (let i: number = 0; i < group.children.length; i++) {\n                (group.children[i] as HTMLElement).style.animationDelay = '0s';\n                (group.children[i] as HTMLElement).style.opacity = '0';\n            }\n            target.textContent = \"▼\";\n            group.style.display = \"none\";\n        }\n    }\n\n    private _modSliderUpdate(): void {\n\n        if (!this._doc.synth.playing) {\n            this._hasActiveModSliders = false;\n\n            for (let setting: number = 0; setting < Config.modulators.length; setting++) {\n                if (this._showModSliders[setting] == true) {\n                    this._showModSliders[setting] = false;\n                    this._newShowModSliders[setting] = false;\n                    let slider: Slider | null = this.getSliderForModSetting(setting);\n\n                    if (slider != null) {\n                        slider.container.classList.remove(\"modSlider\");\n\n                    }\n                }\n            }\n        }\n        else {\n\n            let instrument: number = this._doc.getCurrentInstrument();\n            const anyModActive: boolean = this._doc.synth.isAnyModActive(this._doc.channel, instrument);\n\n            // Check and update mod values on sliders\n            if (anyModActive) {\n\n                let instrument: number = this._doc.getCurrentInstrument();\n\n                function updateModSlider(editor: SongEditor, slider: Slider, setting: number, channel: number, instrument: number): boolean {\n                    if (editor._doc.synth.isModActive(setting, channel, instrument)) {\n                        let currentVal: number = (editor._doc.synth.getModValue(setting, channel, instrument, false) - Config.modulators[setting].convertRealFactor) / Config.modulators[setting].maxRawVol;\n                        if (currentVal != editor._modSliderValues[setting]) {\n                            editor._modSliderValues[setting] = currentVal;\n                            slider.container.style.setProperty(\"--mod-position\", (currentVal * 96.0 + 2.0) + \"%\");\n                        }\n                        return true;\n                    }\n                    return false;\n                }\n\n                // Set mod sliders to present values\n                for (let setting: number = 0; setting < Config.modulators.length; setting++) {\n                    // Set to last value\n                    this._newShowModSliders[setting] = this._showModSliders[setting];\n\n                    // Check for newer value\n                    let slider: Slider | null = this.getSliderForModSetting(setting);\n                    if (slider != null) {\n                        this._newShowModSliders[setting] = updateModSlider(this, slider, setting, this._doc.channel, instrument);\n                    }\n                }\n\n            }\n            else if (this._hasActiveModSliders) {\n                // Zero out show-mod-slider settings (since none are active) to kill active mod slider flag\n                for (let setting: number = 0; setting < Config.modulators.length; setting++) {\n                    this._newShowModSliders[setting] = false;\n                }\n            }\n\n            // Class or unclass mod sliders based on present status\n            if (anyModActive || this._hasActiveModSliders) {\n\n                let anySliderActive: boolean = false;\n\n                for (let setting: number = 0; setting < Config.modulators.length; setting++) {\n                    if (this._newShowModSliders[setting] != this._showModSliders[setting]) {\n                        this._showModSliders[setting] = this._newShowModSliders[setting];\n                        let slider: Slider | null = this.getSliderForModSetting(setting);\n\n                        if (slider != null) {\n\n                            if (this._showModSliders[setting] == true) {\n                                slider.container.classList.add(\"modSlider\");\n                            }\n                            else {\n                                slider.container.classList.remove(\"modSlider\");\n                            }\n\n                        }\n                    }\n\n                    if (this._newShowModSliders[setting] == true)\n                        anySliderActive = true;\n                }\n\n                this._hasActiveModSliders = anySliderActive;\n\n            }\n\n        }\n\n    }\n\n    public getSliderForModSetting(setting: number): Slider | null {\n        switch (setting) {\n            case Config.modulators.dictionary[\"pan\"].index:\n                return this._panSlider;\n            case Config.modulators.dictionary[\"detune\"].index:\n                return this._detuneSlider;\n            case Config.modulators.dictionary[\"fm slider 1\"].index:\n                return this._operatorAmplitudeSliders[0];\n            case Config.modulators.dictionary[\"fm slider 2\"].index:\n                return this._operatorAmplitudeSliders[1];\n            case Config.modulators.dictionary[\"fm slider 3\"].index:\n                return this._operatorAmplitudeSliders[2];\n            case Config.modulators.dictionary[\"fm slider 4\"].index:\n                return this._operatorAmplitudeSliders[3];\n            case Config.modulators.dictionary[\"fm feedback\"].index:\n                return this._feedbackAmplitudeSlider;\n            case Config.modulators.dictionary[\"pulse width\"].index:\n                return this._pulseWidthSlider;\n            case Config.modulators.dictionary[\"reverb\"].index:\n                return this._reverbSlider;\n            case Config.modulators.dictionary[\"distortion\"].index:\n                return this._distortionSlider;\n            case Config.modulators.dictionary[\"note volume\"].index:\n                // So, this should technically not affect this slider, but it will look better as legacy songs used this mod as 'volume'.\n                // In the case that mix volume is used as well, they'd fight for the display, so just don't use this.\n                if (!this._showModSliders[Config.modulators.dictionary[\"mix volume\"].index])\n                    return this._instrumentVolumeSlider;\n                return null;\n            case Config.modulators.dictionary[\"mix volume\"].index:\n                return this._instrumentVolumeSlider;\n            case Config.modulators.dictionary[\"vibrato depth\"].index:\n                return this._vibratoDepthSlider;\n            case Config.modulators.dictionary[\"vibrato speed\"].index:\n                return this._vibratoSpeedSlider;\n            case Config.modulators.dictionary[\"vibrato delay\"].index:\n                return this._vibratoDelaySlider;\n            case Config.modulators.dictionary[\"arp speed\"].index:\n                return this._arpeggioSpeedSlider;\n            case Config.modulators.dictionary[\"pan delay\"].index:\n                return this._panDelaySlider;\n            case Config.modulators.dictionary[\"tempo\"].index:\n                return this._tempoSlider;\n            case Config.modulators.dictionary[\"song volume\"].index:\n                return this._volumeSlider;\n            case Config.modulators.dictionary[\"eq filt cut\"].index:\n                return this._eqFilterSimpleCutSlider;\n            case Config.modulators.dictionary[\"eq filt peak\"].index:\n                return this._eqFilterSimplePeakSlider;\n            case Config.modulators.dictionary[\"note filt cut\"].index:\n                return this._noteFilterSimpleCutSlider;\n            case Config.modulators.dictionary[\"note filt peak\"].index:\n                return this._noteFilterSimplePeakSlider;\n            case Config.modulators.dictionary[\"bit crush\"].index:\n                return this._bitcrusherQuantizationSlider;\n            case Config.modulators.dictionary[\"freq crush\"].index:\n                return this._bitcrusherFreqSlider;\n            case Config.modulators.dictionary[\"pitch shift\"].index:\n                return this._pitchShiftSlider;\n            case Config.modulators.dictionary[\"chorus\"].index:\n                return this._chorusSlider;\n            case Config.modulators.dictionary[\"echo\"].index:\n                return this._echoSustainSlider;\n            case Config.modulators.dictionary[\"echo delay\"].index:\n                return this._echoDelaySlider;\n            case Config.modulators.dictionary[\"sustain\"].index:\n                return this._stringSustainSlider;\n            case Config.modulators.dictionary[\"envelope speed\"].index:\n                return this._envelopeSpeedSlider;\n            case Config.modulators.dictionary[\"dynamism\"].index:\n                return this._supersawDynamismSlider;\n            case Config.modulators.dictionary[\"spread\"].index:\n                return this._supersawSpreadSlider;\n            case Config.modulators.dictionary[\"saw shape\"].index:\n                return this._supersawShapeSlider;\n            default:\n                return null;\n        }\n\n    }\n\n    private _openPrompt(promptName: string): void {\n        this._doc.openPrompt(promptName);\n        this._setPrompt(promptName);\n    }\n\n    private _setPrompt(promptName: string | null): void {\n        if (this._currentPromptName == promptName) return;\n        this._currentPromptName = promptName;\n\n        if (this.prompt) {\n            if (this._wasPlaying && !(this.prompt instanceof TipPrompt || this.prompt instanceof LimiterPrompt || this.prompt instanceof CustomChipPrompt || this.prompt instanceof CustomFilterPrompt || this.prompt instanceof SustainPrompt)) {\n                this._doc.performance.play();\n            }\n            this._wasPlaying = false;\n            this._promptContainer.style.display = \"none\";\n            this._promptContainer.removeChild(this.prompt.container);\n            this.prompt.cleanUp();\n            this.prompt = null;\n            this.refocusStage();\n        }\n\n        if (promptName) {\n            switch (promptName) {\n                case \"export\":\n                    this.prompt = new ExportPrompt(this._doc);\n                    break;\n                case \"import\":\n                    this.prompt = new ImportPrompt(this._doc);\n                    break;\n                case \"songRecovery\":\n                    this.prompt = new SongRecoveryPrompt(this._doc);\n                    break;\n                case \"barCount\":\n                    this.prompt = new SongDurationPrompt(this._doc);\n                    break;\n                case \"beatsPerBar\":\n                    this.prompt = new BeatsPerBarPrompt(this._doc);\n                    break;\n                case \"moveNotesSideways\":\n                    this.prompt = new MoveNotesSidewaysPrompt(this._doc);\n                    break;\n                case \"channelSettings\":\n                    this.prompt = new ChannelSettingsPrompt(this._doc);\n                    break;\n                case \"limiterSettings\":\n                    this.prompt = new LimiterPrompt(this._doc, this);\n                    break;\n                case \"customChipSettings\":\n                    this.prompt = new CustomChipPrompt(this._doc, this);\n                    break;\n                case \"customEQFilterSettings\":\n                    this.prompt = new CustomFilterPrompt(this._doc, this, false);\n                    break;\n                case \"customNoteFilterSettings\":\n                    this.prompt = new CustomFilterPrompt(this._doc, this, true);\n                    break;\n                case \"theme\":\n                    this.prompt = new ThemePrompt(this._doc);\n                    break;\n                case \"layout\":\n                    this.prompt = new LayoutPrompt(this._doc);\n                    break;\n                case \"recordingSetup\":\n                    this.prompt = new RecordingSetupPrompt(this._doc);\n                    break;\n\t\t\t\tcase \"stringSustain\":\n\t\t\t\t\tthis.prompt = new SustainPrompt(this._doc);\n\t\t\t\t\tbreak;\n                default:\n                    this.prompt = new TipPrompt(this._doc, promptName);\n                    break;\n            }\n\n            if (this.prompt) {\n                if (!(this.prompt instanceof TipPrompt || this.prompt instanceof LimiterPrompt || this.prompt instanceof CustomChipPrompt || this.prompt instanceof CustomFilterPrompt || this.prompt instanceof SustainPrompt)) {\n                    this._wasPlaying = this._doc.synth.playing;\n                    this._doc.performance.pause();\n                }\n                this._promptContainer.style.display = \"\";\n                this._promptContainer.appendChild(this.prompt.container);\n            }\n        }\n    }\n\n    public refocusStage = (): void => {\n        this.mainLayer.focus({ preventScroll: true });\n    }\n\n    private _onFocusIn = (event: Event): void => {\n        if (this._doc.synth.recording && event.target != this.mainLayer && event.target != this._stopButton && event.target != this._volumeSlider.input) {\n            // Don't allow using tab to focus on the song settings while recording,\n            // since interacting with them while recording would mess up the recording.\n            this.refocusStage();\n        }\n    }\n\n    // Refocus stage if a sub-element that needs focus isn't being edited.\n    private _refocusStageNotEditing = (): void => {\n        if (!this._patternEditor.editingModLabel)\n            this.mainLayer.focus({ preventScroll: true });\n    }\n\n    public changeBarScrollPos(offset: number) {\n        this._barScrollBar.changePos(offset);\n    }\n\n    public whenUpdated = (): void => {\n        const prefs: Preferences = this._doc.prefs;\n        this._muteEditor.container.style.display = prefs.enableChannelMuting ? \"\" : \"none\";\n        const trackBounds: DOMRect = this._trackVisibleArea.getBoundingClientRect();\n        this._doc.trackVisibleBars = Math.floor((trackBounds.right - trackBounds.left - (prefs.enableChannelMuting ? 32 : 0)) / this._doc.getBarWidth());\n        this._doc.trackVisibleChannels = Math.floor((trackBounds.bottom - trackBounds.top - 30) / ChannelRow.patternHeight);\n\t\tfor (let i: number = this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; i < this._doc.song.channels.length; i++) {\n            const channel: Channel = this._doc.song.channels[i];\n            for (let j: number = 0; j < channel.instruments.length; j++) {\n                this._doc.synth.determineInvalidModulators(channel.instruments[j]);\n            }\n        }\n        this._barScrollBar.render();\n        this._trackEditor.render();\n        this._muteEditor.render();\n\n        this._trackAndMuteContainer.scrollLeft = this._doc.barScrollPos * this._doc.getBarWidth();\n\t\tthis._trackAndMuteContainer.scrollTop = this._doc.channelScrollPos * ChannelRow.patternHeight;\n\n        if (document.activeElement != this._patternEditor.modDragValueLabel && this._patternEditor.editingModLabel) {\n            this._patternEditor.stopEditingModLabel(false);\n        }\n\n        this._piano.container.style.display = prefs.showLetters ? \"\" : \"none\";\n        this._octaveScrollBar.container.style.display = prefs.showScrollBar ? \"\" : \"none\";\n        this._barScrollBar.container.style.display = this._doc.song.barCount > this._doc.trackVisibleBars ? \"\" : \"none\";\n        this._volumeBarBox.style.display = this._doc.prefs.displayVolumeBar ? \"\" : \"none\";\n\n        if (this._doc.getFullScreen()) {\n            const semitoneHeight: number = this._patternEditorRow.clientHeight / this._doc.getVisiblePitchCount();\n            const targetBeatWidth: number = semitoneHeight * 5;\n            const minBeatWidth: number = this._patternEditorRow.clientWidth / (this._doc.song.beatsPerBar * 3);\n            const maxBeatWidth: number = this._patternEditorRow.clientWidth / (this._doc.song.beatsPerBar + 2);\n            const beatWidth: number = Math.max(minBeatWidth, Math.min(maxBeatWidth, targetBeatWidth));\n            const patternEditorWidth: number = beatWidth * this._doc.song.beatsPerBar;\n\n            this._patternEditorPrev.container.style.width = patternEditorWidth + \"px\";\n            this._patternEditor.container.style.width = patternEditorWidth + \"px\";\n            this._patternEditorNext.container.style.width = patternEditorWidth + \"px\";\n            this._patternEditorPrev.container.style.flexShrink = \"0\";\n            this._patternEditor.container.style.flexShrink = \"0\";\n            this._patternEditorNext.container.style.flexShrink = \"0\";\n            this._patternEditorPrev.container.style.display = \"\";\n            this._patternEditorNext.container.style.display = \"\";\n            this._patternEditorPrev.render();\n            this._patternEditorNext.render();\n            this._zoomInButton.style.display = (this._doc.channel < this._doc.song.pitchChannelCount) ? \"\" : \"none\";\n            this._zoomOutButton.style.display = (this._doc.channel < this._doc.song.pitchChannelCount) ? \"\" : \"none\";\n            this._zoomInButton.style.right = prefs.showScrollBar ? \"24px\" : \"4px\";\n            this._zoomOutButton.style.right = prefs.showScrollBar ? \"24px\" : \"4px\";\n        } else {\n            this._patternEditor.container.style.width = \"\";\n            this._patternEditor.container.style.flexShrink = \"\";\n            this._patternEditorPrev.container.style.display = \"none\";\n            this._patternEditorNext.container.style.display = \"none\";\n            this._zoomInButton.style.display = \"none\";\n            this._zoomOutButton.style.display = \"none\";\n        }\n        this._patternEditor.render();\n\n        const optionCommands: ReadonlyArray<string> = [\n            (prefs.autoPlay ? \"✓ \" : \"　\") + \"Auto Play on Load\",\n            (prefs.autoFollow ? \"✓ \" : \"　\") + \"Auto Follow Playhead\",\n            (prefs.enableNotePreview ? \"✓ \" : \"　\") + \"Hear Added Notes\",\n            (prefs.showLetters ? \"✓ \" : \"　\") + \"Show Piano Keys\",\n            (prefs.showFifth ? \"✓ \" : \"　\") + 'Highlight \"Fifth\" Note',\n            (prefs.notesOutsideScale ? \"✓ \" : \"　\") + \"Place Notes Out of Scale\",\n            (prefs.defaultScale == this._doc.song.scale ? \"✓ \" : \"　\") + \"Set Current Scale as Default\",\n            (prefs.showChannels ? \"✓ \" : \"　\") + \"Show All Channels\",\n            (prefs.showScrollBar ? \"✓ \" : \"　\") + \"Show Octave Scroll Bar\",\n            (prefs.alwaysFineNoteVol ? \"✓ \" : \"\") + \"Always Fine Note Volume\",\n            (prefs.enableChannelMuting ? \"✓ \" : \"　\") + \"Enable Channel Muting\",\n            (prefs.displayBrowserUrl ? \"✓ \" : \"　\") + \"Show Song Data in URL\",\n            (prefs.displayVolumeBar ? \"✓ \" : \"　\") + \"Show Playback Volume\",\n            \"　Set Layout...\",\n            \"　Set Theme...\",\n            \"　Note Recording...\",\n        ];\n        for (let i: number = 0; i < optionCommands.length; i++) {\n            const option: HTMLOptionElement = <HTMLOptionElement>this._optionsMenu.children[i + 1];\n            if (option.textContent != optionCommands[i]) option.textContent = optionCommands[i];\n        }\n\n        const channel: Channel = this._doc.song.channels[this._doc.channel];\n        const instrumentIndex: number = this._doc.getCurrentInstrument();\n        const instrument: Instrument = channel.instruments[instrumentIndex];\n        const wasActive: boolean = this.mainLayer.contains(document.activeElement);\n        const activeElement: Element | null = document.activeElement;\n        const colors: ChannelColors = ColorConfig.getChannelColor(this._doc.song, this._doc.channel);\n\n        for (let i: number = this._effectsSelect.childElementCount - 1; i < Config.effectOrder.length; i++) {\n            this._effectsSelect.appendChild(option({ value: i }));\n        }\n        this._effectsSelect.selectedIndex = -1;\n        for (let i: number = 0; i < Config.effectOrder.length; i++) {\n            let effectFlag: number = Config.effectOrder[i];\n            const selected: boolean = ((instrument.effects & (1 << effectFlag)) != 0);\n            const label: string = (selected ? \"✓ \" : \"　\") + Config.effectNames[effectFlag];\n            const option: HTMLOptionElement = <HTMLOptionElement>this._effectsSelect.children[i + 1];\n            if (option.textContent != label) option.textContent = label;\n        }\n\n        setSelectedValue(this._scaleSelect, this._doc.song.scale);\n        this._scaleSelect.title = Config.scales[this._doc.song.scale].realName;\n        setSelectedValue(this._keySelect, Config.keys.length - 1 - this._doc.song.key);\n        this._tempoSlider.updateValue(Math.max(0, Math.round(this._doc.song.tempo)));\n        this._tempoStepper.value = Math.round(this._doc.song.tempo).toString();\n        this._songTitleInputBox.updateValue(this._doc.song.title);\n\n        this._eqFilterTypeRow.style.setProperty(\"--text-color-lit\", colors.primaryNote);\n        this._eqFilterTypeRow.style.setProperty(\"--text-color-dim\", colors.secondaryNote);\n        this._eqFilterTypeRow.style.setProperty(\"--background-color-lit\", colors.primaryChannel);\n        this._eqFilterTypeRow.style.setProperty(\"--background-color-dim\", colors.secondaryChannel);\n\n        if (instrument.eqFilterType) {\n            this._eqFilterSimpleButton.classList.remove(\"deactivated\");\n            this._eqFilterAdvancedButton.classList.add(\"deactivated\");\n            this._eqFilterRow.style.display = \"none\";\n            this._eqFilterSimpleCutRow.style.display = \"\";\n            this._eqFilterSimplePeakRow.style.display = \"\";\n        } else {\n            this._eqFilterSimpleButton.classList.add(\"deactivated\");\n            this._eqFilterAdvancedButton.classList.remove(\"deactivated\");\n            this._eqFilterRow.style.display = \"\";\n            this._eqFilterSimpleCutRow.style.display = \"none\";\n            this._eqFilterSimplePeakRow.style.display = \"none\";\n        }\n\n        setSelectedValue(this._rhythmSelect, this._doc.song.rhythm);\n\n        if (!this._doc.song.getChannelIsMod(this._doc.channel)) {\n\n            this._customInstrumentSettingsGroup.style.display = \"\";\n            this._panSliderRow.style.display = \"\";\n            this._panDropdownGroup.style.display = (this._openPanDropdown ? \"\" : \"none\");\n            this._detuneSliderRow.style.display = \"\";\n            this._instrumentVolumeSliderRow.style.display = \"\";\n            this._instrumentTypeSelectRow.style.setProperty(\"display\", \"\");\n            this._instrumentSettingsGroup.appendChild(this._instrumentCopyGroup);\n            this._instrumentSettingsGroup.insertBefore(this._instrumentsButtonRow, this._instrumentSettingsGroup.firstChild);\n            this._instrumentSettingsGroup.insertBefore(this._instrumentSettingsTextRow, this._instrumentSettingsGroup.firstChild);\n\n            if (this._doc.song.channels[this._doc.channel].name == \"\") {\n                this._instrumentSettingsTextRow.textContent = \"Instrument Settings\";\n            }\n            else {\n                this._instrumentSettingsTextRow.textContent = this._doc.song.channels[this._doc.channel].name;\n            }\n\n            this._modulatorGroup.style.display = \"none\";\n\n            // Check if current viewed pattern on channel is used anywhere\n            // + Check if current instrument on channel is used anywhere\n            // + Check if a mod targets this\n            this._usageCheck(this._doc.channel, instrumentIndex);\n\n            if (this._doc.song.getChannelIsNoise(this._doc.channel)) {\n                this._pitchedPresetSelect.style.display = \"none\";\n                this._drumPresetSelect.style.display = \"\";\n                // Also hide select2\n                $(\"#pitchPresetSelect\").parent().hide();\n                $(\"#drumPresetSelect\").parent().show();\n\n                setSelectedValue(this._drumPresetSelect, instrument.preset, true);\n            } else {\n                this._pitchedPresetSelect.style.display = \"\";\n                this._drumPresetSelect.style.display = \"none\";\n\n                // Also hide select2\n                $(\"#pitchPresetSelect\").parent().show();\n                $(\"#drumPresetSelect\").parent().hide();\n\n                setSelectedValue(this._pitchedPresetSelect, instrument.preset, true);\n            }\n\n            if (instrument.type == InstrumentType.noise) {\n                this._chipWaveSelectRow.style.display = \"none\";\n                this._chipNoiseSelectRow.style.display = \"\";\n                setSelectedValue(this._chipNoiseSelect, instrument.chipNoise, true);\n            } else {\n                this._chipNoiseSelectRow.style.display = \"none\";\n            }\n            if (instrument.type == InstrumentType.spectrum) {\n                this._chipWaveSelectRow.style.display = \"none\";\n                this._spectrumRow.style.display = \"\";\n                this._spectrumEditor.render();\n            } else {\n                this._spectrumRow.style.display = \"none\";\n            }\n            if (instrument.type == InstrumentType.harmonics || instrument.type == InstrumentType.pickedString) {\n                this._chipWaveSelectRow.style.display = \"none\";\n                this._harmonicsRow.style.display = \"\";\n                this._harmonicsEditor.render();\n            } else {\n                this._harmonicsRow.style.display = \"none\";\n            }\n            if (instrument.type == InstrumentType.pickedString) {\n                this._chipWaveSelectRow.style.display = \"none\";\n                this._stringSustainRow.style.display = \"\";\n                this._stringSustainSlider.updateValue(instrument.stringSustain);\n                this._stringSustainLabel.textContent = Config.enableAcousticSustain ? \"Sustain (\" + Config.sustainTypeNames[instrument.stringSustainType].substring(0,1).toUpperCase() + \"):\" : \"Sustain:\";\n            } else {\n                this._stringSustainRow.style.display = \"none\";\n            }\n            if (instrument.type == InstrumentType.drumset) {\n                this._drumsetGroup.style.display = \"\";\n                this._chipWaveSelectRow.style.display = \"none\";\n                this._fadeInOutRow.style.display = \"none\";\n                for (let i: number = 0; i < Config.drumCount; i++) {\n                    setSelectedValue(this._drumsetEnvelopeSelects[i], instrument.drumsetEnvelopes[i]);\n                    this._drumsetSpectrumEditors[i].render();\n                }\n            } else {\n                this._drumsetGroup.style.display = \"none\";\n                this._fadeInOutRow.style.display = \"\";\n                this._fadeInOutEditor.render();\n            }\n\n            if (instrument.type == InstrumentType.chip) {\n                this._chipWaveSelectRow.style.display = \"\";\n                setSelectedValue(this._chipWaveSelect, instrument.chipWave);\n            }\n\n            if (instrument.type == InstrumentType.customChipWave) {\n                this._customWaveDraw.style.display = \"\";\n                this._chipWaveSelectRow.style.display = \"none\";\n            }\n            else {\n                this._customWaveDraw.style.display = \"none\";\n            }\n\n            if (instrument.type == InstrumentType.supersaw) {\n\t\t\t\tthis._supersawDynamismRow.style.display = \"\";\n\t\t\t\tthis._supersawSpreadRow.style.display = \"\";\n\t\t\t\tthis._supersawShapeRow.style.display = \"\";\n\t\t\t\tthis._supersawDynamismSlider.updateValue(instrument.supersawDynamism);\n\t\t\t\tthis._supersawSpreadSlider.updateValue(instrument.supersawSpread);\n\t\t\t\tthis._supersawShapeSlider.updateValue(instrument.supersawShape);\n\t\t\t} else {\n\t\t\t\tthis._supersawDynamismRow.style.display = \"none\";\n\t\t\t\tthis._supersawSpreadRow.style.display = \"none\";\n\t\t\t\tthis._supersawShapeRow.style.display = \"none\";\n\t\t\t}\n            if (instrument.type == InstrumentType.pwm || instrument.type == InstrumentType.supersaw) {\n                this._chipWaveSelectRow.style.display = \"none\";\n                this._pulseWidthRow.style.display = \"\";\n                this._pulseWidthSlider.input.title = prettyNumber(instrument.pulseWidth) + \"%\";\n                this._pulseWidthSlider.updateValue(instrument.pulseWidth);\n            } else {\n                this._pulseWidthRow.style.display = \"none\";\n            }\n\n\n            if (instrument.type == InstrumentType.fm) {\n                this._algorithmSelectRow.style.display = \"\";\n                this._phaseModGroup.style.display = \"\";\n                this._feedbackRow1.style.display = \"\";\n                this._feedbackRow2.style.display = \"\";\n                this._chipWaveSelectRow.style.display = \"none\";\n                setSelectedValue(this._algorithmSelect, instrument.algorithm);\n                setSelectedValue(this._feedbackTypeSelect, instrument.feedbackType);\n                this._feedbackAmplitudeSlider.updateValue(instrument.feedbackAmplitude);\n                for (let i: number = 0; i < Config.operatorCount; i++) {\n                    const isCarrier: boolean = (i < Config.algorithms[instrument.algorithm].carrierCount);\n                    this._operatorRows[i].style.color = isCarrier ? ColorConfig.primaryText : \"\";\n                    setSelectedValue(this._operatorFrequencySelects[i], instrument.operators[i].frequency);\n                    this._operatorAmplitudeSliders[i].updateValue(instrument.operators[i].amplitude);\n                    setSelectedValue(this._operatorWaveformSelects[i], instrument.operators[i].waveform);\n                    this._operatorWaveformPulsewidthSliders[i].updateValue(instrument.operators[i].pulseWidth);\n                    this._operatorWaveformPulsewidthSliders[i].input.title = \"\" + Config.pwmOperatorWaves[instrument.operators[i].pulseWidth].name;\n                    this._operatorDropdownGroups[i].style.color = isCarrier ? ColorConfig.primaryText : \"\";\n                    const operatorName: string = (isCarrier ? \"Voice \" : \"Modulator \") + (i + 1);\n                    this._operatorFrequencySelects[i].title = operatorName + \" Frequency\";\n                    this._operatorAmplitudeSliders[i].input.title = operatorName + (isCarrier ? \" Volume\" : \" Amplitude\");\n                    this._operatorDropdownGroups[i].style.display = (this._openOperatorDropdowns[i] ? \"\" : \"none\");\n                    if (instrument.operators[i].waveform == 3) {\n                        this._operatorWaveformPulsewidthSliders[i].container.style.display = \"\";\n                        this._operatorWaveformHints[i].style.display = \"none\";\n                    } else {\n                        this._operatorWaveformPulsewidthSliders[i].container.style.display = \"none\";\n                        this._operatorWaveformHints[i].style.display = \"\";\n                    }\n                }\n            }\n            else {\n                this._algorithmSelectRow.style.display = \"none\";\n                this._phaseModGroup.style.display = \"none\";\n                this._feedbackRow1.style.display = \"none\";\n                this._feedbackRow2.style.display = \"none\";\n            }\n            this._pulseWidthSlider.input.title = prettyNumber(instrument.pulseWidth) + \"%\";\n\n\n            if (effectsIncludeTransition(instrument.effects)) {\n                this._transitionRow.style.display = \"\";\n                if (this._openTransitionDropdown)\n                    this._transitionDropdownGroup.style.display = \"\";\n                setSelectedValue(this._transitionSelect, instrument.transition);\n            } else {\n                this._transitionDropdownGroup.style.display = \"none\";\n                this._transitionRow.style.display = \"none\";\n            }\n\n            if (effectsIncludeChord(instrument.effects)) {\n                this._chordSelectRow.style.display = \"\";\n                this._chordDropdown.style.display = (instrument.chord == Config.chords.dictionary[\"arpeggio\"].index) ? \"\" : \"none\";\n                this._chordDropdownGroup.style.display = (instrument.chord == Config.chords.dictionary[\"arpeggio\"].index && this._openChordDropdown) ? \"\" : \"none\";\n                setSelectedValue(this._chordSelect, instrument.chord);\n            } else {\n                this._chordSelectRow.style.display = \"none\";\n                this._chordDropdown.style.display = \"none\";\n                this._chordDropdownGroup.style.display = \"none\";\n            }\n\n            if (effectsIncludePitchShift(instrument.effects)) {\n                this._pitchShiftRow.style.display = \"\";\n                this._pitchShiftSlider.updateValue(instrument.pitchShift);\n                this._pitchShiftSlider.input.title = (instrument.pitchShift - Config.pitchShiftCenter) + \" semitone(s)\";\n                for (const marker of this._pitchShiftFifthMarkers) {\n                    marker.style.display = prefs.showFifth ? \"\" : \"none\";\n                }\n            } else {\n                this._pitchShiftRow.style.display = \"none\";\n            }\n\n            if (effectsIncludeDetune(instrument.effects)) {\n                this._detuneSliderRow.style.display = \"\";\n                this._detuneSlider.updateValue(instrument.detune - Config.detuneCenter);\n                this._detuneSlider.input.title = (Synth.detuneToCents(instrument.detune)) + \" cent(s)\";\n            } else {\n                this._detuneSliderRow.style.display = \"none\";\n            }\n\n            if (effectsIncludeVibrato(instrument.effects)) {\n                this._vibratoSelectRow.style.display = \"\";\n                if (this._openVibratoDropdown)\n                    this._vibratoDropdownGroup.style.display = \"\";\n                setSelectedValue(this._vibratoSelect, instrument.vibrato);\n            } else {\n                this._vibratoDropdownGroup.style.display = \"none\";\n                this._vibratoSelectRow.style.display = \"none\";\n            }\n\n            if (effectsIncludeNoteFilter(instrument.effects)) {\n\n                this._noteFilterTypeRow.style.setProperty(\"--text-color-lit\", colors.primaryNote);\n                this._noteFilterTypeRow.style.setProperty(\"--text-color-dim\", colors.secondaryNote);\n                this._noteFilterTypeRow.style.setProperty(\"--background-color-lit\", colors.primaryChannel);\n                this._noteFilterTypeRow.style.setProperty(\"--background-color-dim\", colors.secondaryChannel);\n                this._noteFilterTypeRow.style.display = \"\";\n\n                if (this._doc.synth.isFilterModActive(true, this._doc.channel, this._doc.getCurrentInstrument())) {\n                    this._noteFilterEditor.render(true, this._ctrlHeld || this._shiftHeld);\n                }\n                else {\n                    this._noteFilterEditor.render();\n                }\n\n                if (instrument.noteFilterType) {\n                    this._noteFilterSimpleButton.classList.remove(\"deactivated\");\n                    this._noteFilterAdvancedButton.classList.add(\"deactivated\");\n                    this._noteFilterRow.style.display = \"none\";\n                    this._noteFilterSimpleCutRow.style.display = \"\";\n                    this._noteFilterSimplePeakRow.style.display = \"\";\n                } else {\n                    this._noteFilterSimpleButton.classList.add(\"deactivated\");\n                    this._noteFilterAdvancedButton.classList.remove(\"deactivated\");\n                    this._noteFilterRow.style.display = \"\";\n                    this._noteFilterSimpleCutRow.style.display = \"none\";\n                    this._noteFilterSimplePeakRow.style.display = \"none\";\n                }\n            } else {\n                this._noteFilterRow.style.display = \"none\";\n                this._noteFilterSimpleCutRow.style.display = \"none\";\n                this._noteFilterSimplePeakRow.style.display = \"none\";\n                this._noteFilterTypeRow.style.display = \"none\";\n            }\n\n            if (effectsIncludeDistortion(instrument.effects)) {\n                this._distortionRow.style.display = \"\";\n                if (instrument.type == InstrumentType.chip || instrument.type == InstrumentType.customChipWave || instrument.type == InstrumentType.pwm || instrument.type == InstrumentType.supersaw)\n                    this._aliasingRow.style.display = \"\";\n                else\n                    this._aliasingRow.style.display = \"none\";\n                this._distortionSlider.updateValue(instrument.distortion);\n            } else {\n                this._distortionRow.style.display = \"none\";\n                this._aliasingRow.style.display = \"none\";\n            }\n\n            if (effectsIncludeBitcrusher(instrument.effects)) {\n                this._bitcrusherQuantizationRow.style.display = \"\";\n                this._bitcrusherFreqRow.style.display = \"\";\n                this._bitcrusherQuantizationSlider.updateValue(instrument.bitcrusherQuantization);\n                this._bitcrusherFreqSlider.updateValue(instrument.bitcrusherFreq);\n            } else {\n                this._bitcrusherQuantizationRow.style.display = \"none\";\n                this._bitcrusherFreqRow.style.display = \"none\";\n            }\n\n            if (effectsIncludePanning(instrument.effects)) {\n                this._panSliderRow.style.display = \"\";\n                if (this._openPanDropdown)\n                    this._panDropdownGroup.style.display = \"\";\n                this._panSlider.updateValue(instrument.pan);\n            } else {\n                this._panSliderRow.style.display = \"none\";\n                this._panDropdownGroup.style.display = \"none\";\n            }\n\n            if (effectsIncludeChorus(instrument.effects)) {\n                this._chorusRow.style.display = \"\";\n                this._chorusSlider.updateValue(instrument.chorus);\n            } else {\n                this._chorusRow.style.display = \"none\";\n            }\n\n            if (effectsIncludeEcho(instrument.effects)) {\n                this._echoSustainRow.style.display = \"\";\n                this._echoSustainSlider.updateValue(instrument.echoSustain);\n                this._echoDelayRow.style.display = \"\";\n                this._echoDelaySlider.updateValue(instrument.echoDelay);\n                this._echoDelaySlider.input.title = (Math.round((instrument.echoDelay + 1) * Config.echoDelayStepTicks / (Config.ticksPerPart * Config.partsPerBeat) * 1000) / 1000) + \" beat(s)\";\n            } else {\n                this._echoSustainRow.style.display = \"none\";\n                this._echoDelayRow.style.display = \"none\";\n            }\n\n            if (effectsIncludeReverb(instrument.effects)) {\n                this._reverbRow.style.display = \"\";\n                this._reverbSlider.updateValue(instrument.reverb);\n            } else {\n                this._reverbRow.style.display = \"none\";\n            }\n\n            if (instrument.type == InstrumentType.chip || instrument.type == InstrumentType.customChipWave || instrument.type == InstrumentType.harmonics || instrument.type == InstrumentType.pickedString) {\n                this._unisonSelectRow.style.display = \"\";\n                setSelectedValue(this._unisonSelect, instrument.unison);\n            } else {\n                this._unisonSelectRow.style.display = \"none\";\n            }\n\n            if (this._openEnvelopeDropdown)\n                this._envelopeDropdownGroup.style.display = \"\";\n            else\n                this._envelopeDropdownGroup.style.display = \"none\";\n\n            this._envelopeEditor.render();\n\n            for (let chordIndex: number = 0; chordIndex < Config.chords.length; chordIndex++) {\n                let hidden: boolean = (!Config.instrumentTypeHasSpecialInterval[instrument.type] && Config.chords[chordIndex].customInterval);\n                const option: Element = this._chordSelect.children[chordIndex];\n                if (hidden) {\n                    if (!option.hasAttribute(\"hidden\")) {\n                        option.setAttribute(\"hidden\", \"\");\n                    }\n                } else {\n                    option.removeAttribute(\"hidden\");\n                }\n            }\n\n            this._instrumentSettingsGroup.style.color = ColorConfig.getChannelColor(this._doc.song, this._doc.channel).primaryNote;\n\n            setSelectedValue(this._transitionSelect, instrument.transition);\n            setSelectedValue(this._vibratoSelect, instrument.vibrato);\n            setSelectedValue(this._vibratoTypeSelect, instrument.vibratoType);\n            setSelectedValue(this._chordSelect, instrument.chord);\n            this._panSliderInputBox.value = instrument.pan + \"\";\n            this._pwmSliderInputBox.value = instrument.pulseWidth + \"\";\n            this._detuneSliderInputBox.value = (instrument.detune - Config.detuneCenter) + \"\";\n            this._instrumentVolumeSlider.updateValue(instrument.volume);\n            this._instrumentVolumeSliderInputBox.value = \"\" + (instrument.volume);\n            this._vibratoDepthSlider.updateValue(Math.round(instrument.vibratoDepth * 25));\n            this._vibratoDelaySlider.updateValue(Math.round(instrument.vibratoDelay));\n            this._vibratoSpeedSlider.updateValue(instrument.vibratoSpeed);\n            setSelectedValue(this._vibratoTypeSelect, instrument.vibratoType);\n            this._arpeggioSpeedSlider.updateValue(instrument.arpeggioSpeed);\n            this._panDelaySlider.updateValue(instrument.panDelay);\n            this._vibratoDelaySlider.input.title = \"\" + Math.round(instrument.vibratoDelay);\n            this._vibratoDepthSlider.input.title = \"\" + instrument.vibratoDepth;\n            this._vibratoSpeedSlider.input.title = \"x\" + instrument.vibratoSpeed / 10;\n            this._vibratoSpeedDisplay.textContent = \"x\" + instrument.vibratoSpeed / 10;\n            this._panDelaySlider.input.title = \"\" + instrument.panDelay;\n            this._arpeggioSpeedSlider.input.title = \"x\" + prettyNumber(Config.arpSpeedScale[instrument.arpeggioSpeed]);\n            this._arpeggioSpeedDisplay.textContent = \"x\" + prettyNumber(Config.arpSpeedScale[instrument.arpeggioSpeed]);\n            this._eqFilterSimpleCutSlider.updateValue(instrument.eqFilterSimpleCut);\n            this._eqFilterSimplePeakSlider.updateValue(instrument.eqFilterSimplePeak);\n            this._noteFilterSimpleCutSlider.updateValue(instrument.noteFilterSimpleCut);\n            this._noteFilterSimplePeakSlider.updateValue(instrument.noteFilterSimplePeak);\n            this._envelopeSpeedSlider.updateValue(instrument.envelopeSpeed);\n            this._envelopeSpeedSlider.input.title = \"x\" + prettyNumber(Config.arpSpeedScale[instrument.envelopeSpeed]);\n            this._envelopeSpeedDisplay.textContent = \"x\" + prettyNumber(Config.arpSpeedScale[instrument.envelopeSpeed]);\n\n\n            if (instrument.type == InstrumentType.customChipWave) {\n                this._customWaveDrawCanvas.redrawCanvas();\n                if (this.prompt instanceof CustomChipPrompt) {\n                    this.prompt.customChipCanvas.render();\n                }\n            }\n\n            this._renderInstrumentBar(channel, instrumentIndex, colors);\n        }\n        // Options for mod channel\n        else {\n            this._usageCheck(this._doc.channel, instrumentIndex);\n\n            this._pitchedPresetSelect.style.display = \"none\";\n            this._drumPresetSelect.style.display = \"none\";\n            $(\"#pitchPresetSelect\").parent().hide();\n            $(\"#drumPresetSelect\").parent().hide();\n            this._modulatorGroup.appendChild(this._instrumentCopyGroup);\n\n            this._modulatorGroup.insertBefore(this._instrumentsButtonRow, this._modulatorGroup.firstChild);\n            this._modulatorGroup.insertBefore(this._instrumentSettingsTextRow, this._modulatorGroup.firstChild);\n            if (this._doc.song.channels[this._doc.channel].name == \"\") {\n                this._instrumentSettingsTextRow.textContent = \"Modulator Settings\";\n            }\n            else {\n                this._instrumentSettingsTextRow.textContent = this._doc.song.channels[this._doc.channel].name;\n            }\n\n            this._chipNoiseSelectRow.style.display = \"none\";\n            this._chipWaveSelectRow.style.display = \"none\";\n            this._spectrumRow.style.display = \"none\";\n            this._harmonicsRow.style.display = \"none\";\n            this._transitionRow.style.display = \"none\";\n            this._chordSelectRow.style.display = \"none\";\n            this._chordDropdownGroup.style.display = \"none\";\n            //this._filterCutoffRow.style.display = \"none\";\n            //this._filterResonanceRow.style.display = \"none\";\n            //this._filterEnvelopeRow.style.display = \"none\";\n            this._drumsetGroup.style.display = \"none\";\n            this._customWaveDraw.style.display = \"none\";\n            this._supersawDynamismRow.style.display = \"none\";\n\t\t\tthis._supersawSpreadRow.style.display = \"none\";\n\t\t\tthis._supersawShapeRow.style.display = \"none\";\n            this._algorithmSelectRow.style.display = \"none\";\n            this._phaseModGroup.style.display = \"none\";\n            this._feedbackRow1.style.display = \"none\";\n            this._feedbackRow2.style.display = \"none\";\n            //this._pulseEnvelopeRow.style.display = \"none\";\n            this._pulseWidthRow.style.display = \"none\";\n            this._vibratoSelectRow.style.display = \"none\";\n            this._vibratoDropdownGroup.style.display = \"none\";\n            this._envelopeDropdownGroup.style.display = \"none\";\n            //this._intervalSelectRow.style.display = \"none\";\n            this._detuneSliderRow.style.display = \"none\";\n            this._panSliderRow.style.display = \"none\";\n            this._panDropdownGroup.style.display = \"none\";\n\n            this._modulatorGroup.style.display = \"\";\n            this._modulatorGroup.style.color = ColorConfig.getChannelColor(this._doc.song, this._doc.channel).primaryNote;\n\n            for (let mod: number = 0; mod < Config.modCount; mod++) {\n\n                let instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\n                let modChannel: number = Math.max(0, instrument.modChannels[mod]);\n                let modInstrument: number = instrument.modInstruments[mod];\n\n                // Boundary checking\n                if (modInstrument >= this._doc.song.channels[modChannel].instruments.length + 2 || (modInstrument > 0 && this._doc.song.channels[modChannel].instruments.length <= 1)) {\n                    modInstrument = 0;\n                    instrument.modInstruments[mod] = 0;\n                }\n                if (modChannel >= this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\n                    instrument.modInstruments[mod] = 0;\n                    instrument.modulators[mod] = 0;\n                }\n\n                // Build options for modulator channels (make sure it has the right number).\n                if (this._doc.recalcChannelNames || (this._modChannelBoxes[mod].children.length != 2 + this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount)) {\n                    while (this._modChannelBoxes[mod].firstChild) this._modChannelBoxes[mod].remove(0);\n                    const channelList: string[] = [];\n                    channelList.push(\"none\");\n                    channelList.push(\"song\");\n                    for (let i: number = 0; i < this._doc.song.pitchChannelCount; i++) {\n                        if (this._doc.song.channels[i].name == \"\") {\n                            channelList.push(\"pitch \" + (i + 1));\n                        }\n                        else {\n                            channelList.push(this._doc.song.channels[i].name);\n                        }\n                    }\n                    for (let i: number = 0; i < this._doc.song.noiseChannelCount; i++) {\n                        if (this._doc.song.channels[i + this._doc.song.pitchChannelCount].name == \"\") {\n                            channelList.push(\"noise \" + (i + 1));\n                        }\n                        else {\n                            channelList.push(this._doc.song.channels[i + this._doc.song.pitchChannelCount].name);\n                        }\n                    }\n                    buildOptions(this._modChannelBoxes[mod], channelList);\n                }\n\n                // Set selected index based on channel info.\n\n                this._modChannelBoxes[mod].selectedIndex = instrument.modChannels[mod] + 2; // Offset to get to first pitch channel\n\n                let channel: Channel = this._doc.song.channels[modChannel];\n\n                // Build options for modulator instruments (make sure it has the right number).\n                if (this._modInstrumentBoxes[mod].children.length != channel.instruments.length + 2) {\n                    while (this._modInstrumentBoxes[mod].firstChild) this._modInstrumentBoxes[mod].remove(0);\n                    const instrumentList: string[] = [];\n                    for (let i: number = 0; i < channel.instruments.length; i++) {\n                        instrumentList.push(\"\" + i + 1);\n                    }\n                    instrumentList.push(\"all\");\n                    instrumentList.push(\"active\");\n                    buildOptions(this._modInstrumentBoxes[mod], instrumentList);\n                }\n\n                // If non-zero pattern, point to which instrument(s) is/are the current\n                if (channel.bars[this._doc.bar] > 0) {\n\n                    let usedInstruments: number[] = channel.patterns[channel.bars[this._doc.bar] - 1].instruments;\n\n                    for (let i: number = 0; i < channel.instruments.length; i++) {\n\n                        if (usedInstruments.includes(i)) {\n                            this._modInstrumentBoxes[mod].options[i].label = \"🢒\" + (i + 1);\n                        }\n                        else {\n                            this._modInstrumentBoxes[mod].options[i].label = \"\" + (i + 1);\n                        }\n                    }\n                }\n                else {\n                    for (let i: number = 0; i < channel.instruments.length; i++) {\n                        this._modInstrumentBoxes[mod].options[i].label = \"\" + (i + 1);\n                    }\n                }\n\n                // Set selected index based on instrument info.\n                this._modInstrumentBoxes[mod].selectedIndex = instrument.modInstruments[mod];\n\n                // Build options for modulator settings (based on channel settings)\n\n                if (instrument.modChannels[mod] != -2) {\n                    while (this._modSetBoxes[mod].firstChild) this._modSetBoxes[mod].remove(0);\n                    const settingList: string[] = [];\n                    const unusedSettingList: string[] = [];\n\n                    // Make sure these names match the names declared for modulators in SynthConfig.ts.\n\n                    settingList.push(\"none\");\n\n                    // Populate mod setting options for the song scope.\n                    if (instrument.modChannels[mod] == -1) {\n                        settingList.push(\"song volume\");\n                        settingList.push(\"tempo\");\n                        settingList.push(\"song reverb\");\n                        settingList.push(\"next bar\");\n                        settingList.push(\"song detune\");\n                    }\n                    // Populate mod setting options for instrument scope.\n                    else {\n\n                        settingList.push(\"note volume\");\n                        settingList.push(\"mix volume\");\n\n                        // Build a list of target instrument indices, types and other info. It will be a single type for a single instrument, but with \"all\" and \"active\" it could be more.\n                        // All or active are included together. Active allows any to be set, just in case the user fiddles with which are active later.\n                        let tgtInstrumentTypes: InstrumentType[] = [];\n                        let anyInstrumentAdvancedEQ:     boolean = false,\n                            anyInstrumentSimpleEQ:       boolean = false,\n                            anyInstrumentAdvancedNote:   boolean = false,\n                            anyInstrumentSimpleNote:     boolean = false,\n                            anyInstrumentArps:           boolean = false,\n                            anyInstrumentPitchShifts:    boolean = false,\n                            anyInstrumentDetunes:        boolean = false,\n                            anyInstrumentVibratos:       boolean = false,\n                            anyInstrumentNoteFilters:    boolean = false,\n                            anyInstrumentDistorts:       boolean = false,\n                            anyInstrumentBitcrushes:     boolean = false,\n                            anyInstrumentPans:           boolean = false,\n                            anyInstrumentChorus:         boolean = false,\n                            anyInstrumentEchoes:         boolean = false,\n                            anyInstrumentReverbs:        boolean = false,\n                            anyInstrumentHasEnvelopes:   boolean = false;\n                        let allInstrumentPitchShifts:    boolean = true,\n                            allInstrumentNoteFilters:    boolean = true,\n                            allInstrumentDetunes:        boolean = true,\n                            allInstrumentVibratos:       boolean = true,\n                            allInstrumentDistorts:       boolean = true,\n                            allInstrumentBitcrushes:     boolean = true,\n                            allInstrumentPans:           boolean = true,\n                            allInstrumentChorus:         boolean = true,\n                            allInstrumentEchoes:         boolean = true,\n                            allInstrumentReverbs:        boolean = true;\n                        let instrumentCandidates: number[] = [];\n                        if (modInstrument >= channel.instruments.length) {\n                            for (let i: number = 0; i < channel.instruments.length; i++) {\n                                instrumentCandidates.push(i);\n                            }\n                        } else {\n                            instrumentCandidates.push(modInstrument);\n                        }\n                        for (let i: number = 0; i < instrumentCandidates.length; i++) {\n                            let instrumentIndex = instrumentCandidates[i];\n\n                            if (!tgtInstrumentTypes.includes(channel.instruments[instrumentIndex].type))\n                                tgtInstrumentTypes.push(channel.instruments[instrumentIndex].type);\n                            if (channel.instruments[instrumentIndex].eqFilterType)\n                                anyInstrumentSimpleEQ = true;\n                            else\n                                anyInstrumentAdvancedEQ = true;\n                            if (effectsIncludeChord(channel.instruments[instrumentIndex].effects) && channel.instruments[instrumentIndex].getChord().arpeggiates) {\n                                anyInstrumentArps = true;\n                            }\n                            if (effectsIncludePitchShift(channel.instruments[instrumentIndex].effects)) {\n                                anyInstrumentPitchShifts = true;\n                            }\n                            if (effectsIncludeDetune(channel.instruments[instrumentIndex].effects)) {\n                                anyInstrumentDetunes = true;\n                            }\n                            else {\n                                allInstrumentDetunes = false;\n                            }\n                            if (effectsIncludeVibrato(channel.instruments[instrumentIndex].effects)) {\n                                anyInstrumentVibratos = true;\n                            }\n                            else {\n                                allInstrumentVibratos = false;\n                            }\n                            if (effectsIncludeNoteFilter(channel.instruments[instrumentIndex].effects)) {\n                                anyInstrumentNoteFilters = true;\n                                if (channel.instruments[instrumentIndex].noteFilterType)\n                                    anyInstrumentSimpleNote = true;\n                                else\n                                    anyInstrumentAdvancedNote = true;\n                            }\n                            else {\n                                allInstrumentNoteFilters = false;\n                            }\n                            if (effectsIncludeDistortion(channel.instruments[instrumentIndex].effects)) {\n                                anyInstrumentDistorts = true;\n                            }\n                            else {\n                                allInstrumentDistorts = false;\n                            }\n                            if (effectsIncludeBitcrusher(channel.instruments[instrumentIndex].effects)) {\n                                anyInstrumentBitcrushes = true;\n                            }\n                            else {\n                                allInstrumentBitcrushes = false;\n                            }\n                            if (effectsIncludePanning(channel.instruments[instrumentIndex].effects)) {\n                                anyInstrumentPans = true;\n                            }\n                            else {\n                                allInstrumentPans = false;\n                            }\n                            if (effectsIncludeChorus(channel.instruments[instrumentIndex].effects)) {\n                                anyInstrumentChorus = true;\n                            }\n                            else {\n                                allInstrumentChorus = false;\n                            }\n                            if (effectsIncludeEcho(channel.instruments[instrumentIndex].effects)) {\n                                anyInstrumentEchoes = true;\n                            }\n                            else {\n                                allInstrumentEchoes = false;\n                            }\n                            if (effectsIncludeReverb(channel.instruments[instrumentIndex].effects)) {\n                                anyInstrumentReverbs = true;\n                            }\n                            else {\n                                allInstrumentReverbs = false;\n                            }\n                            if (channel.instruments[instrumentIndex].envelopes.length > 0) {\n                                anyInstrumentHasEnvelopes = true;\n                            }\n\n                        }\n                        if (anyInstrumentAdvancedEQ) {\n                            settingList.push(\"eq filter\");\n                        }\n                        if (anyInstrumentSimpleEQ) {\n                            settingList.push(\"eq filt cut\");\n                            settingList.push(\"eq filt peak\");\n                        }\n                        if (tgtInstrumentTypes.includes(InstrumentType.fm)) {\n                            settingList.push(\"fm slider 1\");\n                            settingList.push(\"fm slider 2\");\n                            settingList.push(\"fm slider 3\");\n                            settingList.push(\"fm slider 4\");\n                            settingList.push(\"fm feedback\");\n                        }\n                        if (tgtInstrumentTypes.includes(InstrumentType.pwm) || tgtInstrumentTypes.includes(InstrumentType.supersaw)) {\n                            settingList.push(\"pulse width\");\n                        }\n                        if (tgtInstrumentTypes.includes(InstrumentType.supersaw)) {\n                            settingList.push(\"dynamism\");\n                            settingList.push(\"spread\");\n                            settingList.push(\"saw shape\");\n                        }\n                        if (tgtInstrumentTypes.includes(InstrumentType.pickedString)) {\n                            settingList.push(\"sustain\");\n                        }\n                        if (anyInstrumentArps) {\n                            settingList.push(\"arp speed\");\n                            settingList.push(\"reset arp\");\n                        }\n                        if (anyInstrumentPitchShifts) {\n                            settingList.push(\"pitch shift\");\n                        }\n                        if (!allInstrumentPitchShifts) {\n                            unusedSettingList.push(\"+ pitch shift\");\n                        }\n                        if (anyInstrumentDetunes) {\n                            settingList.push(\"detune\");\n                        }\n                        if (!allInstrumentDetunes) {\n                            unusedSettingList.push(\"+ detune\");\n                        }\n                        if (anyInstrumentVibratos) {\n                            settingList.push(\"vibrato depth\");\n                            settingList.push(\"vibrato speed\");\n                            settingList.push(\"vibrato delay\");\n                        }\n                        if (!allInstrumentVibratos) {\n                            unusedSettingList.push(\"+ vibrato depth\");\n                            unusedSettingList.push(\"+ vibrato speed\");\n                            unusedSettingList.push(\"+ vibrato delay\");\n                        }\n                        if (anyInstrumentNoteFilters) {\n                            if (anyInstrumentAdvancedNote) {\n                                settingList.push(\"note filter\");\n                            }\n                            if (anyInstrumentSimpleNote) {\n                                settingList.push(\"note filt cut\");\n                                settingList.push(\"note filt peak\");\n                            }\n                        }\n                        if (!allInstrumentNoteFilters) {\n                            unusedSettingList.push(\"+ note filter\");\n                        }\n                        if (anyInstrumentDistorts) {\n                            settingList.push(\"distortion\");\n                        }\n                        if (!allInstrumentDistorts) {\n                            unusedSettingList.push(\"+ distortion\");\n                        }\n                        if (anyInstrumentBitcrushes) {\n                            settingList.push(\"bit crush\");\n                            settingList.push(\"freq crush\");\n                        }\n                        if (!allInstrumentBitcrushes) {\n                            unusedSettingList.push(\"+ bit crush\");\n                            unusedSettingList.push(\"+ freq crush\");\n                        }\n                        if (anyInstrumentPans) {\n                            settingList.push(\"pan\");\n                            settingList.push(\"pan delay\");\n                        }\n                        if (!allInstrumentPans) {\n                            unusedSettingList.push(\"+ pan\");\n                            unusedSettingList.push(\"+ pan delay\");\n                        }\n                        if (anyInstrumentChorus) {\n                            settingList.push(\"chorus\");\n                        }\n                        if (!allInstrumentChorus) {\n                            unusedSettingList.push(\"+ chorus\");\n                        }\n                        if (anyInstrumentEchoes) {\n                            settingList.push(\"echo\");\n                            // Disabled currently!\n                            //settingList.push(\"echo delay\");\n                        }\n                        if (!allInstrumentEchoes) {\n                            unusedSettingList.push(\"+ echo\");\n                            //unusedSettingList.push(\"echo delay\");\n                        }\n                        if (anyInstrumentReverbs) {\n                            settingList.push(\"reverb\");\n                        }\n                        if (!allInstrumentReverbs) {\n                            unusedSettingList.push(\"+ reverb\");\n                        }\n\n                        if (anyInstrumentHasEnvelopes) {\n                            settingList.push(\"envelope speed\");\n                        }\n\n                    }\n\n                    buildOptions(this._modSetBoxes[mod], settingList);\n                    if (unusedSettingList.length > 0) {\n                        this._modSetBoxes[mod].appendChild(option({ selected: false, disabled: true, value: \"Add Effect\" }, \"Add Effect\"));\n                        buildOptions(this._modSetBoxes[mod], unusedSettingList);\n                    }\n\n                    let setIndex: number = settingList.indexOf(Config.modulators[instrument.modulators[mod]].name);\n\n                    // Catch instances where invalid set forced setting to \"none\"\n                    if (setIndex == -1) {\n                        this._modSetBoxes[mod].insertBefore(option({ value: Config.modulators[instrument.modulators[mod]].name, style: \"color: red;\" }, Config.modulators[instrument.modulators[mod]].name), this._modSetBoxes[mod].children[0]);\n                        this._modSetBoxes[mod].selectedIndex = 0;\n                        this._whenSetModSetting(mod, true);\n                    }\n                    else {\n                        this._modSetBoxes[mod].selectedIndex = setIndex;\n                        this._modSetBoxes[mod].classList.remove(\"invalidSetting\");\n                        instrument.invalidModulators[mod] = false;\n                    }\n\n                } else if (this._modSetBoxes[mod].selectedIndex > 0) {\n                    this._modSetBoxes[mod].selectedIndex = 0;\n                    this._whenSetModSetting(mod);\n                }\n\n                //Hide instrument select if channel is \"none\" or \"song\"\n                if (instrument.modChannels[mod] < 0) {\n                    ((this._modInstrumentBoxes[mod].parentElement) as HTMLDivElement).style.display = \"none\";\n                    $(\"#modInstrumentText\" + mod).get(0).style.display = \"none\";\n                    $(\"#modChannelText\" + mod).get(0).innerText = \"Channel:\";\n\n                    //Hide setting select if channel is \"none\"\n                    if (instrument.modChannels[mod] == -2) {\n                        $(\"#modSettingText\" + mod).get(0).style.display = \"none\";\n                        ((this._modSetBoxes[mod].parentElement) as HTMLDivElement).style.display = \"none\";\n                    }\n                    else {\n                        $(\"#modSettingText\" + mod).get(0).style.display = \"\";\n                        ((this._modSetBoxes[mod].parentElement) as HTMLDivElement).style.display = \"\";\n                    }\n\n                    this._modTargetIndicators[mod].style.setProperty(\"fill\", ColorConfig.uiWidgetFocus);\n                    this._modTargetIndicators[mod].classList.remove(\"modTarget\");\n\n                }\n                else {\n                    ((this._modInstrumentBoxes[mod].parentElement) as HTMLDivElement).style.display = (channel.instruments.length > 1) ? \"\" : \"none\";\n                    $(\"#modInstrumentText\" + mod).get(0).style.display = (channel.instruments.length > 1) ? \"\" : \"none\";\n                    $(\"#modChannelText\" + mod).get(0).innerText = (channel.instruments.length > 1) ? \"Ch:\" : \"Channel:\";\n                    $(\"#modSettingText\" + mod).get(0).style.display = \"\";\n                    ((this._modSetBoxes[mod].parentElement) as HTMLDivElement).style.display = \"\";\n\n                    this._modTargetIndicators[mod].style.setProperty(\"fill\", ColorConfig.indicatorPrimary);\n                    this._modTargetIndicators[mod].classList.add(\"modTarget\");\n                }\n\n                let filterType: string = Config.modulators[instrument.modulators[mod]].name;\n                if (filterType == \"eq filter\" || filterType == \"note filter\") {\n                    $(\"#modFilterText\" + mod).get(0).style.display = \"\";\n                    $(\"#modSettingText\" + mod).get(0).style.setProperty(\"margin-bottom\", \"2px\");\n\n                    let useInstrument: number = instrument.modInstruments[mod];\n                    let modChannel: Channel = this._doc.song.channels[Math.max(0, instrument.modChannels[mod])];\n                    let tmpCount: number = -1;\n                    if (useInstrument >= modChannel.instruments.length) {\n                        // Use greatest number of dots among all instruments if setting is 'all' or 'active'. If it won't have an effect on one, no worry.\n                        for (let i: number = 0; i < modChannel.instruments.length; i++) {\n                            if (filterType == \"eq filter\") {\n                                if (modChannel.instruments[i].eqFilter.controlPointCount > tmpCount) {\n                                    tmpCount = modChannel.instruments[i].eqFilter.controlPointCount;\n                                    useInstrument = i;\n                                }\n                            } else {\n                                if (modChannel.instruments[i].noteFilter.controlPointCount > tmpCount) {\n                                    tmpCount = modChannel.instruments[i].noteFilter.controlPointCount;\n                                    useInstrument = i;\n                                }\n                            }\n                        }\n                    }\n\n                    // Build options for modulator filters (make sure it has the right number of filter dots).\n                    let dotCount: number = (filterType == \"eq filter\")\n                        ? channel.instruments[useInstrument].getLargestControlPointCount(false)\n                        : channel.instruments[useInstrument].getLargestControlPointCount(true);\n\n                    const isSimple: boolean = (filterType == \"eq filter\" ? channel.instruments[useInstrument].eqFilterType : channel.instruments[useInstrument].noteFilterType);\n                    if (isSimple)\n                        dotCount = 0;\n\n                    if (isSimple || this._modFilterBoxes[mod].children.length != 1 + dotCount * 2) {\n                        while (this._modFilterBoxes[mod].firstChild) this._modFilterBoxes[mod].remove(0);\n                        const dotList: string[] = [];\n                        if (!isSimple)\n                            dotList.push(\"morph\");\n                        for (let i: number = 0; i < dotCount; i++) {\n                            dotList.push(\"dot \" + (i + 1) + \" x\");\n                            dotList.push(\"dot \" + (i + 1) + \" y\");\n                        }\n                        buildOptions(this._modFilterBoxes[mod], dotList);\n                    }\n\n                    if (isSimple || instrument.modFilterTypes[mod] >= this._modFilterBoxes[mod].length) {\n                        this._modFilterBoxes[mod].classList.add(\"invalidSetting\");\n                        instrument.invalidModulators[mod] = true;\n                        let useName: string = ((instrument.modFilterTypes[mod] - 1) % 2 == 1) ?\n                            \"dot \" + (Math.floor((instrument.modFilterTypes[mod] - 1) / 2) + 1) + \" y\"\n                            : \"dot \" + (Math.floor((instrument.modFilterTypes[mod] - 1) / 2) + 1) + \" x\";\n                        if (instrument.modFilterTypes[mod] == 0)\n                            useName = \"morph\";\n                        this._modFilterBoxes[mod].insertBefore(option({ value: useName, style: \"color: red;\" }, useName), this._modFilterBoxes[mod].children[0]);\n                        this._modFilterBoxes[mod].selectedIndex = 0;\n\n                    }\n                    else {\n                        this._modFilterBoxes[mod].classList.remove(\"invalidSetting\");\n                        instrument.invalidModulators[mod] = false;\n                        this._modFilterBoxes[mod].selectedIndex = instrument.modFilterTypes[mod];\n                    }\n\n\n\n                } else {\n                    $(\"#modFilterText\" + mod).get(0).style.display = \"none\";\n                    $(\"#modSettingText\" + mod).get(0).style.setProperty(\"margin-bottom\", \"0.9em\");\n\n                }\n            }\n\n            this._doc.recalcChannelNames = false;\n\n            for (let chordIndex: number = 0; chordIndex < Config.chords.length; chordIndex++) {\n                const option: Element = this._chordSelect.children[chordIndex];\n                if (!option.hasAttribute(\"hidden\")) {\n                    option.setAttribute(\"hidden\", \"\");\n                }\n\n            }\n\n            //this._instrumentSelectRow.style.display = \"none\";\n\n            this._customInstrumentSettingsGroup.style.display = \"none\";\n            this._panSliderRow.style.display = \"none\";\n            this._panDropdownGroup.style.display = \"none\";\n            this._instrumentVolumeSliderRow.style.display = \"none\";\n            this._instrumentTypeSelectRow.style.setProperty(\"display\", \"none\");\n\n            this._instrumentSettingsGroup.style.color = ColorConfig.getChannelColor(this._doc.song, this._doc.channel).primaryNote;\n\n            // Force piano to re-show, if channel is modulator\n            if (this._doc.channel >= this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\n                this._piano.forceRender();\n            }\n\n            this._renderInstrumentBar(channel, instrumentIndex, colors);\n\n        }\n\n        this._instrumentSettingsGroup.style.color = colors.primaryNote;\n\n        if (this._doc.synth.isFilterModActive(false, this._doc.channel, this._doc.getCurrentInstrument())) {\n            this._eqFilterEditor.render(true, this._ctrlHeld || this._shiftHeld);\n        }\n        else {\n            this._eqFilterEditor.render();\n        }\n        this._instrumentVolumeSlider.updateValue(instrument.volume);\n        this._detuneSlider.updateValue(instrument.detune - Config.detuneCenter);\n        this._twoNoteArpBox.checked = instrument.fastTwoNoteArp ? true : false;\n        this._clicklessTransitionBox.checked = instrument.clicklessTransition ? true : false;\n        this._aliasingBox.checked = instrument.aliases ? true : false;\n        this._addEnvelopeButton.disabled = (instrument.envelopeCount >= Config.maxEnvelopeCount);\n        this._discreteEnvelopeBox.checked = instrument.discreteEnvelope ? true : false;\n\n        this._volumeSlider.updateValue(prefs.volume);\n\n        // If an interface element was selected, but becomes invisible (e.g. an instrument\n        // select menu) just select the editor container so keyboard commands still work.\n        if (wasActive && activeElement != null && activeElement.clientWidth == 0) {\n            this.refocusStage();\n        }\n\n        this._setPrompt(this._doc.prompt);\n\n        if (prefs.autoFollow && !this._doc.synth.playing) {\n            this._doc.synth.goToBar(this._doc.bar);\n        }\n\n        // When adding effects or envelopes to an instrument in fullscreen modes,\n        // auto-scroll the settings areas to ensure the new settings are visible.\n        if (this._doc.addedEffect) {\n            const envButtonRect: DOMRect = this._addEnvelopeButton.getBoundingClientRect();\n            const instSettingsRect: DOMRect = this._instrumentSettingsArea.getBoundingClientRect();\n            const settingsRect: DOMRect = this._settingsArea.getBoundingClientRect();\n            this._instrumentSettingsArea.scrollTop += Math.max(0, envButtonRect.top - (instSettingsRect.top + instSettingsRect.height));\n            this._settingsArea.scrollTop += Math.max(0, envButtonRect.top - (settingsRect.top + settingsRect.height));\n            this._doc.addedEffect = false;\n        }\n        if (this._doc.addedEnvelope) {\n            this._instrumentSettingsArea.scrollTop = this._instrumentSettingsArea.scrollHeight;\n            this._settingsArea.scrollTop = this._settingsArea.scrollHeight;\n            this._doc.addedEnvelope = false;\n        }\n\n        // Writeback to mods if control key is held while moving a slider.\n        this.handleModRecording();\n\n    }\n\n    public handleModRecording(): void {\n        window.clearTimeout(this._modRecTimeout);\n        const lastChange: Change | null = this._doc.checkLastChange();\n        if ((this._ctrlHeld || this._shiftHeld) && lastChange != null && this._doc.synth.playing) {\n            const changedPatterns = this._patternEditor.setModSettingsForChange(lastChange, this);\n            if (this._doc.continuingModRecordingChange != null) {\n                this._modRecTimeout = window.setTimeout(() => { this.handleModRecording(); }, 10);\n                this._doc.recordingModulators = true;\n\n                if (changedPatterns)\n                    this._trackEditor.render();\n            }\n        }\n        else if (this._doc.recordingModulators) {\n            this._doc.recordingModulators = false;\n            // A dummy change that pushes history state.\n            this._doc.record(new ChangeHoldingModRecording(this._doc, null, null, null));\n        }\n    }\n\n    private _renderInstrumentBar(channel: Channel, instrumentIndex: number, colors: ChannelColors) {\n        if (this._doc.song.layeredInstruments || this._doc.song.patternInstruments) {\n            this._instrumentsButtonRow.style.display = \"\";\n            this._instrumentsButtonBar.style.setProperty(\"--text-color-lit\", colors.primaryNote);\n            this._instrumentsButtonBar.style.setProperty(\"--text-color-dim\", colors.secondaryNote);\n            this._instrumentsButtonBar.style.setProperty(\"--background-color-lit\", colors.primaryChannel);\n            this._instrumentsButtonBar.style.setProperty(\"--background-color-dim\", colors.secondaryChannel);\n\n            const maxInstrumentsPerChannel = this._doc.song.getMaxInstrumentsPerChannel();\n            while (this._instrumentButtons.length < channel.instruments.length) {\n                const instrumentButton: HTMLButtonElement = button(String(this._instrumentButtons.length + 1));\n                this._instrumentButtons.push(instrumentButton);\n                this._instrumentsButtonBar.insertBefore(instrumentButton, this._instrumentRemoveButton);\n            }\n            for (let i: number = this._renderedInstrumentCount; i < channel.instruments.length; i++) {\n                this._instrumentButtons[i].style.display = \"\";\n            }\n            for (let i: number = channel.instruments.length; i < this._renderedInstrumentCount; i++) {\n                this._instrumentButtons[i].style.display = \"none\";\n            }\n            this._renderedInstrumentCount = channel.instruments.length;\n            while (this._instrumentButtons.length > maxInstrumentsPerChannel) {\n                this._instrumentsButtonBar.removeChild(this._instrumentButtons.pop()!);\n            }\n\n            this._instrumentRemoveButton.style.display = (channel.instruments.length > Config.instrumentCountMin) ? \"\" : \"none\";\n            this._instrumentAddButton.style.display = (channel.instruments.length < maxInstrumentsPerChannel) ? \"\" : \"none\";\n            if (channel.instruments.length < maxInstrumentsPerChannel) {\n                this._instrumentRemoveButton.classList.remove(\"last-button\");\n            } else {\n                this._instrumentRemoveButton.classList.add(\"last-button\");\n            }\n            if (channel.instruments.length > 1) {\n                if (this._highlightedInstrumentIndex != instrumentIndex) {\n                    const oldButton: HTMLButtonElement = this._instrumentButtons[this._highlightedInstrumentIndex];\n                    if (oldButton != null) oldButton.classList.remove(\"selected-instrument\");\n                    const newButton: HTMLButtonElement = this._instrumentButtons[instrumentIndex];\n                    newButton.classList.add(\"selected-instrument\");\n                    this._highlightedInstrumentIndex = instrumentIndex;\n                }\n            } else {\n                const oldButton: HTMLButtonElement = this._instrumentButtons[this._highlightedInstrumentIndex];\n                if (oldButton != null) oldButton.classList.remove(\"selected-instrument\");\n                this._highlightedInstrumentIndex = -1;\n            }\n\n            if (this._doc.song.layeredInstruments && this._doc.song.patternInstruments && (this._doc.channel < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount)) {\n                //const pattern: Pattern | null = this._doc.getCurrentPattern();\n                for (let i: number = 0; i < channel.instruments.length; i++) {\n                    if (this._doc.recentPatternInstruments[this._doc.channel].indexOf(i) != -1) {\n                        this._instrumentButtons[i].classList.remove(\"deactivated\");\n                    } else {\n                        this._instrumentButtons[i].classList.add(\"deactivated\");\n                    }\n                }\n                this._deactivatedInstruments = true;\n            } else if (this._deactivatedInstruments || (this._doc.channel >= this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount)) {\n                for (let i: number = 0; i < channel.instruments.length; i++) {\n\n                    this._instrumentButtons[i].classList.remove(\"deactivated\");\n                }\n                this._deactivatedInstruments = false;\n            }\n\n            if ((this._doc.song.layeredInstruments && this._doc.song.patternInstruments) && channel.instruments.length > 1 && (this._doc.channel < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount)) {\n                for (let i: number = 0; i < channel.instruments.length; i++) {\n                    this._instrumentButtons[i].classList.remove(\"no-underline\");\n                }\n            }\n            else {\n                for (let i: number = 0; i < channel.instruments.length; i++) {\n                    this._instrumentButtons[i].classList.add(\"no-underline\");\n                }\n            }\n        } else {\n            this._instrumentsButtonRow.style.display = \"none\";\n        }\n    }\n\n    public updatePlayButton = (): void => {\n        if (this._renderedIsPlaying != this._doc.synth.playing || this._renderedIsRecording != this._doc.synth.recording || this._renderedShowRecordButton != this._doc.prefs.showRecordButton || this._renderedCtrlHeld != this._ctrlHeld) {\n            this._renderedIsPlaying = this._doc.synth.playing;\n            this._renderedIsRecording = this._doc.synth.recording;\n            this._renderedShowRecordButton = this._doc.prefs.showRecordButton;\n            this._renderedCtrlHeld = this._ctrlHeld;\n\n            if (document.activeElement == this._playButton || document.activeElement == this._pauseButton || document.activeElement == this._recordButton || document.activeElement == this._stopButton) {\n                // When a focused element is hidden, focus is transferred to the document, so let's refocus the editor instead to make sure we can still capture keyboard input.\n                this.refocusStage();\n            }\n\n            this._playButton.style.display = \"none\";\n            this._pauseButton.style.display = \"none\";\n            this._recordButton.style.display = \"none\";\n            this._stopButton.style.display = \"none\";\n            this._prevBarButton.style.display = \"\";\n            this._nextBarButton.style.display = \"\";\n            this._playButton.classList.remove(\"shrunk\");\n            this._recordButton.classList.remove(\"shrunk\");\n            this._patternEditorRow.style.pointerEvents = \"\";\n            this._octaveScrollBar.container.style.pointerEvents = \"\";\n            this._octaveScrollBar.container.style.opacity = \"\";\n            this._trackContainer.style.pointerEvents = \"\";\n            this._loopEditor.container.style.opacity = \"\";\n            this._instrumentSettingsArea.style.pointerEvents = \"\";\n            this._instrumentSettingsArea.style.opacity = \"\";\n            this._menuArea.style.pointerEvents = \"\";\n            this._menuArea.style.opacity = \"\";\n            this._songSettingsArea.style.pointerEvents = \"\";\n            this._songSettingsArea.style.opacity = \"\";\n\n            if (this._doc.synth.recording) {\n                this._stopButton.style.display = \"\";\n                this._prevBarButton.style.display = \"none\";\n                this._nextBarButton.style.display = \"none\";\n                this._patternEditorRow.style.pointerEvents = \"none\";\n                this._octaveScrollBar.container.style.pointerEvents = \"none\";\n                this._octaveScrollBar.container.style.opacity = \"0.5\";\n                this._trackContainer.style.pointerEvents = \"none\";\n                this._loopEditor.container.style.opacity = \"0.5\";\n                this._instrumentSettingsArea.style.pointerEvents = \"none\";\n                this._instrumentSettingsArea.style.opacity = \"0.5\";\n                this._menuArea.style.pointerEvents = \"none\";\n                this._menuArea.style.opacity = \"0.5\";\n                this._songSettingsArea.style.pointerEvents = \"none\";\n                this._songSettingsArea.style.opacity = \"0.5\";\n            } else if (this._doc.synth.playing) {\n                this._pauseButton.style.display = \"\";\n            } else if (this._doc.prefs.showRecordButton) {\n                this._playButton.style.display = \"\";\n                this._recordButton.style.display = \"\";\n                this._playButton.classList.add(\"shrunk\");\n                this._recordButton.classList.add(\"shrunk\");\n            } else if (this._ctrlHeld) {\n                this._recordButton.style.display = \"\";\n            } else {\n                this._playButton.style.display = \"\";\n            }\n        }\n        window.requestAnimationFrame(this.updatePlayButton);\n    }\n\n    private _onTrackAreaScroll = (event: Event): void => {\n        this._doc.barScrollPos = (this._trackAndMuteContainer.scrollLeft / this._doc.getBarWidth());\n        this._doc.channelScrollPos = (this._trackAndMuteContainer.scrollTop / ChannelRow.patternHeight);\n\t\t//this._doc.notifier.changed();\n\t}\n\n    private _disableCtrlContextMenu = (event: MouseEvent): boolean => {\n        // On a Mac, clicking while holding control opens the right-click context menu.\n        // But in the pattern and track editors I'd rather prevent that and instead allow\n        // custom behaviors such as setting the volume of a note.\n        if (event.ctrlKey) {\n            event.preventDefault();\n            return false;\n        }\n        return true;\n    }\n\n    private _usageCheck(channelIndex: number, instrumentIndex: number): void {\n        var instrumentUsed = false;\n        var patternUsed = false;\n        var modUsed = false;\n        const channel: Channel = this._doc.song.channels[channelIndex];\n\n        if (channelIndex < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\n            for (let modChannelIdx: number = this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; modChannelIdx < this._doc.song.channels.length; modChannelIdx++) {\n                const modChannel: Channel = this._doc.song.channels[modChannelIdx];\n                const patternIdx = modChannel.bars[this._doc.bar];\n                if (patternIdx > 0) {\n                    const modInstrumentIdx: number = modChannel.patterns[patternIdx - 1].instruments[0];\n                    const modInstrument: Instrument = modChannel.instruments[modInstrumentIdx];\n                    for (let mod: number = 0; mod < Config.modCount; mod++) {\n                        if (modInstrument.modChannels[mod] == channelIndex && (modInstrument.modInstruments[mod] == instrumentIndex || modInstrument.modInstruments[mod] >= channel.instruments.length)) {\n                            modUsed = true;\n                        }\n                    }\n                }\n            }\n        }\n\n        let lowestSelX: number = Math.min(this._doc.selection.boxSelectionX0, this._doc.selection.boxSelectionX1);\n        let highestSelX: number = Math.max(this._doc.selection.boxSelectionX0, this._doc.selection.boxSelectionX1);\n        let lowestSelY: number = Math.min(this._doc.selection.boxSelectionY0, this._doc.selection.boxSelectionY1);\n        let highestSelY: number = Math.max(this._doc.selection.boxSelectionY0, this._doc.selection.boxSelectionY1);\n\n        if (channel.bars[this._doc.bar] != 0) {\n            for (let i: number = 0; i < this._doc.song.barCount; i++) {\n                // Check for this exact bar in another place, but only count it if it's not within the selection\n                if (channel.bars[i] == channel.bars[this._doc.bar] && i != this._doc.bar &&\n                    (i < lowestSelX || i > highestSelX || this._doc.channel < lowestSelY || this._doc.channel > highestSelY)) {\n\n                    patternUsed = true;\n                    i = this._doc.song.barCount;\n                }\n            }\n        }\n\n        for (let i: number = 0; i < this._doc.song.barCount; i++) {\n            // Check for this exact instrument in another place, but only count it if it's not within the selection\n            if (channel.bars[i] != 0 && channel.bars[i] != channel.bars[this._doc.bar] &&\n                channel.patterns[channel.bars[i] - 1].instruments.includes(instrumentIndex) && i != this._doc.bar &&\n                (i < lowestSelX || i > highestSelX || this._doc.channel < lowestSelY || this._doc.channel > highestSelY)) {\n\n                instrumentUsed = true;\n                i = this._doc.song.barCount;\n            }\n        }\n\n        if (patternUsed) {\n            this._usedPatternIndicator.style.setProperty(\"fill\", ColorConfig.indicatorPrimary);\n            this.patternUsed = true;\n        }\n        else {\n            this._usedPatternIndicator.style.setProperty(\"fill\", ColorConfig.indicatorSecondary);\n            this.patternUsed = false;\n        }\n        if (instrumentUsed) {\n            this._usedInstrumentIndicator.style.setProperty(\"fill\", ColorConfig.indicatorPrimary);\n        }\n        else {\n            this._usedInstrumentIndicator.style.setProperty(\"fill\", ColorConfig.indicatorSecondary);\n        }\n        if (modUsed) {\n            this._jumpToModIndicator.style.setProperty(\"display\", \"\");\n            this._jumpToModIndicator.style.setProperty(\"fill\", ColorConfig.indicatorPrimary);\n            this._jumpToModIndicator.classList.add(\"modTarget\");\n        }\n        else if (channelIndex < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\n            this._jumpToModIndicator.style.setProperty(\"display\", \"\");\n            this._jumpToModIndicator.style.setProperty(\"fill\", ColorConfig.indicatorSecondary);\n            this._jumpToModIndicator.classList.remove(\"modTarget\");\n        } else {\n            this._jumpToModIndicator.style.setProperty(\"display\", \"none\");\n        }\n\n    }\n\n    private _tempoStepperCaptureNumberKeys = (event: KeyboardEvent): void => {\n        // When the number input is in focus, allow some keyboard events to\n        // edit the input without accidentally editing the song otherwise.\n        switch (event.keyCode) {\n            case 8: // backspace/delete\n            case 13: // enter/return\n            case 38: // up\n            case 40: // down\n            case 37: // left\n            case 39: // right\n            case 48: // 0\n            case 49: // 1\n            case 50: // 2\n            case 51: // 3\n            case 52: // 4\n            case 53: // 5\n            case 54: // 6\n            case 55: // 7\n            case 56: // 8\n            case 57: // 9\n                event.stopPropagation();\n                break;\n        }\n    }\n\n    private _whenKeyPressed = (event: KeyboardEvent): void => {\n        this._ctrlHeld = event.ctrlKey;\n        this._shiftHeld = event.shiftKey;\n\n        if (this.prompt) {\n            if (this.prompt instanceof CustomChipPrompt || this.prompt instanceof LimiterPrompt || this.prompt instanceof CustomFilterPrompt) {\n                this.prompt.whenKeyPressed(event);\n            }\n            if (event.keyCode == 27) { // ESC key\n                // close prompt.\n                this._doc.undo();\n            }\n            return;\n        }\n\n        // Defer to actively editing song title, channel name, or mod label\n        if (document.activeElement == this._songTitleInputBox.input || this._patternEditor.editingModLabel || document.activeElement == this._muteEditor._channelNameInput.input) {\n            // Enter/esc returns focus to form\n            if (event.keyCode == 13 || event.keyCode == 27) {\n                this.mainLayer.focus();\n                this._patternEditor.stopEditingModLabel(event.keyCode == 27);\n            }\n\n            return;\n        }\n\n        // Defer to actively editing volume/pan rows\n        if (document.activeElement == this._panSliderInputBox || document.activeElement == this._pwmSliderInputBox || document.activeElement == this._detuneSliderInputBox || document.activeElement == this._instrumentVolumeSliderInputBox) {\n            // Enter/esc returns focus to form\n            if (event.keyCode == 13 || event.keyCode == 27) {\n                this.mainLayer.focus();\n            }\n\n            return;\n        }\n\n        if (this._doc.synth.recording) {\n            // The only valid keyboard interactions when recording are playing notes or pressing space OR P to stop.\n            if (!event.ctrlKey && !event.metaKey) {\n                this._keyboardLayout.handleKeyEvent(event, true);\n            }\n            if (event.keyCode == 32) { // space\n                this._toggleRecord();\n                event.preventDefault();\n                this.refocusStage();\n            } else if (event.keyCode == 80 && (event.ctrlKey || event.metaKey)) { // p\n                this._toggleRecord();\n                event.preventDefault();\n                this.refocusStage();\n            }\n            return;\n        }\n\n        const needControlForShortcuts: boolean = (this._doc.prefs.pressControlForShortcuts != event.getModifierState(\"CapsLock\"));\n        const canPlayNotes: boolean = (!event.ctrlKey && !event.metaKey && needControlForShortcuts);\n        if (canPlayNotes) this._keyboardLayout.handleKeyEvent(event, true);\n\n        //this._trackEditor.onKeyPressed(event);\n        switch (event.keyCode) {\n            case 27: // ESC key\n                if (!event.ctrlKey && !event.metaKey) {\n                    new ChangePatternSelection(this._doc, 0, 0);\n                    this._doc.selection.resetBoxSelection();\n                }\n                break;\n            case 16: // Shift\n                this._patternEditor.shiftMode = true;\n                break;\n            case 17: // Ctrl\n                this._patternEditor.controlMode = true;\n                break;\n            case 32: // space\n                if (event.ctrlKey) {\n                    this._toggleRecord();\n                } else if (event.shiftKey) {\n                    // Jump to mouse\n                    if (this._trackEditor.movePlayheadToMouse() || this._patternEditor.movePlayheadToMouse()) {\n                        if (!this._doc.synth.playing) this._doc.performance.play();\n                    }\n                    if (Math.floor(this._doc.synth.playhead) < this._doc.synth.loopBarStart || Math.floor(this._doc.synth.playhead) > this._doc.synth.loopBarEnd) {\n                        this._doc.synth.loopBarStart = -1;\n                        this._doc.synth.loopBarEnd = -1;\n                        this._loopEditor.setLoopAt(this._doc.synth.loopBarStart, this._doc.synth.loopBarEnd);\n                    }\n                } else {\n                    this.togglePlay();\n                }\n                event.preventDefault();\n                this.refocusStage();\n                break;\n            case 80: // p\n                if (canPlayNotes) break;\n                if (event.ctrlKey || event.metaKey) {\n                    this._toggleRecord();\n                    this._doc.synth.loopBarStart = -1;\n                    this._doc.synth.loopBarEnd = -1;\n                    this._loopEditor.setLoopAt(this._doc.synth.loopBarStart, this._doc.synth.loopBarEnd);\n\n                    event.preventDefault();\n                    this.refocusStage();\n                }\n                break;\n            case 90: // z\n                if (canPlayNotes) break;\n                if (event.shiftKey) {\n                    this._doc.redo();\n                } else {\n                    this._doc.undo();\n                }\n                event.preventDefault();\n                break;\n            case 89: // y\n                if (canPlayNotes) break;\n                this._doc.redo();\n                event.preventDefault();\n                break;\n            case 66: // b\n                if (canPlayNotes) break;\n\n                if (needControlForShortcuts == (event.ctrlKey || event.metaKey)) {\n                    const leftSel = Math.min(this._doc.selection.boxSelectionX0, this._doc.selection.boxSelectionX1);\n                    const rightSel = Math.max(this._doc.selection.boxSelectionX0, this._doc.selection.boxSelectionX1);\n                    if ((leftSel < this._doc.synth.loopBarStart || this._doc.synth.loopBarStart == -1)\n                        || (rightSel > this._doc.synth.loopBarEnd || this._doc.synth.loopBarEnd == -1)\n                    ) {\n                        this._doc.synth.loopBarStart = leftSel;\n                        this._doc.synth.loopBarEnd = rightSel;\n\n                        if (!this._doc.synth.playing) {\n                            this._doc.synth.snapToBar();\n                            this._doc.performance.play();\n                        }\n                    }\n                    else {\n                        this._doc.synth.loopBarStart = -1;\n                        this._doc.synth.loopBarEnd = -1;\n                    }\n\n                    // Pressed while viewing a different bar than the current synth playhead.\n                    if (this._doc.bar != Math.floor(this._doc.synth.playhead) && this._doc.synth.loopBarStart != -1) {\n\n                        this._doc.synth.goToBar(this._doc.bar);\n                        this._doc.synth.snapToBar();\n                        this._doc.synth.initModFilters(this._doc.song);\n                        this._doc.synth.computeLatestModValues();\n                        if (this._doc.prefs.autoFollow) {\n                            this._doc.selection.setChannelBar(this._doc.channel, Math.floor(this._doc.synth.playhead));\n                        }\n\n                    }\n\n                    this._loopEditor.setLoopAt(this._doc.synth.loopBarStart, this._doc.synth.loopBarEnd);\n\n\n                    event.preventDefault();\n                }\n                break;\n            case 67: // c\n                if (canPlayNotes) break;\n                if (event.shiftKey) {\n                    this._copyInstrument();\n                } else {\n                    this._doc.selection.copy();\n                }\n                this._doc.selection.resetBoxSelection();\n                this._doc.selection.selectionUpdated();\n                event.preventDefault();\n                break;\n            case 13: // enter/return\n                this._doc.synth.loopBarStart = -1;\n                this._doc.synth.loopBarEnd = -1;\n                this._loopEditor.setLoopAt(this._doc.synth.loopBarStart, this._doc.synth.loopBarEnd);\n\n                if (event.ctrlKey || event.metaKey) {\n                    this._doc.selection.insertChannel();\n                } else {\n                    this._doc.selection.insertBars();\n                }\n                event.preventDefault();\n                break;\n            case 8: // backspace/delete\n                this._doc.synth.loopBarStart = -1;\n                this._doc.synth.loopBarEnd = -1;\n                this._loopEditor.setLoopAt(this._doc.synth.loopBarStart, this._doc.synth.loopBarEnd);\n\n                if (event.ctrlKey || event.metaKey) {\n                    this._doc.selection.deleteChannel();\n                } else {\n                    this._doc.selection.deleteBars();\n                }\n                this._barScrollBar.animatePlayhead();\n                event.preventDefault();\n                break;\n            case 65: // a\n                if (canPlayNotes) break;\n                if (event.shiftKey) {\n                    this._doc.selection.selectChannel();\n                } else {\n                    this._doc.selection.selectAll();\n                }\n                event.preventDefault();\n                break;\n            case 68: // d\n                if (canPlayNotes) break;\n                if (needControlForShortcuts == (event.ctrlKey || event.metaKey)) {\n                    this._doc.selection.duplicatePatterns();\n                    event.preventDefault();\n                }\n                break;\n            case 69: // e (+shift: eq filter settings)\n                if (event.shiftKey) {\n                    const instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\n                    if (!instrument.eqFilterType && this._doc.channel < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount)\n                        this._openPrompt(\"customEQFilterSettings\");\n                }\n                break;\n            case 70: // f\n                if (canPlayNotes) break;\n                if (needControlForShortcuts == (event.ctrlKey || event.metaKey)) {\n\n                    this._doc.synth.loopBarStart = -1;\n                    this._doc.synth.loopBarEnd = -1;\n                    this._loopEditor.setLoopAt(this._doc.synth.loopBarStart, this._doc.synth.loopBarEnd);\n\n                    this._doc.synth.snapToStart();\n                    this._doc.synth.initModFilters(this._doc.song);\n                    this._doc.synth.computeLatestModValues();\n                    if (this._doc.prefs.autoFollow) {\n                        this._doc.selection.setChannelBar(this._doc.channel, Math.floor(this._doc.synth.playhead));\n                    }\n                    event.preventDefault();\n                }\n                break;\n            case 72: // h\n                if (canPlayNotes) break;\n\n                if (needControlForShortcuts == (event.ctrlKey || event.metaKey)) {\n\n                    this._doc.synth.goToBar(this._doc.bar);\n                    this._doc.synth.snapToBar();\n                    this._doc.synth.initModFilters(this._doc.song);\n                    this._doc.synth.computeLatestModValues();\n\n                    if (Math.floor(this._doc.synth.playhead) < this._doc.synth.loopBarStart || Math.floor(this._doc.synth.playhead) > this._doc.synth.loopBarEnd) {\n                        this._doc.synth.loopBarStart = -1;\n                        this._doc.synth.loopBarEnd = -1;\n                        this._loopEditor.setLoopAt(this._doc.synth.loopBarStart, this._doc.synth.loopBarEnd);\n                    }\n\n                    if (this._doc.prefs.autoFollow) {\n                        this._doc.selection.setChannelBar(this._doc.channel, Math.floor(this._doc.synth.playhead));\n                    }\n                    event.preventDefault();\n                }\n                break;\n            case 74: // j\n                if (canPlayNotes) break;\n                // Ctrl Alt Shift J: Jummbify - set all prefs to my preferred ones lol\n                if (event.shiftKey && event.ctrlKey && event.altKey) {\n                    this._doc.prefs.autoPlay = false;\n                    this._doc.prefs.autoFollow = false;\n                    this._doc.prefs.enableNotePreview = true;\n                    this._doc.prefs.showFifth = true;\n                    this._doc.prefs.notesOutsideScale = false;\n                    this._doc.prefs.defaultScale = 0;\n                    this._doc.prefs.showLetters = true;\n                    this._doc.prefs.showChannels = true;\n                    this._doc.prefs.showScrollBar = true;\n                    this._doc.prefs.alwaysFineNoteVol = false;\n                    this._doc.prefs.enableChannelMuting = true;\n                    this._doc.prefs.displayBrowserUrl = true;\n                    this._doc.prefs.displayVolumeBar = true;\n                    this._doc.prefs.layout = \"wide\";\n                    this._doc.prefs.visibleOctaves = 5;\n                    this._doc.prefs.save();\n                    event.preventDefault();\n                    location.reload();\n                }\n                break;\n            case 76: // l\n                if (canPlayNotes) break;\n                if (event.shiftKey) {\n                    this._openPrompt(\"limiterSettings\");\n                }\n                else {\n                    this._openPrompt(\"barCount\");\n                }\n                break;\n            case 77: // m\n                if (canPlayNotes) break;\n                if (needControlForShortcuts == (event.ctrlKey || event.metaKey)) {\n                    if (this._doc.prefs.enableChannelMuting) {\n                        this._doc.selection.muteChannels(event.shiftKey);\n                        event.preventDefault();\n                    }\n                }\n                break;\n            case 78: // n\n                if (canPlayNotes) break;\n                // Find lowest-index unused pattern for current channel\n                // Ctrl+n - lowest-index completely empty pattern\n                // Shift+n - note filter settings\n\n                const group: ChangeGroup = new ChangeGroup();\n\n                if (event.shiftKey) {\n                    const instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\n                    if (effectsIncludeNoteFilter(instrument.effects) && !instrument.noteFilterType && this._doc.channel < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount)\n                        this._openPrompt(\"customNoteFilterSettings\");\n                    break;\n                }\n                else if (event.ctrlKey) {\n                    let nextEmpty: number = 0;\n                    while (nextEmpty < this._doc.song.patternsPerChannel && this._doc.song.channels[this._doc.channel].patterns[nextEmpty].notes.length > 0)\n                        nextEmpty++;\n\n                    nextEmpty++; // The next empty pattern is actually the one after the found one\n\n                    // Can't set anything if we're at the absolute limit.\n                    if (nextEmpty <= Config.barCountMax) {\n\n                        if (nextEmpty > this._doc.song.patternsPerChannel) {\n\n                            // Add extra empty pattern, if all the rest have something in them.\n                            group.append(new ChangePatternsPerChannel(this._doc, nextEmpty));\n                        }\n\n                        // Change pattern number to lowest-index unused\n                        group.append(new ChangePatternNumbers(this._doc, nextEmpty, this._doc.bar, this._doc.channel, 1, 1));\n\n                        // Auto set the used instruments to the ones you were most recently viewing.\n                        if (this._doc.channel >= this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount)\n                        {\n                           \n                                this._doc.viewedInstrument[this._doc.channel] = this._doc.recentPatternInstruments[this._doc.channel][0];\n                        }\n                        group.append(new ChangeSetPatternInstruments(this._doc, this._doc.channel, this._doc.recentPatternInstruments[this._doc.channel],  this._doc.song.channels[this._doc.channel].patterns[nextEmpty-1]));\n                        \n                    }\n                }\n                else {\n                    let nextUnused: number = 1;\n                    while (this._doc.song.channels[this._doc.channel].bars.indexOf(nextUnused) != -1\n                        && nextUnused <= this._doc.song.patternsPerChannel)\n                        nextUnused++;\n\n                    // Can't set anything if we're at the absolute limit.\n                    if (nextUnused <= Config.barCountMax) {\n\n                        if (nextUnused > this._doc.song.patternsPerChannel) {\n\n                            // Add extra empty pattern, if all the rest are used.\n                            group.append(new ChangePatternsPerChannel(this._doc, nextUnused));\n                        }\n\n                        // Change pattern number to lowest-index unused\n                        group.append(new ChangePatternNumbers(this._doc, nextUnused, this._doc.bar, this._doc.channel, 1, 1));\n                        \n                        // Auto set the used instruments to the ones you were most recently viewing.\n                        if (this._doc.channel >= this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount)\n                        {\n                                this._doc.viewedInstrument[this._doc.channel] = this._doc.recentPatternInstruments[this._doc.channel][0];\n                        }\n                        group.append(new ChangeSetPatternInstruments(this._doc, this._doc.channel, this._doc.recentPatternInstruments[this._doc.channel],  this._doc.song.channels[this._doc.channel].patterns[nextUnused-1]));\n\n                    }\n                }\n\n                this._doc.record(group);\n\n                event.preventDefault();\n                break;\n            case 81: // q\n                if (canPlayNotes) break;\n                if (needControlForShortcuts == (event.ctrlKey || event.metaKey)) {\n                    this._openPrompt(\"channelSettings\");\n                    event.preventDefault();\n                }\n                break;\n            case 83: // s\n                if (canPlayNotes) break;\n                if (event.ctrlKey || event.metaKey) {\n                    this._openPrompt(\"export\");\n                    event.preventDefault();\n                } else {\n                    if (this._doc.prefs.enableChannelMuting) {\n                        // JummBox deviation: I like shift+s as just another mute toggle personally.\n                        // Easier to reach than M and the shift+s invert functionality I am overwriting could be \n                        // obtained with M anyway. Useability-wise you very often want to 'add' channels on to a solo as you work.\n                        if (event.shiftKey) {\n                            this._doc.selection.muteChannels(false);\n                        } else {\n                            this._doc.selection.soloChannels(false);\n                        }\n                        event.preventDefault();\n                    }\n                }\n                break;\n            case 79: // o\n                if (canPlayNotes) break;\n                if (event.ctrlKey || event.metaKey) {\n                    this._openPrompt(\"import\");\n                    event.preventDefault();\n                }\n                break;\n            case 86: // v\n                if (canPlayNotes) break;\n                if ((event.ctrlKey || event.metaKey) && event.shiftKey && !needControlForShortcuts) {\n                    this._doc.selection.pasteNumbers();\n                } else if (event.shiftKey) {\n                    this._pasteInstrument();\n                } else {\n                    this._doc.selection.pasteNotes();\n                }\n                event.preventDefault();\n                break;\n            case 87: // w\n                if (canPlayNotes) break;\n                this._openPrompt(\"moveNotesSideways\");\n                break;\n            case 73: // i\n                if (canPlayNotes) break;\n                if (needControlForShortcuts == (event.ctrlKey || event.metaKey) && event.shiftKey) {\n                    // Copy the current instrument as a preset to the clipboard.\n                    const instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\n                    const instrumentObject: any = instrument.toJsonObject();\n                    delete instrumentObject[\"preset\"];\n                    // Volume and the panning effect are not included in presets.\n                    delete instrumentObject[\"volume\"];\n                    delete instrumentObject[\"pan\"];\n                    const panningEffectIndex: number = instrumentObject[\"effects\"].indexOf(Config.effectNames[EffectType.panning]);\n                    if (panningEffectIndex != -1) instrumentObject[\"effects\"].splice(panningEffectIndex, 1);\n                    for (let i: number = 0; i < instrumentObject[\"envelopes\"].length; i++) {\n                        const envelope: any = instrumentObject[\"envelopes\"][i];\n                        // If there are any envelopes targeting panning or none, remove those too.\n                        if (envelope[\"target\"] == \"panning\" || envelope[\"target\"] == \"none\" || envelope[\"envelope\"] == \"none\") {\n                            instrumentObject[\"envelopes\"].splice(i, 1);\n                            i--;\n                        }\n                    }\n                    this._copyTextToClipboard(JSON.stringify(instrumentObject));\n                    event.preventDefault();\n                }\n                break;\n            case 82: // r\n                if (canPlayNotes) break;\n                if (needControlForShortcuts == (event.ctrlKey || event.metaKey)) {\n                    if (event.shiftKey) {\n                        this._randomGenerated();\n                    } else {\n                        this._randomPreset();\n                    }\n                    event.preventDefault();\n                }\n                break;\n            case 219: // left brace\n                if (canPlayNotes) break;\n                if (needControlForShortcuts == (event.ctrlKey || event.metaKey)) {\n                    this._doc.synth.goToPrevBar();\n                    this._doc.synth.initModFilters(this._doc.song);\n                    this._doc.synth.computeLatestModValues();\n                    if (Math.floor(this._doc.synth.playhead) < this._doc.synth.loopBarStart || Math.floor(this._doc.synth.playhead) > this._doc.synth.loopBarEnd) {\n                        this._doc.synth.loopBarStart = -1;\n                        this._doc.synth.loopBarEnd = -1;\n                        this._loopEditor.setLoopAt(this._doc.synth.loopBarStart, this._doc.synth.loopBarEnd);\n                    }\n\n                    if (this._doc.prefs.autoFollow) {\n                        this._doc.selection.setChannelBar(this._doc.channel, Math.floor(this._doc.synth.playhead));\n                    }\n                    event.preventDefault();\n                }\n                break;\n            case 221: // right brace\n                if (canPlayNotes) break;\n                if (needControlForShortcuts == (event.ctrlKey || event.metaKey)) {\n                    this._doc.synth.goToNextBar();\n                    this._doc.synth.initModFilters(this._doc.song);\n                    this._doc.synth.computeLatestModValues();\n                    if (Math.floor(this._doc.synth.playhead) < this._doc.synth.loopBarStart || Math.floor(this._doc.synth.playhead) > this._doc.synth.loopBarEnd) {\n                        this._doc.synth.loopBarStart = -1;\n                        this._doc.synth.loopBarEnd = -1;\n                        this._loopEditor.setLoopAt(this._doc.synth.loopBarStart, this._doc.synth.loopBarEnd);\n                    }\n\n                    if (this._doc.prefs.autoFollow) {\n                        this._doc.selection.setChannelBar(this._doc.channel, Math.floor(this._doc.synth.playhead));\n                    }\n                    event.preventDefault();\n                }\n                break;\n            case 189: // -\n            case 173: // Firefox -\n                if (canPlayNotes) break;\n                if (needControlForShortcuts == (event.ctrlKey || event.metaKey)) {\n                    this._doc.selection.transpose(false, event.shiftKey);\n                    event.preventDefault();\n                }\n                break;\n            case 187: // +\n            case 61: // Firefox +\n            case 171: // Some users have this as +? Hmm.\n                if (canPlayNotes) break;\n                if (needControlForShortcuts == (event.ctrlKey || event.metaKey)) {\n                    this._doc.selection.transpose(true, event.shiftKey);\n                    event.preventDefault();\n                }\n                break;\n            case 38: // up\n                if (event.ctrlKey || event.metaKey) {\n                    this._doc.selection.swapChannels(-1);\n                } else if (event.shiftKey) {\n                    this._doc.selection.boxSelectionY1 = Math.max(0, this._doc.selection.boxSelectionY1 - 1);\n                    this._doc.selection.scrollToEndOfSelection();\n                    this._doc.selection.selectionUpdated();\n                } else {\n                    this._doc.selection.setChannelBar((this._doc.channel - 1 + this._doc.song.getChannelCount()) % this._doc.song.getChannelCount(), this._doc.bar);\n                    this._doc.selection.resetBoxSelection();\n                }\n                event.preventDefault();\n                break;\n            case 40: // down\n                if (event.ctrlKey || event.metaKey) {\n                    this._doc.selection.swapChannels(1);\n                } else if (event.shiftKey) {\n                    this._doc.selection.boxSelectionY1 = Math.min(this._doc.song.getChannelCount() - 1, this._doc.selection.boxSelectionY1 + 1);\n                    this._doc.selection.scrollToEndOfSelection();\n                    this._doc.selection.selectionUpdated();\n                } else {\n                    this._doc.selection.setChannelBar((this._doc.channel + 1) % this._doc.song.getChannelCount(), this._doc.bar);\n                    this._doc.selection.resetBoxSelection();\n                }\n                event.preventDefault();\n                break;\n            case 37: // left\n                if (event.shiftKey) {\n                    this._doc.selection.boxSelectionX1 = Math.max(0, this._doc.selection.boxSelectionX1 - 1);\n                    this._doc.selection.scrollToEndOfSelection();\n                    this._doc.selection.selectionUpdated();\n                } else {\n                    this._doc.selection.setChannelBar(this._doc.channel, (this._doc.bar + this._doc.song.barCount - 1) % this._doc.song.barCount);\n                    this._doc.selection.resetBoxSelection();\n                }\n                event.preventDefault();\n                break;\n            case 39: // right\n                if (event.shiftKey) {\n                    this._doc.selection.boxSelectionX1 = Math.min(this._doc.song.barCount - 1, this._doc.selection.boxSelectionX1 + 1);\n                    this._doc.selection.scrollToEndOfSelection();\n                    this._doc.selection.selectionUpdated();\n                } else {\n                    this._doc.selection.setChannelBar(this._doc.channel, (this._doc.bar + 1) % this._doc.song.barCount);\n                    this._doc.selection.resetBoxSelection();\n                }\n                event.preventDefault();\n                break;\n            case 46: // Delete\n                this._doc.selection.digits = \"\";\n                this._doc.selection.nextDigit(\"0\", false, false);\n                break;\n            case 48: // 0\n                if (canPlayNotes) break;\n                this._doc.selection.nextDigit(\"0\", needControlForShortcuts != (event.shiftKey || event.ctrlKey || event.metaKey), event.altKey);\n                this._renderInstrumentBar(this._doc.song.channels[this._doc.channel], this._doc.getCurrentInstrument(), ColorConfig.getChannelColor(this._doc.song, this._doc.channel));\n                event.preventDefault();\n                break;\n            case 49: // 1\n                if (canPlayNotes) break;\n                this._doc.selection.nextDigit(\"1\", needControlForShortcuts != (event.shiftKey || event.ctrlKey || event.metaKey), event.altKey);\n                this._renderInstrumentBar(this._doc.song.channels[this._doc.channel], this._doc.getCurrentInstrument(), ColorConfig.getChannelColor(this._doc.song, this._doc.channel));\n                event.preventDefault();\n                break;\n            case 50: // 2\n                if (canPlayNotes) break;\n                this._doc.selection.nextDigit(\"2\", needControlForShortcuts != (event.shiftKey || event.ctrlKey || event.metaKey), event.altKey);\n                this._renderInstrumentBar(this._doc.song.channels[this._doc.channel], this._doc.getCurrentInstrument(), ColorConfig.getChannelColor(this._doc.song, this._doc.channel));\n                event.preventDefault();\n                break;\n            case 51: // 3\n                if (canPlayNotes) break;\n                this._doc.selection.nextDigit(\"3\", needControlForShortcuts != (event.shiftKey || event.ctrlKey || event.metaKey), event.altKey);\n                this._renderInstrumentBar(this._doc.song.channels[this._doc.channel], this._doc.getCurrentInstrument(), ColorConfig.getChannelColor(this._doc.song, this._doc.channel));\n                event.preventDefault();\n                break;\n            case 52: // 4\n                if (canPlayNotes) break;\n                this._doc.selection.nextDigit(\"4\", needControlForShortcuts != (event.shiftKey || event.ctrlKey || event.metaKey), event.altKey);\n                this._renderInstrumentBar(this._doc.song.channels[this._doc.channel], this._doc.getCurrentInstrument(), ColorConfig.getChannelColor(this._doc.song, this._doc.channel));\n                event.preventDefault();\n                break;\n            case 53: // 5\n                if (canPlayNotes) break;\n                this._doc.selection.nextDigit(\"5\", needControlForShortcuts != (event.shiftKey || event.ctrlKey || event.metaKey), event.altKey);\n                this._renderInstrumentBar(this._doc.song.channels[this._doc.channel], this._doc.getCurrentInstrument(), ColorConfig.getChannelColor(this._doc.song, this._doc.channel));\n                event.preventDefault();\n                break;\n            case 54: // 6\n                if (canPlayNotes) break;\n                this._doc.selection.nextDigit(\"6\", needControlForShortcuts != (event.shiftKey || event.ctrlKey || event.metaKey), event.altKey);\n                this._renderInstrumentBar(this._doc.song.channels[this._doc.channel], this._doc.getCurrentInstrument(), ColorConfig.getChannelColor(this._doc.song, this._doc.channel));\n                event.preventDefault();\n                break;\n            case 55: // 7\n                if (canPlayNotes) break;\n                this._doc.selection.nextDigit(\"7\", needControlForShortcuts != (event.shiftKey || event.ctrlKey || event.metaKey), event.altKey);\n                this._renderInstrumentBar(this._doc.song.channels[this._doc.channel], this._doc.getCurrentInstrument(), ColorConfig.getChannelColor(this._doc.song, this._doc.channel));\n                event.preventDefault();\n                break;\n            case 56: // 8\n                if (canPlayNotes) break;\n                this._doc.selection.nextDigit(\"8\", needControlForShortcuts != (event.shiftKey || event.ctrlKey || event.metaKey), event.altKey);\n                this._renderInstrumentBar(this._doc.song.channels[this._doc.channel], this._doc.getCurrentInstrument(), ColorConfig.getChannelColor(this._doc.song, this._doc.channel));\n                event.preventDefault();\n                break;\n            case 57: // 9\n                if (canPlayNotes) break;\n                this._doc.selection.nextDigit(\"9\", needControlForShortcuts != (event.shiftKey || event.ctrlKey || event.metaKey), event.altKey);\n                this._renderInstrumentBar(this._doc.song.channels[this._doc.channel], this._doc.getCurrentInstrument(), ColorConfig.getChannelColor(this._doc.song, this._doc.channel));\n                event.preventDefault();\n                break;\n            default:\n                this._doc.selection.digits = \"\";\n                this._doc.selection.instrumentDigits = \"\";\n                break;\n        }\n\n        if (canPlayNotes) {\n            this._doc.selection.digits = \"\";\n            this._doc.selection.instrumentDigits = \"\";\n        }\n    }\n\n\n    private _whenKeyReleased = (event: KeyboardEvent): void => {\n        this._muteEditor.onKeyUp(event);\n        if (!event.ctrlKey) { // Ctrl\n            this._patternEditor.controlMode = false;\n        }\n        if (!event.shiftKey) { // Shift\n            this._patternEditor.shiftMode = false;\n        }\n\n        this._ctrlHeld = event.ctrlKey;\n        this._shiftHeld = event.shiftKey;\n        // Release live pitches regardless of control or caps lock so that any pitches played before will get released even if the modifier keys changed.\n        this._keyboardLayout.handleKeyEvent(event, false);\n    }\n\n    private _copyTextToClipboard(text: string): void {\n        // Set as any to allow compilation without clipboard types (since, uh, I didn't write this bit and don't know the proper types library) -jummbus\n        let nav: any;\n        nav = navigator;\n\n        if (nav.clipboard && nav.clipboard.writeText) {\n            nav.clipboard.writeText(text).catch(() => {\n                window.prompt(\"Copy to clipboard:\", text);\n            });\n            return;\n        }\n        const textField: HTMLTextAreaElement = document.createElement(\"textarea\");\n        textField.textContent = text;\n        document.body.appendChild(textField);\n        textField.select();\n        const succeeded: boolean = document.execCommand(\"copy\");\n        textField.remove();\n        this.refocusStage();\n        if (!succeeded) window.prompt(\"Copy this:\", text);\n    }\n\n    private _whenPrevBarPressed = (): void => {\n        this._doc.synth.goToPrevBar();\n        if (Math.floor(this._doc.synth.playhead) < this._doc.synth.loopBarStart || Math.floor(this._doc.synth.playhead) > this._doc.synth.loopBarEnd) {\n            this._doc.synth.loopBarStart = -1;\n            this._doc.synth.loopBarEnd = -1;\n            this._loopEditor.setLoopAt(this._doc.synth.loopBarStart, this._doc.synth.loopBarEnd);\n        }\n        this._barScrollBar.animatePlayhead();\n    }\n\n    private _whenNextBarPressed = (): void => {\n        this._doc.synth.goToNextBar();\n        if (Math.floor(this._doc.synth.playhead) < this._doc.synth.loopBarStart || Math.floor(this._doc.synth.playhead) > this._doc.synth.loopBarEnd) {\n            this._doc.synth.loopBarStart = -1;\n            this._doc.synth.loopBarEnd = -1;\n            this._loopEditor.setLoopAt(this._doc.synth.loopBarStart, this._doc.synth.loopBarEnd);\n        }\n        this._barScrollBar.animatePlayhead();\n    }\n\n    public togglePlay = (): void => {\n        if (this._doc.synth.playing) {\n            this._doc.performance.pause();\n            this.outVolumeHistoricCap = 0;\n        } else {\n            this._doc.synth.snapToBar();\n            this._doc.performance.play();\n        }\n    }\n\n    private _toggleRecord = (): void => {\n        if (this._doc.synth.playing) {\n            this._doc.performance.pause();\n        } else {\n            this._doc.performance.record();\n        }\n    }\n\n    public _animate = (): void => {\n        // Need to update mods once more to clear the slider display\n        this._modSliderUpdate();\n        // Same for volume display\n        if (this._doc.prefs.displayVolumeBar) {\n            this._volumeUpdate();\n        }\n        // ...and barscrollbar playhead\n        this._barScrollBar.animatePlayhead();\n        // ...and filters\n        if (this._doc.synth.isFilterModActive(false, this._doc.channel, this._doc.getCurrentInstrument())) {\n            this._eqFilterEditor.render(true, this._ctrlHeld || this._shiftHeld);\n        }\n        if (this._doc.synth.isFilterModActive(true, this._doc.channel, this._doc.getCurrentInstrument())) {\n            this._noteFilterEditor.render(true, this._ctrlHeld || this._shiftHeld);\n        }\n\n\n        window.requestAnimationFrame(this._animate);\n    }\n\n    public _volumeUpdate = (): void => {\n        this.outVolumeHistoricTimer--;\n        if (this.outVolumeHistoricTimer <= 0) {\n            this.outVolumeHistoricCap -= 0.03;\n        }\n        if (this._doc.song.outVolumeCap > this.outVolumeHistoricCap) {\n            this.outVolumeHistoricCap = this._doc.song.outVolumeCap;\n            this.outVolumeHistoricTimer = 50;\n        }\n\n        if (this._doc.song.outVolumeCap != this.lastOutVolumeCap) {\n            this.lastOutVolumeCap = this._doc.song.outVolumeCap;\n            this._animateVolume(this._doc.song.outVolumeCap, this.outVolumeHistoricCap);\n        }\n    }\n\n    private _animateVolume(outVolumeCap: number, historicOutCap: number): void {\n        this._outVolumeBar.setAttribute(\"width\", \"\" + Math.min(144, outVolumeCap * 144));\n        this._outVolumeCap.setAttribute(\"x\", \"\" + (8 + Math.min(144, historicOutCap * 144)));\n    }\n\n    private _setVolumeSlider = (): void => {\n        // Song volume slider doesn't use a change, but it can still be modulated.\n        if ((this._ctrlHeld || this._shiftHeld) && this._doc.synth.playing) {\n            const prevVol = this._doc.prefs.volume;\n            // The slider only goes to 75, but the mod is 0-100 and in this instance we're using the value for a mod set.\n            this._doc.prefs.volume = Math.round(Number(this._volumeSlider.input.value) * 4 / 3);\n            const changedPatterns = this._patternEditor.setModSettingsForChange(null, this);\n            const useVol: number = this._doc.prefs.volume;\n            window.clearTimeout(this._modRecTimeout);\n            this._modRecTimeout = window.setTimeout(() => { this._recordVolumeSlider(useVol); }, 10);\n            this._doc.recordingModulators = true;\n\n            this._doc.prefs.volume = prevVol;\n            this._volumeSlider.updateValue(this._doc.prefs.volume);\n\n            if (changedPatterns)\n                this._trackEditor.render();\n            }\n        else {\n            this._doc.setVolume(Number(this._volumeSlider.input.value));\n            if (this._doc.recordingModulators) {\n                this._doc.recordingModulators = false;\n                // A dummy change that pushes history state.\n                this._doc.record(new ChangeHoldingModRecording(this._doc, null, null, null));\n            }\n        }\n    }\n\n    private _recordVolumeSlider(useVol: number): void {\n        // Song volume slider doesn't use a change, but it can still be modulated.\n        if ((this._ctrlHeld || this._shiftHeld) && this._doc.synth.playing) {\n            const prevVol = this._doc.prefs.volume;\n            // The slider only goes to 75, but the mod is 0-100 and in this instance we're using the value for a mod set.\n            this._doc.prefs.volume = useVol;\n            this._patternEditor.setModSettingsForChange(null, this);\n            window.clearTimeout(this._modRecTimeout);\n            this._modRecTimeout = window.setTimeout(() => { this._recordVolumeSlider(useVol); }, 10);\n            this._doc.recordingModulators = true;\n\n            this._doc.prefs.volume = prevVol;\n            this._volumeSlider.updateValue(this._doc.prefs.volume);\n        }\n        else {\n            this._doc.setVolume(Number(this._volumeSlider.input.value));\n            if (this._doc.recordingModulators) {\n                this._doc.recordingModulators = false;\n                // A dummy change that pushes history state.\n                this._doc.record(new ChangeHoldingModRecording(this._doc, null, null, null));\n            }\n        }\n    }\n\n    private _copyInstrument = (): void => {\n        const channel: Channel = this._doc.song.channels[this._doc.channel];\n        const instrument: Instrument = channel.instruments[this._doc.getCurrentInstrument()];\n        const instrumentCopy: any = instrument.toJsonObject();\n        instrumentCopy[\"isDrum\"] = this._doc.song.getChannelIsNoise(this._doc.channel);\n        instrumentCopy[\"isMod\"] = this._doc.song.getChannelIsMod(this._doc.channel);\n        window.localStorage.setItem(\"instrumentCopy\", JSON.stringify(instrumentCopy));\n        this.refocusStage();\n    }\n\n    private _pasteInstrument = (): void => {\n        const channel: Channel = this._doc.song.channels[this._doc.channel];\n        const instrument: Instrument = channel.instruments[this._doc.getCurrentInstrument()];\n        const instrumentCopy: any = JSON.parse(String(window.localStorage.getItem(\"instrumentCopy\")));\n        if (instrumentCopy != null && instrumentCopy[\"isDrum\"] == this._doc.song.getChannelIsNoise(this._doc.channel) && instrumentCopy[\"isMod\"] == this._doc.song.getChannelIsMod(this._doc.channel)) {\n            this._doc.record(new ChangePasteInstrument(this._doc, instrument, instrumentCopy));\n        }\n        this.refocusStage();\n    }\n\n    private _switchEQFilterType(toSimple: boolean) {\n        const channel: Channel = this._doc.song.channels[this._doc.channel];\n        const instrument: Instrument = channel.instruments[this._doc.getCurrentInstrument()];\n        if (instrument.eqFilterType != toSimple) {\n            this._doc.record(new ChangeEQFilterType(this._doc, instrument, toSimple));\n        }\n    }\n\n    private _switchNoteFilterType(toSimple: boolean) {\n        const channel: Channel = this._doc.song.channels[this._doc.channel];\n        const instrument: Instrument = channel.instruments[this._doc.getCurrentInstrument()];\n        if (instrument.noteFilterType != toSimple) {\n            this._doc.record(new ChangeNoteFilterType(this._doc, instrument, toSimple));\n        }\n    }\n\n    private _randomPreset(): void {\n        const isNoise: boolean = this._doc.song.getChannelIsNoise(this._doc.channel);\n        this._doc.record(new ChangePreset(this._doc, pickRandomPresetValue(isNoise)));\n    }\n\n    private _randomGenerated(): void {\n        this._doc.record(new ChangeRandomGeneratedInstrument(this._doc));\n    }\n\n\n    private _whenSetTempo = (): void => {\n        this._doc.record(new ChangeTempo(this._doc, -1, parseInt(this._tempoStepper.value) | 0));\n    }\n\n    private _whenSetScale = (): void => {\n        if (isNaN(<number><unknown>this._scaleSelect.value)) {\n            switch (this._scaleSelect.value) {\n                case \"forceScale\":\n                    this._doc.selection.forceScale();\n                    break;\n            }\n            this._doc.notifier.changed();\n        } else {\n            this._doc.record(new ChangeScale(this._doc, this._scaleSelect.selectedIndex));\n        }\n    }\n\n    private _whenSetKey = (): void => {\n        if (isNaN(<number><unknown>this._keySelect.value)) {\n            switch (this._keySelect.value) {\n                case \"detectKey\":\n                    this._doc.record(new ChangeDetectKey(this._doc));\n                    break;\n            }\n            this._doc.notifier.changed();\n        } else {\n            this._doc.record(new ChangeKey(this._doc, Config.keys.length - 1 - this._keySelect.selectedIndex));\n        }\n    }\n\n    private _whenSetRhythm = (): void => {\n        if (isNaN(<number><unknown>this._rhythmSelect.value)) {\n            switch (this._rhythmSelect.value) {\n                case \"forceRhythm\":\n                    this._doc.selection.forceRhythm();\n                    break;\n            }\n            this._doc.notifier.changed();\n        } else {\n            this._doc.record(new ChangeRhythm(this._doc, this._rhythmSelect.selectedIndex));\n        }\n    }\n\n    public _refocus = (): void => {\n        // Waits a bit because select2 \"steals\" back focus even after the close event fires.\n        var selfRef = this;\n        setTimeout(function () { selfRef.mainLayer.focus(); }, 20);\n    }\n\n    public _whenSetPitchedPreset = (): void => {\n        this._setPreset($('#pitchPresetSelect').val() + \"\");\n    }\n\n    public _whenSetDrumPreset = (): void => {\n        this._setPreset($('#drumPresetSelect').val() + \"\");\n    }\n\n    private _setPreset(preset: string): void {\n        if (isNaN(<number><unknown>preset)) {\n            switch (preset) {\n                case \"copyInstrument\":\n                    this._copyInstrument();\n                    break;\n                case \"pasteInstrument\":\n                    this._pasteInstrument();\n                    break;\n                case \"randomPreset\":\n                    this._randomPreset();\n                    break;\n                case \"randomGenerated\":\n                    this._randomGenerated();\n                    break;\n            }\n            this._doc.notifier.changed();\n        } else {\n            this._doc.record(new ChangePreset(this._doc, parseInt(preset)));\n        }\n    }\n\n    private _whenSetFeedbackType = (): void => {\n        this._doc.record(new ChangeFeedbackType(this._doc, this._feedbackTypeSelect.selectedIndex));\n    }\n\n\n    private _whenSetAlgorithm = (): void => {\n        this._doc.record(new ChangeAlgorithm(this._doc, this._algorithmSelect.selectedIndex));\n    }\n\n    private _whenSelectInstrument = (event: MouseEvent): void => {\n        if (event.target == this._instrumentAddButton) {\n            this._doc.record(new ChangeAddChannelInstrument(this._doc));\n        } else if (event.target == this._instrumentRemoveButton) {\n            this._doc.record(new ChangeRemoveChannelInstrument(this._doc));\n        } else {\n            const index: number = this._instrumentButtons.indexOf(<any>event.target);\n            if (index != -1) {\n                this._doc.selection.selectInstrument(index);\n            }\n            // Force piano to re-show, if channel is modulator\n            if (this._doc.channel >= this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\n                this._piano.forceRender();\n            }\n            this._renderInstrumentBar(this._doc.song.channels[this._doc.channel], index, ColorConfig.getChannelColor(this._doc.song, this._doc.channel));\n        }\n\n        this.refocusStage();\n    }\n\n    private _whenSetModChannel = (mod: number): void => {\n\n        let instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\n        let previouslyUnset: boolean = (instrument.modulators[mod] == 0 || Config.modulators[instrument.modulators[mod]].forSong);\n\n        this._doc.selection.setModChannel(mod, this._modChannelBoxes[mod].selectedIndex);\n\n        const modChannel: number = Math.max(0, instrument.modChannels[mod]);\n\n        // Check if setting was 'song' or 'none' and is changing to a channel number, in which case suggested instrument to mod will auto-set to the current one.\n        if (this._doc.song.channels[modChannel].instruments.length > 1 && previouslyUnset && this._modChannelBoxes[mod].selectedIndex >= 2) {\n            if (this._doc.song.channels[modChannel].bars[this._doc.bar] > 0) {\n                this._doc.selection.setModInstrument(mod, this._doc.song.channels[modChannel].patterns[this._doc.song.channels[modChannel].bars[this._doc.bar] - 1].instruments[0]);\n            }\n        }\n\n        // Force piano to re-show\n        this._piano.forceRender();\n    }\n\n    private _whenSetModInstrument = (mod: number): void => {\n        this._doc.selection.setModInstrument(mod, this._modInstrumentBoxes[mod].selectedIndex);\n\n        // Force piano to re-show\n        this._piano.forceRender();\n    }\n\n    private _whenSetModSetting = (mod: number, invalidIndex: boolean = false): void => {\n        let text: string = \"none\";\n        if (this._modSetBoxes[mod].selectedIndex != -1) {\n            text = this._modSetBoxes[mod].children[this._modSetBoxes[mod].selectedIndex].textContent as string;\n\n            if (invalidIndex) {\n                // A setting is invalid (not in instrument's effects). It will be the first index. Allow it, but mark it as red.\n                this._modSetBoxes[mod].selectedOptions.item(0)!.style.setProperty(\"color\", \"red\");\n                this._modSetBoxes[mod].classList.add(\"invalidSetting\");\n                this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()].invalidModulators[mod] = true;\n            } else {\n                this._modSetBoxes[mod].classList.remove(\"invalidSetting\");\n                this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()].invalidModulators[mod] = false;\n            }\n        }\n        if (!invalidIndex) // Invalid index means a set is actually not occurring, just the same index and a warning.\n            this._doc.selection.setModSetting(mod, text);\n\n        // Force piano to re-show if channel is modulator, as text shown on it needs to update\n        this._piano.forceRender();\n\n    }\n\n    private _whenClickModTarget = (mod: number): void => {\n        if (this._modChannelBoxes[mod].selectedIndex >= 2) {\n            this._doc.selection.setChannelBar(this._modChannelBoxes[mod].selectedIndex - 2, this._doc.bar);\n        }\n    }\n\n    private _whenClickJumpToModTarget = (): void => {\n        const channelIndex: number = this._doc.channel;\n        const instrumentIndex: number = this._doc.getCurrentInstrument();\n        if (channelIndex < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\n            for (let modChannelIdx: number = this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; modChannelIdx < this._doc.song.channels.length; modChannelIdx++) {\n                const modChannel: Channel = this._doc.song.channels[modChannelIdx];\n                const patternIdx = modChannel.bars[this._doc.bar];\n                if (patternIdx > 0) {\n                    const modInstrumentIdx: number = modChannel.patterns[patternIdx - 1].instruments[0];\n                    const modInstrument: Instrument = modChannel.instruments[modInstrumentIdx];\n                    for (let mod: number = 0; mod < Config.modCount; mod++) {\n                        if (modInstrument.modChannels[mod] == channelIndex && (modInstrument.modInstruments[mod] == instrumentIndex || modInstrument.modInstruments[mod] >= this._doc.song.channels[channelIndex].instruments.length)) {\n                            this._doc.selection.setChannelBar(modChannelIdx, this._doc.bar);\n                            return;\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    private _whenSetModFilter = (mod: number): void => {\n        this._doc.selection.setModFilter(mod, this._modFilterBoxes[mod].selectedIndex);\n    }\n\n    private _whenSetChipWave = (): void => {\n        this._doc.record(new ChangeChipWave(this._doc, this._chipWaveSelect.selectedIndex));\n    }\n\n    private _whenSetNoiseWave = (): void => {\n        this._doc.record(new ChangeNoiseWave(this._doc, this._chipNoiseSelect.selectedIndex));\n    }\n\n\n\n    private _whenSetTransition = (): void => {\n        this._doc.record(new ChangeTransition(this._doc, this._transitionSelect.selectedIndex));\n    }\n\n    private _whenSetEffects = (): void => {\n        const instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\n        const oldValue: number = instrument.effects;\n        const toggleFlag: number = Config.effectOrder[this._effectsSelect.selectedIndex - 1];\n        this._doc.record(new ChangeToggleEffects(this._doc, toggleFlag, null));\n        this._effectsSelect.selectedIndex = 0;\n        if (instrument.effects > oldValue) {\n            this._doc.addedEffect = true;\n        }\n        this._doc.notifier.changed();\n    }\n\n    private _whenSetVibrato = (): void => {\n        this._doc.record(new ChangeVibrato(this._doc, this._vibratoSelect.selectedIndex));\n    }\n\n    private _whenSetVibratoType = (): void => {\n        this._doc.record(new ChangeVibratoType(this._doc, this._vibratoTypeSelect.selectedIndex));\n    }\n\n    private _whenSetUnison = (): void => {\n        this._doc.record(new ChangeUnison(this._doc, this._unisonSelect.selectedIndex));\n    }\n\n    private _whenSetChord = (): void => {\n        this._doc.record(new ChangeChord(this._doc, this._chordSelect.selectedIndex));\n    }\n\n    private _addNewEnvelope = (): void => {\n        this._doc.record(new ChangeAddEnvelope(this._doc));\n        this.refocusStage();\n        this._doc.addedEnvelope = true;\n    }\n\n    private _zoomIn = (): void => {\n        this._doc.prefs.visibleOctaves = Math.max(1, this._doc.prefs.visibleOctaves - 1);\n        this._doc.prefs.save();\n        this._doc.notifier.changed();\n        this.refocusStage();\n    }\n\n    private _zoomOut = (): void => {\n        this._doc.prefs.visibleOctaves = Math.min(Config.pitchOctaves, this._doc.prefs.visibleOctaves + 1);\n        this._doc.prefs.save();\n        this._doc.notifier.changed();\n        this.refocusStage();\n    }\n\n    private _fileMenuHandler = (event: Event): void => {\n        switch (this._fileMenu.value) {\n            case \"new\":\n                this._doc.goBackToStart();\n                this._doc.song.restoreLimiterDefaults();\n                for (const channel of this._doc.song.channels) {\n                    channel.muted = false;\n                    channel.name = \"\";\n                }\n                this._doc.record(new ChangeSong(this._doc, \"\"), false, true);\n                break;\n            case \"export\":\n                this._openPrompt(\"export\");\n                break;\n            case \"import\":\n                this._openPrompt(\"import\");\n                break;\n            case \"copyUrl\":\n                this._copyTextToClipboard(new URL(\"#\" + this._doc.song.toBase64String(), location.href).href);\n                break;\n            case \"shareUrl\":\n                (<any>navigator).share({ url: new URL(\"#\" + this._doc.song.toBase64String(), location.href).href });\n                break;\n            case \"shortenUrl\":\n                window.open(\"https://tinyurl.com/api-create.php?url=\" + encodeURIComponent(new URL(\"#\" + this._doc.song.toBase64String(), location.href).href));\n                break;\n            case \"viewPlayer\":\n                location.href = \"player/#song=\" + this._doc.song.toBase64String();\n                break;\n            case \"copyEmbed\":\n                this._copyTextToClipboard(`<iframe width=\"384\" height=\"60\" style=\"border: none;\" src=\"${new URL(\"player/#song=\" + this._doc.song.toBase64String(), location.href).href}\"></iframe>`);\n                break;\n            case \"songRecovery\":\n                this._openPrompt(\"songRecovery\");\n                break;\n        }\n        this._fileMenu.selectedIndex = 0;\n    }\n\n    private _editMenuHandler = (event: Event): void => {\n        switch (this._editMenu.value) {\n            case \"undo\":\n                this._doc.undo();\n                break;\n            case \"redo\":\n                this._doc.redo();\n                break;\n            case \"copy\":\n                this._doc.selection.copy();\n                break;\n            case \"insertBars\":\n                this._doc.selection.insertBars();\n                break;\n            case \"deleteBars\":\n                this._doc.selection.deleteBars();\n                break;\n            case \"insertChannel\":\n                this._doc.selection.insertChannel();\n                break;\n            case \"deleteChannel\":\n                this._doc.selection.deleteChannel();\n                break;\n            case \"pasteNotes\":\n                this._doc.selection.pasteNotes();\n                break;\n            case \"pasteNumbers\":\n                this._doc.selection.pasteNumbers();\n                break;\n            case \"transposeUp\":\n                this._doc.selection.transpose(true, false);\n                break;\n            case \"transposeDown\":\n                this._doc.selection.transpose(false, false);\n                break;\n            case \"selectAll\":\n                this._doc.selection.selectAll();\n                break;\n            case \"selectChannel\":\n                this._doc.selection.selectChannel();\n                break;\n            case \"duplicatePatterns\":\n                this._doc.selection.duplicatePatterns();\n                break;\n            case \"barCount\":\n                this._openPrompt(\"barCount\");\n                break;\n            case \"beatsPerBar\":\n                this._openPrompt(\"beatsPerBar\");\n                break;\n            case \"moveNotesSideways\":\n                this._openPrompt(\"moveNotesSideways\");\n                break;\n            case \"channelSettings\":\n                this._openPrompt(\"channelSettings\");\n                break;\n            case \"limiterSettings\":\n                this._openPrompt(\"limiterSettings\");\n                break;\n        }\n        this._editMenu.selectedIndex = 0;\n    }\n\n    private _optionsMenuHandler = (event: Event): void => {\n        switch (this._optionsMenu.value) {\n            case \"autoPlay\":\n                this._doc.prefs.autoPlay = !this._doc.prefs.autoPlay;\n                break;\n            case \"autoFollow\":\n                this._doc.prefs.autoFollow = !this._doc.prefs.autoFollow;\n                break;\n            case \"enableNotePreview\":\n                this._doc.prefs.enableNotePreview = !this._doc.prefs.enableNotePreview;\n                break;\n            case \"showLetters\":\n                this._doc.prefs.showLetters = !this._doc.prefs.showLetters;\n                break;\n            case \"showFifth\":\n                this._doc.prefs.showFifth = !this._doc.prefs.showFifth;\n                break;\n            case \"notesOutsideScale\":\n                this._doc.prefs.notesOutsideScale = !this._doc.prefs.notesOutsideScale;\n                break;\n            case \"setDefaultScale\":\n                this._doc.prefs.defaultScale = this._doc.song.scale;\n                break;\n            case \"showChannels\":\n                this._doc.prefs.showChannels = !this._doc.prefs.showChannels;\n                break;\n            case \"showScrollBar\":\n                this._doc.prefs.showScrollBar = !this._doc.prefs.showScrollBar;\n                break;\n            case \"alwaysFineNoteVol\":\n                this._doc.prefs.alwaysFineNoteVol = !this._doc.prefs.alwaysFineNoteVol;\n                break;\n            case \"enableChannelMuting\":\n                this._doc.prefs.enableChannelMuting = !this._doc.prefs.enableChannelMuting;\n                for (const channel of this._doc.song.channels) channel.muted = false;\n                break;\n            case \"displayBrowserUrl\":\n                this._doc.toggleDisplayBrowserUrl();\n                break;\n            case \"displayVolumeBar\":\n                this._doc.prefs.displayVolumeBar = !this._doc.prefs.displayVolumeBar;\n                break;\n            case \"layout\":\n                this._openPrompt(\"layout\");\n                break;\n            case \"colorTheme\":\n                this._openPrompt(\"theme\");\n                break;\n            case \"recordingSetup\":\n                this._openPrompt(\"recordingSetup\");\n                break;\n        }\n        this._optionsMenu.selectedIndex = 0;\n        this._doc.notifier.changed();\n        this._doc.prefs.save();\n    }\n\n    private _customWavePresetHandler = (event: Event): void => {\n\n        // Update custom wave value\n        let customWaveArray: Float32Array = new Float32Array(64);\n        let index: number = this._customWavePresetDrop.selectedIndex - 1;\n        let maxValue: number = Number.MIN_VALUE;\n        let minValue: number = Number.MAX_VALUE;\n        let arrayPoint: number = 0;\n        let arrayStep: number = (Config.chipWaves[index].samples.length - 1) / 64.0;\n\n        for (let i: number = 0; i < 64; i++) {\n            // Compute derivative to get original wave.\n            customWaveArray[i] = (Config.chipWaves[index].samples[Math.floor(arrayPoint)] - Config.chipWaves[index].samples[(Math.floor(arrayPoint) + 1)]) / arrayStep;\n\n            if (customWaveArray[i] < minValue)\n                minValue = customWaveArray[i];\n\n            if (customWaveArray[i] > maxValue)\n                maxValue = customWaveArray[i];\n\n            // Scale an any-size array to 64 elements\n            arrayPoint += arrayStep;\n        }\n\n        for (let i: number = 0; i < 64; i++) {\n            // Change array range from Min~Max to 0~(Max-Min)\n            customWaveArray[i] -= minValue;\n            // Divide by (Max-Min) to get a range of 0~1,\n            customWaveArray[i] /= (maxValue - minValue);\n            //then multiply by 48 to get 0~48,\n            customWaveArray[i] *= 48.0;\n            //then subtract 24 to get - 24~24\n            customWaveArray[i] -= 24.0;\n            //need to force integers\n            customWaveArray[i] = Math.ceil(customWaveArray[i]);\n\n            // Copy back data to canvas\n            this._customWaveDrawCanvas.newArray[i] = customWaveArray[i];\n        }\n\n        //this._instrumentVolumeSlider.input.value = \"\" + Math.round(Config.waveVolumes[index] * 50.0 - 50.0);\n\n        this._doc.record(new ChangeCustomWave(this._doc, customWaveArray))\n        this._doc.record(new ChangeVolume(this._doc, +this._instrumentVolumeSlider.input.value, -Config.volumeRange / 2 + Math.round(Math.sqrt(Config.chipWaves[index].expression) * Config.volumeRange / 2)));\n\n        this._customWavePresetDrop.selectedIndex = 0;\n        this._doc.notifier.changed();\n        this._doc.prefs.save();\n    }\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nimport {Config} from \"../synth/SynthConfig\";\nimport {Note, Pattern} from \"../synth/synth\";\nimport {SongDocument} from \"./SongDocument\";\nimport {ChangeGroup} from \"./Change\";\nimport {ChangeChannelBar, ChangePinTime, ChangeEnsurePatternExists, ChangeNoteAdded, ChangeInsertBars, ChangeDeleteBars, ChangeNoteLength} from \"./changes\";\nimport {Piano} from \"./Piano\";\n\nexport class SongPerformance {\n\tprivate _channelIsDrum: boolean = false;\n\tprivate _channelOctave: number = -1;\n\tprivate _songKey: number = -1;\n\tprivate _pitchesAreTemporary: boolean = false;\n\tprivate _bassPitchesAreTemporary: boolean = false;\n\tprivate readonly _recentlyAddedPitches: number[] = []; // Pitches that are rapidly added then removed within a minimum rhythm duration wouldn't get recorded until I explicitly track recently added notes and check if any are no longer held.\n\tprivate readonly _recentlyAddedBassPitches: number[] = []; // Pitches that are rapidly added then removed within a minimum rhythm duration wouldn't get recorded until I explicitly track recently added notes and check if any are no longer held.\n\n\tprivate _songLengthWhenRecordingStarted: number = -1;\n\tprivate _playheadPart: number = -1;\n\tprivate _bassPlayheadPart: number = -1;\n\tprivate _playheadPattern: Pattern | null = null;\n\tprivate _bassPlayheadPattern: Pattern | null = null;\n\tprivate _pitchesChanged: boolean = false;\n\tprivate _bassPitchesChanged: boolean = false;\n\tprivate _lastNote: Note | null = null;\n\tprivate _lastBassNote: Note | null = null;\n\tprivate _recordingChange: ChangeGroup | null = null;\n\t\n\tconstructor(private _doc: SongDocument) {\n\t\tthis._doc.notifier.watch(this._documentChanged);\n\t\tthis._documentChanged();\n\t\twindow.requestAnimationFrame(this._onAnimationFrame);\n\t}\n\t\n\tpublic play(): void {\n\t\tthis._doc.synth.play();\n\t\tthis._doc.synth.enableMetronome = false;\n\t\tthis._doc.synth.countInMetronome = false\n\t\tthis._doc.synth.maintainLiveInput();\n\t}\n\t\n\tpublic pause(): void {\n\t\tthis.clearAllPitches();\n\t\tthis.clearAllBassPitches();\n\t\tif (this._recordingChange != null) {\n\t\t\tif (this._doc.song.barCount > this._songLengthWhenRecordingStarted && !this._lastBarHasPatterns()) {\n\t\t\t\t// If an extra empty bar was added in case it was needed for recording, but it didn't end up getting used, delete it now.\n\t\t\t\tnew ChangeDeleteBars(this._doc, this._doc.song.barCount - 1, 1);\n\t\t\t\tnew ChangeChannelBar(this._doc, this._doc.channel, this._doc.song.barCount - 1);\n\t\t\t}\n\t\t\tif (!this._recordingChange.isNoop()) {\n\t\t\t\tthis._doc.record(this._recordingChange);\n\t\t\t\tthis._recordingChange = null;\n\t\t\t}\n\t\t\tthis._lastNote = null;\n\t\t}\n\t\tthis._doc.synth.pause();\n\t\tthis._doc.synth.resetEffects();\n\t\tthis._doc.synth.enableMetronome = false;\n\t\tthis._doc.synth.countInMetronome = false\n\t\tif (this._doc.prefs.autoFollow) {\n\t\t\tthis._doc.synth.goToBar(this._doc.bar);\n\t\t}\n\t\tthis._doc.synth.snapToBar();\n\t}\n\t\n\tpublic record(): void {\n\t\tthis._doc.synth.snapToBar();\n\t\tconst playheadBar: number = Math.floor(this._doc.synth.playhead);\n\t\tif (playheadBar != this._doc.bar) {\n\t\t\tnew ChangeChannelBar(this._doc, this._doc.channel, playheadBar);\n\t\t}\n\t\tif (this._pitchesAreTemporary) {\n\t\t\tthis.clearAllPitches();\n\t\t\tthis._pitchesAreTemporary = false;\n\t\t}\n\t\tif (this._bassPitchesAreTemporary) {\n\t\t\tthis.clearAllBassPitches();\n\t\t\tthis._bassPitchesAreTemporary = false;\n\t\t}\n\t\tthis._doc.synth.enableMetronome = this._doc.prefs.metronomeWhileRecording;\n\t\tthis._doc.synth.countInMetronome = this._doc.prefs.metronomeCountIn;\n\t\tthis._doc.synth.startRecording();\n\t\tthis._doc.synth.maintainLiveInput();\n\t\tthis._songLengthWhenRecordingStarted = this._doc.song.barCount;\n\t\tthis._playheadPart = this._getCurrentPlayheadPart();\n\t\tthis._bassPlayheadPart = this._getCurrentPlayheadPart();\n\t\tthis._playheadPattern = null;\n\t\tthis._bassPlayheadPattern = null;\n\t\tthis._pitchesChanged = false;\n\t\tthis._bassPitchesChanged = false;\n\t\tthis._lastNote = null;\n\t\tthis._lastBassNote = null;\n\t\tthis._recentlyAddedPitches.length = 0;\n\t\tthis._recentlyAddedBassPitches.length = 0;\n\t\tthis._recordingChange = new ChangeGroup();\n\t\tthis._doc.setProspectiveChange(this._recordingChange);\n\t}\n\t\n\tpublic abortRecording(): void {\n\t\tthis._recordingChange = null;\n\t\tthis.pause();\n\t}\n\t\n\tpublic pitchesAreTemporary(): boolean {\n\t\treturn this._pitchesAreTemporary;\n\t}\n\n\tpublic bassPitchesAreTemporary(): boolean {\n\t\treturn this._bassPitchesAreTemporary;\n\t}\n\n\tprivate _getBassOffsetChannel(): number {\n\t\tif ( this._doc.channel >= this._doc.song.pitchChannelCount )\n\t\t\treturn this._doc.channel;\n\t\treturn Math.max( 0, Math.min( this._doc.song.pitchChannelCount - 1, this._doc.channel + this._doc.prefs.bassOffset ));\n\t}\n\t\n\tprivate _getMinDivision(): number {\n\t\tif (this._doc.prefs.snapRecordedNotesToRhythm) {\n\t\t\treturn Config.partsPerBeat / Config.rhythms[this._doc.song.rhythm].stepsPerBeat;\n\t\t} else {\n\t\t\treturn 1;\n\t\t}\n\t}\n\t\n\tprivate _getCurrentPlayheadPart(): number {\n\t\tconst currentPart: number = this._doc.synth.playhead * this._doc.song.beatsPerBar * Config.partsPerBeat;\n\t\tif (this._doc.prefs.snapRecordedNotesToRhythm) {\n\t\t\tconst minDivision: number = this._getMinDivision();\n\t\t\treturn Math.round(currentPart / minDivision) * minDivision;\n\t\t}\n\t\treturn Math.round(currentPart);\n\t}\n\t\n\tprivate _lastBarHasPatterns(): boolean {\n\t\tfor (let channelIndex: number = 0; channelIndex < this._doc.song.getChannelCount(); channelIndex++) {\n\t\t\tif (this._doc.song.channels[channelIndex].bars[this._doc.song.barCount - 1] != 0) return true;\n\t\t}\n\t\treturn false;\n\t}\n\t\n\tprivate _onAnimationFrame = (): void => {\n\t\twindow.requestAnimationFrame(this._onAnimationFrame);\n\t\tif (this._doc.synth.recording) {\n\t\t\tlet dirty: boolean = this._updateRecordedNotes();\n\t\t\tdirty = this._updateRecordedBassNotes() ? true : dirty;\n\t\t\tif (dirty) {\n\t\t\t\t// The full interface is usually only rerendered in response to user input events, not animation events, but in this case go ahead and rerender everything.\n\t\t\t\tthis._doc.notifier.notifyWatchers();\n\t\t\t}\n\t\t}\n\t}\n\t\n\t// Returns true if the full interface needs to be rerendered.\n\tprivate _updateRecordedNotes(): boolean {\n\t\tif (this._recordingChange == null) return false;\n\t\tif (!this._doc.lastChangeWas(this._recordingChange)) {\n\t\t\tthis.abortRecording();\n\t\t\treturn false;\n\t\t}\n\t\tif (this._doc.synth.countInMetronome) {\n\t\t\t// If the synth is still counting in before recording, discard any recently added pitches.\n\t\t\tthis._recentlyAddedPitches.length = 0;\n\t\t\tthis._pitchesChanged = false;\n\t\t\treturn false;\n\t\t}\n\t\t\n\t\tconst partsPerBar: number = this._doc.song.beatsPerBar * Config.partsPerBeat;\n\t\tconst oldPart: number = this._playheadPart % partsPerBar;\n\t\tconst oldBar: number = Math.floor(this._playheadPart / partsPerBar);\n\t\tconst oldPlayheadPart: number = this._playheadPart;\n\t\tthis._playheadPart = this._getCurrentPlayheadPart();\n\t\tconst newPart: number = this._playheadPart % partsPerBar;\n\t\tconst newBar: number = Math.floor(this._playheadPart / partsPerBar);\n\t\tif (oldPart == newPart && oldBar == newBar) return false;\n\t\tif (this._playheadPart < oldPlayheadPart) {\n\t\t\tthis._lastNote = null;\n\t\t\tthis._playheadPattern = null;\n\t\t\treturn false;\n\t\t}\n\t\t\n\t\tlet dirty = false;\n\t\tfor (let bar: number = oldBar; bar <= newBar; bar++) {\n\t\t\tif (bar != oldBar) {\n\t\t\t\tthis._playheadPattern = null;\n\t\t\t}\n\t\t\tconst startPart: number = (bar == oldBar) ? oldPart : 0;\n\t\t\tconst endPart: number = (bar == newBar) ? newPart : partsPerBar;\n\t\t\tif (startPart == endPart) break;\n\t\t\tif (this._lastNote != null && !this._pitchesChanged && startPart > 0 && this._doc.synth.liveInputPitches.length > 0) {\n\t\t\t\tthis._recordingChange.append(new ChangePinTime(this._doc, this._lastNote, 1, endPart, this._lastNote.continuesLastPattern));\n\t\t\t\t// Instead of updating the entire interface when extending the last note, just update the current pattern as a special case to avoid doing too much work every frame since performance is important while recording.\n\t\t\t\tthis._doc.currentPatternIsDirty = true;\n\t\t\t} else {\n\t\t\t\tif (this._lastNote != null) {\n\t\t\t\t\t// End the last note.\n\t\t\t\t\tthis._lastNote = null;\n\t\t\t\t}\n\t\t\t\t// All current pitches will usually fill the time span from startPart to endPart, but\n\t\t\t\t// if any recent pitches were released before being recorded, they'll get recorded here\n\t\t\t\t// as short as possible and then any remaining time will be dedicated to pitches that\n\t\t\t\t// haven't been released yet.\n\t\t\t\tlet noteStartPart: number = startPart;\n\t\t\t\tlet noteEndPart: number = endPart;\n\t\t\t\twhile (noteStartPart < endPart) {\n\t\t\t\t\tlet addedAlreadyReleasedPitch: boolean = false;\n\t\t\t\t\tif (this._recentlyAddedPitches.length > 0 || this._doc.synth.liveInputPitches.length > 0) {\n\t\t\t\t\t\tif (this._playheadPattern == null) {\n\t\t\t\t\t\t\tthis._doc.selection.erasePatternInBar(this._recordingChange, this._doc.synth.liveInputChannel, bar);\n\t\t\t\t\t\t\tthis._recordingChange.append(new ChangeEnsurePatternExists(this._doc, this._doc.synth.liveInputChannel, bar));\n\t\t\t\t\t\t\tthis._playheadPattern = this._doc.song.getPattern(this._doc.synth.liveInputChannel, bar);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (this._playheadPattern == null) throw new Error();\n\t\t\t\t\t\tthis._lastNote = new Note(-1, noteStartPart, noteEndPart, Config.noteSizeMax, this._doc.song.getChannelIsNoise(this._doc.synth.liveInputChannel));\n\t\t\t\t\t\tthis._lastNote.continuesLastPattern = (noteStartPart == 0 && !this._pitchesChanged);\n\t\t\t\t\t\tthis._lastNote.pitches.length = 0;\n\t\t\t\t\t\twhile (this._recentlyAddedPitches.length > 0) {\n\t\t\t\t\t\t\tif (this._lastNote.pitches.length >= Config.maxChordSize) break;\n\t\t\t\t\t\t\tconst recentPitch: number = this._recentlyAddedPitches.shift()!;\n\t\t\t\t\t\t\tif (this._doc.synth.liveInputPitches.indexOf(recentPitch) == -1) {\n\t\t\t\t\t\t\t\tthis._lastNote.pitches.push(recentPitch);\n\t\t\t\t\t\t\t\taddedAlreadyReleasedPitch = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfor (let i: number = 0; i < this._doc.synth.liveInputPitches.length; i++) {\n\t\t\t\t\t\t\tif (this._lastNote.pitches.length >= Config.maxChordSize) break;\n\t\t\t\t\t\t\tthis._lastNote.pitches.push(this._doc.synth.liveInputPitches[i]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis._recordingChange.append(new ChangeNoteAdded(this._doc, this._playheadPattern, this._lastNote, this._playheadPattern.notes.length));\n\t\t\t\t\t\tif (addedAlreadyReleasedPitch) {\n\t\t\t\t\t\t\t// If this note contains pitches that were already released, shorten it and start a new note.\n\t\t\t\t\t\t\tnoteEndPart = noteStartPart + this._getMinDivision();\n\t\t\t\t\t\t\tnew ChangeNoteLength(this._doc, this._lastNote, this._lastNote.start, noteEndPart);\n\t\t\t\t\t\t\tthis._lastNote = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdirty = true;\n\t\t\t\t\t}\n\t\t\t\t\tthis._pitchesChanged = addedAlreadyReleasedPitch;\n\t\t\t\t\tnoteStartPart = noteEndPart;\n\t\t\t\t\tnoteEndPart = endPart;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (bar == this._doc.song.barCount - 1) {\n\t\t\t\tif (this._lastBarHasPatterns()) {\n\t\t\t\t\tnew ChangeInsertBars(this._doc, this._doc.song.barCount, 1);\n\t\t\t\t\tthis._doc.bar--; // To counteract it increasing in ChangeInsertBars.\n\t\t\t\t\tdirty = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn dirty;\n\t}\n\n\t// Returns true if the full interface needs to be rerendered.\n\tprivate _updateRecordedBassNotes(): boolean {\n\t\tif (this._recordingChange == null) return false;\n\t\tif (!this._doc.lastChangeWas(this._recordingChange)) {\n\t\t\tthis.abortRecording();\n\t\t\treturn false;\n\t\t}\n\t\tif (this._doc.synth.countInMetronome) {\n\t\t\t// If the synth is still counting in before recording, discard any recently added pitches.\n\t\t\tthis._recentlyAddedBassPitches.length = 0;\n\t\t\tthis._bassPitchesChanged = false;\n\t\t\treturn false;\n\t\t}\n\t\t\n\t\tconst partsPerBar: number = this._doc.song.beatsPerBar * Config.partsPerBeat;\n\t\tconst oldPart: number = this._bassPlayheadPart % partsPerBar;\n\t\tconst oldBar: number = Math.floor(this._bassPlayheadPart / partsPerBar);\n\t\tconst oldPlayheadPart: number = this._bassPlayheadPart;\n\t\tthis._bassPlayheadPart = this._getCurrentPlayheadPart();\n\t\tconst newPart: number = this._bassPlayheadPart % partsPerBar;\n\t\tconst newBar: number = Math.floor(this._bassPlayheadPart / partsPerBar);\n\t\tif (oldPart == newPart && oldBar == newBar) return false;\n\t\tif (this._bassPlayheadPart < oldPlayheadPart) {\n\t\t\tthis._lastBassNote = null;\n\t\t\tthis._bassPlayheadPattern = null;\n\t\t\treturn false;\n\t\t}\n\t\t\n\t\tlet dirty = false;\n\t\tfor (let bar: number = oldBar; bar <= newBar; bar++) {\n\t\t\tif (bar != oldBar) {\n\t\t\t\tthis._bassPlayheadPattern = null;\n\t\t\t}\n\t\t\tconst startPart: number = (bar == oldBar) ? oldPart : 0;\n\t\t\tconst endPart: number = (bar == newBar) ? newPart : partsPerBar;\n\t\t\tif (startPart == endPart) break;\n\t\t\tif (this._lastBassNote != null && !this._bassPitchesChanged && startPart > 0 && this._doc.synth.liveBassInputPitches.length > 0) {\n\t\t\t\tthis._recordingChange.append(new ChangePinTime(this._doc, this._lastBassNote, 1, endPart, this._lastBassNote.continuesLastPattern));\n\t\t\t\t// Instead of updating the entire interface when extending the last note, just update the current pattern as a special case to avoid doing too much work every frame since performance is important while recording.\n\t\t\t\tthis._doc.currentPatternIsDirty = true;\n\t\t\t} else {\n\t\t\t\tif (this._lastBassNote != null) {\n\t\t\t\t\t// End the last note.\n\t\t\t\t\tthis._lastBassNote = null;\n\t\t\t\t}\n\t\t\t\t// All current pitches will usually fill the time span from startPart to endPart, but\n\t\t\t\t// if any recent pitches were released before being recorded, they'll get recorded here\n\t\t\t\t// as short as possible and then any remaining time will be dedicated to pitches that\n\t\t\t\t// haven't been released yet.\n\t\t\t\tlet noteStartPart: number = startPart;\n\t\t\t\tlet noteEndPart: number = endPart;\n\t\t\t\twhile (noteStartPart < endPart) {\n\t\t\t\t\tlet addedAlreadyReleasedPitch: boolean = false;\n\t\t\t\t\tif (this._recentlyAddedBassPitches.length > 0 || this._doc.synth.liveBassInputPitches.length > 0) {\n\t\t\t\t\t\tif (this._bassPlayheadPattern == null) {\n\t\t\t\t\t\t\tthis._doc.selection.erasePatternInBar(this._recordingChange, this._doc.synth.liveBassInputChannel, bar);\n\t\t\t\t\t\t\tthis._recordingChange.append(new ChangeEnsurePatternExists(this._doc, this._doc.synth.liveBassInputChannel, bar));\n\t\t\t\t\t\t\tthis._bassPlayheadPattern = this._doc.song.getPattern(this._doc.synth.liveBassInputChannel, bar);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (this._bassPlayheadPattern == null) throw new Error();\n\t\t\t\t\t\tthis._lastBassNote = new Note(-1, noteStartPart, noteEndPart, Config.noteSizeMax, this._doc.song.getChannelIsNoise(this._doc.synth.liveBassInputChannel));\n\t\t\t\t\t\tthis._lastBassNote.continuesLastPattern = (noteStartPart == 0 && !this._bassPitchesChanged);\n\t\t\t\t\t\tthis._lastBassNote.pitches.length = 0;\n\t\t\t\t\t\twhile (this._recentlyAddedBassPitches.length > 0) {\n\t\t\t\t\t\t\tif (this._lastBassNote.pitches.length >= Config.maxChordSize) break;\n\t\t\t\t\t\t\tconst recentPitch: number = this._recentlyAddedBassPitches.shift()!;\n\t\t\t\t\t\t\tif (this._doc.synth.liveBassInputPitches.indexOf(recentPitch) == -1) {\n\t\t\t\t\t\t\t\tthis._lastBassNote.pitches.push(recentPitch);\n\t\t\t\t\t\t\t\taddedAlreadyReleasedPitch = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfor (let i: number = 0; i < this._doc.synth.liveBassInputPitches.length; i++) {\n\t\t\t\t\t\t\tif (this._lastBassNote.pitches.length >= Config.maxChordSize) break;\n\t\t\t\t\t\t\tthis._lastBassNote.pitches.push(this._doc.synth.liveBassInputPitches[i]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis._recordingChange.append(new ChangeNoteAdded(this._doc, this._bassPlayheadPattern, this._lastBassNote, this._bassPlayheadPattern.notes.length));\n\t\t\t\t\t\tif (addedAlreadyReleasedPitch) {\n\t\t\t\t\t\t\t// If this note contains pitches that were already released, shorten it and start a new note.\n\t\t\t\t\t\t\tnoteEndPart = noteStartPart + this._getMinDivision();\n\t\t\t\t\t\t\tnew ChangeNoteLength(this._doc, this._lastBassNote, this._lastBassNote.start, noteEndPart);\n\t\t\t\t\t\t\tthis._lastBassNote = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdirty = true;\n\t\t\t\t\t}\n\t\t\t\t\tthis._bassPitchesChanged = addedAlreadyReleasedPitch;\n\t\t\t\t\tnoteStartPart = noteEndPart;\n\t\t\t\t\tnoteEndPart = endPart;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (bar == this._doc.song.barCount - 1) {\n\t\t\t\tif (this._lastBarHasPatterns()) {\n\t\t\t\t\tnew ChangeInsertBars(this._doc, this._doc.song.barCount, 1);\n\t\t\t\t\tthis._doc.bar--; // To counteract it increasing in ChangeInsertBars.\n\t\t\t\t\tdirty = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn dirty;\n\t}\n\t\n\tpublic setTemporaryPitches(pitches: number[], duration: number): void {\n\t\tthis._updateRecordedNotes();\n\t\tfor (let i: number = 0; i < pitches.length; i++) {\n\t\t\tthis._doc.synth.liveInputPitches[i] = pitches[i];\n\t\t}\n\t\tthis._doc.synth.liveInputPitches.length = Math.min(pitches.length, Config.maxChordSize);\n\t\tthis._doc.synth.liveInputDuration = duration;\n\t\tthis._doc.synth.liveInputStarted = true;\n\t\tthis._pitchesAreTemporary = true;\n\t\tthis._pitchesChanged = true;\n\t}\n\n\tpublic setTemporaryBassPitches(pitches: number[], duration: number): void {\n\t\tthis._updateRecordedBassNotes();\n\t\tfor (let i: number = 0; i < pitches.length; i++) {\n\t\t\tthis._doc.synth.liveBassInputPitches[i] = pitches[i];\n\t\t}\n\t\tthis._doc.synth.liveBassInputPitches.length = Math.min(pitches.length, Config.maxChordSize);\n\t\tthis._doc.synth.liveBassInputDuration = duration;\n\t\tthis._doc.synth.liveBassInputStarted = true;\n\t\tthis._bassPitchesAreTemporary = true;\n\t\tthis._bassPitchesChanged = true;\n\t}\n\t\n\tpublic addPerformedPitch(pitch: number): void {\n\t\tthis._doc.synth.maintainLiveInput();\n\n\t\tif (pitch > Piano.getBassCutoffPitch(this._doc) || this._getBassOffsetChannel() == this._doc.channel) {\n\t\t\tthis._updateRecordedNotes();\n\t\t\tif (this._pitchesAreTemporary) {\n\t\t\t\tthis.clearAllPitches();\n\t\t\t\tthis._pitchesAreTemporary = false;\n\t\t\t}\n\t\t\tif (this._doc.prefs.ignorePerformedNotesNotInScale && !Config.scales[this._doc.song.scale].flags[pitch % Config.pitchesPerOctave]) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (this._doc.synth.liveInputPitches.indexOf(pitch) == -1) {\n\t\t\t\tthis._doc.synth.liveInputPitches.push(pitch);\n\t\t\t\tthis._pitchesChanged = true;\n\t\t\t\twhile (this._doc.synth.liveInputPitches.length > Config.maxChordSize) {\n\t\t\t\t\tthis._doc.synth.liveInputPitches.shift();\n\t\t\t\t}\n\t\t\t\tthis._doc.synth.liveInputDuration = Number.MAX_SAFE_INTEGER;\n\t\t\t\n\t\t\t\tif (this._recordingChange != null) {\n\t\t\t\t\tconst recentIndex: number = this._recentlyAddedPitches.indexOf(pitch);\n\t\t\t\t\tif (recentIndex != -1) {\n\t\t\t\t\t\t// If the latest pitch is already in _recentlyAddedPitches, remove it before adding it back at the end.\n\t\t\t\t\t\tthis._recentlyAddedPitches.splice(recentIndex, 1);\n\t\t\t\t\t}\n\t\t\t\t\tthis._recentlyAddedPitches.push(pitch);\n\t\t\t\t\twhile (this._recentlyAddedPitches.length > Config.maxChordSize * 4) {\n\t\t\t\t\t\tthis._recentlyAddedPitches.shift();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tthis._updateRecordedBassNotes();\n\t\t\tif (this._bassPitchesAreTemporary) {\n\t\t\t\tthis.clearAllBassPitches();\n\t\t\t\tthis._bassPitchesAreTemporary = false;\n\t\t\t}\n\t\t\tif (this._doc.prefs.ignorePerformedNotesNotInScale && !Config.scales[this._doc.song.scale].flags[pitch % Config.pitchesPerOctave]) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (this._doc.synth.liveBassInputPitches.indexOf(pitch) == -1) {\n\t\t\t\tthis._doc.synth.liveBassInputPitches.push(pitch);\n\t\t\t\tthis._bassPitchesChanged = true;\n\t\t\t\twhile (this._doc.synth.liveBassInputPitches.length > Config.maxChordSize) {\n\t\t\t\t\tthis._doc.synth.liveBassInputPitches.shift();\n\t\t\t\t}\n\t\t\t\tthis._doc.synth.liveBassInputDuration = Number.MAX_SAFE_INTEGER;\n\t\t\t\n\t\t\t\tif (this._recordingChange != null) {\n\t\t\t\t\tconst recentIndex: number = this._recentlyAddedPitches.indexOf(pitch);\n\t\t\t\t\tif (recentIndex != -1) {\n\t\t\t\t\t\t// If the latest pitch is already in _recentlyAddedPitches, remove it before adding it back at the end.\n\t\t\t\t\t\tthis._recentlyAddedBassPitches.splice(recentIndex, 1);\n\t\t\t\t\t}\n\t\t\t\t\tthis._recentlyAddedBassPitches.push(pitch);\n\t\t\t\t\twhile (this._recentlyAddedBassPitches.length > Config.maxChordSize * 4) {\n\t\t\t\t\t\tthis._recentlyAddedBassPitches.shift();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\tpublic removePerformedPitch(pitch: number): void {\n\t\tif (pitch > Piano.getBassCutoffPitch(this._doc) || this._getBassOffsetChannel() == this._doc.channel) {\n\t\t\tthis._updateRecordedNotes();\n\t\t\tfor (let i: number = 0; i < this._doc.synth.liveInputPitches.length; i++) {\n\t\t\t\tif (this._doc.synth.liveInputPitches[i] == pitch) {\n\t\t\t\t\tthis._doc.synth.liveInputPitches.splice(i, 1);\n\t\t\t\t\tthis._pitchesChanged = true;\n\t\t\t\t\ti--;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tthis._updateRecordedBassNotes();\n\t\t\tfor (let i: number = 0; i < this._doc.synth.liveBassInputPitches.length; i++) {\n\t\t\t\tif (this._doc.synth.liveBassInputPitches[i] == pitch) {\n\t\t\t\t\tthis._doc.synth.liveBassInputPitches.splice(i, 1);\n\t\t\t\t\tthis._bassPitchesChanged = true;\n\t\t\t\t\ti--;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\tpublic clearAllPitches(): void {\n\t\tthis._updateRecordedNotes();\n\t\tthis._doc.synth.liveInputPitches.length = 0;\n\t\tthis._pitchesChanged = true;\n\t}\n\n\tpublic clearAllBassPitches(): void {\n\t\tthis._updateRecordedBassNotes();\n\t\tthis._doc.synth.liveBassInputPitches.length = 0;\n\t\tthis._bassPitchesChanged = true;\n\t}\n\t\n\tprivate _documentChanged = (): void => {\n\t\tconst isDrum: boolean = this._doc.song.getChannelIsNoise(this._doc.channel);\n\t\tconst octave: number = this._doc.song.channels[this._doc.channel].octave;\n\t\tif (this._doc.synth.liveInputChannel != this._doc.channel || this._doc.synth.liveBassInputChannel != this._getBassOffsetChannel() || this._channelIsDrum != isDrum || this._channelOctave != octave || this._songKey != this._doc.song.key) {\n\t\t\tthis._doc.synth.liveInputChannel = this._doc.channel;\n\t\t\tthis._doc.synth.liveBassInputChannel = this._getBassOffsetChannel();\n\t\t\tthis._channelIsDrum = isDrum;\n\t\t\tthis._channelOctave = octave;\n\t\t\tthis._songKey = this._doc.song.key;\n\t\t\tthis.clearAllPitches();\n\t\t\tthis.clearAllBassPitches();\n\t\t}\n\t\tthis._doc.synth.liveInputInstruments = this._doc.recentPatternInstruments[this._doc.channel];\n\t\tthis._doc.synth.liveBassInputInstruments = this._doc.recentPatternInstruments[this._doc.synth.liveBassInputChannel];\n\t}\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nimport { Dictionary, Config } from \"../synth/SynthConfig\";\nimport { Note, Pattern } from \"../synth/synth\";\nimport { SongDocument } from \"./SongDocument\";\nimport { ChangeGroup } from \"./Change\";\nimport { ColorConfig } from \"./ColorConfig\";\nimport { ChangeTrackSelection, ChangeChannelBar, ChangeAddChannel, ChangeRemoveChannel, ChangeChannelOrder, ChangeDuplicateSelectedReusedPatterns, ChangeNoteAdded, ChangeNoteTruncate, ChangePatternNumbers, ChangePatternSelection, ChangeInsertBars, ChangeDeleteBars, ChangeEnsurePatternExists, ChangeNoteLength, ChangePaste, ChangeSetPatternInstruments, ChangeViewInstrument, ChangeModChannel, ChangeModInstrument, ChangeModSetting, ChangeModFilter, ChangePatternsPerChannel, ChangePatternRhythm, ChangePatternScale, ChangeTranspose, ChangeRhythm, comparePatternNotes, unionOfUsedNotes, generateScaleMap, discardInvalidPatternInstruments, patternsContainSameInstruments } from \"./changes\";\n\ninterface PatternCopy {\n    instruments: number[];\n    notes: any[];\n}\n\ninterface ChannelCopy {\n    isNoise: boolean;\n    isMod: boolean;\n    patterns: Dictionary<PatternCopy>;\n    bars: number[];\n}\n\ninterface SelectionCopy {\n    partDuration: number;\n    channels: ChannelCopy[];\n}\n\nexport class Selection {\n    public boxSelectionX0: number = 0;\n    public boxSelectionY0: number = 0;\n    public boxSelectionX1: number = 0;\n    public boxSelectionY1: number = 0;\n    public digits: string = \"\";\n    public instrumentDigits: string = \"\";\n    public patternSelectionStart: number = 0;\n    public patternSelectionEnd: number = 0;\n    public patternSelectionActive: boolean = false;\n\n    private _changeTranspose: ChangeGroup | null = null;\n    private _changeTrack: ChangeGroup | null = null;\n    private _changeInstrument: ChangeGroup | null = null;\n    private _changeReorder: ChangeGroup | null = null;\n\n    constructor(private _doc: SongDocument) { }\n\n    public toJSON(): { x0: number, x1: number, y0: number, y1: number, start: number, end: number } {\n        return {\n            \"x0\": this.boxSelectionX0,\n            \"x1\": this.boxSelectionX1,\n            \"y0\": this.boxSelectionY0,\n            \"y1\": this.boxSelectionY1,\n            \"start\": this.patternSelectionStart,\n            \"end\": this.patternSelectionEnd,\n        };\n    }\n\n    public fromJSON(json: { x0: number, x1: number, y0: number, y1: number, start: number, end: number }): void {\n        if (json == null) return;\n        this.boxSelectionX0 = +json[\"x0\"];\n        this.boxSelectionX1 = +json[\"x1\"];\n        this.boxSelectionY0 = +json[\"y0\"];\n        this.boxSelectionY1 = +json[\"y1\"];\n        this.patternSelectionStart = +json[\"start\"];\n        this.patternSelectionEnd = +json[\"end\"];\n        this.digits = \"\";\n        this.instrumentDigits = \"\";\n        this.patternSelectionActive = this.patternSelectionStart < this.patternSelectionEnd;\n    }\n\n    public selectionUpdated(): void {\n        this._doc.notifier.changed();\n        this.digits = \"\";\n        this.instrumentDigits = \"\";\n    }\n\n    public get boxSelectionBar(): number {\n        return Math.min(this.boxSelectionX0, this.boxSelectionX1);\n    }\n    public get boxSelectionChannel(): number {\n        return Math.min(this.boxSelectionY0, this.boxSelectionY1);\n    }\n    public get boxSelectionWidth(): number {\n        return Math.abs(this.boxSelectionX0 - this.boxSelectionX1) + 1;\n    }\n    public get boxSelectionHeight(): number {\n        return Math.abs(this.boxSelectionY0 - this.boxSelectionY1) + 1;\n    }\n    public get boxSelectionActive(): boolean {\n        return this.boxSelectionWidth > 1 || this.boxSelectionHeight > 1;\n    }\n    public scrollToSelectedPattern(): void {\n        this._doc.barScrollPos = Math.min(this._doc.bar, Math.max(this._doc.bar - (this._doc.trackVisibleBars - 1), this._doc.barScrollPos));\n        this._doc.channelScrollPos = Math.min(this._doc.channel, Math.max(this._doc.channel - (this._doc.trackVisibleChannels - 1), this._doc.channelScrollPos));\n    }\n    public scrollToEndOfSelection(): void {\n        this._doc.barScrollPos = Math.min(this.boxSelectionX1, Math.max(this.boxSelectionX1 - (this._doc.trackVisibleBars - 1), this._doc.barScrollPos));\n        this._doc.channelScrollPos = Math.min(this.boxSelectionY1, Math.max(this.boxSelectionY1 - (this._doc.trackVisibleChannels - 1), this._doc.channelScrollPos));\n    }\n\n    public setChannelBar(channelIndex: number, bar: number): void {\n        if (channelIndex == this._doc.channel && bar == this._doc.bar) return;\n        const canReplaceLastChange: boolean = this._doc.lastChangeWas(this._changeTrack);\n        this._changeTrack = new ChangeGroup();\n        this._changeTrack.append(new ChangeChannelBar(this._doc, channelIndex, bar));\n        // @jummbus - changing current viewed instrument to the first for the current pattern if the viewedInstrument is not in the pattern\n        const pattern: Pattern | null = this._doc.getCurrentPattern(0);\n        if (pattern != null) {\n            if (pattern.instruments.indexOf(this._doc.viewedInstrument[this._doc.channel]) < 0) {\n                this._doc.viewedInstrument[this._doc.channel] = pattern.instruments[0];\n            }\n        }\n        // Don't erase existing redo history just to look at highlighted pattern.\n        if (!this._doc.hasRedoHistory()) {\n            this._doc.record(this._changeTrack, canReplaceLastChange);\n        }\n        this.selectionUpdated();\n\n    }\n\n    public setPattern(pattern: number): void {\n        this._doc.record(new ChangePatternNumbers(this._doc, pattern, this.boxSelectionBar, this.boxSelectionChannel, this.boxSelectionWidth, this.boxSelectionHeight));\n    }\n\n    public nextDigit(digit: string, forInstrument: boolean, forRhythms: boolean): void {\n        if (forRhythms) {\n            if (digit == \"3\") {\n                this._doc.record(new ChangeRhythm(this._doc, 0));\n            }\n            else if (digit == \"4\") {\n                this._doc.record(new ChangeRhythm(this._doc, 1));\n            }\n            else if (digit == \"6\") {\n                this._doc.record(new ChangeRhythm(this._doc, 2));\n            }\n            else if (digit == \"8\") {\n                this._doc.record(new ChangeRhythm(this._doc, 3));\n            }\n            else if (digit == \"0\" || digit == \"1\") {\n                this._doc.record(new ChangeRhythm(this._doc, 4));\n            }\n        } else if (forInstrument) {\n            // Treat \"0\" as meaning instrument 10\n            if (digit == \"0\") digit = \"10\";\n            this.instrumentDigits += digit;\n            var parsed = parseInt(this.instrumentDigits);\n            //var pattern: Pattern | null = this._doc.getCurrentPattern();\n            if (parsed != 0 && parsed <= this._doc.song.channels[this._doc.channel].instruments.length) {\n                this.selectInstrument(parsed - 1);\n                return;\n            }\n            this.instrumentDigits = digit;\n            parsed = parseInt(this.instrumentDigits);\n            if (parsed != 0 && parsed <= this._doc.song.channels[this._doc.channel].instruments.length) {\n                this.selectInstrument(parsed - 1);\n                return;\n            }\n            this.instrumentDigits = \"\";\n        }\n        else {\n            this.digits += digit;\n            let parsed: number = parseInt(this.digits);\n            if (parsed <= this._doc.song.patternsPerChannel) {\n\n                this.setPattern(parsed);\n\n                return;\n            }\n\n            this.digits = digit;\n            parsed = parseInt(this.digits);\n            if (parsed <= this._doc.song.patternsPerChannel) {\n\n                this.setPattern(parsed);\n\n                return;\n            }\n\n            this.digits = \"\";\n        }\n    }\n\n    public setModChannel(mod: number, index: number): void {\n        this._doc.record(new ChangeModChannel(this._doc, mod, index));\n    }\n\n    public setModInstrument(mod: number, instrument: number): void {\n        this._doc.record(new ChangeModInstrument(this._doc, mod, instrument));\n    }\n\n    public setModSetting(mod: number, text: string): void {\n        this._doc.record(new ChangeModSetting(this._doc, mod, text));\n    }\n\n    public setModFilter(mod: number, type: number): void {\n        this._doc.record(new ChangeModFilter(this._doc, mod, type));\n    }\n\n    public insertBars(): void {\n        this._doc.record(new ChangeInsertBars(this._doc, this.boxSelectionBar + this.boxSelectionWidth, this.boxSelectionWidth));\n        const width: number = this.boxSelectionWidth;\n        this.boxSelectionX0 += width;\n        this.boxSelectionX1 += width;\n    }\n\n    public insertChannel(): void {\n        const group: ChangeGroup = new ChangeGroup();\n        const insertIndex: number = this.boxSelectionChannel + this.boxSelectionHeight;\n        const isNoise: boolean = this._doc.song.getChannelIsNoise(insertIndex - 1);\n        const isMod: boolean = this._doc.song.getChannelIsMod(insertIndex - 1)\n        group.append(new ChangeAddChannel(this._doc, insertIndex, isNoise, isMod));\n        if (!group.isNoop()) {\n            this.boxSelectionY0 = this.boxSelectionY1 = insertIndex;\n            group.append(new ChangeChannelBar(this._doc, insertIndex, this._doc.bar));\n            this._doc.record(group);\n        }\n    }\n\n    public deleteBars(): void {\n        const group: ChangeGroup = new ChangeGroup();\n        if (this._doc.selection.patternSelectionActive) {\n\n            if (this.boxSelectionActive) {\n                group.append(new ChangeDuplicateSelectedReusedPatterns(this._doc, this.boxSelectionBar, this.boxSelectionWidth, this.boxSelectionChannel, this.boxSelectionHeight));\n            }\n\n            for (const channelIndex of this._eachSelectedChannel()) {\n                for (const pattern of this._eachSelectedPattern(channelIndex)) {\n                    group.append(new ChangeNoteTruncate(this._doc, pattern, this._doc.selection.patternSelectionStart, this._doc.selection.patternSelectionEnd));\n                }\n            }\n            group.append(new ChangePatternSelection(this._doc, 0, 0));\n        } else {\n            group.append(new ChangeDeleteBars(this._doc, this.boxSelectionBar, this.boxSelectionWidth));\n            const width: number = this.boxSelectionWidth;\n            this.boxSelectionX0 = Math.max(0, this.boxSelectionX0 - width);\n            this.boxSelectionX1 = Math.max(0, this.boxSelectionX1 - width);\n        }\n        this._doc.record(group);\n    }\n\n    public deleteChannel(): void {\n        this._doc.record(new ChangeRemoveChannel(this._doc, this.boxSelectionChannel, this.boxSelectionChannel + this.boxSelectionHeight - 1));\n        this.boxSelectionY0 = this.boxSelectionY1 = this._doc.channel;\n        ColorConfig.resetColors();\n    }\n\n    private * _eachSelectedChannel(): IterableIterator<number> {\n        for (let channelIndex: number = this.boxSelectionChannel; channelIndex < this.boxSelectionChannel + this.boxSelectionHeight; channelIndex++) {\n            yield channelIndex;\n        }\n    }\n\n    private * _eachSelectedBar(): IterableIterator<number> {\n        for (let bar: number = this.boxSelectionBar; bar < this.boxSelectionBar + this.boxSelectionWidth; bar++) {\n            yield bar;\n        }\n    }\n\n    private *_eachSelectedPattern(channelIndex: number): IterableIterator<Pattern> {\n        const handledPatterns: Dictionary<boolean> = {};\n        for (const bar of this._eachSelectedBar()) {\n            const currentPatternIndex: number = this._doc.song.channels[channelIndex].bars[bar];\n            if (currentPatternIndex == 0) continue;\n            if (handledPatterns[String(currentPatternIndex)]) continue;\n            handledPatterns[String(currentPatternIndex)] = true;\n            const pattern: Pattern | null = this._doc.song.getPattern(channelIndex, bar);\n            if (pattern == null) throw new Error();\n            yield pattern;\n        }\n    }\n\n    private _parseCopiedInstrumentArray(patternCopy: any, channelIndex: number): number[] {\n        const instruments: number[] = Array.from(patternCopy[\"instruments\"]).map(i => (<any>i) >>> 0);\n        discardInvalidPatternInstruments(instruments, this._doc.song, channelIndex);\n        return instruments;\n    }\n\n    private _patternIndexIsUnused(channelIndex: number, patternIndex: number): boolean {\n        for (let i: number = 0; i < this._doc.song.barCount; i++) {\n            if (this._doc.song.channels[channelIndex].bars[i] == patternIndex) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    public copy(): void {\n        const channels: ChannelCopy[] = [];\n\n        for (const channelIndex of this._eachSelectedChannel()) {\n            const patterns: Dictionary<PatternCopy> = {};\n            const bars: number[] = [];\n\n            for (const bar of this._eachSelectedBar()) {\n                const patternNumber: number = this._doc.song.channels[channelIndex].bars[bar];\n                bars.push(patternNumber);\n                if (patterns[String(patternNumber)] == undefined) {\n                    const pattern: Pattern | null = this._doc.song.getPattern(channelIndex, bar);\n                    let instruments: number[] = this._doc.recentPatternInstruments[channelIndex];\n                    let notes: Note[] = [];\n                    if (pattern != null) {\n                        instruments = pattern.instruments.concat();\n\n                        if (this.patternSelectionActive) {\n                            for (const note of pattern.cloneNotes()) {\n                                if (note.end <= this.patternSelectionStart) continue;\n                                if (note.start >= this.patternSelectionEnd) continue;\n                                note.start -= this.patternSelectionStart;\n                                note.end -= this.patternSelectionStart;\n                                if (note.start < 0 || note.end > this.patternSelectionEnd - this.patternSelectionStart) {\n                                    new ChangeNoteLength(null, note, Math.max(note.start, 0), Math.min(this.patternSelectionEnd - this.patternSelectionStart, note.end));\n                                }\n                                notes.push(note);\n                            }\n                        } else {\n                            notes = pattern.notes;\n                        }\n                    }\n                    patterns[String(patternNumber)] = { \"instruments\": instruments, \"notes\": notes };\n                }\n            }\n\n            const channelCopy: ChannelCopy = {\n                \"isNoise\": this._doc.song.getChannelIsNoise(channelIndex),\n                \"isMod\": this._doc.song.getChannelIsMod(channelIndex),\n                \"patterns\": patterns,\n                \"bars\": bars,\n            };\n            channels.push(channelCopy);\n        }\n\n        const selectionCopy: SelectionCopy = {\n            \"partDuration\": this.patternSelectionActive ? this.patternSelectionEnd - this.patternSelectionStart : this._doc.song.beatsPerBar * Config.partsPerBeat,\n            \"channels\": channels,\n        };\n        window.localStorage.setItem(\"selectionCopy\", JSON.stringify(selectionCopy));\n        // Clear selection after copy\n        new ChangePatternSelection(this._doc, 0, 0);\n    }\n\n    // I'm sorry this function is so complicated!\n    // Basically I'm trying to avoid accidentally modifying patterns that are used\n    // elsewhere in the song (unless we're just pasting a single pattern) but I'm\n    // also trying to reuse patterns where it makes sense to do so, especially \n    // in the same channel it was copied from.\n    public pasteNotes(): void {\n        const selectionCopy: SelectionCopy | null = JSON.parse(String(window.localStorage.getItem(\"selectionCopy\")));\n        if (selectionCopy == null) return;\n        const channelCopies: ChannelCopy[] = selectionCopy[\"channels\"] || [];\n        const copiedPartDuration: number = selectionCopy[\"partDuration\"] >>> 0;\n\n        const group: ChangeGroup = new ChangeGroup();\n        const fillSelection: boolean = (this.boxSelectionWidth > 1 || this.boxSelectionHeight > 1);\n\n        const pasteHeight: number = fillSelection ? this.boxSelectionHeight : Math.min(channelCopies.length, this._doc.song.getChannelCount() - this.boxSelectionChannel);\n        for (let pasteChannel: number = 0; pasteChannel < pasteHeight; pasteChannel++) {\n            const channelCopy: ChannelCopy = channelCopies[pasteChannel % channelCopies.length];\n            const channelIndex: number = this.boxSelectionChannel + pasteChannel;\n\n            const isNoise: boolean = !!channelCopy[\"isNoise\"];\n            const isMod: boolean = !!channelCopy[\"isMod\"];\n            const patternCopies: Dictionary<PatternCopy> = channelCopy[\"patterns\"] || {};\n            const copiedBars: number[] = channelCopy[\"bars\"] || [];\n            if (copiedBars.length == 0) continue;\n            if (isNoise != this._doc.song.getChannelIsNoise(channelIndex)) continue;\n            if (isMod != this._doc.song.getChannelIsMod(channelIndex)) continue;\n\n            const pasteWidth: number = fillSelection ? this.boxSelectionWidth : Math.min(copiedBars.length, this._doc.song.barCount - this.boxSelectionBar);\n            if (!fillSelection && copiedBars.length == 1 && channelCopies.length == 1) {\n                // Special case: if there's just one pattern being copied, try to insert it\n                // into whatever pattern is already selected.\n                const copiedPatternIndex: number = copiedBars[0] >>> 0;\n                const bar: number = this.boxSelectionBar;\n                const currentPatternIndex: number = this._doc.song.channels[channelIndex].bars[bar];\n                if (copiedPatternIndex == 0 && currentPatternIndex == 0) continue;\n\n                const patternCopy: PatternCopy = patternCopies[String(copiedPatternIndex)];\n\n                const instrumentsCopy: number[] = this._parseCopiedInstrumentArray(patternCopy, channelIndex);\n\n                if (currentPatternIndex == 0) {\n                    const existingPattern: Pattern | undefined = this._doc.song.channels[channelIndex].patterns[copiedPatternIndex - 1];\n                    if (existingPattern != undefined &&\n                        !this.patternSelectionActive &&\n                        ((comparePatternNotes(patternCopy[\"notes\"], existingPattern.notes) && patternsContainSameInstruments(instrumentsCopy, existingPattern.instruments)) ||\n                            this._patternIndexIsUnused(channelIndex, copiedPatternIndex))) {\n                        group.append(new ChangePatternNumbers(this._doc, copiedPatternIndex, bar, channelIndex, 1, 1));\n                    } else {\n                        group.append(new ChangeEnsurePatternExists(this._doc, channelIndex, bar));\n                    }\n                }\n\n                const pattern: Pattern | null = this._doc.song.getPattern(channelIndex, bar);\n                if (pattern == null) throw new Error();\n                group.append(new ChangePaste(this._doc, pattern, patternCopy[\"notes\"], this.patternSelectionActive ? this.patternSelectionStart : 0, this.patternSelectionActive ? this.patternSelectionEnd : Config.partsPerBeat * this._doc.song.beatsPerBar, copiedPartDuration));\n                // @jummbus - I actually like it better if instruments copy over, unless it's not a mod and there are notes in the pattern.\n                if (currentPatternIndex == 0 || patternCopy.notes.length == 0 || channelIndex >= this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\n                    this.selectInstrument(instrumentsCopy[0]);\n                    group.append(new ChangeSetPatternInstruments(this._doc, channelIndex, instrumentsCopy, pattern));\n                }\n            } else if (this.patternSelectionActive) {\n                const reusablePatterns: Dictionary<number> = {};\n                const usedPatterns: Dictionary<boolean> = {};\n\n                group.append(new ChangeDuplicateSelectedReusedPatterns(this._doc, this.boxSelectionBar, pasteWidth, this.boxSelectionChannel, pasteHeight));\n\n                for (let pasteBar: number = 0; pasteBar < pasteWidth; pasteBar++) {\n                    const bar: number = this.boxSelectionBar + pasteBar;\n                    const copiedPatternIndex: number = copiedBars[pasteBar % copiedBars.length] >>> 0;\n                    const currentPatternIndex: number = this._doc.song.channels[channelIndex].bars[bar];\n                    const reusedIndex: string = [copiedPatternIndex, currentPatternIndex].join(\",\");\n                    if (copiedPatternIndex == 0 && currentPatternIndex == 0) continue;\n                    if (reusablePatterns[reusedIndex] != undefined) {\n                        group.append(new ChangePatternNumbers(this._doc, reusablePatterns[reusedIndex], bar, channelIndex, 1, 1));\n                        continue;\n                    }\n\n                    if (currentPatternIndex == 0) {\n                        group.append(new ChangeEnsurePatternExists(this._doc, channelIndex, bar));\n                        const patternCopy: PatternCopy = patternCopies[String(copiedPatternIndex)];\n                        const instrumentsCopy: number[] = this._parseCopiedInstrumentArray(patternCopy, channelIndex);\n                        const pattern: Pattern = this._doc.song.getPattern(channelIndex, bar)!;\n                        group.append(new ChangeSetPatternInstruments(this._doc, channelIndex, instrumentsCopy, pattern));\n                    } else {\n                        const pattern: Pattern | null = this._doc.song.getPattern(channelIndex, bar);\n                        if (pattern == null) throw new Error();\n\n                        if (!usedPatterns[String(currentPatternIndex)]) {\n                            usedPatterns[String(currentPatternIndex)] = true;\n                        } else {\n                            // If this pattern is used here and elsewhere, it's not safe to modify it directly, so\n                            // make a duplicate of it and modify that instead.\n                            group.append(new ChangePatternNumbers(this._doc, 0, bar, channelIndex, 1, 1));\n                            group.append(new ChangeEnsurePatternExists(this._doc, channelIndex, bar));\n                            const newPattern: Pattern | null = this._doc.song.getPattern(channelIndex, bar);\n                            if (newPattern == null) throw new Error();\n                            for (const note of pattern.cloneNotes()) {\n                                group.append(new ChangeNoteAdded(this._doc, newPattern, note, newPattern.notes.length, false));\n                            }\n                            // Don't overwrite the existing pattern's instruments if only part of the pattern content is being replaced.\n                            //group.append(new ChangeSetPatternInstruments(this._doc, channelIndex, pattern.instruments, newPattern));\n                        }\n                    }\n\n                    const pattern: Pattern | null = this._doc.song.getPattern(channelIndex, bar);\n                    if (pattern == null) throw new Error();\n                    if (copiedPatternIndex == 0) {\n                        group.append(new ChangeNoteTruncate(this._doc, pattern, this.patternSelectionStart, this.patternSelectionEnd));\n                    } else {\n                        const patternCopy: PatternCopy = patternCopies[String(copiedPatternIndex)];\n                        group.append(new ChangePaste(this._doc, pattern, patternCopy[\"notes\"], this.patternSelectionStart, this.patternSelectionEnd, copiedPartDuration));\n                    }\n\n                    reusablePatterns[reusedIndex] = this._doc.song.channels[channelIndex].bars[bar];\n                }\n            } else {\n                for (let pasteBar: number = 0; pasteBar < pasteWidth; pasteBar++) {\n                    // When a pattern becomes unused when replaced by rectangular selection pasting,\n                    // remove all the notes from the pattern so that it may be reused.\n                    this.erasePatternInBar(group, channelIndex, this.boxSelectionBar + pasteBar);\n                }\n\n                const reusablePatterns: Dictionary<number> = {};\n                for (let pasteBar: number = 0; pasteBar < pasteWidth; pasteBar++) {\n                    const bar: number = this.boxSelectionBar + pasteBar;\n                    const copiedPatternIndex: number = copiedBars[pasteBar % copiedBars.length] >>> 0;\n                    const reusedIndex: string = String(copiedPatternIndex);\n                    if (copiedPatternIndex == 0) continue;\n                    if (reusablePatterns[reusedIndex] != undefined) {\n                        group.append(new ChangePatternNumbers(this._doc, reusablePatterns[reusedIndex], bar, channelIndex, 1, 1));\n                        continue;\n                    }\n                    const patternCopy: PatternCopy = patternCopies[String(copiedPatternIndex)];\n                    const instrumentsCopy: number[] = this._parseCopiedInstrumentArray(patternCopy, channelIndex);\n                    const existingPattern: Pattern | undefined = this._doc.song.channels[channelIndex].patterns[copiedPatternIndex - 1];\n\n                    if (existingPattern != undefined &&\n                        copiedPartDuration == Config.partsPerBeat * this._doc.song.beatsPerBar &&\n                        comparePatternNotes(patternCopy[\"notes\"], existingPattern.notes) &&\n                        patternsContainSameInstruments(instrumentsCopy, existingPattern.instruments)) {\n                        group.append(new ChangePatternNumbers(this._doc, copiedPatternIndex, bar, channelIndex, 1, 1));\n                    } else {\n                        if (existingPattern != undefined && this._patternIndexIsUnused(channelIndex, copiedPatternIndex)) {\n                            group.append(new ChangePatternNumbers(this._doc, copiedPatternIndex, bar, channelIndex, 1, 1));\n                        } else {\n                            group.append(new ChangeEnsurePatternExists(this._doc, channelIndex, bar));\n                        }\n                        const pattern: Pattern | null = this._doc.song.getPattern(channelIndex, bar);\n                        if (pattern == null) throw new Error();\n                        group.append(new ChangePaste(this._doc, pattern, patternCopy[\"notes\"], this.patternSelectionActive ? this.patternSelectionStart : 0, this.patternSelectionActive ? this.patternSelectionEnd : Config.partsPerBeat * this._doc.song.beatsPerBar, copiedPartDuration));\n                        group.append(new ChangeSetPatternInstruments(this._doc, channelIndex, instrumentsCopy, pattern));\n                    }\n\n                    reusablePatterns[reusedIndex] = this._doc.song.channels[channelIndex].bars[bar];\n\n                }\n            }\n        }\n\n        this._doc.record(group);\n    }\n\n    // Set a bar's pattern number to zero, and if that pattern was not used\n    // elsewhere in the channel, erase all notes in it as well.\n    public erasePatternInBar(group: ChangeGroup, channelIndex: number, bar: number): void {\n        const removedPattern: number = this._doc.song.channels[channelIndex].bars[bar];\n        if (removedPattern != 0) {\n            group.append(new ChangePatternNumbers(this._doc, 0, bar, channelIndex, 1, 1));\n            if (this._patternIndexIsUnused(channelIndex, removedPattern)) {\n                // When a pattern becomes unused when replaced by rectangular selection pasting,\n                // remove all the notes from the pattern so that it may be reused.\n                this._doc.song.channels[channelIndex].patterns[removedPattern - 1].notes.length = 0;\n            }\n        }\n    }\n\n    public pasteNumbers(): void {\n        const selectionCopy: SelectionCopy | null = JSON.parse(String(window.localStorage.getItem(\"selectionCopy\")));\n        if (selectionCopy == null) return;\n        const channelCopies: ChannelCopy[] = selectionCopy[\"channels\"] || [];\n\n        const group: ChangeGroup = new ChangeGroup();\n        const fillSelection: boolean = this.boxSelectionActive;\n\n        const pasteHeight: number = fillSelection ? this.boxSelectionHeight : Math.min(channelCopies.length, this._doc.song.getChannelCount() - this.boxSelectionChannel);\n        for (let pasteChannel: number = 0; pasteChannel < pasteHeight; pasteChannel++) {\n            const channelCopy: ChannelCopy = channelCopies[pasteChannel % channelCopies.length];\n            const channelIndex: number = this.boxSelectionChannel + pasteChannel;\n\n            const copiedBars: number[] = channelCopy[\"bars\"] || [];\n            if (copiedBars.length == 0) continue;\n\n            const pasteWidth: number = fillSelection ? this.boxSelectionWidth : Math.min(copiedBars.length, this._doc.song.barCount - this.boxSelectionBar);\n            for (let pasteBar: number = 0; pasteBar < pasteWidth; pasteBar++) {\n                const copiedPatternIndex: number = copiedBars[pasteBar % copiedBars.length] >>> 0;\n                const bar: number = this.boxSelectionBar + pasteBar;\n\n                if (copiedPatternIndex > this._doc.song.patternsPerChannel) {\n                    group.append(new ChangePatternsPerChannel(this._doc, copiedPatternIndex));\n                }\n\n                group.append(new ChangePatternNumbers(this._doc, copiedPatternIndex, bar, channelIndex, 1, 1));\n            }\n        }\n\n        this._doc.record(group);\n    }\n\n    public selectAll(): void {\n        new ChangePatternSelection(this._doc, 0, 0);\n        if (this.boxSelectionBar == 0 &&\n            this.boxSelectionChannel == 0 &&\n            this.boxSelectionWidth == this._doc.song.barCount &&\n            this.boxSelectionHeight == this._doc.song.getChannelCount()) {\n            this.setTrackSelection(this._doc.bar, this._doc.bar, this._doc.channel, this._doc.channel);\n        } else {\n            this.setTrackSelection(0, this._doc.song.barCount - 1, 0, this._doc.song.getChannelCount() - 1);\n        }\n        this.selectionUpdated();\n    }\n\n    public selectChannel(): void {\n        new ChangePatternSelection(this._doc, 0, 0);\n        if (this.boxSelectionBar == 0 && this.boxSelectionWidth == this._doc.song.barCount) {\n            this.setTrackSelection(this._doc.bar, this._doc.bar, this.boxSelectionY0, this.boxSelectionY1);\n        } else {\n            this.setTrackSelection(0, this._doc.song.barCount - 1, this.boxSelectionY0, this.boxSelectionY1);\n        }\n        this.selectionUpdated();\n    }\n\n    public duplicatePatterns(): void {\n        this._doc.record(new ChangeDuplicateSelectedReusedPatterns(this._doc, this.boxSelectionBar, this.boxSelectionWidth, this.boxSelectionChannel, this.boxSelectionHeight));\n    }\n\n    public muteChannels(allChannels: boolean): void {\n        if (allChannels) {\n            let anyMuted: boolean = false;\n            for (let channelIndex: number = 0; channelIndex < this._doc.song.channels.length; channelIndex++) {\n                if (this._doc.song.channels[channelIndex].muted) {\n                    anyMuted = true;\n                    break;\n                }\n            }\n            for (let channelIndex: number = 0; channelIndex < this._doc.song.channels.length; channelIndex++) {\n                this._doc.song.channels[channelIndex].muted = !anyMuted;\n            }\n        } else {\n            let anyUnmuted: boolean = false;\n            for (const channelIndex of this._eachSelectedChannel()) {\n                if (!this._doc.song.channels[channelIndex].muted) {\n                    anyUnmuted = true;\n                    break;\n                }\n            }\n            for (const channelIndex of this._eachSelectedChannel()) {\n                this._doc.song.channels[channelIndex].muted = anyUnmuted;\n            }\n        }\n\n        this._doc.notifier.changed();\n    }\n\n    public soloChannels(invert: boolean): void {\n        let alreadySoloed: boolean = true;\n\n        // Soloing mod channels - solo all channels affected by the mod, instead\n        if (this.boxSelectionChannel >= this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\n\n            const currentChannel = this._doc.song.channels[this.boxSelectionChannel];\n            const bar: number = currentChannel.bars[this._doc.bar] - 1;\n            const modInstrument = (bar >= 0) ? currentChannel.instruments[currentChannel.patterns[bar].instruments[0]] : currentChannel.instruments[this._doc.viewedInstrument[this.boxSelectionChannel]];\n            const soloPattern: boolean[] = [];\n            let matchesSoloPattern: boolean = !invert;\n\n            // First pass: determine solo pattern\n            for (let channelIndex: number = 0; channelIndex < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; channelIndex++) {\n                soloPattern[channelIndex] = false;\n                for (let mod: number = 0; mod < Config.modCount; mod++) {\n                    if (modInstrument.modChannels[mod] == channelIndex) {\n                        soloPattern[channelIndex] = true;\n                    }\n                }\n            }\n\n            // Second pass: determine if channels match solo pattern, overall\n            for (let channelIndex: number = 0; channelIndex < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; channelIndex++) {\n                if (this._doc.song.channels[channelIndex].muted == soloPattern[channelIndex]) {\n                    matchesSoloPattern = invert;\n                    break;\n                }\n            }\n\n            // Third pass: Actually apply solo pattern or unmute all\n            for (let channelIndex: number = 0; channelIndex < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; channelIndex++) {\n                if (matchesSoloPattern) {\n                    this._doc.song.channels[channelIndex].muted = false;\n                }\n                else {\n                    this._doc.song.channels[channelIndex].muted = !soloPattern[channelIndex];\n                }\n            }\n\n        }\n        else {\n\n            for (let channelIndex: number = 0; channelIndex < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; channelIndex++) {\n                const shouldBeMuted: boolean = (channelIndex < this.boxSelectionChannel || channelIndex >= this.boxSelectionChannel + this.boxSelectionHeight) ? !invert : invert;\n                if (this._doc.song.channels[channelIndex].muted != shouldBeMuted) {\n                    alreadySoloed = false;\n                    break;\n                }\n            }\n\n            if (alreadySoloed) {\n                for (let channelIndex: number = 0; channelIndex < this._doc.song.channels.length; channelIndex++) {\n                    this._doc.song.channels[channelIndex].muted = false;\n                }\n            } else {\n                for (let channelIndex: number = 0; channelIndex < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; channelIndex++) {\n                    this._doc.song.channels[channelIndex].muted = (channelIndex < this.boxSelectionChannel || channelIndex >= this.boxSelectionChannel + this.boxSelectionHeight) ? !invert : invert;\n                }\n            }\n\n        }\n\n        this._doc.notifier.changed();\n    }\n\n    public forceRhythm(): void {\n        const group: ChangeGroup = new ChangeGroup();\n\n        if (this.boxSelectionActive) {\n\t\t    group.append(new ChangeDuplicateSelectedReusedPatterns(this._doc, this.boxSelectionBar, this.boxSelectionWidth, this.boxSelectionChannel, this.boxSelectionHeight));\n        }\n\n        for (const channelIndex of this._eachSelectedChannel()) {\n            for (const pattern of this._eachSelectedPattern(channelIndex)) {\n                group.append(new ChangePatternRhythm(this._doc, pattern));\n            }\n        }\n\n        this._doc.record(group);\n    }\n\n    public forceScale(): void {\n        const group: ChangeGroup = new ChangeGroup();\n\n        if (this.boxSelectionActive) {\n\t\t    group.append(new ChangeDuplicateSelectedReusedPatterns(this._doc, this.boxSelectionBar, this.boxSelectionWidth, this.boxSelectionChannel, this.boxSelectionHeight));\n        }\n\n        const scaleFlags: boolean[] = [true, false, false, false, false, false, false, false, false, false, false, false];\n        for (const channelIndex of this._eachSelectedChannel()) {\n            if (this._doc.song.getChannelIsNoise(channelIndex) || this._doc.song.getChannelIsMod(channelIndex)) continue;\n            for (const pattern of this._eachSelectedPattern(channelIndex)) {\n                unionOfUsedNotes(pattern, scaleFlags);\n            }\n        }\n\n        const scaleMap: number[] = generateScaleMap(scaleFlags, this._doc.song.scale);\n\n        for (const channelIndex of this._eachSelectedChannel()) {\n            if (this._doc.song.getChannelIsNoise(channelIndex) || this._doc.song.getChannelIsMod(channelIndex)) continue;\n            for (const pattern of this._eachSelectedPattern(channelIndex)) {\n                group.append(new ChangePatternScale(this._doc, pattern, scaleMap));\n            }\n        }\n\n        this._doc.record(group);\n    }\n\n    public setTrackSelection(newX0: number, newX1: number, newY0: number, newY1: number): void {\n        const canReplaceLastChange: boolean = true;//this._doc.lastChangeWas(this._changeTrack);\n        this._changeTrack = new ChangeGroup();\n        this._changeTrack.append(new ChangeTrackSelection(this._doc, newX0, newX1, newY0, newY1));\n        this._doc.record(this._changeTrack, canReplaceLastChange);\n    }\n\n    public transpose(upward: boolean, octave: boolean): void {\n        const canReplaceLastChange: boolean = this._doc.lastChangeWas(this._changeTranspose);\n        this._changeTranspose = new ChangeGroup();\n\n        if (this.boxSelectionActive) {\n\t\t    this._changeTranspose.append(new ChangeDuplicateSelectedReusedPatterns(this._doc, this.boxSelectionBar, this.boxSelectionWidth, this.boxSelectionChannel, this.boxSelectionHeight));\n        }\n\n        for (const channelIndex of this._eachSelectedChannel()) {\n            // Can't transpose mod channels.\n            if (channelIndex >= this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount)\n                continue;\n            for (const pattern of this._eachSelectedPattern(channelIndex)) {\n                this._changeTranspose.append(new ChangeTranspose(this._doc, channelIndex, pattern, upward, this._doc.prefs.notesOutsideScale, octave));\n\t\t\t}\n        }\n\n        this._doc.record(this._changeTranspose, canReplaceLastChange);\n    }\n\n    public swapChannels(offset: number): void {\n        const possibleSectionBoundaries: number[] = [\n            this._doc.song.pitchChannelCount,\n            this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount,\n            this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount + this._doc.song.modChannelCount,\n            this._doc.song.getChannelCount(),\n        ];\n        let channelSectionMin: number = 0;\n        let channelSectionMax: number = 0;\n        for (const nextBoundary of possibleSectionBoundaries) {\n            if ((this.boxSelectionChannel < nextBoundary && offset < 0) || (this.boxSelectionChannel + this.boxSelectionHeight <= nextBoundary)) {\n                channelSectionMax = nextBoundary - 1;\n                break;\n            }\n            channelSectionMin = nextBoundary;\n        }\n        const newSelectionMin: number = Math.max(this.boxSelectionChannel, channelSectionMin);\n        const newSelectionMax: number = Math.min(this.boxSelectionChannel + this.boxSelectionHeight - 1, channelSectionMax);\n        offset = Math.max(offset, channelSectionMin - newSelectionMin);\n        offset = Math.min(offset, channelSectionMax - newSelectionMax);\n\n        if (offset != 0) {\n            const canReplaceLastChange: boolean = this._doc.lastChangeWas(this._changeReorder);\n            this._changeReorder = new ChangeGroup();\n            this.boxSelectionY0 = newSelectionMin + offset;\n            this.boxSelectionY1 = newSelectionMax + offset;\n            this._changeReorder.append(new ChangeChannelOrder(this._doc, newSelectionMin, newSelectionMax, offset));\n            this._changeReorder.append(new ChangeChannelBar(this._doc, Math.max(this.boxSelectionY0, Math.min(this.boxSelectionY1, this._doc.channel + offset)), this._doc.bar));\n            this.selectionUpdated();\n            this._doc.record(this._changeReorder, canReplaceLastChange);\n        }\n    }\n\n    public selectInstrument(instrument: number): void {\n        if (this._doc.viewedInstrument[this._doc.channel] == instrument) {\n            // Multi-selection is not possible for mods... that would not make much sense.\n            if (this._doc.song.layeredInstruments && this._doc.song.patternInstruments && this._doc.channel < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\n                const canReplaceLastChange: boolean = this._doc.lastChangeWas(this._changeInstrument);\n                this._changeInstrument = new ChangeGroup();\n                const instruments: number[] = this._doc.recentPatternInstruments[this._doc.channel];\n                this._doc.notifier.changed(); // doc.recentPatternInstruments changes even if a 0 pattern is selected.\n                if (instruments.indexOf(instrument) == -1) {\n                    instruments.push(instrument);\n                    const maxLayers: number = this._doc.song.getMaxInstrumentsPerPattern(this._doc.channel);\n                    if (instruments.length > maxLayers) {\n                        instruments.splice(0, instruments.length - maxLayers);\n                    }\n                } else {\n                    instruments.splice(instruments.indexOf(instrument), 1);\n                    if (instruments.length == 0) instruments[0] = 0;\n                }\n\n                if (this.boxSelectionActive) {\n                    this._changeInstrument.append(new ChangeDuplicateSelectedReusedPatterns(this._doc, this.boxSelectionBar, this.boxSelectionWidth, this.boxSelectionChannel, this.boxSelectionHeight));\n                }\n                for (const channelIndex of this._eachSelectedChannel()) {\n                    for (const pattern of this._eachSelectedPattern(channelIndex)) {\n                        this._changeInstrument.append(new ChangeSetPatternInstruments(this._doc, channelIndex, instruments, pattern));\n                    }\n                }\n                if (!this._changeInstrument.isNoop())\n                    this._doc.record(this._changeInstrument, canReplaceLastChange);\n            }\n        } else {\n            const canReplaceLastChange: boolean = this._doc.lastChangeWas(this._changeInstrument);\n            this._changeInstrument = new ChangeGroup();\n            this._changeInstrument.append(new ChangeViewInstrument(this._doc, instrument));\n\n            if (!(this._doc.song.layeredInstruments && this._doc.channel < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) && this._doc.song.patternInstruments) {\n                if (this.boxSelectionActive) {\n                    this._changeInstrument.append(new ChangeDuplicateSelectedReusedPatterns(this._doc, this.boxSelectionBar, this.boxSelectionWidth, this.boxSelectionChannel, this.boxSelectionHeight));\n                }\n                const instruments: number[] = [instrument];\n                for (const channelIndex of this._eachSelectedChannel()) {\n                    for (const pattern of this._eachSelectedPattern(channelIndex)) {\n                        this._changeInstrument.append(new ChangeSetPatternInstruments(this._doc, channelIndex, instruments, pattern));\n                    }\n                }\n                this._doc.record(this._changeInstrument, canReplaceLastChange);\n            } else if (!this._doc.hasRedoHistory()) {\n                // Don't erase existing redo history just to look at highlighted pattern.\n                this._doc.record(this._changeInstrument, canReplaceLastChange);\n            }\n        }\n    }\n\n    public resetBoxSelection(): void {\n        this.boxSelectionX0 = this.boxSelectionX1 = this._doc.bar;\n        this.boxSelectionY0 = this.boxSelectionY1 = this._doc.channel;\n    }\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nimport {Scale, Config} from \"../synth/SynthConfig\";\n\nexport class Preferences {\n\tpublic static readonly defaultVisibleOctaves: number = 3;\n\t\n\tpublic autoPlay: boolean;\n\tpublic autoFollow: boolean;\n\tpublic enableNotePreview: boolean;\n\tpublic showFifth: boolean;\n\tpublic notesOutsideScale: boolean;\n\tpublic defaultScale: number;\n\tpublic showLetters: boolean;\n\tpublic showChannels: boolean;\n\tpublic showScrollBar: boolean;\n\tpublic alwaysFineNoteVol: boolean;\n\tpublic displayVolumeBar: boolean;\n\tpublic instrumentCopyPaste: boolean;\n\tpublic enableChannelMuting: boolean;\n\tpublic colorTheme: string;\n\tpublic layout: string;\n\tpublic displayBrowserUrl: boolean;\n\tpublic volume: number = 75;\n\tpublic visibleOctaves: number = Preferences.defaultVisibleOctaves;\n\tpublic pressControlForShortcuts: boolean;\n\tpublic keyboardLayout: string;\n\tpublic bassOffset: number;\n\tpublic enableMidi: boolean;\n\tpublic showRecordButton: boolean;\n\tpublic snapRecordedNotesToRhythm: boolean;\n\tpublic ignorePerformedNotesNotInScale: boolean;\n\tpublic metronomeCountIn: boolean;\n\tpublic metronomeWhileRecording: boolean;\n\t\n\tconstructor() {\n\t\tthis.reload();\n\t}\n\t\n\tpublic reload(): void {\n\t\tthis.autoPlay = window.localStorage.getItem(\"autoPlay\") == \"true\";\n\t\tthis.autoFollow = window.localStorage.getItem(\"autoFollow\") != \"false\";\n\t\tthis.enableNotePreview = window.localStorage.getItem(\"enableNotePreview\") != \"false\";\n\t\tthis.showFifth = window.localStorage.getItem(\"showFifth\") == \"true\";\n\t\tthis.notesOutsideScale = window.localStorage.getItem(\"notesOutsideScale\") == \"true\";\n\t\tthis.showLetters = window.localStorage.getItem(\"showLetters\") == \"true\";\n\t\tthis.showChannels = window.localStorage.getItem(\"showChannels\") == \"true\";\n\t\tthis.showScrollBar = window.localStorage.getItem(\"showScrollBar\") == \"true\";\n\t\tthis.alwaysFineNoteVol = window.localStorage.getItem(\"alwaysFineNoteVol\") == \"true\";\n\t\tthis.displayVolumeBar = window.localStorage.getItem(\"displayVolumeBar\") == \"true\";\n\t\tthis.instrumentCopyPaste = window.localStorage.getItem(\"instrumentCopyPaste\") == \"true\";\n\t\tthis.enableChannelMuting = window.localStorage.getItem(\"enableChannelMuting\") == \"true\";\n\t\tthis.displayBrowserUrl = window.localStorage.getItem(\"displayBrowserUrl\") != \"false\";\n\t\tthis.pressControlForShortcuts = window.localStorage.getItem(\"pressControlForShortcuts\") == \"true\";\n\t\tthis.enableMidi = window.localStorage.getItem(\"enableMidi\") != \"false\";\n\t\tthis.showRecordButton = window.localStorage.getItem(\"showRecordButton\") == \"true\";\n\t\tthis.snapRecordedNotesToRhythm = window.localStorage.getItem(\"snapRecordedNotesToRhythm\") == \"true\";\n\t\tthis.ignorePerformedNotesNotInScale = window.localStorage.getItem(\"ignorePerformedNotesNotInScale\") == \"true\";\n\t\tthis.metronomeCountIn = window.localStorage.getItem(\"metronomeCountIn\") != \"false\";\n\t\tthis.metronomeWhileRecording = window.localStorage.getItem(\"metronomeWhileRecording\") != \"false\";\n\t\tthis.keyboardLayout = window.localStorage.getItem(\"keyboardLayout\") || \"wickiHayden\";\n\t\tthis.bassOffset = (+(<any>window.localStorage.getItem(\"bassOffset\"))) || 0;\n\t\tthis.layout = window.localStorage.getItem(\"layout\") || \"small\";\n\t\tthis.colorTheme = window.localStorage.getItem(\"colorTheme\") || \"jummbox classic\";\n\t\tthis.visibleOctaves = ((<any>window.localStorage.getItem(\"visibleOctaves\")) >>> 0) || Preferences.defaultVisibleOctaves;\n\t\t\n\t\tconst defaultScale: Scale | undefined = Config.scales.dictionary[window.localStorage.getItem(\"defaultScale\")!];\n\t\tthis.defaultScale = (defaultScale != undefined) ? defaultScale.index : 0;\n\t\t\n\t\tif (window.localStorage.getItem(\"volume\") != null) {\n\t\t\tthis.volume = Math.min(<any>window.localStorage.getItem(\"volume\") >>> 0, 75);\n\t\t}\n\t\t\n\t\tif (window.localStorage.getItem(\"fullScreen\") != null) {\n\t\t\tif (window.localStorage.getItem(\"fullScreen\") == \"true\") this.layout = \"long\";\n\t\t\twindow.localStorage.removeItem(\"fullScreen\");\n\t\t}\n\t}\n\t\n\tpublic save(): void {\n\t\twindow.localStorage.setItem(\"autoPlay\", this.autoPlay ? \"true\" : \"false\");\n\t\twindow.localStorage.setItem(\"autoFollow\", this.autoFollow ? \"true\" : \"false\");\n\t\twindow.localStorage.setItem(\"enableNotePreview\", this.enableNotePreview ? \"true\" : \"false\");\n\t\twindow.localStorage.setItem(\"showFifth\", this.showFifth ? \"true\" : \"false\");\n\t\twindow.localStorage.setItem(\"notesOutsideScale\", this.notesOutsideScale ? \"true\" : \"false\");\n\t\twindow.localStorage.setItem(\"defaultScale\", Config.scales[this.defaultScale].name);\n\t\twindow.localStorage.setItem(\"showLetters\", this.showLetters ? \"true\" : \"false\");\n\t\twindow.localStorage.setItem(\"showChannels\", this.showChannels ? \"true\" : \"false\");\n\t\twindow.localStorage.setItem(\"showScrollBar\", this.showScrollBar ? \"true\" : \"false\");\n\t\twindow.localStorage.setItem(\"alwaysFineNoteVol\", this.alwaysFineNoteVol ? \"true\" : \"false\");\n\t\twindow.localStorage.setItem(\"displayVolumeBar\", this.displayVolumeBar ? \"true\" : \"false\");\n\t\twindow.localStorage.setItem(\"enableChannelMuting\", this.enableChannelMuting ? \"true\" : \"false\");\n\t\twindow.localStorage.setItem(\"instrumentCopyPaste\", this.instrumentCopyPaste ? \"true\" : \"false\");\n\t\twindow.localStorage.setItem(\"displayBrowserUrl\", this.displayBrowserUrl ? \"true\" : \"false\");\n\t\twindow.localStorage.setItem(\"pressControlForShortcuts\", this.pressControlForShortcuts ? \"true\" : \"false\");\n\t\twindow.localStorage.setItem(\"enableMidi\", this.enableMidi ? \"true\" : \"false\");\n\t\twindow.localStorage.setItem(\"showRecordButton\", this.showRecordButton ? \"true\" : \"false\");\n\t\twindow.localStorage.setItem(\"snapRecordedNotesToRhythm\", this.snapRecordedNotesToRhythm ? \"true\" : \"false\");\n\t\twindow.localStorage.setItem(\"ignorePerformedNotesNotInScale\", this.ignorePerformedNotesNotInScale ? \"true\" : \"false\");\n\t\twindow.localStorage.setItem(\"metronomeCountIn\", this.metronomeCountIn ? \"true\" : \"false\");\n\t\twindow.localStorage.setItem(\"metronomeWhileRecording\", this.metronomeWhileRecording ? \"true\" : \"false\");\n\t\twindow.localStorage.setItem(\"keyboardLayout\", this.keyboardLayout);\n\t\twindow.localStorage.setItem(\"bassOffset\", String(this.bassOffset));\n\t\twindow.localStorage.setItem(\"layout\", this.layout);\n\t\twindow.localStorage.setItem(\"colorTheme\", this.colorTheme);\n\t\twindow.localStorage.setItem(\"volume\", String(this.volume));\n\t\twindow.localStorage.setItem(\"visibleOctaves\", String(this.visibleOctaves));\n\t}\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nexport class ChangeNotifier {\n\tprivate _watchers: (() => void)[] = [];\n\tprivate _dirty: boolean = false;\n\n\tpublic watch(watcher: () => void): void {\n\t\tif (this._watchers.indexOf(watcher) == -1) {\n\t\t\tthis._watchers.push(watcher);\n\t\t}\n\t}\n\n\tpublic unwatch(watcher: () => void): void {\n\t\tconst index: number = this._watchers.indexOf(watcher);\n\t\tif (index != -1) {\n\t\t\tthis._watchers.splice(index, 1);\n\t\t}\n\t}\n\n\tpublic changed(): void {\n\t\tthis._dirty = true;\n\t}\n\n\tpublic notifyWatchers(): void {\n\t\tif (!this._dirty) return;\n\t\tthis._dirty = false;\n\t\tfor (const watcher of this._watchers.concat()) {\n\t\t\twatcher();\n\t\t}\n\t}\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nimport {Config} from \"../synth/SynthConfig\";\nimport {isMobile} from \"./EditorConfig\";\nimport {Pattern, Channel, Song, Synth} from \"../synth/synth\";\nimport { SongRecovery, generateUid, errorAlert } from \"./SongRecovery\";\nimport { ColorConfig } from \"./ColorConfig\";\nimport { Layout } from \"./Layout\";\nimport { SongPerformance } from \"./SongPerformance\";\nimport { Selection } from \"./Selection\";\nimport { Preferences } from \"./Preferences\";\nimport { Change } from \"./Change\";\nimport { ChangeNotifier } from \"./ChangeNotifier\";\nimport { ChangeSong, setDefaultInstruments, discardInvalidPatternInstruments, ChangeHoldingModRecording} from \"./changes\";\n\ninterface HistoryState {\n\tcanUndo: boolean;\n\tsequenceNumber: number;\n\tbar: number;\n\tchannel: number;\n\tinstrument: number;\n\trecoveryUid: string;\n\tprompt: string | null;\n\t\tselection: {x0: number, x1: number, y0: number, y1: number, start: number, end: number};\n}\n\nexport class SongDocument {\n\tpublic song: Song;\n\tpublic synth: Synth;\n\tpublic performance: SongPerformance;\n\tpublic readonly notifier: ChangeNotifier = new ChangeNotifier();\n\tpublic readonly selection: Selection = new Selection(this);\n\tpublic readonly prefs: Preferences = new Preferences();\n\tpublic channel: number = 0;\n\tpublic muteEditorChannel: number = 0;\n\tpublic bar: number = 0;\n\tpublic recalcChannelNames: boolean;\n\tpublic recentPatternInstruments: number[][] = [];\n\tpublic viewedInstrument: number[] = [];\n\tpublic recordingModulators: boolean = false;\n\tpublic continuingModRecordingChange: ChangeHoldingModRecording | null = null;\n\t\n\tpublic trackVisibleBars: number = 16;\n\tpublic trackVisibleChannels: number = 4;\n\tpublic barScrollPos: number = 0;\n\tpublic channelScrollPos: number = 0;\n\tpublic prompt: string | null = null;\n\t\n\tpublic addedEffect: boolean = false;\n\tpublic addedEnvelope: boolean = false;\n\tpublic currentPatternIsDirty: boolean = false;\n\tpublic modRecordingHandler: () => void;\n\t\n\tprivate static readonly _maximumUndoHistory: number = 300;\n\tprivate _recovery: SongRecovery = new SongRecovery();\n\tprivate _recoveryUid: string;\n\tprivate _recentChange: Change | null = null;\n\tprivate _sequenceNumber: number = 0;\n\tprivate _lastSequenceNumber: number = 0;\n\tprivate _stateShouldBePushed: boolean = false;\n\tprivate _recordedNewSong: boolean = false;\n\tpublic _waitingToUpdateState: boolean = false;\n\t\t\n\tconstructor() {\n\t\tthis.notifier.watch(this._validateDocState);\n\t\t\n\t\tColorConfig.setTheme(this.prefs.colorTheme);\n\t\tLayout.setLayout(this.prefs.layout);\n\t\t\n\t\tif (window.sessionStorage.getItem(\"currentUndoIndex\") == null) {\n\t\t\twindow.sessionStorage.setItem(\"currentUndoIndex\", \"0\");\n\t\t\twindow.sessionStorage.setItem(\"oldestUndoIndex\", \"0\");\n\t\t\twindow.sessionStorage.setItem(\"newestUndoIndex\", \"0\");\n\t\t}\n\t\t\t\n\t\tlet songString: string = window.location.hash;\n\t\tif (songString == \"\") {\n\t\t\tsongString = this._getHash();\n\t\t}\n\t\ttry {\n\t\t\tthis.song = new Song(songString);\n\t\t\tif (songString == \"\" || songString == undefined) {\n\t\t\t\tsetDefaultInstruments(this.song);\n\t\t\t\tthis.song.scale = this.prefs.defaultScale;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\terrorAlert(error);\n\t\t}\n\t\tsongString = this.song.toBase64String();\n\t\tthis.synth = new Synth(this.song);\n\t\tthis.synth.volume = this._calcVolume();\n\t\tthis.synth.anticipatePoorPerformance = isMobile;\n\t\t\n\t\tlet state: HistoryState | null = this._getHistoryState();\n\t\tif (state == null) {\n\t\t\t// When the page is first loaded, indicate that undo is NOT possible.\n\t\t\tstate = {canUndo: false, sequenceNumber: 0, bar: 0, channel: 0, instrument: 0, recoveryUid: generateUid(), prompt: null, selection: this.selection.toJSON()};\n\t\t}\n\t\tif (state.recoveryUid == undefined) state.recoveryUid = generateUid();\n\t\tthis._replaceState(state, songString);\n\t\twindow.addEventListener(\"hashchange\", this._whenHistoryStateChanged);\n\t\twindow.addEventListener(\"popstate\", this._whenHistoryStateChanged);\n\t\t\t\n\t\tthis.bar = state.bar | 0;\n\t\tthis.channel = state.channel | 0;\n\t\tfor (let i: number = 0; i <= this.channel; i++) this.viewedInstrument[i] = 0;\n\t\tthis.viewedInstrument[this.channel] = state.instrument | 0;\n\t\tthis._recoveryUid = state.recoveryUid;\n\t\t//this.barScrollPos = Math.max(0, this.bar - (this.trackVisibleBars - 6));\n\t\tthis.prompt = state.prompt;\n\t\tthis.selection.fromJSON(state.selection);\n\t\tthis.selection.scrollToSelectedPattern();\n\t\t\t\n\t\t// For all input events, catch them when they are about to finish bubbling,\n\t\t// presumably after all handlers are done updating the model, then update the\n\t\t// view before the screen renders. mouseenter and mouseleave do not bubble,\n\t\t// but they are immediately followed by mousemove which does. \n\t\tfor (const eventName of [\"change\", \"click\", \"keyup\", \"mousedown\", \"mouseup\", \"touchstart\", \"touchmove\", \"touchend\", \"touchcancel\"]) {\n\t\t\twindow.addEventListener(eventName, this._cleanDocument);\n\t\t}\n\t\tfor (const eventName of [\"keydown\", \"input\", \"mousemove\"]) {\n\t\t\twindow.addEventListener(eventName, this._cleanDocumentIfNotRecordingMods);\n\t\t}\n\t\t\n\t\tthis._validateDocState();\n\t\tthis.performance = new SongPerformance(this);\n\t}\n\t\t\n\tpublic toggleDisplayBrowserUrl() {\n\t\tconst state: HistoryState | null = this._getHistoryState();\n\t\tif (state == null) throw new Error(\"History state is null.\");\n\t\tthis.prefs.displayBrowserUrl = !this.prefs.displayBrowserUrl;\n\t\tthis._replaceState(state, this.song.toBase64String());\n\t}\n\t\t\n\tprivate _getHistoryState(): HistoryState | null {\n\t\tif (this.prefs.displayBrowserUrl) {\n\t\t\treturn window.history.state;\n\t\t} else {\n\t\t\tconst json: any = JSON.parse(window.sessionStorage.getItem(window.sessionStorage.getItem(\"currentUndoIndex\")!)!);\n\t\t\treturn json == null ? null : json.state;\n\t\t}\n\t}\n\t\t\n\tprivate _getHash(): string {\n\t\tif (this.prefs.displayBrowserUrl) {\n\t\t\treturn window.location.hash;\n\t\t} else {\n\t\t\tconst json: any = JSON.parse(window.sessionStorage.getItem(window.sessionStorage.getItem(\"currentUndoIndex\")!)!);\n\t\t\treturn json == null ? \"\" : json.hash;\n\t\t}\n\t}\n\t\t\n\tprivate _replaceState(state: HistoryState, hash: string): void {\n\t\tif (this.prefs.displayBrowserUrl) {\n\t\t\twindow.history.replaceState(state, \"\", \"#\" + hash);\n\t\t} else {\n\t\t\twindow.sessionStorage.setItem(window.sessionStorage.getItem(\"currentUndoIndex\") || \"0\", JSON.stringify({state, hash}));\n\t\t\twindow.history.replaceState(null, \"\", location.pathname);\n\t\t}\n\t}\n\t\t\n\tprivate _pushState(state: HistoryState, hash: string): void {\n\t\tif (this.prefs.displayBrowserUrl) {\n\t\t\twindow.history.pushState(state, \"\", \"#\" + hash);\n\t\t} else {\n\t\t\tlet currentIndex: number = Number(window.sessionStorage.getItem(\"currentUndoIndex\"));\n\t\t\tlet oldestIndex: number = Number(window.sessionStorage.getItem(\"oldestUndoIndex\"));\n\t\t\tcurrentIndex = (currentIndex + 1) % SongDocument._maximumUndoHistory;\n\t\t\twindow.sessionStorage.setItem(\"currentUndoIndex\", String(currentIndex));\n\t\t\twindow.sessionStorage.setItem(\"newestUndoIndex\", String(currentIndex));\n\t\t\tif (currentIndex == oldestIndex) {\n\t\t\t\toldestIndex = (oldestIndex + 1) % SongDocument._maximumUndoHistory;\n\t\t\t\twindow.sessionStorage.setItem(\"oldestUndoIndex\", String(oldestIndex));\n\t\t\t}\n\t\t\t\twindow.sessionStorage.setItem(String(currentIndex), JSON.stringify({state, hash}));\n\t\t\twindow.history.replaceState(null, \"\", location.pathname);\n\t\t}\n\t\tthis._lastSequenceNumber = state.sequenceNumber;\n\t}\n\n\tpublic hasRedoHistory(): boolean {\n\t\treturn this._lastSequenceNumber > this._sequenceNumber;\n\t}\t\n\t\t\n\tprivate _forward(): void {\n\t\tif (this.prefs.displayBrowserUrl) {\n\t\t\twindow.history.forward();\n\t\t} else {\n\t\t\tlet currentIndex: number = Number(window.sessionStorage.getItem(\"currentUndoIndex\"));\n\t\t\tlet newestIndex: number = Number(window.sessionStorage.getItem(\"newestUndoIndex\"));\n\t\t\tif (currentIndex != newestIndex) {\n\t\t\t\tcurrentIndex = (currentIndex + 1) % SongDocument._maximumUndoHistory;\n\t\t\t\twindow.sessionStorage.setItem(\"currentUndoIndex\", String(currentIndex));\n\t\t\t\tsetTimeout(this._whenHistoryStateChanged);\n\t\t\t}\n\t\t}\n\t}\n\t\t\n\tprivate _back(): void {\n\t\tif (this.prefs.displayBrowserUrl) {\n\t\t\twindow.history.back();\n\t\t} else {\n\t\t\tlet currentIndex: number = Number(window.sessionStorage.getItem(\"currentUndoIndex\"));\n\t\t\tlet oldestIndex: number = Number(window.sessionStorage.getItem(\"oldestUndoIndex\"));\n\t\t\tif (currentIndex != oldestIndex) {\n\t\t\t\tcurrentIndex = (currentIndex + SongDocument._maximumUndoHistory - 1) % SongDocument._maximumUndoHistory;\n\t\t\t\twindow.sessionStorage.setItem(\"currentUndoIndex\", String(currentIndex));\n\t\t\t\tsetTimeout(this._whenHistoryStateChanged);\n\t\t\t}\n\t\t}\n\t}\n\t\t\n\tprivate _whenHistoryStateChanged = (): void => {\n\t\tif (this.synth.recording) {\n\t\t\t// Changes to the song while it's recording to could mess up the recording so just abort the recording.\n\t\t\tthis.performance.abortRecording();\n\t\t}\n\t\t\n\t\tif (window.history.state == null && window.location.hash != \"\") {\n\t\t\t// The user changed the hash directly.\n\t\t\tthis._sequenceNumber++;\n\t\t\tthis._resetSongRecoveryUid();\n\t\t\tconst state: HistoryState = {canUndo: true, sequenceNumber: this._sequenceNumber, bar: this.bar, channel: this.channel, instrument: this.viewedInstrument[this.channel], recoveryUid: this._recoveryUid, prompt: null, selection: this.selection.toJSON()};\n\t\t\ttry {\n\t\t\t\tnew ChangeSong(this, window.location.hash);\n\t\t\t} catch (error) {\n\t\t\t\terrorAlert(error);\n\t\t\t}\n\t\t\tthis.prompt = state.prompt;\n\t\t\tif (this.prefs.displayBrowserUrl) {\n\t\t\t\tthis._replaceState(state, this.song.toBase64String());\n\t\t\t} else {\n\t\t\t\tthis._pushState(state, this.song.toBase64String());\n\t\t\t}\n\t\t\tthis.forgetLastChange();\n\t\t\tthis.notifier.notifyWatchers();\n\t\t\t// Stop playing, and go to start when pasting new song in.\n\t\t\tthis.synth.pause();\n\t\t\tthis.synth.goToBar(0);\n\t\t\treturn;\n\t\t}\n\t\t\t\n\t\tconst state: HistoryState | null = this._getHistoryState();\n\t\tif (state == null) throw new Error(\"History state is null.\");\n\t\t\t\n\t\t// Abort if we've already handled the current state. \n\t\tif (state.sequenceNumber == this._sequenceNumber) return;\n\t\t\t\n\t\tthis.bar = state.bar;\n\t\tthis.channel = state.channel;\n\t\tthis.viewedInstrument[this.channel] = state.instrument;\n\t\tthis._sequenceNumber = state.sequenceNumber;\n\t\tthis.prompt = state.prompt;\n\t\ttry {\n\t\t\tnew ChangeSong(this, this._getHash());\n\t\t} catch (error) {\n\t\t\terrorAlert(error);\n\t\t}\n\t\t\t\n\t\tthis._recoveryUid = state.recoveryUid;\n\t\tthis.selection.fromJSON(state.selection);\n\t\t\t\n\t\t//this.barScrollPos = Math.min(this.bar, Math.max(this.bar - (this.trackVisibleBars - 1), this.barScrollPos));\n\t\t\t\n\t\tthis.forgetLastChange();\n\t\tthis.notifier.notifyWatchers();\n\t}\n\t\t\n\tprivate _cleanDocument = (): void => {\n\t\tthis.notifier.notifyWatchers();\n\t}\n\n\tprivate _cleanDocumentIfNotRecordingMods = (): void => {\n\t\tif (!this.recordingModulators)\n\t\t\tthis.notifier.notifyWatchers();\n\t\telse {\n\t\t\tthis.modRecordingHandler();\n        }\n\n    }\n\t\n\tprivate _validateDocState = (): void => {\n\t\tconst channelCount: number = this.song.getChannelCount();\n\t\tfor (let i: number = this.recentPatternInstruments.length; i < channelCount; i++) {\n\t\t\tthis.recentPatternInstruments[i] = [0];\n\t}\n\t\tthis.recentPatternInstruments.length = channelCount;\n\t\tfor (let i: number = 0; i < channelCount; i++) {\n\t\t\tif (i == this.channel) {\n\t\t\t\tif (this.song.patternInstruments) {\n\t\t\t\t\tconst pattern: Pattern | null = this.song.getPattern(this.channel, this.bar);\n\t\t\t\t\tif (pattern != null) {\n\t\t\t\t\t\tthis.recentPatternInstruments[i] = pattern.instruments.concat();\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconst channel: Channel = this.song.channels[this.channel];\n\t\t\t\t\tfor (let j: number = 0; j < channel.instruments.length; j++) {\n\t\t\t\t\t\tthis.recentPatternInstruments[i][j] = j;\n\t\t\t\t\t}\n\t\t\t\t\tthis.recentPatternInstruments[i].length = channel.instruments.length;\n\t\t\t\t}\n\t\t\t}\n\t\t\tdiscardInvalidPatternInstruments(this.recentPatternInstruments[i], this.song, i);\n\t\t}\n\n\t\tfor (let i: number = this.viewedInstrument.length; i < channelCount; i++) {\n\t\t\tthis.viewedInstrument[i] = 0;\n\t\t}\n\t\tthis.viewedInstrument.length = channelCount;\n\t\tfor (let i: number = 0; i < channelCount; i++) {\n\t\t\tif (this.song.patternInstruments && !this.song.layeredInstruments && i == this.channel) {\n\t\t\t\tconst pattern: Pattern | null = this.song.getPattern(this.channel, this.bar);\n\t\t\t\tif (pattern != null) {\n\t\t\t\t\tthis.viewedInstrument[i] = pattern.instruments[0];\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.viewedInstrument[i] = Math.min(this.viewedInstrument[i] | 0, this.song.channels[i].instruments.length - 1);\n\t\t}\n\t\t\n\t\tconst highlightedPattern: Pattern | null = this.getCurrentPattern();\n\t\tif (highlightedPattern != null && this.song.patternInstruments) {\n\t\t\tthis.recentPatternInstruments[this.channel] = highlightedPattern.instruments.concat();\n\t\t}\n\t\t\n\t\t// Normalize selection.\n\t\t// I'm allowing the doc.bar to drift outside the box selection while playing\n\t\t// because it may auto-follow the playhead outside the selection but it would\n\t\t// be annoying to lose your selection just because the song is playing.\n\t\tif ((!this.synth.playing && (this.bar < this.selection.boxSelectionBar || this.selection.boxSelectionBar + this.selection.boxSelectionWidth <= this.bar)) ||\n\t\t\tthis.channel < this.selection.boxSelectionChannel ||\n\t\t\tthis.selection.boxSelectionChannel + this.selection.boxSelectionHeight <= this.channel ||\n\t\t\tthis.song.barCount < this.selection.boxSelectionBar + this.selection.boxSelectionWidth ||\n\t\t\tchannelCount < this.selection.boxSelectionChannel + this.selection.boxSelectionHeight ||\n\t\t\t(this.selection.boxSelectionWidth == 1 && this.selection.boxSelectionHeight == 1)) {\n\t\t\tthis.selection.resetBoxSelection();\n\t\t}\n\n\t\tthis.barScrollPos     = Math.max(0, Math.min(this.song.barCount          - this.trackVisibleBars,     this.barScrollPos));\n\t\tthis.channelScrollPos = Math.max(0, Math.min(this.song.getChannelCount() - this.trackVisibleChannels, this.channelScrollPos));\n\n\t}\n\t\t\n\tprivate _updateHistoryState = (): void => {\n\t\tthis._waitingToUpdateState = false;\n\t\tlet hash: string;\n\t\ttry {\n\t\t\t// Ensure that the song is not corrupted before saving it.\n\t\t\thash = this.song.toBase64String();\n\t\t} catch (error) {\n\t\t\terrorAlert(error);\n\t\t\treturn;\n\t\t}\n\t\tif (this._stateShouldBePushed) this._sequenceNumber++;\n\t\tif (this._recordedNewSong) {\n\t\t\tthis._resetSongRecoveryUid();\n\t\t} else {\n\t\t\tthis._recovery.saveVersion(this._recoveryUid, this.song.title, hash);\n\t\t}\n\t\tlet state: HistoryState = {canUndo: true, sequenceNumber: this._sequenceNumber, bar: this.bar, channel: this.channel, instrument: this.viewedInstrument[this.channel], recoveryUid: this._recoveryUid, prompt: this.prompt, selection: this.selection.toJSON()};\n\t\tif (this._stateShouldBePushed) {\n\t\t\tthis._pushState(state, hash);\n\t\t} else {\n\t\t\tthis._replaceState(state, hash);\n\t\t}\n\t\tthis._stateShouldBePushed = false;\n\t\tthis._recordedNewSong = false;\n\t}\n\t\t\n\tpublic record(change: Change, replace: boolean = false, newSong: boolean = false): void {\n\t\tif (change.isNoop()) {\n\t\t\tthis._recentChange = null;\n\t\t\tif (replace) this._back();\n\t\t} else {\n\t\t\tchange.commit();\n\t\t\tthis._recentChange = change;\n\t\t\tthis._stateShouldBePushed = this._stateShouldBePushed || !replace;\n\t\t\tthis._recordedNewSong = this._recordedNewSong || newSong;\n\t\t\tif (!this._waitingToUpdateState) {\n\t\t\t\t// Defer updating the url/history until all sequenced changes have\n\t\t\t\t// committed and the interface has rendered the latest changes to\n\t\t\t\t// improve perceived responsiveness.\n\t\t\t\twindow.requestAnimationFrame(this._updateHistoryState);\n\t\t\t\tthis._waitingToUpdateState = true;\n\t\t\t}\n\t\t}\n\t}\n\t\t\n\tprivate _resetSongRecoveryUid(): void {\n\t\tthis._recoveryUid = generateUid();\n\t}\n\t\t\n\tpublic openPrompt(prompt: string): void {\n\t\tthis.prompt = prompt;\n\t\tconst hash: string = this.song.toBase64String();\n\t\tthis._sequenceNumber++;\n\t\tconst state = {canUndo: true, sequenceNumber: this._sequenceNumber, bar: this.bar, channel: this.channel, instrument: this.viewedInstrument[this.channel], recoveryUid: this._recoveryUid, prompt: this.prompt, selection: this.selection.toJSON()};\n\t\tthis._pushState(state, hash);\n\t}\n\t\t\n\tpublic undo(): void {\n\t\tconst state: HistoryState | null = this._getHistoryState();\n\t\tif (state == null || state.canUndo) this._back();\n\t}\n\t\t\n\tpublic redo(): void {\n\t\tthis._forward();\n\t}\n\t\t\n\tpublic setProspectiveChange(change: Change | null): void {\n\t\tthis._recentChange = change;\n\t}\n\t\t\n\tpublic forgetLastChange(): void {\n\t\tthis._recentChange = null;\n\t}\n\n\tpublic checkLastChange(): Change | null {\n\t\treturn this._recentChange;\n\t}\n\t\t\n\tpublic lastChangeWas(change: Change | null): boolean {\n\t\treturn change != null && change == this._recentChange;\n\t}\n\t\t\n\tpublic goBackToStart(): void {\n\t\tthis.bar = 0;\n\t\tthis.channel = 0;\n\t\tthis.barScrollPos = 0;\n\t\tthis.channelScrollPos = 0;\n\t\tthis.synth.snapToStart();\n\t\tthis.notifier.changed();\n\t}\n\t\n\tpublic setVolume(val: number): void {\n\t\tthis.prefs.volume = val;\n\t\tthis.prefs.save();\n\t\tthis.synth.volume = this._calcVolume();\n\t}\n\t\t\n\tprivate _calcVolume(): number {\n\t\treturn Math.min(1.0, Math.pow(this.prefs.volume / 50.0, 0.5)) * Math.pow(2.0, (this.prefs.volume - 75.0) / 25.0);\n\t}\n\t\t\n\tpublic getCurrentPattern(barOffset: number = 0): Pattern | null {\n\t\treturn this.song.getPattern(this.channel, this.bar + barOffset);\n\t}\n\t\t\n\tpublic getCurrentInstrument(barOffset: number = 0): number {\n\t\tif (barOffset == 0) {\n\t\t\treturn this.viewedInstrument[this.channel];\n\t\t} else {\n\t\t\tconst pattern: Pattern | null = this.getCurrentPattern(barOffset);\n\t\t\treturn pattern == null ? 0 : pattern.instruments[0];\n        }\n\t}\n\t\t\n\tpublic getMobileLayout(): boolean {\n\t\treturn (this.prefs.layout == \"wide\") ? window.innerWidth <= 1000 : window.innerWidth <= 710;\n\t}\n\t\t\n\tpublic getBarWidth(): number {\n\t\t// Bugfix: In wide fullscreen, the 32 pixel display doesn't work as the trackEditor is still horizontally constrained\n\t\treturn (!this.getMobileLayout() && this.prefs.enableChannelMuting && (!this.getFullScreen() || this.prefs.layout == \"wide\")) ? 30 : 32;\n\t}\n\t\n\tpublic getChannelHeight(): number {\n\t\tconst squashed: boolean = this.getMobileLayout() || this.song.getChannelCount() > 4 || (this.song.barCount > this.trackVisibleBars && this.song.getChannelCount() > 3);\n\t\t// TODO: Jummbox widescreen should allow more channels before squashing or megasquashing\n\t\tconst megaSquashed: boolean = !this.getMobileLayout() && (((this.prefs.layout != \"wide\") && this.song.getChannelCount() > 11) || this.song.getChannelCount() > 22);\n\t\treturn megaSquashed ? 23 : (squashed ? 27 : 32);\n\t}\n\t\t\n\tpublic getFullScreen(): boolean {\n\t\treturn !this.getMobileLayout() && (this.prefs.layout != \"small\");\n\t}\n\t\n\tpublic getVisibleOctaveCount(): number {\n\t\treturn this.getFullScreen() ? this.prefs.visibleOctaves : Preferences.defaultVisibleOctaves;\n}\n\t\n\tpublic getVisiblePitchCount(): number {\n\t\t return this.getVisibleOctaveCount() * Config.pitchesPerOctave + 1;\n\t}\n\t\n\tpublic getBaseVisibleOctave(channel: number): number {\n\t\tconst visibleOctaveCount: number = this.getVisibleOctaveCount();\n\t\treturn Math.max(0, Math.min(Config.pitchOctaves - visibleOctaveCount, Math.ceil(this.song.channels[channel].octave - visibleOctaveCount * 0.5)));\n\t}\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nimport { Dictionary, DictionaryArray, EnvelopeType, InstrumentType, Transition, Chord, Envelope, Config } from \"../synth/SynthConfig\";\nimport { isMobile, EditorConfig } from \"./EditorConfig\";\nimport { ColorConfig } from \"./ColorConfig\";\nimport \"./style\"; // Import for the side effects, there's no exports.\nimport {SongEditor} from \"./SongEditor\";\nimport {NotePin, Note, Pattern, Instrument, Channel, Song, Synth} from \"../synth/synth\";\nimport {SongDocument} from \"./SongDocument\";\nimport {ExportPrompt} from \"./ExportPrompt\";\nimport {ChangePreset} from \"./changes\";\n\nconst doc: SongDocument = new SongDocument();\nconst editor: SongEditor = new SongEditor(doc);\nconst beepboxEditorContainer: HTMLElement = document.getElementById(\"beepboxEditorContainer\")!;\nbeepboxEditorContainer.appendChild(editor.mainLayer);\neditor.whenUpdated();\n\n// Fade-in transitions\neditor.mainLayer.className += \" load\";\neditor.mainLayer.getElementsByClassName(\"pattern-area\")[0].className += \" load\";\neditor.mainLayer.getElementsByClassName(\"settings-area\")[0].className += \" load\";\neditor.mainLayer.getElementsByClassName(\"editor-song-settings\")[0].className += \" load\";\neditor.mainLayer.getElementsByClassName(\"instrument-settings-area\")[0].className += \" load\";\neditor.mainLayer.getElementsByClassName(\"trackAndMuteContainer\")[0].className += \" load\";\neditor.mainLayer.getElementsByClassName(\"barScrollBar\")[0].className += \" load\";\n\n// Give select2 class to these\n$('#pitchPresetSelect').select2({ dropdownAutoWidth: true });\n$('#drumPresetSelect').select2({ dropdownAutoWidth: true });\n\n// Onclick event to expand/collapse optgroups\n$(\"body\").on('click', '.select2-container--open .select2-results__group', function () {\n\t$(this).siblings().toggle();\n});\n\n// Open event to collapse all optgroups by default\n$(\"#pitchPresetSelect\").on('select2:open', function () {\n\t$('.select2-dropdown--below').css('opacity', 0);\n\t$('.select2-dropdown').css('opacity', 1);\n\t$('#pitchPresetSelect')\n\tsetTimeout(() => {\n\t\tlet groups = $('.select2-container--open .select2-results__group');\n\t\tlet options = $('.select2-container--open .select2-results__option');\n\n\t\t$.each(groups, (index, v) => {\n\t\t\t$(v).siblings().hide();\n\t\t\t$(v)[0].setAttribute(\"style\", \"color: \" + ColorConfig.getChannelColor(doc.song, doc.channel).primaryNote + \";\");\n\t\t})\n\t\t$.each(options, (index, v) => {\n\t\t\t$(v)[0].setAttribute(\"style\", \"color: \" + ColorConfig.getChannelColor(doc.song, doc.channel).primaryNote + \";\");\n\t\t})\n\n\t\t$('.select2-dropdown--below').css('opacity', 1);\n\t}, 0);\n});\n\n// Open event to collapse all optgroups by default\n$(\"#drumPresetSelect\").on('select2:open', function () {\n\t$('.select2-dropdown--below').css('opacity', 0);\n\t$('.select2-dropdown').css('opacity', 1);\n\t$('#drumPresetSelect')\n\tsetTimeout(() => {\n\t\tlet groups = $('.select2-container--open .select2-results__group');\n\t\tlet options = $('.select2-container--open .select2-results__option');\n\n\t\t$.each(groups, (index, v) => {\n\t\t\t$(v).siblings().hide();\n\t\t\t$(v)[0].setAttribute(\"style\", \"color: \" + ColorConfig.getChannelColor(doc.song, doc.channel).primaryNote + \";\");\n\t\t})\n\t\t$.each(options, (index, v) => {\n\t\t\t$(v)[0].setAttribute(\"style\", \"color: \" + ColorConfig.getChannelColor(doc.song, doc.channel).primaryNote + \";\");\n\t\t})\n\n\t\t$('.select2-dropdown--below').css('opacity', 1);\n\t}, 0);\n});\n\n// Select2 events\n// The latter is to ensure select2 doesn't keep focus after the select2 is closed without making a selection.\n$('#pitchPresetSelect').on(\"change\", editor._whenSetPitchedPreset);\n$('#pitchPresetSelect').on(\"select2:close\", editor._refocus);\n\n$('#drumPresetSelect').on(\"change\", editor._whenSetDrumPreset);\n$('#drumPresetSelect').on(\"select2:close\", editor._refocus);\n\n\neditor.mainLayer.focus();\n\n// don't autoplay on mobile devices, wait for input.\nif (!isMobile && doc.prefs.autoPlay) {\n\tfunction autoplay(): void {\n\t\tif (!document.hidden) {\n\t\t\tdoc.synth.play();\n\t\t\teditor.updatePlayButton();\n\t\t\twindow.removeEventListener(\"visibilitychange\", autoplay);\n\t\t}\n\t}\n\tif (document.hidden) {\n\t\t// Wait until the tab is visible to autoplay:\n\t\twindow.addEventListener(\"visibilitychange\", autoplay);\n\t} else {\n\t\t// Can't call this immediately, as main.ts needs to finish executing for the beepbox namespace to finish being declared.\n\t\twindow.setTimeout(autoplay);\n\t}\n}\n\n// BeepBox uses browser history state as its own undo history. Browsers typically\n// remember scroll position for each history state, but BeepBox users would prefer not \n// auto scrolling when undoing. Sadly this tweak doesn't work on Edge or IE.\nif (\"scrollRestoration\" in history) history.scrollRestoration = \"manual\";\n\neditor.updatePlayButton();\n\nif (\"serviceWorker\" in navigator) {\n\t\tnavigator.serviceWorker.register(\"/service_worker.js\", {updateViaCache: \"all\", scope: \"/\"}).catch(() => {});\n}\n\n// When compiling synth.ts as a standalone module named \"beepbox\", expose these classes as members to JavaScript:\n\texport {Dictionary, DictionaryArray, EnvelopeType, InstrumentType, Transition, Chord, Envelope, Config, NotePin, Note, Pattern, Instrument, Channel, Song, Synth, ColorConfig, EditorConfig, SongDocument, SongEditor, ExportPrompt, ChangePreset};\n"],"names":["__values","button","div","span","h2","input","br","select","option","label","p"],"mappings":"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,GAAG,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,IAAI,EAAE,CAAC,GAAG,EAAE,CAAC,IAAI,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,IAAI,EAAE,CAAC,GAAG,EAAE,CAAC,IAAI,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE;IACja,IAAA,EAAE,IAAI,EAAE,UAAU,EAAE,UAAU,EAAE,GAAG,EAAE,OAAO,EAAE,UAAU,CAAC,CAAC,GAAG,GAAG,IAAI,EAAE,GAAG,GAAG,IAAI,EAAE,GAAG,GAAG,IAAI,EAAE,GAAG,GAAG,IAAI,EAAE,GAAG,GAAG,IAAI,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,IAAI,EAAE,GAAG,GAAG,IAAI,EAAE,GAAG,GAAG,IAAI,EAAE,GAAG,GAAG,IAAI,EAAE,GAAG,GAAG,IAAI,EAAE,GAAG,GAAG,IAAI,EAAE,CAAC,GAAG,GAAG,IAAI,EAAE,CAAC,GAAG,GAAG,IAAI,EAAE,CAAC,GAAG,GAAG,IAAI,EAAE,CAAC,GAAG,GAAG,IAAI,EAAE,CAAC,GAAG,GAAG,IAAI,EAAE,CAAC,IAAI,GAAG,IAAI,EAAE,CAAC,IAAI,GAAG,IAAI,EAAE,CAAC,IAAI,GAAG,IAAI,EAAE,CAAC,IAAI,GAAG,IAAI,EAAE,CAAC,IAAI,GAAG,IAAI,EAAE,CAAC,IAAI,GAAG,IAAI,EAAE,CAAC,GAAG,GAAG,IAAI,EAAE,CAAC,GAAG,GAAG,IAAI,EAAE,CAAC,GAA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G,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,EAA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E,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,gBAAgB,EAAE,SAAS,EAAE,UAAU,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,gBAAgB,EAAE,SAAS,EAAE,UAAU,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,gBAAgB,EAAE,SAAS,EAAE,UAAU,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,gBAAgB,EAAE,SAAS,EAAE,UAAU,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,gBAAgB,EAAE,SAAS,EAAE,UAAU,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,gBAAgB,EAAE,SAAS,EAAE,UAAU,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,gBAAgB,EAAE,SAAS,EAAE,UAAU,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,gBAAgB,EAAE,SAAS,EAAE,UAAU,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,gBAAgB,EAAE,SAAS,EAAE,UAAU,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,gBAAgB,EAAE,SAAS,EAAE,UAAU,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAA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"}